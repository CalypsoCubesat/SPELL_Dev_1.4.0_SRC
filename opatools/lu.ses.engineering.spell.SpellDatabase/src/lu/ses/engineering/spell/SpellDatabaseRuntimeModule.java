/*
 * generated by Xtext
 */
package lu.ses.engineering.spell;

import java.lang.reflect.Field;
import java.util.ArrayList;
import java.util.List;

import org.eclipse.core.resources.IProject;

import com.astra.ses.spell.dev.database.DatabaseManager;
import com.astra.ses.spell.dev.database.interfaces.ISpellDatabase;
import com.astra.ses.spell.dev.database.listener.IWorkingDatabaseListener;






/**
 * Use this class to register components to be used at runtime / without the Equinox extension registry.
 */
public class SpellDatabaseRuntimeModule extends lu.ses.engineering.spell.AbstractSpellDatabaseRuntimeModule {
	public static ISpellDatabase getCurrentDatabase(){
		
		try {
			DatabaseManager databaseManager = DatabaseManager.getInstance();
			IProject project = databaseManager.getFocusedProject();
			//System.out.println(project);
			if (project != null){
				String name = project.getName();
				
				ISpellDatabase projectDatabase = databaseManager.getProjectDatabase(name);
				if (projectDatabase == null || projectDatabase.getDatabasePath() == null || projectDatabase.getDatabasePath().trim().isEmpty())
					return null;
				//System.out.println(projectDatabase.getDatabasePath());
				if (projectDatabase.getName().contains("Test") || projectDatabase.getName().contains("test")){
					return null;
				}

				ArrayList<IWorkingDatabaseListener> listeners = databaseManager.getListeners();
				for (IWorkingDatabaseListener listener : listeners) {
					listener.workingDatabaseChanged(projectDatabase);			
				}
				
				return projectDatabase;
			}
		} catch (Exception e) {
			// TODO Auto-generated catch block
			//e.printStackTrace();
		} 
		return null;
	}
	
}
