package lu.ses.engineering.spell.controlflow.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import lu.ses.engineering.spell.controlflow.services.SpellGrammarGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
@SuppressWarnings("all")
public class InternalSpellGrammarParser extends AbstractInternalAntlrParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "RULE_ENDDEF", "RULE_ENDIF", "RULE_ENDWHILE", "RULE_ENDFOR", "RULE_ENDTRY", "RULE_ENDWITH", "RULE_STRING", "RULE_WS", "RULE_ENDCLASS", "RULE_NAME_TERMINAL", "RULE_NUMBER", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_ANY_OTHER", "'@'", "'('", "')'", "'def'", "':'", "','", "'='", "'*'", "'**'", "';'", "'+'", "'-='", "'*='", "'/='", "'%='", "'&='", "'|='", "'^='", "'<<='", "'>>='", "'**='", "'//='", "'del'", "'pass'", "'break'", "'continue'", "'return'", "'raise'", "'import'", "'from'", "'.'", "'as'", "'global'", "'exec'", "'in'", "'assert'", "'elif'", "'if'", "'else'", "'while'", "'for'", "'try'", "'finally'", "'with'", "'except'", "'or'", "'and'", "'not'", "'<'", "'>'", "'=='", "'>='", "'<='", "'<>'", "'!='", "'is'", "'|'", "'^'", "'&'", "'<<'", "'>>'", "'-'", "'/'", "'%'", "'//'", "'~'", "'Step'", "'DisplayStep'", "'ShowTM'", "'Send'", "'BuildTC'", "'SetLimits'", "'GetLimits'", "'GetTM'", "'Goto'", "'Verify'", "'WaitFor'", "'ChangeLanguageConfig'", "'['", "']'", "'{'", "'}'", "'`'", "'lambda'", "'class'", "'yield'", "'\\\\'"
    };
    public static final int T__50=50;
    public static final int RULE_ENDWITH=9;
    public static final int T__59=59;
    public static final int T__55=55;
    public static final int T__56=56;
    public static final int T__57=57;
    public static final int T__58=58;
    public static final int T__51=51;
    public static final int T__52=52;
    public static final int T__53=53;
    public static final int T__54=54;
    public static final int T__60=60;
    public static final int T__61=61;
    public static final int RULE_ENDIF=5;
    public static final int T__66=66;
    public static final int RULE_ML_COMMENT=15;
    public static final int T__67=67;
    public static final int T__68=68;
    public static final int T__69=69;
    public static final int T__62=62;
    public static final int T__63=63;
    public static final int T__64=64;
    public static final int T__65=65;
    public static final int T__37=37;
    public static final int T__38=38;
    public static final int T__39=39;
    public static final int T__33=33;
    public static final int T__34=34;
    public static final int T__35=35;
    public static final int T__36=36;
    public static final int T__30=30;
    public static final int T__31=31;
    public static final int T__32=32;
    public static final int T__48=48;
    public static final int T__49=49;
    public static final int T__44=44;
    public static final int T__45=45;
    public static final int T__46=46;
    public static final int T__47=47;
    public static final int T__40=40;
    public static final int T__41=41;
    public static final int T__42=42;
    public static final int T__43=43;
    public static final int T__91=91;
    public static final int T__100=100;
    public static final int T__92=92;
    public static final int T__93=93;
    public static final int T__102=102;
    public static final int T__94=94;
    public static final int T__101=101;
    public static final int T__90=90;
    public static final int RULE_ENDFOR=7;
    public static final int T__19=19;
    public static final int T__18=18;
    public static final int T__99=99;
    public static final int T__95=95;
    public static final int RULE_ENDTRY=8;
    public static final int T__96=96;
    public static final int T__97=97;
    public static final int T__98=98;
    public static final int RULE_NAME_TERMINAL=13;
    public static final int T__26=26;
    public static final int T__27=27;
    public static final int T__28=28;
    public static final int T__29=29;
    public static final int T__22=22;
    public static final int T__23=23;
    public static final int T__24=24;
    public static final int T__25=25;
    public static final int T__20=20;
    public static final int T__21=21;
    public static final int T__70=70;
    public static final int T__71=71;
    public static final int T__72=72;
    public static final int RULE_STRING=10;
    public static final int RULE_ENDWHILE=6;
    public static final int RULE_SL_COMMENT=16;
    public static final int RULE_ENDDEF=4;
    public static final int T__77=77;
    public static final int T__78=78;
    public static final int T__79=79;
    public static final int T__73=73;
    public static final int EOF=-1;
    public static final int T__74=74;
    public static final int T__75=75;
    public static final int RULE_ENDCLASS=12;
    public static final int T__76=76;
    public static final int T__80=80;
    public static final int T__81=81;
    public static final int T__82=82;
    public static final int T__83=83;
    public static final int RULE_WS=11;
    public static final int RULE_ANY_OTHER=17;
    public static final int RULE_NUMBER=14;
    public static final int T__88=88;
    public static final int T__89=89;
    public static final int T__84=84;
    public static final int T__104=104;
    public static final int T__85=85;
    public static final int T__103=103;
    public static final int T__86=86;
    public static final int T__87=87;

    // delegates
    // delegators


        public InternalSpellGrammarParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalSpellGrammarParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
            this.state.ruleMemo = new HashMap[424+1];
             
             
        }
        

    public String[] getTokenNames() { return InternalSpellGrammarParser.tokenNames; }
    public String getGrammarFileName() { return "InternalSpellGrammar.g"; }



    /*
      This grammar contains a lot of empty actions to work around a bug in ANTLR.
      Otherwise the ANTLR tool will create synpreds that cannot be compiled in some rare cases.
    */
     
     	private SpellGrammarGrammarAccess grammarAccess;
     	
        public InternalSpellGrammarParser(TokenStream input, SpellGrammarGrammarAccess grammarAccess) {
            this(input);
            this.grammarAccess = grammarAccess;
            registerRules(grammarAccess.getGrammar());
        }
        
        @Override
        protected String getFirstRuleName() {
        	return "file_input";	
       	}
       	
       	@Override
       	protected SpellGrammarGrammarAccess getGrammarAccess() {
       		return grammarAccess;
       	}



    // $ANTLR start "entryRulefile_input"
    // InternalSpellGrammar.g:74:1: entryRulefile_input returns [EObject current=null] : iv_rulefile_input= rulefile_input EOF ;
    public final EObject entryRulefile_input() throws RecognitionException {
        EObject current = null;
        int entryRulefile_input_StartIndex = input.index();
        EObject iv_rulefile_input = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 1) ) { return current; }
            // InternalSpellGrammar.g:75:2: (iv_rulefile_input= rulefile_input EOF )
            // InternalSpellGrammar.g:76:2: iv_rulefile_input= rulefile_input EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFile_inputRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulefile_input=rulefile_input();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulefile_input; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 1, entryRulefile_input_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRulefile_input"


    // $ANTLR start "rulefile_input"
    // InternalSpellGrammar.g:83:1: rulefile_input returns [EObject current=null] : ( () ( (lv_stmts_1_0= rulestmt ) )* ) ;
    public final EObject rulefile_input() throws RecognitionException {
        EObject current = null;
        int rulefile_input_StartIndex = input.index();
        EObject lv_stmts_1_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 2) ) { return current; }
            // InternalSpellGrammar.g:86:28: ( ( () ( (lv_stmts_1_0= rulestmt ) )* ) )
            // InternalSpellGrammar.g:87:1: ( () ( (lv_stmts_1_0= rulestmt ) )* )
            {
            // InternalSpellGrammar.g:87:1: ( () ( (lv_stmts_1_0= rulestmt ) )* )
            // InternalSpellGrammar.g:87:2: () ( (lv_stmts_1_0= rulestmt ) )*
            {
            // InternalSpellGrammar.g:87:2: ()
            // InternalSpellGrammar.g:88:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getFile_inputAccess().getFile_inputAction_0(),
                          current);
                  
            }

            }

            // InternalSpellGrammar.g:96:2: ( (lv_stmts_1_0= rulestmt ) )*
            loop1:
            do {
                int alt1=2;
                int LA1_0 = input.LA(1);

                if ( (LA1_0==RULE_STRING||(LA1_0>=RULE_NAME_TERMINAL && LA1_0<=RULE_NUMBER)||(LA1_0>=18 && LA1_0<=19)||LA1_0==21||LA1_0==28||(LA1_0>=40 && LA1_0<=48)||(LA1_0>=50 && LA1_0<=51)||LA1_0==53||LA1_0==55||(LA1_0>=57 && LA1_0<=59)||LA1_0==61||LA1_0==65||LA1_0==79||(LA1_0>=83 && LA1_0<=96)||LA1_0==98||(LA1_0>=100 && LA1_0<=103)) ) {
                    alt1=1;
                }


                switch (alt1) {
            	case 1 :
            	    // InternalSpellGrammar.g:97:1: (lv_stmts_1_0= rulestmt )
            	    {
            	    // InternalSpellGrammar.g:97:1: (lv_stmts_1_0= rulestmt )
            	    // InternalSpellGrammar.g:98:3: lv_stmts_1_0= rulestmt
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getFile_inputAccess().getStmtsStmtParserRuleCall_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_3);
            	    lv_stmts_1_0=rulestmt();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getFile_inputRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"stmts",
            	              		lv_stmts_1_0, 
            	              		"lu.ses.engineering.spell.controlflow.SpellGrammar.stmt");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop1;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 2, rulefile_input_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "rulefile_input"


    // $ANTLR start "entryRulesingle_input"
    // InternalSpellGrammar.g:124:1: entryRulesingle_input returns [EObject current=null] : iv_rulesingle_input= rulesingle_input EOF ;
    public final EObject entryRulesingle_input() throws RecognitionException {
        EObject current = null;
        int entryRulesingle_input_StartIndex = input.index();
        EObject iv_rulesingle_input = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 3) ) { return current; }
            // InternalSpellGrammar.g:125:2: (iv_rulesingle_input= rulesingle_input EOF )
            // InternalSpellGrammar.g:126:2: iv_rulesingle_input= rulesingle_input EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSingle_inputRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulesingle_input=rulesingle_input();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulesingle_input; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 3, entryRulesingle_input_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRulesingle_input"


    // $ANTLR start "rulesingle_input"
    // InternalSpellGrammar.g:133:1: rulesingle_input returns [EObject current=null] : ( () ( ( (lv_stmt_1_0= rulesimple_stmt ) ) | ( (lv_stmt_2_0= rulecompound_stmt ) ) ) ) ;
    public final EObject rulesingle_input() throws RecognitionException {
        EObject current = null;
        int rulesingle_input_StartIndex = input.index();
        EObject lv_stmt_1_0 = null;

        EObject lv_stmt_2_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 4) ) { return current; }
            // InternalSpellGrammar.g:136:28: ( ( () ( ( (lv_stmt_1_0= rulesimple_stmt ) ) | ( (lv_stmt_2_0= rulecompound_stmt ) ) ) ) )
            // InternalSpellGrammar.g:137:1: ( () ( ( (lv_stmt_1_0= rulesimple_stmt ) ) | ( (lv_stmt_2_0= rulecompound_stmt ) ) ) )
            {
            // InternalSpellGrammar.g:137:1: ( () ( ( (lv_stmt_1_0= rulesimple_stmt ) ) | ( (lv_stmt_2_0= rulecompound_stmt ) ) ) )
            // InternalSpellGrammar.g:137:2: () ( ( (lv_stmt_1_0= rulesimple_stmt ) ) | ( (lv_stmt_2_0= rulecompound_stmt ) ) )
            {
            // InternalSpellGrammar.g:137:2: ()
            // InternalSpellGrammar.g:138:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getSingle_inputAccess().getSingle_inputAction_0(),
                          current);
                  
            }

            }

            // InternalSpellGrammar.g:146:2: ( ( (lv_stmt_1_0= rulesimple_stmt ) ) | ( (lv_stmt_2_0= rulecompound_stmt ) ) )
            int alt2=2;
            int LA2_0 = input.LA(1);

            if ( (LA2_0==RULE_STRING||(LA2_0>=RULE_NAME_TERMINAL && LA2_0<=RULE_NUMBER)||LA2_0==19||LA2_0==28||(LA2_0>=40 && LA2_0<=48)||(LA2_0>=50 && LA2_0<=51)||LA2_0==53||LA2_0==65||LA2_0==79||(LA2_0>=83 && LA2_0<=96)||LA2_0==98||(LA2_0>=100 && LA2_0<=101)||LA2_0==103) ) {
                alt2=1;
            }
            else if ( (LA2_0==18||LA2_0==21||LA2_0==55||(LA2_0>=57 && LA2_0<=59)||LA2_0==61||LA2_0==102) ) {
                alt2=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 2, 0, input);

                throw nvae;
            }
            switch (alt2) {
                case 1 :
                    // InternalSpellGrammar.g:146:3: ( (lv_stmt_1_0= rulesimple_stmt ) )
                    {
                    // InternalSpellGrammar.g:146:3: ( (lv_stmt_1_0= rulesimple_stmt ) )
                    // InternalSpellGrammar.g:147:1: (lv_stmt_1_0= rulesimple_stmt )
                    {
                    // InternalSpellGrammar.g:147:1: (lv_stmt_1_0= rulesimple_stmt )
                    // InternalSpellGrammar.g:148:3: lv_stmt_1_0= rulesimple_stmt
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getSingle_inputAccess().getStmtSimple_stmtParserRuleCall_1_0_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_stmt_1_0=rulesimple_stmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getSingle_inputRule());
                      	        }
                             		set(
                             			current, 
                             			"stmt",
                              		lv_stmt_1_0, 
                              		"lu.ses.engineering.spell.controlflow.SpellGrammar.simple_stmt");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSpellGrammar.g:165:6: ( (lv_stmt_2_0= rulecompound_stmt ) )
                    {
                    // InternalSpellGrammar.g:165:6: ( (lv_stmt_2_0= rulecompound_stmt ) )
                    // InternalSpellGrammar.g:166:1: (lv_stmt_2_0= rulecompound_stmt )
                    {
                    // InternalSpellGrammar.g:166:1: (lv_stmt_2_0= rulecompound_stmt )
                    // InternalSpellGrammar.g:167:3: lv_stmt_2_0= rulecompound_stmt
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getSingle_inputAccess().getStmtCompound_stmtParserRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_stmt_2_0=rulecompound_stmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getSingle_inputRule());
                      	        }
                             		set(
                             			current, 
                             			"stmt",
                              		lv_stmt_2_0, 
                              		"lu.ses.engineering.spell.controlflow.SpellGrammar.compound_stmt");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 4, rulesingle_input_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "rulesingle_input"


    // $ANTLR start "entryRuleeval_input"
    // InternalSpellGrammar.g:191:1: entryRuleeval_input returns [EObject current=null] : iv_ruleeval_input= ruleeval_input EOF ;
    public final EObject entryRuleeval_input() throws RecognitionException {
        EObject current = null;
        int entryRuleeval_input_StartIndex = input.index();
        EObject iv_ruleeval_input = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 5) ) { return current; }
            // InternalSpellGrammar.g:192:2: (iv_ruleeval_input= ruleeval_input EOF )
            // InternalSpellGrammar.g:193:2: iv_ruleeval_input= ruleeval_input EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEval_inputRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleeval_input=ruleeval_input();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleeval_input; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 5, entryRuleeval_input_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleeval_input"


    // $ANTLR start "ruleeval_input"
    // InternalSpellGrammar.g:200:1: ruleeval_input returns [EObject current=null] : ( () ( (lv_testlist_1_0= ruletestlist ) ) ) ;
    public final EObject ruleeval_input() throws RecognitionException {
        EObject current = null;
        int ruleeval_input_StartIndex = input.index();
        EObject lv_testlist_1_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 6) ) { return current; }
            // InternalSpellGrammar.g:203:28: ( ( () ( (lv_testlist_1_0= ruletestlist ) ) ) )
            // InternalSpellGrammar.g:204:1: ( () ( (lv_testlist_1_0= ruletestlist ) ) )
            {
            // InternalSpellGrammar.g:204:1: ( () ( (lv_testlist_1_0= ruletestlist ) ) )
            // InternalSpellGrammar.g:204:2: () ( (lv_testlist_1_0= ruletestlist ) )
            {
            // InternalSpellGrammar.g:204:2: ()
            // InternalSpellGrammar.g:205:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getEval_inputAccess().getEval_inputAction_0(),
                          current);
                  
            }

            }

            // InternalSpellGrammar.g:213:2: ( (lv_testlist_1_0= ruletestlist ) )
            // InternalSpellGrammar.g:214:1: (lv_testlist_1_0= ruletestlist )
            {
            // InternalSpellGrammar.g:214:1: (lv_testlist_1_0= ruletestlist )
            // InternalSpellGrammar.g:215:3: lv_testlist_1_0= ruletestlist
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getEval_inputAccess().getTestlistTestlistParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_testlist_1_0=ruletestlist();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getEval_inputRule());
              	        }
                     		set(
                     			current, 
                     			"testlist",
                      		lv_testlist_1_0, 
                      		"lu.ses.engineering.spell.controlflow.SpellGrammar.testlist");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 6, ruleeval_input_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleeval_input"


    // $ANTLR start "entryRuledecorator"
    // InternalSpellGrammar.g:239:1: entryRuledecorator returns [EObject current=null] : iv_ruledecorator= ruledecorator EOF ;
    public final EObject entryRuledecorator() throws RecognitionException {
        EObject current = null;
        int entryRuledecorator_StartIndex = input.index();
        EObject iv_ruledecorator = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 7) ) { return current; }
            // InternalSpellGrammar.g:240:2: (iv_ruledecorator= ruledecorator EOF )
            // InternalSpellGrammar.g:241:2: iv_ruledecorator= ruledecorator EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDecoratorRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruledecorator=ruledecorator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruledecorator; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 7, entryRuledecorator_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuledecorator"


    // $ANTLR start "ruledecorator"
    // InternalSpellGrammar.g:248:1: ruledecorator returns [EObject current=null] : (otherlv_0= '@' ( (lv_dotted_name_1_0= ruledotted_name ) ) ( ( (lv_roundBracket_2_0= '(' ) ) ( (lv_arglist_3_0= rulearglist ) )? otherlv_4= ')' )? ) ;
    public final EObject ruledecorator() throws RecognitionException {
        EObject current = null;
        int ruledecorator_StartIndex = input.index();
        Token otherlv_0=null;
        Token lv_roundBracket_2_0=null;
        Token otherlv_4=null;
        AntlrDatatypeRuleToken lv_dotted_name_1_0 = null;

        EObject lv_arglist_3_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 8) ) { return current; }
            // InternalSpellGrammar.g:251:28: ( (otherlv_0= '@' ( (lv_dotted_name_1_0= ruledotted_name ) ) ( ( (lv_roundBracket_2_0= '(' ) ) ( (lv_arglist_3_0= rulearglist ) )? otherlv_4= ')' )? ) )
            // InternalSpellGrammar.g:252:1: (otherlv_0= '@' ( (lv_dotted_name_1_0= ruledotted_name ) ) ( ( (lv_roundBracket_2_0= '(' ) ) ( (lv_arglist_3_0= rulearglist ) )? otherlv_4= ')' )? )
            {
            // InternalSpellGrammar.g:252:1: (otherlv_0= '@' ( (lv_dotted_name_1_0= ruledotted_name ) ) ( ( (lv_roundBracket_2_0= '(' ) ) ( (lv_arglist_3_0= rulearglist ) )? otherlv_4= ')' )? )
            // InternalSpellGrammar.g:252:3: otherlv_0= '@' ( (lv_dotted_name_1_0= ruledotted_name ) ) ( ( (lv_roundBracket_2_0= '(' ) ) ( (lv_arglist_3_0= rulearglist ) )? otherlv_4= ')' )?
            {
            otherlv_0=(Token)match(input,18,FollowSets000.FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getDecoratorAccess().getCommercialAtKeyword_0());
                  
            }
            // InternalSpellGrammar.g:256:1: ( (lv_dotted_name_1_0= ruledotted_name ) )
            // InternalSpellGrammar.g:257:1: (lv_dotted_name_1_0= ruledotted_name )
            {
            // InternalSpellGrammar.g:257:1: (lv_dotted_name_1_0= ruledotted_name )
            // InternalSpellGrammar.g:258:3: lv_dotted_name_1_0= ruledotted_name
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getDecoratorAccess().getDotted_nameDotted_nameParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_5);
            lv_dotted_name_1_0=ruledotted_name();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getDecoratorRule());
              	        }
                     		set(
                     			current, 
                     			"dotted_name",
                      		lv_dotted_name_1_0, 
                      		"lu.ses.engineering.spell.controlflow.SpellGrammar.dotted_name");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSpellGrammar.g:274:2: ( ( (lv_roundBracket_2_0= '(' ) ) ( (lv_arglist_3_0= rulearglist ) )? otherlv_4= ')' )?
            int alt4=2;
            int LA4_0 = input.LA(1);

            if ( (LA4_0==19) ) {
                alt4=1;
            }
            switch (alt4) {
                case 1 :
                    // InternalSpellGrammar.g:274:3: ( (lv_roundBracket_2_0= '(' ) ) ( (lv_arglist_3_0= rulearglist ) )? otherlv_4= ')'
                    {
                    // InternalSpellGrammar.g:274:3: ( (lv_roundBracket_2_0= '(' ) )
                    // InternalSpellGrammar.g:275:1: (lv_roundBracket_2_0= '(' )
                    {
                    // InternalSpellGrammar.g:275:1: (lv_roundBracket_2_0= '(' )
                    // InternalSpellGrammar.g:276:3: lv_roundBracket_2_0= '('
                    {
                    lv_roundBracket_2_0=(Token)match(input,19,FollowSets000.FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_roundBracket_2_0, grammarAccess.getDecoratorAccess().getRoundBracketLeftParenthesisKeyword_2_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getDecoratorRule());
                      	        }
                             		setWithLastConsumed(current, "roundBracket", true, "(");
                      	    
                    }

                    }


                    }

                    // InternalSpellGrammar.g:289:2: ( (lv_arglist_3_0= rulearglist ) )?
                    int alt3=2;
                    int LA3_0 = input.LA(1);

                    if ( (LA3_0==RULE_STRING||(LA3_0>=RULE_NAME_TERMINAL && LA3_0<=RULE_NUMBER)||LA3_0==19||(LA3_0>=25 && LA3_0<=26)||LA3_0==28||LA3_0==48||LA3_0==65||LA3_0==79||(LA3_0>=83 && LA3_0<=96)||LA3_0==98||(LA3_0>=100 && LA3_0<=101)) ) {
                        alt3=1;
                    }
                    switch (alt3) {
                        case 1 :
                            // InternalSpellGrammar.g:290:1: (lv_arglist_3_0= rulearglist )
                            {
                            // InternalSpellGrammar.g:290:1: (lv_arglist_3_0= rulearglist )
                            // InternalSpellGrammar.g:291:3: lv_arglist_3_0= rulearglist
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getDecoratorAccess().getArglistArglistParserRuleCall_2_1_0()); 
                              	    
                            }
                            pushFollow(FollowSets000.FOLLOW_7);
                            lv_arglist_3_0=rulearglist();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getDecoratorRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"arglist",
                                      		lv_arglist_3_0, 
                                      		"lu.ses.engineering.spell.controlflow.SpellGrammar.arglist");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            break;

                    }

                    otherlv_4=(Token)match(input,20,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getDecoratorAccess().getRightParenthesisKeyword_2_2());
                          
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 8, ruledecorator_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruledecorator"


    // $ANTLR start "entryRuledecorators"
    // InternalSpellGrammar.g:319:1: entryRuledecorators returns [EObject current=null] : iv_ruledecorators= ruledecorators EOF ;
    public final EObject entryRuledecorators() throws RecognitionException {
        EObject current = null;
        int entryRuledecorators_StartIndex = input.index();
        EObject iv_ruledecorators = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 9) ) { return current; }
            // InternalSpellGrammar.g:320:2: (iv_ruledecorators= ruledecorators EOF )
            // InternalSpellGrammar.g:321:2: iv_ruledecorators= ruledecorators EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDecoratorsRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruledecorators=ruledecorators();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruledecorators; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 9, entryRuledecorators_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuledecorators"


    // $ANTLR start "ruledecorators"
    // InternalSpellGrammar.g:328:1: ruledecorators returns [EObject current=null] : ( (lv_decorators_0_0= ruledecorator ) )+ ;
    public final EObject ruledecorators() throws RecognitionException {
        EObject current = null;
        int ruledecorators_StartIndex = input.index();
        EObject lv_decorators_0_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 10) ) { return current; }
            // InternalSpellGrammar.g:331:28: ( ( (lv_decorators_0_0= ruledecorator ) )+ )
            // InternalSpellGrammar.g:332:1: ( (lv_decorators_0_0= ruledecorator ) )+
            {
            // InternalSpellGrammar.g:332:1: ( (lv_decorators_0_0= ruledecorator ) )+
            int cnt5=0;
            loop5:
            do {
                int alt5=2;
                int LA5_0 = input.LA(1);

                if ( (LA5_0==18) ) {
                    alt5=1;
                }


                switch (alt5) {
            	case 1 :
            	    // InternalSpellGrammar.g:333:1: (lv_decorators_0_0= ruledecorator )
            	    {
            	    // InternalSpellGrammar.g:333:1: (lv_decorators_0_0= ruledecorator )
            	    // InternalSpellGrammar.g:334:3: lv_decorators_0_0= ruledecorator
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getDecoratorsAccess().getDecoratorsDecoratorParserRuleCall_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_3);
            	    lv_decorators_0_0=ruledecorator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getDecoratorsRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"decorators",
            	              		lv_decorators_0_0, 
            	              		"lu.ses.engineering.spell.controlflow.SpellGrammar.decorator");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt5 >= 1 ) break loop5;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(5, input);
                        throw eee;
                }
                cnt5++;
            } while (true);


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 10, ruledecorators_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruledecorators"


    // $ANTLR start "entryRuledecorated"
    // InternalSpellGrammar.g:358:1: entryRuledecorated returns [EObject current=null] : iv_ruledecorated= ruledecorated EOF ;
    public final EObject entryRuledecorated() throws RecognitionException {
        EObject current = null;
        int entryRuledecorated_StartIndex = input.index();
        EObject iv_ruledecorated = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 11) ) { return current; }
            // InternalSpellGrammar.g:359:2: (iv_ruledecorated= ruledecorated EOF )
            // InternalSpellGrammar.g:360:2: iv_ruledecorated= ruledecorated EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDecoratedRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruledecorated=ruledecorated();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruledecorated; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 11, entryRuledecorated_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuledecorated"


    // $ANTLR start "ruledecorated"
    // InternalSpellGrammar.g:367:1: ruledecorated returns [EObject current=null] : ( ( (lv_decorators_0_0= ruledecorators ) ) ( ( (lv_def_1_0= ruleclassdef ) ) | ( (lv_def_2_0= rulefuncdef ) ) ) ) ;
    public final EObject ruledecorated() throws RecognitionException {
        EObject current = null;
        int ruledecorated_StartIndex = input.index();
        EObject lv_decorators_0_0 = null;

        EObject lv_def_1_0 = null;

        EObject lv_def_2_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 12) ) { return current; }
            // InternalSpellGrammar.g:370:28: ( ( ( (lv_decorators_0_0= ruledecorators ) ) ( ( (lv_def_1_0= ruleclassdef ) ) | ( (lv_def_2_0= rulefuncdef ) ) ) ) )
            // InternalSpellGrammar.g:371:1: ( ( (lv_decorators_0_0= ruledecorators ) ) ( ( (lv_def_1_0= ruleclassdef ) ) | ( (lv_def_2_0= rulefuncdef ) ) ) )
            {
            // InternalSpellGrammar.g:371:1: ( ( (lv_decorators_0_0= ruledecorators ) ) ( ( (lv_def_1_0= ruleclassdef ) ) | ( (lv_def_2_0= rulefuncdef ) ) ) )
            // InternalSpellGrammar.g:371:2: ( (lv_decorators_0_0= ruledecorators ) ) ( ( (lv_def_1_0= ruleclassdef ) ) | ( (lv_def_2_0= rulefuncdef ) ) )
            {
            // InternalSpellGrammar.g:371:2: ( (lv_decorators_0_0= ruledecorators ) )
            // InternalSpellGrammar.g:372:1: (lv_decorators_0_0= ruledecorators )
            {
            // InternalSpellGrammar.g:372:1: (lv_decorators_0_0= ruledecorators )
            // InternalSpellGrammar.g:373:3: lv_decorators_0_0= ruledecorators
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getDecoratedAccess().getDecoratorsDecoratorsParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_8);
            lv_decorators_0_0=ruledecorators();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getDecoratedRule());
              	        }
                     		set(
                     			current, 
                     			"decorators",
                      		lv_decorators_0_0, 
                      		"lu.ses.engineering.spell.controlflow.SpellGrammar.decorators");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSpellGrammar.g:389:2: ( ( (lv_def_1_0= ruleclassdef ) ) | ( (lv_def_2_0= rulefuncdef ) ) )
            int alt6=2;
            int LA6_0 = input.LA(1);

            if ( (LA6_0==102) ) {
                alt6=1;
            }
            else if ( (LA6_0==21) ) {
                alt6=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 6, 0, input);

                throw nvae;
            }
            switch (alt6) {
                case 1 :
                    // InternalSpellGrammar.g:389:3: ( (lv_def_1_0= ruleclassdef ) )
                    {
                    // InternalSpellGrammar.g:389:3: ( (lv_def_1_0= ruleclassdef ) )
                    // InternalSpellGrammar.g:390:1: (lv_def_1_0= ruleclassdef )
                    {
                    // InternalSpellGrammar.g:390:1: (lv_def_1_0= ruleclassdef )
                    // InternalSpellGrammar.g:391:3: lv_def_1_0= ruleclassdef
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getDecoratedAccess().getDefClassdefParserRuleCall_1_0_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_def_1_0=ruleclassdef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getDecoratedRule());
                      	        }
                             		set(
                             			current, 
                             			"def",
                              		lv_def_1_0, 
                              		"lu.ses.engineering.spell.controlflow.SpellGrammar.classdef");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSpellGrammar.g:408:6: ( (lv_def_2_0= rulefuncdef ) )
                    {
                    // InternalSpellGrammar.g:408:6: ( (lv_def_2_0= rulefuncdef ) )
                    // InternalSpellGrammar.g:409:1: (lv_def_2_0= rulefuncdef )
                    {
                    // InternalSpellGrammar.g:409:1: (lv_def_2_0= rulefuncdef )
                    // InternalSpellGrammar.g:410:3: lv_def_2_0= rulefuncdef
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getDecoratedAccess().getDefFuncdefParserRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_def_2_0=rulefuncdef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getDecoratedRule());
                      	        }
                             		set(
                             			current, 
                             			"def",
                              		lv_def_2_0, 
                              		"lu.ses.engineering.spell.controlflow.SpellGrammar.funcdef");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 12, ruledecorated_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruledecorated"


    // $ANTLR start "entryRulefuncdef"
    // InternalSpellGrammar.g:434:1: entryRulefuncdef returns [EObject current=null] : iv_rulefuncdef= rulefuncdef EOF ;
    public final EObject entryRulefuncdef() throws RecognitionException {
        EObject current = null;
        int entryRulefuncdef_StartIndex = input.index();
        EObject iv_rulefuncdef = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 13) ) { return current; }
            // InternalSpellGrammar.g:435:2: (iv_rulefuncdef= rulefuncdef EOF )
            // InternalSpellGrammar.g:436:2: iv_rulefuncdef= rulefuncdef EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFuncdefRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulefuncdef=rulefuncdef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulefuncdef; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 13, entryRulefuncdef_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRulefuncdef"


    // $ANTLR start "rulefuncdef"
    // InternalSpellGrammar.g:443:1: rulefuncdef returns [EObject current=null] : (otherlv_0= 'def' ( (lv_name_1_0= ruleNAME ) ) ( (lv_parameters_2_0= ruleparameters ) ) otherlv_3= ':' ( (lv_suite_4_0= rulesuite ) ) this_ENDDEF_5= RULE_ENDDEF ) ;
    public final EObject rulefuncdef() throws RecognitionException {
        EObject current = null;
        int rulefuncdef_StartIndex = input.index();
        Token otherlv_0=null;
        Token otherlv_3=null;
        Token this_ENDDEF_5=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_parameters_2_0 = null;

        EObject lv_suite_4_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 14) ) { return current; }
            // InternalSpellGrammar.g:446:28: ( (otherlv_0= 'def' ( (lv_name_1_0= ruleNAME ) ) ( (lv_parameters_2_0= ruleparameters ) ) otherlv_3= ':' ( (lv_suite_4_0= rulesuite ) ) this_ENDDEF_5= RULE_ENDDEF ) )
            // InternalSpellGrammar.g:447:1: (otherlv_0= 'def' ( (lv_name_1_0= ruleNAME ) ) ( (lv_parameters_2_0= ruleparameters ) ) otherlv_3= ':' ( (lv_suite_4_0= rulesuite ) ) this_ENDDEF_5= RULE_ENDDEF )
            {
            // InternalSpellGrammar.g:447:1: (otherlv_0= 'def' ( (lv_name_1_0= ruleNAME ) ) ( (lv_parameters_2_0= ruleparameters ) ) otherlv_3= ':' ( (lv_suite_4_0= rulesuite ) ) this_ENDDEF_5= RULE_ENDDEF )
            // InternalSpellGrammar.g:447:3: otherlv_0= 'def' ( (lv_name_1_0= ruleNAME ) ) ( (lv_parameters_2_0= ruleparameters ) ) otherlv_3= ':' ( (lv_suite_4_0= rulesuite ) ) this_ENDDEF_5= RULE_ENDDEF
            {
            otherlv_0=(Token)match(input,21,FollowSets000.FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getFuncdefAccess().getDefKeyword_0());
                  
            }
            // InternalSpellGrammar.g:451:1: ( (lv_name_1_0= ruleNAME ) )
            // InternalSpellGrammar.g:452:1: (lv_name_1_0= ruleNAME )
            {
            // InternalSpellGrammar.g:452:1: (lv_name_1_0= ruleNAME )
            // InternalSpellGrammar.g:453:3: lv_name_1_0= ruleNAME
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getFuncdefAccess().getNameNAMEParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_9);
            lv_name_1_0=ruleNAME();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getFuncdefRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_1_0, 
                      		"lu.ses.engineering.spell.controlflow.SpellGrammar.NAME");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSpellGrammar.g:469:2: ( (lv_parameters_2_0= ruleparameters ) )
            // InternalSpellGrammar.g:470:1: (lv_parameters_2_0= ruleparameters )
            {
            // InternalSpellGrammar.g:470:1: (lv_parameters_2_0= ruleparameters )
            // InternalSpellGrammar.g:471:3: lv_parameters_2_0= ruleparameters
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getFuncdefAccess().getParametersParametersParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_10);
            lv_parameters_2_0=ruleparameters();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getFuncdefRule());
              	        }
                     		set(
                     			current, 
                     			"parameters",
                      		lv_parameters_2_0, 
                      		"lu.ses.engineering.spell.controlflow.SpellGrammar.parameters");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_3=(Token)match(input,22,FollowSets000.FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getFuncdefAccess().getColonKeyword_3());
                  
            }
            // InternalSpellGrammar.g:491:1: ( (lv_suite_4_0= rulesuite ) )
            // InternalSpellGrammar.g:492:1: (lv_suite_4_0= rulesuite )
            {
            // InternalSpellGrammar.g:492:1: (lv_suite_4_0= rulesuite )
            // InternalSpellGrammar.g:493:3: lv_suite_4_0= rulesuite
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getFuncdefAccess().getSuiteSuiteParserRuleCall_4_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_12);
            lv_suite_4_0=rulesuite();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getFuncdefRule());
              	        }
                     		set(
                     			current, 
                     			"suite",
                      		lv_suite_4_0, 
                      		"lu.ses.engineering.spell.controlflow.SpellGrammar.suite");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            this_ENDDEF_5=(Token)match(input,RULE_ENDDEF,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_ENDDEF_5, grammarAccess.getFuncdefAccess().getENDDEFTerminalRuleCall_5()); 
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 14, rulefuncdef_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "rulefuncdef"


    // $ANTLR start "entryRuleparameters"
    // InternalSpellGrammar.g:521:1: entryRuleparameters returns [EObject current=null] : iv_ruleparameters= ruleparameters EOF ;
    public final EObject entryRuleparameters() throws RecognitionException {
        EObject current = null;
        int entryRuleparameters_StartIndex = input.index();
        EObject iv_ruleparameters = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 15) ) { return current; }
            // InternalSpellGrammar.g:522:2: (iv_ruleparameters= ruleparameters EOF )
            // InternalSpellGrammar.g:523:2: iv_ruleparameters= ruleparameters EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getParametersRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleparameters=ruleparameters();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleparameters; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 15, entryRuleparameters_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleparameters"


    // $ANTLR start "ruleparameters"
    // InternalSpellGrammar.g:530:1: ruleparameters returns [EObject current=null] : ( () otherlv_1= '(' ( (lv_varargslist_2_0= rulevarargslist ) )? (otherlv_3= ',' )? otherlv_4= ')' ) ;
    public final EObject ruleparameters() throws RecognitionException {
        EObject current = null;
        int ruleparameters_StartIndex = input.index();
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        EObject lv_varargslist_2_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 16) ) { return current; }
            // InternalSpellGrammar.g:533:28: ( ( () otherlv_1= '(' ( (lv_varargslist_2_0= rulevarargslist ) )? (otherlv_3= ',' )? otherlv_4= ')' ) )
            // InternalSpellGrammar.g:534:1: ( () otherlv_1= '(' ( (lv_varargslist_2_0= rulevarargslist ) )? (otherlv_3= ',' )? otherlv_4= ')' )
            {
            // InternalSpellGrammar.g:534:1: ( () otherlv_1= '(' ( (lv_varargslist_2_0= rulevarargslist ) )? (otherlv_3= ',' )? otherlv_4= ')' )
            // InternalSpellGrammar.g:534:2: () otherlv_1= '(' ( (lv_varargslist_2_0= rulevarargslist ) )? (otherlv_3= ',' )? otherlv_4= ')'
            {
            // InternalSpellGrammar.g:534:2: ()
            // InternalSpellGrammar.g:535:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getParametersAccess().getParametersAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,19,FollowSets000.FOLLOW_13); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getParametersAccess().getLeftParenthesisKeyword_1());
                  
            }
            // InternalSpellGrammar.g:547:1: ( (lv_varargslist_2_0= rulevarargslist ) )?
            int alt7=2;
            int LA7_0 = input.LA(1);

            if ( (LA7_0==RULE_NAME_TERMINAL||LA7_0==19||(LA7_0>=25 && LA7_0<=26)||(LA7_0>=84 && LA7_0<=94)) ) {
                alt7=1;
            }
            switch (alt7) {
                case 1 :
                    // InternalSpellGrammar.g:548:1: (lv_varargslist_2_0= rulevarargslist )
                    {
                    // InternalSpellGrammar.g:548:1: (lv_varargslist_2_0= rulevarargslist )
                    // InternalSpellGrammar.g:549:3: lv_varargslist_2_0= rulevarargslist
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getParametersAccess().getVarargslistVarargslistParserRuleCall_2_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_14);
                    lv_varargslist_2_0=rulevarargslist();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getParametersRule());
                      	        }
                             		set(
                             			current, 
                             			"varargslist",
                              		lv_varargslist_2_0, 
                              		"lu.ses.engineering.spell.controlflow.SpellGrammar.varargslist");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }

            // InternalSpellGrammar.g:565:3: (otherlv_3= ',' )?
            int alt8=2;
            int LA8_0 = input.LA(1);

            if ( (LA8_0==23) ) {
                alt8=1;
            }
            switch (alt8) {
                case 1 :
                    // InternalSpellGrammar.g:565:5: otherlv_3= ','
                    {
                    otherlv_3=(Token)match(input,23,FollowSets000.FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getParametersAccess().getCommaKeyword_3());
                          
                    }

                    }
                    break;

            }

            otherlv_4=(Token)match(input,20,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getParametersAccess().getRightParenthesisKeyword_4());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 16, ruleparameters_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleparameters"


    // $ANTLR start "entryRulevarargslist_element"
    // InternalSpellGrammar.g:581:1: entryRulevarargslist_element returns [EObject current=null] : iv_rulevarargslist_element= rulevarargslist_element EOF ;
    public final EObject entryRulevarargslist_element() throws RecognitionException {
        EObject current = null;
        int entryRulevarargslist_element_StartIndex = input.index();
        EObject iv_rulevarargslist_element = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 17) ) { return current; }
            // InternalSpellGrammar.g:582:2: (iv_rulevarargslist_element= rulevarargslist_element EOF )
            // InternalSpellGrammar.g:583:2: iv_rulevarargslist_element= rulevarargslist_element EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getVarargslist_elementRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulevarargslist_element=rulevarargslist_element();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulevarargslist_element; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 17, entryRulevarargslist_element_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRulevarargslist_element"


    // $ANTLR start "rulevarargslist_element"
    // InternalSpellGrammar.g:590:1: rulevarargslist_element returns [EObject current=null] : ( ( (lv_fpdef_0_0= rulefpdef ) ) (otherlv_1= '=' ( (lv_test_2_0= ruletest ) ) )? ) ;
    public final EObject rulevarargslist_element() throws RecognitionException {
        EObject current = null;
        int rulevarargslist_element_StartIndex = input.index();
        Token otherlv_1=null;
        EObject lv_fpdef_0_0 = null;

        EObject lv_test_2_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 18) ) { return current; }
            // InternalSpellGrammar.g:593:28: ( ( ( (lv_fpdef_0_0= rulefpdef ) ) (otherlv_1= '=' ( (lv_test_2_0= ruletest ) ) )? ) )
            // InternalSpellGrammar.g:594:1: ( ( (lv_fpdef_0_0= rulefpdef ) ) (otherlv_1= '=' ( (lv_test_2_0= ruletest ) ) )? )
            {
            // InternalSpellGrammar.g:594:1: ( ( (lv_fpdef_0_0= rulefpdef ) ) (otherlv_1= '=' ( (lv_test_2_0= ruletest ) ) )? )
            // InternalSpellGrammar.g:594:2: ( (lv_fpdef_0_0= rulefpdef ) ) (otherlv_1= '=' ( (lv_test_2_0= ruletest ) ) )?
            {
            // InternalSpellGrammar.g:594:2: ( (lv_fpdef_0_0= rulefpdef ) )
            // InternalSpellGrammar.g:595:1: (lv_fpdef_0_0= rulefpdef )
            {
            // InternalSpellGrammar.g:595:1: (lv_fpdef_0_0= rulefpdef )
            // InternalSpellGrammar.g:596:3: lv_fpdef_0_0= rulefpdef
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getVarargslist_elementAccess().getFpdefFpdefParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_15);
            lv_fpdef_0_0=rulefpdef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getVarargslist_elementRule());
              	        }
                     		set(
                     			current, 
                     			"fpdef",
                      		lv_fpdef_0_0, 
                      		"lu.ses.engineering.spell.controlflow.SpellGrammar.fpdef");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSpellGrammar.g:612:2: (otherlv_1= '=' ( (lv_test_2_0= ruletest ) ) )?
            int alt9=2;
            int LA9_0 = input.LA(1);

            if ( (LA9_0==24) ) {
                alt9=1;
            }
            switch (alt9) {
                case 1 :
                    // InternalSpellGrammar.g:612:4: otherlv_1= '=' ( (lv_test_2_0= ruletest ) )
                    {
                    otherlv_1=(Token)match(input,24,FollowSets000.FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getVarargslist_elementAccess().getEqualsSignKeyword_1_0());
                          
                    }
                    // InternalSpellGrammar.g:616:1: ( (lv_test_2_0= ruletest ) )
                    // InternalSpellGrammar.g:617:1: (lv_test_2_0= ruletest )
                    {
                    // InternalSpellGrammar.g:617:1: (lv_test_2_0= ruletest )
                    // InternalSpellGrammar.g:618:3: lv_test_2_0= ruletest
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getVarargslist_elementAccess().getTestTestParserRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_test_2_0=ruletest();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getVarargslist_elementRule());
                      	        }
                             		set(
                             			current, 
                             			"test",
                              		lv_test_2_0, 
                              		"lu.ses.engineering.spell.controlflow.SpellGrammar.test");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 18, rulevarargslist_element_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "rulevarargslist_element"


    // $ANTLR start "entryRulevarargslist"
    // InternalSpellGrammar.g:642:1: entryRulevarargslist returns [EObject current=null] : iv_rulevarargslist= rulevarargslist EOF ;
    public final EObject entryRulevarargslist() throws RecognitionException {
        EObject current = null;
        int entryRulevarargslist_StartIndex = input.index();
        EObject iv_rulevarargslist = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 19) ) { return current; }
            // InternalSpellGrammar.g:643:2: (iv_rulevarargslist= rulevarargslist EOF )
            // InternalSpellGrammar.g:644:2: iv_rulevarargslist= rulevarargslist EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getVarargslistRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulevarargslist=rulevarargslist();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulevarargslist; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 19, entryRulevarargslist_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRulevarargslist"


    // $ANTLR start "rulevarargslist"
    // InternalSpellGrammar.g:651:1: rulevarargslist returns [EObject current=null] : ( ( ( ( (lv_varargs1_0_0= rulevarargslist_element ) ) otherlv_1= ',' )* ( (otherlv_2= '*' ( (lv_dot1Name_3_0= ruleNAME ) ) (otherlv_4= ',' otherlv_5= '**' ( (lv_dot2Name_6_0= ruleNAME ) ) )? ) | (otherlv_7= '**' ( (lv_dot2Name_8_0= ruleNAME ) ) ) ) ) | ( ( (lv_vararg2_9_0= rulevarargslist_element ) ) (otherlv_10= ',' ( (lv_varargs3_11_0= rulevarargslist_element ) ) )* ( (lv_additionalComma_12_0= ',' ) )? ) ) ;
    public final EObject rulevarargslist() throws RecognitionException {
        EObject current = null;
        int rulevarargslist_StartIndex = input.index();
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_10=null;
        Token lv_additionalComma_12_0=null;
        EObject lv_varargs1_0_0 = null;

        AntlrDatatypeRuleToken lv_dot1Name_3_0 = null;

        AntlrDatatypeRuleToken lv_dot2Name_6_0 = null;

        AntlrDatatypeRuleToken lv_dot2Name_8_0 = null;

        EObject lv_vararg2_9_0 = null;

        EObject lv_varargs3_11_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 20) ) { return current; }
            // InternalSpellGrammar.g:654:28: ( ( ( ( ( (lv_varargs1_0_0= rulevarargslist_element ) ) otherlv_1= ',' )* ( (otherlv_2= '*' ( (lv_dot1Name_3_0= ruleNAME ) ) (otherlv_4= ',' otherlv_5= '**' ( (lv_dot2Name_6_0= ruleNAME ) ) )? ) | (otherlv_7= '**' ( (lv_dot2Name_8_0= ruleNAME ) ) ) ) ) | ( ( (lv_vararg2_9_0= rulevarargslist_element ) ) (otherlv_10= ',' ( (lv_varargs3_11_0= rulevarargslist_element ) ) )* ( (lv_additionalComma_12_0= ',' ) )? ) ) )
            // InternalSpellGrammar.g:655:1: ( ( ( ( (lv_varargs1_0_0= rulevarargslist_element ) ) otherlv_1= ',' )* ( (otherlv_2= '*' ( (lv_dot1Name_3_0= ruleNAME ) ) (otherlv_4= ',' otherlv_5= '**' ( (lv_dot2Name_6_0= ruleNAME ) ) )? ) | (otherlv_7= '**' ( (lv_dot2Name_8_0= ruleNAME ) ) ) ) ) | ( ( (lv_vararg2_9_0= rulevarargslist_element ) ) (otherlv_10= ',' ( (lv_varargs3_11_0= rulevarargslist_element ) ) )* ( (lv_additionalComma_12_0= ',' ) )? ) )
            {
            // InternalSpellGrammar.g:655:1: ( ( ( ( (lv_varargs1_0_0= rulevarargslist_element ) ) otherlv_1= ',' )* ( (otherlv_2= '*' ( (lv_dot1Name_3_0= ruleNAME ) ) (otherlv_4= ',' otherlv_5= '**' ( (lv_dot2Name_6_0= ruleNAME ) ) )? ) | (otherlv_7= '**' ( (lv_dot2Name_8_0= ruleNAME ) ) ) ) ) | ( ( (lv_vararg2_9_0= rulevarargslist_element ) ) (otherlv_10= ',' ( (lv_varargs3_11_0= rulevarargslist_element ) ) )* ( (lv_additionalComma_12_0= ',' ) )? ) )
            int alt15=2;
            alt15 = dfa15.predict(input);
            switch (alt15) {
                case 1 :
                    // InternalSpellGrammar.g:655:2: ( ( ( (lv_varargs1_0_0= rulevarargslist_element ) ) otherlv_1= ',' )* ( (otherlv_2= '*' ( (lv_dot1Name_3_0= ruleNAME ) ) (otherlv_4= ',' otherlv_5= '**' ( (lv_dot2Name_6_0= ruleNAME ) ) )? ) | (otherlv_7= '**' ( (lv_dot2Name_8_0= ruleNAME ) ) ) ) )
                    {
                    // InternalSpellGrammar.g:655:2: ( ( ( (lv_varargs1_0_0= rulevarargslist_element ) ) otherlv_1= ',' )* ( (otherlv_2= '*' ( (lv_dot1Name_3_0= ruleNAME ) ) (otherlv_4= ',' otherlv_5= '**' ( (lv_dot2Name_6_0= ruleNAME ) ) )? ) | (otherlv_7= '**' ( (lv_dot2Name_8_0= ruleNAME ) ) ) ) )
                    // InternalSpellGrammar.g:655:3: ( ( (lv_varargs1_0_0= rulevarargslist_element ) ) otherlv_1= ',' )* ( (otherlv_2= '*' ( (lv_dot1Name_3_0= ruleNAME ) ) (otherlv_4= ',' otherlv_5= '**' ( (lv_dot2Name_6_0= ruleNAME ) ) )? ) | (otherlv_7= '**' ( (lv_dot2Name_8_0= ruleNAME ) ) ) )
                    {
                    // InternalSpellGrammar.g:655:3: ( ( (lv_varargs1_0_0= rulevarargslist_element ) ) otherlv_1= ',' )*
                    loop10:
                    do {
                        int alt10=2;
                        int LA10_0 = input.LA(1);

                        if ( (LA10_0==RULE_NAME_TERMINAL||LA10_0==19||(LA10_0>=84 && LA10_0<=94)) ) {
                            alt10=1;
                        }


                        switch (alt10) {
                    	case 1 :
                    	    // InternalSpellGrammar.g:655:4: ( (lv_varargs1_0_0= rulevarargslist_element ) ) otherlv_1= ','
                    	    {
                    	    // InternalSpellGrammar.g:655:4: ( (lv_varargs1_0_0= rulevarargslist_element ) )
                    	    // InternalSpellGrammar.g:656:1: (lv_varargs1_0_0= rulevarargslist_element )
                    	    {
                    	    // InternalSpellGrammar.g:656:1: (lv_varargs1_0_0= rulevarargslist_element )
                    	    // InternalSpellGrammar.g:657:3: lv_varargs1_0_0= rulevarargslist_element
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getVarargslistAccess().getVarargs1Varargslist_elementParserRuleCall_0_0_0_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_17);
                    	    lv_varargs1_0_0=rulevarargslist_element();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getVarargslistRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"varargs1",
                    	              		lv_varargs1_0_0, 
                    	              		"lu.ses.engineering.spell.controlflow.SpellGrammar.varargslist_element");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }

                    	    otherlv_1=(Token)match(input,23,FollowSets000.FOLLOW_18); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_1, grammarAccess.getVarargslistAccess().getCommaKeyword_0_0_1());
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop10;
                        }
                    } while (true);

                    // InternalSpellGrammar.g:677:3: ( (otherlv_2= '*' ( (lv_dot1Name_3_0= ruleNAME ) ) (otherlv_4= ',' otherlv_5= '**' ( (lv_dot2Name_6_0= ruleNAME ) ) )? ) | (otherlv_7= '**' ( (lv_dot2Name_8_0= ruleNAME ) ) ) )
                    int alt12=2;
                    int LA12_0 = input.LA(1);

                    if ( (LA12_0==25) ) {
                        alt12=1;
                    }
                    else if ( (LA12_0==26) ) {
                        alt12=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 12, 0, input);

                        throw nvae;
                    }
                    switch (alt12) {
                        case 1 :
                            // InternalSpellGrammar.g:677:4: (otherlv_2= '*' ( (lv_dot1Name_3_0= ruleNAME ) ) (otherlv_4= ',' otherlv_5= '**' ( (lv_dot2Name_6_0= ruleNAME ) ) )? )
                            {
                            // InternalSpellGrammar.g:677:4: (otherlv_2= '*' ( (lv_dot1Name_3_0= ruleNAME ) ) (otherlv_4= ',' otherlv_5= '**' ( (lv_dot2Name_6_0= ruleNAME ) ) )? )
                            // InternalSpellGrammar.g:677:6: otherlv_2= '*' ( (lv_dot1Name_3_0= ruleNAME ) ) (otherlv_4= ',' otherlv_5= '**' ( (lv_dot2Name_6_0= ruleNAME ) ) )?
                            {
                            otherlv_2=(Token)match(input,25,FollowSets000.FOLLOW_4); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_2, grammarAccess.getVarargslistAccess().getAsteriskKeyword_0_1_0_0());
                                  
                            }
                            // InternalSpellGrammar.g:681:1: ( (lv_dot1Name_3_0= ruleNAME ) )
                            // InternalSpellGrammar.g:682:1: (lv_dot1Name_3_0= ruleNAME )
                            {
                            // InternalSpellGrammar.g:682:1: (lv_dot1Name_3_0= ruleNAME )
                            // InternalSpellGrammar.g:683:3: lv_dot1Name_3_0= ruleNAME
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getVarargslistAccess().getDot1NameNAMEParserRuleCall_0_1_0_1_0()); 
                              	    
                            }
                            pushFollow(FollowSets000.FOLLOW_19);
                            lv_dot1Name_3_0=ruleNAME();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getVarargslistRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"dot1Name",
                                      		lv_dot1Name_3_0, 
                                      		"lu.ses.engineering.spell.controlflow.SpellGrammar.NAME");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }

                            // InternalSpellGrammar.g:699:2: (otherlv_4= ',' otherlv_5= '**' ( (lv_dot2Name_6_0= ruleNAME ) ) )?
                            int alt11=2;
                            int LA11_0 = input.LA(1);

                            if ( (LA11_0==23) ) {
                                int LA11_1 = input.LA(2);

                                if ( (LA11_1==26) ) {
                                    alt11=1;
                                }
                            }
                            switch (alt11) {
                                case 1 :
                                    // InternalSpellGrammar.g:699:4: otherlv_4= ',' otherlv_5= '**' ( (lv_dot2Name_6_0= ruleNAME ) )
                                    {
                                    otherlv_4=(Token)match(input,23,FollowSets000.FOLLOW_20); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                          	newLeafNode(otherlv_4, grammarAccess.getVarargslistAccess().getCommaKeyword_0_1_0_2_0());
                                          
                                    }
                                    otherlv_5=(Token)match(input,26,FollowSets000.FOLLOW_4); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                          	newLeafNode(otherlv_5, grammarAccess.getVarargslistAccess().getAsteriskAsteriskKeyword_0_1_0_2_1());
                                          
                                    }
                                    // InternalSpellGrammar.g:707:1: ( (lv_dot2Name_6_0= ruleNAME ) )
                                    // InternalSpellGrammar.g:708:1: (lv_dot2Name_6_0= ruleNAME )
                                    {
                                    // InternalSpellGrammar.g:708:1: (lv_dot2Name_6_0= ruleNAME )
                                    // InternalSpellGrammar.g:709:3: lv_dot2Name_6_0= ruleNAME
                                    {
                                    if ( state.backtracking==0 ) {
                                       
                                      	        newCompositeNode(grammarAccess.getVarargslistAccess().getDot2NameNAMEParserRuleCall_0_1_0_2_2_0()); 
                                      	    
                                    }
                                    pushFollow(FollowSets000.FOLLOW_2);
                                    lv_dot2Name_6_0=ruleNAME();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      	        if (current==null) {
                                      	            current = createModelElementForParent(grammarAccess.getVarargslistRule());
                                      	        }
                                             		set(
                                             			current, 
                                             			"dot2Name",
                                              		lv_dot2Name_6_0, 
                                              		"lu.ses.engineering.spell.controlflow.SpellGrammar.NAME");
                                      	        afterParserOrEnumRuleCall();
                                      	    
                                    }

                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalSpellGrammar.g:726:6: (otherlv_7= '**' ( (lv_dot2Name_8_0= ruleNAME ) ) )
                            {
                            // InternalSpellGrammar.g:726:6: (otherlv_7= '**' ( (lv_dot2Name_8_0= ruleNAME ) ) )
                            // InternalSpellGrammar.g:726:8: otherlv_7= '**' ( (lv_dot2Name_8_0= ruleNAME ) )
                            {
                            otherlv_7=(Token)match(input,26,FollowSets000.FOLLOW_4); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_7, grammarAccess.getVarargslistAccess().getAsteriskAsteriskKeyword_0_1_1_0());
                                  
                            }
                            // InternalSpellGrammar.g:730:1: ( (lv_dot2Name_8_0= ruleNAME ) )
                            // InternalSpellGrammar.g:731:1: (lv_dot2Name_8_0= ruleNAME )
                            {
                            // InternalSpellGrammar.g:731:1: (lv_dot2Name_8_0= ruleNAME )
                            // InternalSpellGrammar.g:732:3: lv_dot2Name_8_0= ruleNAME
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getVarargslistAccess().getDot2NameNAMEParserRuleCall_0_1_1_1_0()); 
                              	    
                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            lv_dot2Name_8_0=ruleNAME();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getVarargslistRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"dot2Name",
                                      		lv_dot2Name_8_0, 
                                      		"lu.ses.engineering.spell.controlflow.SpellGrammar.NAME");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSpellGrammar.g:749:6: ( ( (lv_vararg2_9_0= rulevarargslist_element ) ) (otherlv_10= ',' ( (lv_varargs3_11_0= rulevarargslist_element ) ) )* ( (lv_additionalComma_12_0= ',' ) )? )
                    {
                    // InternalSpellGrammar.g:749:6: ( ( (lv_vararg2_9_0= rulevarargslist_element ) ) (otherlv_10= ',' ( (lv_varargs3_11_0= rulevarargslist_element ) ) )* ( (lv_additionalComma_12_0= ',' ) )? )
                    // InternalSpellGrammar.g:749:7: ( (lv_vararg2_9_0= rulevarargslist_element ) ) (otherlv_10= ',' ( (lv_varargs3_11_0= rulevarargslist_element ) ) )* ( (lv_additionalComma_12_0= ',' ) )?
                    {
                    // InternalSpellGrammar.g:749:7: ( (lv_vararg2_9_0= rulevarargslist_element ) )
                    // InternalSpellGrammar.g:750:1: (lv_vararg2_9_0= rulevarargslist_element )
                    {
                    // InternalSpellGrammar.g:750:1: (lv_vararg2_9_0= rulevarargslist_element )
                    // InternalSpellGrammar.g:751:3: lv_vararg2_9_0= rulevarargslist_element
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getVarargslistAccess().getVararg2Varargslist_elementParserRuleCall_1_0_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_19);
                    lv_vararg2_9_0=rulevarargslist_element();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getVarargslistRule());
                      	        }
                             		set(
                             			current, 
                             			"vararg2",
                              		lv_vararg2_9_0, 
                              		"lu.ses.engineering.spell.controlflow.SpellGrammar.varargslist_element");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalSpellGrammar.g:767:2: (otherlv_10= ',' ( (lv_varargs3_11_0= rulevarargslist_element ) ) )*
                    loop13:
                    do {
                        int alt13=2;
                        int LA13_0 = input.LA(1);

                        if ( (LA13_0==23) ) {
                            int LA13_1 = input.LA(2);

                            if ( (LA13_1==RULE_NAME_TERMINAL||LA13_1==19||(LA13_1>=84 && LA13_1<=94)) ) {
                                alt13=1;
                            }


                        }


                        switch (alt13) {
                    	case 1 :
                    	    // InternalSpellGrammar.g:767:4: otherlv_10= ',' ( (lv_varargs3_11_0= rulevarargslist_element ) )
                    	    {
                    	    otherlv_10=(Token)match(input,23,FollowSets000.FOLLOW_21); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_10, grammarAccess.getVarargslistAccess().getCommaKeyword_1_1_0());
                    	          
                    	    }
                    	    // InternalSpellGrammar.g:771:1: ( (lv_varargs3_11_0= rulevarargslist_element ) )
                    	    // InternalSpellGrammar.g:772:1: (lv_varargs3_11_0= rulevarargslist_element )
                    	    {
                    	    // InternalSpellGrammar.g:772:1: (lv_varargs3_11_0= rulevarargslist_element )
                    	    // InternalSpellGrammar.g:773:3: lv_varargs3_11_0= rulevarargslist_element
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getVarargslistAccess().getVarargs3Varargslist_elementParserRuleCall_1_1_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_19);
                    	    lv_varargs3_11_0=rulevarargslist_element();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getVarargslistRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"varargs3",
                    	              		lv_varargs3_11_0, 
                    	              		"lu.ses.engineering.spell.controlflow.SpellGrammar.varargslist_element");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop13;
                        }
                    } while (true);

                    // InternalSpellGrammar.g:789:4: ( (lv_additionalComma_12_0= ',' ) )?
                    int alt14=2;
                    int LA14_0 = input.LA(1);

                    if ( (LA14_0==23) ) {
                        int LA14_1 = input.LA(2);

                        if ( (synpred15_InternalSpellGrammar()) ) {
                            alt14=1;
                        }
                    }
                    switch (alt14) {
                        case 1 :
                            // InternalSpellGrammar.g:790:1: (lv_additionalComma_12_0= ',' )
                            {
                            // InternalSpellGrammar.g:790:1: (lv_additionalComma_12_0= ',' )
                            // InternalSpellGrammar.g:791:3: lv_additionalComma_12_0= ','
                            {
                            lv_additionalComma_12_0=(Token)match(input,23,FollowSets000.FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_additionalComma_12_0, grammarAccess.getVarargslistAccess().getAdditionalCommaCommaKeyword_1_2_0());
                                  
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getVarargslistRule());
                              	        }
                                     		setWithLastConsumed(current, "additionalComma", true, ",");
                              	    
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 20, rulevarargslist_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "rulevarargslist"


    // $ANTLR start "entryRulefpdef"
    // InternalSpellGrammar.g:812:1: entryRulefpdef returns [EObject current=null] : iv_rulefpdef= rulefpdef EOF ;
    public final EObject entryRulefpdef() throws RecognitionException {
        EObject current = null;
        int entryRulefpdef_StartIndex = input.index();
        EObject iv_rulefpdef = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 21) ) { return current; }
            // InternalSpellGrammar.g:813:2: (iv_rulefpdef= rulefpdef EOF )
            // InternalSpellGrammar.g:814:2: iv_rulefpdef= rulefpdef EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFpdefRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulefpdef=rulefpdef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulefpdef; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 21, entryRulefpdef_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRulefpdef"


    // $ANTLR start "rulefpdef"
    // InternalSpellGrammar.g:821:1: rulefpdef returns [EObject current=null] : ( ( (lv_name_0_0= ruleNAME ) ) | (otherlv_1= '(' ( (lv_fplist_2_0= rulefplist ) ) otherlv_3= ')' ) ) ;
    public final EObject rulefpdef() throws RecognitionException {
        EObject current = null;
        int rulefpdef_StartIndex = input.index();
        Token otherlv_1=null;
        Token otherlv_3=null;
        AntlrDatatypeRuleToken lv_name_0_0 = null;

        EObject lv_fplist_2_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 22) ) { return current; }
            // InternalSpellGrammar.g:824:28: ( ( ( (lv_name_0_0= ruleNAME ) ) | (otherlv_1= '(' ( (lv_fplist_2_0= rulefplist ) ) otherlv_3= ')' ) ) )
            // InternalSpellGrammar.g:825:1: ( ( (lv_name_0_0= ruleNAME ) ) | (otherlv_1= '(' ( (lv_fplist_2_0= rulefplist ) ) otherlv_3= ')' ) )
            {
            // InternalSpellGrammar.g:825:1: ( ( (lv_name_0_0= ruleNAME ) ) | (otherlv_1= '(' ( (lv_fplist_2_0= rulefplist ) ) otherlv_3= ')' ) )
            int alt16=2;
            int LA16_0 = input.LA(1);

            if ( (LA16_0==RULE_NAME_TERMINAL||(LA16_0>=84 && LA16_0<=94)) ) {
                alt16=1;
            }
            else if ( (LA16_0==19) ) {
                alt16=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 16, 0, input);

                throw nvae;
            }
            switch (alt16) {
                case 1 :
                    // InternalSpellGrammar.g:825:2: ( (lv_name_0_0= ruleNAME ) )
                    {
                    // InternalSpellGrammar.g:825:2: ( (lv_name_0_0= ruleNAME ) )
                    // InternalSpellGrammar.g:826:1: (lv_name_0_0= ruleNAME )
                    {
                    // InternalSpellGrammar.g:826:1: (lv_name_0_0= ruleNAME )
                    // InternalSpellGrammar.g:827:3: lv_name_0_0= ruleNAME
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getFpdefAccess().getNameNAMEParserRuleCall_0_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_name_0_0=ruleNAME();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getFpdefRule());
                      	        }
                             		set(
                             			current, 
                             			"name",
                              		lv_name_0_0, 
                              		"lu.ses.engineering.spell.controlflow.SpellGrammar.NAME");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSpellGrammar.g:844:6: (otherlv_1= '(' ( (lv_fplist_2_0= rulefplist ) ) otherlv_3= ')' )
                    {
                    // InternalSpellGrammar.g:844:6: (otherlv_1= '(' ( (lv_fplist_2_0= rulefplist ) ) otherlv_3= ')' )
                    // InternalSpellGrammar.g:844:8: otherlv_1= '(' ( (lv_fplist_2_0= rulefplist ) ) otherlv_3= ')'
                    {
                    otherlv_1=(Token)match(input,19,FollowSets000.FOLLOW_21); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getFpdefAccess().getLeftParenthesisKeyword_1_0());
                          
                    }
                    // InternalSpellGrammar.g:848:1: ( (lv_fplist_2_0= rulefplist ) )
                    // InternalSpellGrammar.g:849:1: (lv_fplist_2_0= rulefplist )
                    {
                    // InternalSpellGrammar.g:849:1: (lv_fplist_2_0= rulefplist )
                    // InternalSpellGrammar.g:850:3: lv_fplist_2_0= rulefplist
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getFpdefAccess().getFplistFplistParserRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_7);
                    lv_fplist_2_0=rulefplist();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getFpdefRule());
                      	        }
                             		set(
                             			current, 
                             			"fplist",
                              		lv_fplist_2_0, 
                              		"lu.ses.engineering.spell.controlflow.SpellGrammar.fplist");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_3=(Token)match(input,20,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getFpdefAccess().getRightParenthesisKeyword_1_2());
                          
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 22, rulefpdef_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "rulefpdef"


    // $ANTLR start "entryRulefplist"
    // InternalSpellGrammar.g:878:1: entryRulefplist returns [EObject current=null] : iv_rulefplist= rulefplist EOF ;
    public final EObject entryRulefplist() throws RecognitionException {
        EObject current = null;
        int entryRulefplist_StartIndex = input.index();
        EObject iv_rulefplist = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 23) ) { return current; }
            // InternalSpellGrammar.g:879:2: (iv_rulefplist= rulefplist EOF )
            // InternalSpellGrammar.g:880:2: iv_rulefplist= rulefplist EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFplistRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulefplist=rulefplist();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulefplist; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 23, entryRulefplist_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRulefplist"


    // $ANTLR start "rulefplist"
    // InternalSpellGrammar.g:887:1: rulefplist returns [EObject current=null] : ( ( (lv_def1_0_0= rulefpdef ) ) (otherlv_1= ',' ( (lv_definitions_2_0= rulefpdef ) ) )* ( (lv_optionalSemicolon_3_0= ';' ) )? ) ;
    public final EObject rulefplist() throws RecognitionException {
        EObject current = null;
        int rulefplist_StartIndex = input.index();
        Token otherlv_1=null;
        Token lv_optionalSemicolon_3_0=null;
        EObject lv_def1_0_0 = null;

        EObject lv_definitions_2_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 24) ) { return current; }
            // InternalSpellGrammar.g:890:28: ( ( ( (lv_def1_0_0= rulefpdef ) ) (otherlv_1= ',' ( (lv_definitions_2_0= rulefpdef ) ) )* ( (lv_optionalSemicolon_3_0= ';' ) )? ) )
            // InternalSpellGrammar.g:891:1: ( ( (lv_def1_0_0= rulefpdef ) ) (otherlv_1= ',' ( (lv_definitions_2_0= rulefpdef ) ) )* ( (lv_optionalSemicolon_3_0= ';' ) )? )
            {
            // InternalSpellGrammar.g:891:1: ( ( (lv_def1_0_0= rulefpdef ) ) (otherlv_1= ',' ( (lv_definitions_2_0= rulefpdef ) ) )* ( (lv_optionalSemicolon_3_0= ';' ) )? )
            // InternalSpellGrammar.g:891:2: ( (lv_def1_0_0= rulefpdef ) ) (otherlv_1= ',' ( (lv_definitions_2_0= rulefpdef ) ) )* ( (lv_optionalSemicolon_3_0= ';' ) )?
            {
            // InternalSpellGrammar.g:891:2: ( (lv_def1_0_0= rulefpdef ) )
            // InternalSpellGrammar.g:892:1: (lv_def1_0_0= rulefpdef )
            {
            // InternalSpellGrammar.g:892:1: (lv_def1_0_0= rulefpdef )
            // InternalSpellGrammar.g:893:3: lv_def1_0_0= rulefpdef
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getFplistAccess().getDef1FpdefParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_22);
            lv_def1_0_0=rulefpdef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getFplistRule());
              	        }
                     		set(
                     			current, 
                     			"def1",
                      		lv_def1_0_0, 
                      		"lu.ses.engineering.spell.controlflow.SpellGrammar.fpdef");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSpellGrammar.g:909:2: (otherlv_1= ',' ( (lv_definitions_2_0= rulefpdef ) ) )*
            loop17:
            do {
                int alt17=2;
                int LA17_0 = input.LA(1);

                if ( (LA17_0==23) ) {
                    alt17=1;
                }


                switch (alt17) {
            	case 1 :
            	    // InternalSpellGrammar.g:909:4: otherlv_1= ',' ( (lv_definitions_2_0= rulefpdef ) )
            	    {
            	    otherlv_1=(Token)match(input,23,FollowSets000.FOLLOW_21); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_1, grammarAccess.getFplistAccess().getCommaKeyword_1_0());
            	          
            	    }
            	    // InternalSpellGrammar.g:913:1: ( (lv_definitions_2_0= rulefpdef ) )
            	    // InternalSpellGrammar.g:914:1: (lv_definitions_2_0= rulefpdef )
            	    {
            	    // InternalSpellGrammar.g:914:1: (lv_definitions_2_0= rulefpdef )
            	    // InternalSpellGrammar.g:915:3: lv_definitions_2_0= rulefpdef
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getFplistAccess().getDefinitionsFpdefParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_22);
            	    lv_definitions_2_0=rulefpdef();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getFplistRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"definitions",
            	              		lv_definitions_2_0, 
            	              		"lu.ses.engineering.spell.controlflow.SpellGrammar.fpdef");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop17;
                }
            } while (true);

            // InternalSpellGrammar.g:931:4: ( (lv_optionalSemicolon_3_0= ';' ) )?
            int alt18=2;
            int LA18_0 = input.LA(1);

            if ( (LA18_0==27) ) {
                alt18=1;
            }
            switch (alt18) {
                case 1 :
                    // InternalSpellGrammar.g:932:1: (lv_optionalSemicolon_3_0= ';' )
                    {
                    // InternalSpellGrammar.g:932:1: (lv_optionalSemicolon_3_0= ';' )
                    // InternalSpellGrammar.g:933:3: lv_optionalSemicolon_3_0= ';'
                    {
                    lv_optionalSemicolon_3_0=(Token)match(input,27,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_optionalSemicolon_3_0, grammarAccess.getFplistAccess().getOptionalSemicolonSemicolonKeyword_2_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getFplistRule());
                      	        }
                             		setWithLastConsumed(current, "optionalSemicolon", true, ";");
                      	    
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 24, rulefplist_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "rulefplist"


    // $ANTLR start "entryRulestmt"
    // InternalSpellGrammar.g:954:1: entryRulestmt returns [EObject current=null] : iv_rulestmt= rulestmt EOF ;
    public final EObject entryRulestmt() throws RecognitionException {
        EObject current = null;
        int entryRulestmt_StartIndex = input.index();
        EObject iv_rulestmt = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 25) ) { return current; }
            // InternalSpellGrammar.g:955:2: (iv_rulestmt= rulestmt EOF )
            // InternalSpellGrammar.g:956:2: iv_rulestmt= rulestmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStmtRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulestmt=rulestmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulestmt; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 25, entryRulestmt_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRulestmt"


    // $ANTLR start "rulestmt"
    // InternalSpellGrammar.g:963:1: rulestmt returns [EObject current=null] : (this_simple_stmt_0= rulesimple_stmt | this_compound_stmt_1= rulecompound_stmt ) ;
    public final EObject rulestmt() throws RecognitionException {
        EObject current = null;
        int rulestmt_StartIndex = input.index();
        EObject this_simple_stmt_0 = null;

        EObject this_compound_stmt_1 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 26) ) { return current; }
            // InternalSpellGrammar.g:966:28: ( (this_simple_stmt_0= rulesimple_stmt | this_compound_stmt_1= rulecompound_stmt ) )
            // InternalSpellGrammar.g:967:1: (this_simple_stmt_0= rulesimple_stmt | this_compound_stmt_1= rulecompound_stmt )
            {
            // InternalSpellGrammar.g:967:1: (this_simple_stmt_0= rulesimple_stmt | this_compound_stmt_1= rulecompound_stmt )
            int alt19=2;
            int LA19_0 = input.LA(1);

            if ( (LA19_0==RULE_STRING||(LA19_0>=RULE_NAME_TERMINAL && LA19_0<=RULE_NUMBER)||LA19_0==19||LA19_0==28||(LA19_0>=40 && LA19_0<=48)||(LA19_0>=50 && LA19_0<=51)||LA19_0==53||LA19_0==65||LA19_0==79||(LA19_0>=83 && LA19_0<=96)||LA19_0==98||(LA19_0>=100 && LA19_0<=101)||LA19_0==103) ) {
                alt19=1;
            }
            else if ( (LA19_0==18||LA19_0==21||LA19_0==55||(LA19_0>=57 && LA19_0<=59)||LA19_0==61||LA19_0==102) ) {
                alt19=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 19, 0, input);

                throw nvae;
            }
            switch (alt19) {
                case 1 :
                    // InternalSpellGrammar.g:968:2: this_simple_stmt_0= rulesimple_stmt
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getStmtAccess().getSimple_stmtParserRuleCall_0()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_simple_stmt_0=rulesimple_stmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_simple_stmt_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalSpellGrammar.g:981:2: this_compound_stmt_1= rulecompound_stmt
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getStmtAccess().getCompound_stmtParserRuleCall_1()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_compound_stmt_1=rulecompound_stmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_compound_stmt_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 26, rulestmt_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "rulestmt"


    // $ANTLR start "entryRulesimple_stmt"
    // InternalSpellGrammar.g:1000:1: entryRulesimple_stmt returns [EObject current=null] : iv_rulesimple_stmt= rulesimple_stmt EOF ;
    public final EObject entryRulesimple_stmt() throws RecognitionException {
        EObject current = null;
        int entryRulesimple_stmt_StartIndex = input.index();
        EObject iv_rulesimple_stmt = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 27) ) { return current; }
            // InternalSpellGrammar.g:1001:2: (iv_rulesimple_stmt= rulesimple_stmt EOF )
            // InternalSpellGrammar.g:1002:2: iv_rulesimple_stmt= rulesimple_stmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSimple_stmtRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulesimple_stmt=rulesimple_stmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulesimple_stmt; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 27, entryRulesimple_stmt_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRulesimple_stmt"


    // $ANTLR start "rulesimple_stmt"
    // InternalSpellGrammar.g:1009:1: rulesimple_stmt returns [EObject current=null] : (this_small_stmt_0= rulesmall_stmt ( () (otherlv_2= ';' ( (lv_stmt_3_0= rulesmall_stmt ) ) )+ ( (lv_additionalComma_4_0= ',' ) )? )? (otherlv_5= ';' )? ) ;
    public final EObject rulesimple_stmt() throws RecognitionException {
        EObject current = null;
        int rulesimple_stmt_StartIndex = input.index();
        Token otherlv_2=null;
        Token lv_additionalComma_4_0=null;
        Token otherlv_5=null;
        EObject this_small_stmt_0 = null;

        EObject lv_stmt_3_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 28) ) { return current; }
            // InternalSpellGrammar.g:1012:28: ( (this_small_stmt_0= rulesmall_stmt ( () (otherlv_2= ';' ( (lv_stmt_3_0= rulesmall_stmt ) ) )+ ( (lv_additionalComma_4_0= ',' ) )? )? (otherlv_5= ';' )? ) )
            // InternalSpellGrammar.g:1013:1: (this_small_stmt_0= rulesmall_stmt ( () (otherlv_2= ';' ( (lv_stmt_3_0= rulesmall_stmt ) ) )+ ( (lv_additionalComma_4_0= ',' ) )? )? (otherlv_5= ';' )? )
            {
            // InternalSpellGrammar.g:1013:1: (this_small_stmt_0= rulesmall_stmt ( () (otherlv_2= ';' ( (lv_stmt_3_0= rulesmall_stmt ) ) )+ ( (lv_additionalComma_4_0= ',' ) )? )? (otherlv_5= ';' )? )
            // InternalSpellGrammar.g:1014:2: this_small_stmt_0= rulesmall_stmt ( () (otherlv_2= ';' ( (lv_stmt_3_0= rulesmall_stmt ) ) )+ ( (lv_additionalComma_4_0= ',' ) )? )? (otherlv_5= ';' )?
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getSimple_stmtAccess().getSmall_stmtParserRuleCall_0()); 
                  
            }
            pushFollow(FollowSets000.FOLLOW_23);
            this_small_stmt_0=rulesmall_stmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                      current = this_small_stmt_0; 
                      afterParserOrEnumRuleCall();
                  
            }
            // InternalSpellGrammar.g:1025:1: ( () (otherlv_2= ';' ( (lv_stmt_3_0= rulesmall_stmt ) ) )+ ( (lv_additionalComma_4_0= ',' ) )? )?
            int alt22=2;
            alt22 = dfa22.predict(input);
            switch (alt22) {
                case 1 :
                    // InternalSpellGrammar.g:1025:2: () (otherlv_2= ';' ( (lv_stmt_3_0= rulesmall_stmt ) ) )+ ( (lv_additionalComma_4_0= ',' ) )?
                    {
                    // InternalSpellGrammar.g:1025:2: ()
                    // InternalSpellGrammar.g:1026:2: 
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndAdd(
                                  grammarAccess.getSimple_stmtAccess().getSimple_stmtStmtAction_1_0(),
                                  current);
                          
                    }

                    }

                    // InternalSpellGrammar.g:1034:2: (otherlv_2= ';' ( (lv_stmt_3_0= rulesmall_stmt ) ) )+
                    int cnt20=0;
                    loop20:
                    do {
                        int alt20=2;
                        alt20 = dfa20.predict(input);
                        switch (alt20) {
                    	case 1 :
                    	    // InternalSpellGrammar.g:1034:4: otherlv_2= ';' ( (lv_stmt_3_0= rulesmall_stmt ) )
                    	    {
                    	    otherlv_2=(Token)match(input,27,FollowSets000.FOLLOW_24); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_2, grammarAccess.getSimple_stmtAccess().getSemicolonKeyword_1_1_0());
                    	          
                    	    }
                    	    // InternalSpellGrammar.g:1038:1: ( (lv_stmt_3_0= rulesmall_stmt ) )
                    	    // InternalSpellGrammar.g:1039:1: (lv_stmt_3_0= rulesmall_stmt )
                    	    {
                    	    // InternalSpellGrammar.g:1039:1: (lv_stmt_3_0= rulesmall_stmt )
                    	    // InternalSpellGrammar.g:1040:3: lv_stmt_3_0= rulesmall_stmt
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getSimple_stmtAccess().getStmtSmall_stmtParserRuleCall_1_1_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_22);
                    	    lv_stmt_3_0=rulesmall_stmt();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getSimple_stmtRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"stmt",
                    	              		lv_stmt_3_0, 
                    	              		"lu.ses.engineering.spell.controlflow.SpellGrammar.small_stmt");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt20 >= 1 ) break loop20;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(20, input);
                                throw eee;
                        }
                        cnt20++;
                    } while (true);

                    // InternalSpellGrammar.g:1056:4: ( (lv_additionalComma_4_0= ',' ) )?
                    int alt21=2;
                    int LA21_0 = input.LA(1);

                    if ( (LA21_0==23) ) {
                        alt21=1;
                    }
                    switch (alt21) {
                        case 1 :
                            // InternalSpellGrammar.g:1057:1: (lv_additionalComma_4_0= ',' )
                            {
                            // InternalSpellGrammar.g:1057:1: (lv_additionalComma_4_0= ',' )
                            // InternalSpellGrammar.g:1058:3: lv_additionalComma_4_0= ','
                            {
                            lv_additionalComma_4_0=(Token)match(input,23,FollowSets000.FOLLOW_23); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_additionalComma_4_0, grammarAccess.getSimple_stmtAccess().getAdditionalCommaCommaKeyword_1_2_0());
                                  
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getSimple_stmtRule());
                              	        }
                                     		setWithLastConsumed(current, "additionalComma", true, ",");
                              	    
                            }

                            }


                            }
                            break;

                    }


                    }
                    break;

            }

            // InternalSpellGrammar.g:1071:5: (otherlv_5= ';' )?
            int alt23=2;
            int LA23_0 = input.LA(1);

            if ( (LA23_0==27) ) {
                alt23=1;
            }
            switch (alt23) {
                case 1 :
                    // InternalSpellGrammar.g:1071:7: otherlv_5= ';'
                    {
                    otherlv_5=(Token)match(input,27,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getSimple_stmtAccess().getSemicolonKeyword_2());
                          
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 28, rulesimple_stmt_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "rulesimple_stmt"


    // $ANTLR start "entryRulesmall_stmt"
    // InternalSpellGrammar.g:1083:1: entryRulesmall_stmt returns [EObject current=null] : iv_rulesmall_stmt= rulesmall_stmt EOF ;
    public final EObject entryRulesmall_stmt() throws RecognitionException {
        EObject current = null;
        int entryRulesmall_stmt_StartIndex = input.index();
        EObject iv_rulesmall_stmt = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 29) ) { return current; }
            // InternalSpellGrammar.g:1084:2: (iv_rulesmall_stmt= rulesmall_stmt EOF )
            // InternalSpellGrammar.g:1085:2: iv_rulesmall_stmt= rulesmall_stmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSmall_stmtRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulesmall_stmt=rulesmall_stmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulesmall_stmt; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 29, entryRulesmall_stmt_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRulesmall_stmt"


    // $ANTLR start "rulesmall_stmt"
    // InternalSpellGrammar.g:1092:1: rulesmall_stmt returns [EObject current=null] : (this_expr_stmt_0= ruleexpr_stmt | this_del_stmt_1= ruledel_stmt | this_pass_stmt_2= rulepass_stmt | this_flow_stmt_3= ruleflow_stmt | this_import_stmt_4= ruleimport_stmt | this_global_stmt_5= ruleglobal_stmt | this_exec_stmt_6= ruleexec_stmt | this_assert_stmt_7= ruleassert_stmt ) ;
    public final EObject rulesmall_stmt() throws RecognitionException {
        EObject current = null;
        int rulesmall_stmt_StartIndex = input.index();
        EObject this_expr_stmt_0 = null;

        EObject this_del_stmt_1 = null;

        EObject this_pass_stmt_2 = null;

        EObject this_flow_stmt_3 = null;

        EObject this_import_stmt_4 = null;

        EObject this_global_stmt_5 = null;

        EObject this_exec_stmt_6 = null;

        EObject this_assert_stmt_7 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 30) ) { return current; }
            // InternalSpellGrammar.g:1095:28: ( (this_expr_stmt_0= ruleexpr_stmt | this_del_stmt_1= ruledel_stmt | this_pass_stmt_2= rulepass_stmt | this_flow_stmt_3= ruleflow_stmt | this_import_stmt_4= ruleimport_stmt | this_global_stmt_5= ruleglobal_stmt | this_exec_stmt_6= ruleexec_stmt | this_assert_stmt_7= ruleassert_stmt ) )
            // InternalSpellGrammar.g:1096:1: (this_expr_stmt_0= ruleexpr_stmt | this_del_stmt_1= ruledel_stmt | this_pass_stmt_2= rulepass_stmt | this_flow_stmt_3= ruleflow_stmt | this_import_stmt_4= ruleimport_stmt | this_global_stmt_5= ruleglobal_stmt | this_exec_stmt_6= ruleexec_stmt | this_assert_stmt_7= ruleassert_stmt )
            {
            // InternalSpellGrammar.g:1096:1: (this_expr_stmt_0= ruleexpr_stmt | this_del_stmt_1= ruledel_stmt | this_pass_stmt_2= rulepass_stmt | this_flow_stmt_3= ruleflow_stmt | this_import_stmt_4= ruleimport_stmt | this_global_stmt_5= ruleglobal_stmt | this_exec_stmt_6= ruleexec_stmt | this_assert_stmt_7= ruleassert_stmt )
            int alt24=8;
            switch ( input.LA(1) ) {
            case RULE_STRING:
            case RULE_NAME_TERMINAL:
            case RULE_NUMBER:
            case 19:
            case 28:
            case 48:
            case 65:
            case 79:
            case 83:
            case 84:
            case 85:
            case 86:
            case 87:
            case 88:
            case 89:
            case 90:
            case 91:
            case 92:
            case 93:
            case 94:
            case 95:
            case 96:
            case 98:
            case 100:
            case 101:
                {
                alt24=1;
                }
                break;
            case 40:
                {
                alt24=2;
                }
                break;
            case 41:
                {
                alt24=3;
                }
                break;
            case 42:
            case 43:
            case 44:
            case 45:
            case 103:
                {
                alt24=4;
                }
                break;
            case 46:
            case 47:
                {
                alt24=5;
                }
                break;
            case 50:
                {
                alt24=6;
                }
                break;
            case 51:
                {
                alt24=7;
                }
                break;
            case 53:
                {
                alt24=8;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 24, 0, input);

                throw nvae;
            }

            switch (alt24) {
                case 1 :
                    // InternalSpellGrammar.g:1097:2: this_expr_stmt_0= ruleexpr_stmt
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getSmall_stmtAccess().getExpr_stmtParserRuleCall_0()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_expr_stmt_0=ruleexpr_stmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_expr_stmt_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalSpellGrammar.g:1110:2: this_del_stmt_1= ruledel_stmt
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getSmall_stmtAccess().getDel_stmtParserRuleCall_1()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_del_stmt_1=ruledel_stmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_del_stmt_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    // InternalSpellGrammar.g:1123:2: this_pass_stmt_2= rulepass_stmt
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getSmall_stmtAccess().getPass_stmtParserRuleCall_2()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_pass_stmt_2=rulepass_stmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_pass_stmt_2; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 4 :
                    // InternalSpellGrammar.g:1136:2: this_flow_stmt_3= ruleflow_stmt
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getSmall_stmtAccess().getFlow_stmtParserRuleCall_3()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_flow_stmt_3=ruleflow_stmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_flow_stmt_3; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 5 :
                    // InternalSpellGrammar.g:1149:2: this_import_stmt_4= ruleimport_stmt
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getSmall_stmtAccess().getImport_stmtParserRuleCall_4()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_import_stmt_4=ruleimport_stmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_import_stmt_4; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 6 :
                    // InternalSpellGrammar.g:1162:2: this_global_stmt_5= ruleglobal_stmt
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getSmall_stmtAccess().getGlobal_stmtParserRuleCall_5()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_global_stmt_5=ruleglobal_stmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_global_stmt_5; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 7 :
                    // InternalSpellGrammar.g:1175:2: this_exec_stmt_6= ruleexec_stmt
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getSmall_stmtAccess().getExec_stmtParserRuleCall_6()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_exec_stmt_6=ruleexec_stmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_exec_stmt_6; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 8 :
                    // InternalSpellGrammar.g:1188:2: this_assert_stmt_7= ruleassert_stmt
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getSmall_stmtAccess().getAssert_stmtParserRuleCall_7()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_assert_stmt_7=ruleassert_stmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_assert_stmt_7; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 30, rulesmall_stmt_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "rulesmall_stmt"


    // $ANTLR start "entryRuleexpr_stmt"
    // InternalSpellGrammar.g:1207:1: entryRuleexpr_stmt returns [EObject current=null] : iv_ruleexpr_stmt= ruleexpr_stmt EOF ;
    public final EObject entryRuleexpr_stmt() throws RecognitionException {
        EObject current = null;
        int entryRuleexpr_stmt_StartIndex = input.index();
        EObject iv_ruleexpr_stmt = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 31) ) { return current; }
            // InternalSpellGrammar.g:1208:2: (iv_ruleexpr_stmt= ruleexpr_stmt EOF )
            // InternalSpellGrammar.g:1209:2: iv_ruleexpr_stmt= ruleexpr_stmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExpr_stmtRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleexpr_stmt=ruleexpr_stmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleexpr_stmt; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 31, entryRuleexpr_stmt_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleexpr_stmt"


    // $ANTLR start "ruleexpr_stmt"
    // InternalSpellGrammar.g:1216:1: ruleexpr_stmt returns [EObject current=null] : (this_testlist_0= ruletestlist ( ( () ( (lv_symbol_2_0= ruleaugassign ) ) ( (lv_right_3_0= ruleyield_or_testlist ) ) ) | ( () ( ( (lv_symbol_5_0= '=' ) ) ( (lv_assignments_6_0= ruleyield_or_testlist ) ) )+ ) )? ) ;
    public final EObject ruleexpr_stmt() throws RecognitionException {
        EObject current = null;
        int ruleexpr_stmt_StartIndex = input.index();
        Token lv_symbol_5_0=null;
        EObject this_testlist_0 = null;

        AntlrDatatypeRuleToken lv_symbol_2_0 = null;

        EObject lv_right_3_0 = null;

        EObject lv_assignments_6_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 32) ) { return current; }
            // InternalSpellGrammar.g:1219:28: ( (this_testlist_0= ruletestlist ( ( () ( (lv_symbol_2_0= ruleaugassign ) ) ( (lv_right_3_0= ruleyield_or_testlist ) ) ) | ( () ( ( (lv_symbol_5_0= '=' ) ) ( (lv_assignments_6_0= ruleyield_or_testlist ) ) )+ ) )? ) )
            // InternalSpellGrammar.g:1220:1: (this_testlist_0= ruletestlist ( ( () ( (lv_symbol_2_0= ruleaugassign ) ) ( (lv_right_3_0= ruleyield_or_testlist ) ) ) | ( () ( ( (lv_symbol_5_0= '=' ) ) ( (lv_assignments_6_0= ruleyield_or_testlist ) ) )+ ) )? )
            {
            // InternalSpellGrammar.g:1220:1: (this_testlist_0= ruletestlist ( ( () ( (lv_symbol_2_0= ruleaugassign ) ) ( (lv_right_3_0= ruleyield_or_testlist ) ) ) | ( () ( ( (lv_symbol_5_0= '=' ) ) ( (lv_assignments_6_0= ruleyield_or_testlist ) ) )+ ) )? )
            // InternalSpellGrammar.g:1221:2: this_testlist_0= ruletestlist ( ( () ( (lv_symbol_2_0= ruleaugassign ) ) ( (lv_right_3_0= ruleyield_or_testlist ) ) ) | ( () ( ( (lv_symbol_5_0= '=' ) ) ( (lv_assignments_6_0= ruleyield_or_testlist ) ) )+ ) )?
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getExpr_stmtAccess().getTestlistParserRuleCall_0()); 
                  
            }
            pushFollow(FollowSets000.FOLLOW_25);
            this_testlist_0=ruletestlist();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                      current = this_testlist_0; 
                      afterParserOrEnumRuleCall();
                  
            }
            // InternalSpellGrammar.g:1232:1: ( ( () ( (lv_symbol_2_0= ruleaugassign ) ) ( (lv_right_3_0= ruleyield_or_testlist ) ) ) | ( () ( ( (lv_symbol_5_0= '=' ) ) ( (lv_assignments_6_0= ruleyield_or_testlist ) ) )+ ) )?
            int alt26=3;
            switch ( input.LA(1) ) {
                case 28:
                    {
                    int LA26_1 = input.LA(2);

                    if ( (LA26_1==24) ) {
                        alt26=1;
                    }
                    }
                    break;
                case 29:
                case 30:
                case 31:
                case 32:
                case 33:
                case 34:
                case 35:
                case 36:
                case 37:
                case 38:
                case 39:
                    {
                    alt26=1;
                    }
                    break;
                case 24:
                    {
                    alt26=2;
                    }
                    break;
            }

            switch (alt26) {
                case 1 :
                    // InternalSpellGrammar.g:1232:2: ( () ( (lv_symbol_2_0= ruleaugassign ) ) ( (lv_right_3_0= ruleyield_or_testlist ) ) )
                    {
                    // InternalSpellGrammar.g:1232:2: ( () ( (lv_symbol_2_0= ruleaugassign ) ) ( (lv_right_3_0= ruleyield_or_testlist ) ) )
                    // InternalSpellGrammar.g:1232:3: () ( (lv_symbol_2_0= ruleaugassign ) ) ( (lv_right_3_0= ruleyield_or_testlist ) )
                    {
                    // InternalSpellGrammar.g:1232:3: ()
                    // InternalSpellGrammar.g:1233:2: 
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getExpr_stmtAccess().getExpr_stmtLeftAction_1_0_0(),
                                  current);
                          
                    }

                    }

                    // InternalSpellGrammar.g:1241:2: ( (lv_symbol_2_0= ruleaugassign ) )
                    // InternalSpellGrammar.g:1242:1: (lv_symbol_2_0= ruleaugassign )
                    {
                    // InternalSpellGrammar.g:1242:1: (lv_symbol_2_0= ruleaugassign )
                    // InternalSpellGrammar.g:1243:3: lv_symbol_2_0= ruleaugassign
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getExpr_stmtAccess().getSymbolAugassignParserRuleCall_1_0_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_26);
                    lv_symbol_2_0=ruleaugassign();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getExpr_stmtRule());
                      	        }
                             		set(
                             			current, 
                             			"symbol",
                              		lv_symbol_2_0, 
                              		"lu.ses.engineering.spell.controlflow.SpellGrammar.augassign");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalSpellGrammar.g:1259:2: ( (lv_right_3_0= ruleyield_or_testlist ) )
                    // InternalSpellGrammar.g:1260:1: (lv_right_3_0= ruleyield_or_testlist )
                    {
                    // InternalSpellGrammar.g:1260:1: (lv_right_3_0= ruleyield_or_testlist )
                    // InternalSpellGrammar.g:1261:3: lv_right_3_0= ruleyield_or_testlist
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getExpr_stmtAccess().getRightYield_or_testlistParserRuleCall_1_0_2_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_right_3_0=ruleyield_or_testlist();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getExpr_stmtRule());
                      	        }
                             		set(
                             			current, 
                             			"right",
                              		lv_right_3_0, 
                              		"lu.ses.engineering.spell.controlflow.SpellGrammar.yield_or_testlist");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSpellGrammar.g:1278:6: ( () ( ( (lv_symbol_5_0= '=' ) ) ( (lv_assignments_6_0= ruleyield_or_testlist ) ) )+ )
                    {
                    // InternalSpellGrammar.g:1278:6: ( () ( ( (lv_symbol_5_0= '=' ) ) ( (lv_assignments_6_0= ruleyield_or_testlist ) ) )+ )
                    // InternalSpellGrammar.g:1278:7: () ( ( (lv_symbol_5_0= '=' ) ) ( (lv_assignments_6_0= ruleyield_or_testlist ) ) )+
                    {
                    // InternalSpellGrammar.g:1278:7: ()
                    // InternalSpellGrammar.g:1279:2: 
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getExpr_stmtAccess().getAssignment_stmtLeftAction_1_1_0(),
                                  current);
                          
                    }

                    }

                    // InternalSpellGrammar.g:1287:2: ( ( (lv_symbol_5_0= '=' ) ) ( (lv_assignments_6_0= ruleyield_or_testlist ) ) )+
                    int cnt25=0;
                    loop25:
                    do {
                        int alt25=2;
                        int LA25_0 = input.LA(1);

                        if ( (LA25_0==24) ) {
                            alt25=1;
                        }


                        switch (alt25) {
                    	case 1 :
                    	    // InternalSpellGrammar.g:1287:3: ( (lv_symbol_5_0= '=' ) ) ( (lv_assignments_6_0= ruleyield_or_testlist ) )
                    	    {
                    	    // InternalSpellGrammar.g:1287:3: ( (lv_symbol_5_0= '=' ) )
                    	    // InternalSpellGrammar.g:1288:1: (lv_symbol_5_0= '=' )
                    	    {
                    	    // InternalSpellGrammar.g:1288:1: (lv_symbol_5_0= '=' )
                    	    // InternalSpellGrammar.g:1289:3: lv_symbol_5_0= '='
                    	    {
                    	    lv_symbol_5_0=(Token)match(input,24,FollowSets000.FOLLOW_26); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	              newLeafNode(lv_symbol_5_0, grammarAccess.getExpr_stmtAccess().getSymbolEqualsSignKeyword_1_1_1_0_0());
                    	          
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElement(grammarAccess.getExpr_stmtRule());
                    	      	        }
                    	             		setWithLastConsumed(current, "symbol", lv_symbol_5_0, "=");
                    	      	    
                    	    }

                    	    }


                    	    }

                    	    // InternalSpellGrammar.g:1302:2: ( (lv_assignments_6_0= ruleyield_or_testlist ) )
                    	    // InternalSpellGrammar.g:1303:1: (lv_assignments_6_0= ruleyield_or_testlist )
                    	    {
                    	    // InternalSpellGrammar.g:1303:1: (lv_assignments_6_0= ruleyield_or_testlist )
                    	    // InternalSpellGrammar.g:1304:3: lv_assignments_6_0= ruleyield_or_testlist
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getExpr_stmtAccess().getAssignmentsYield_or_testlistParserRuleCall_1_1_1_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_15);
                    	    lv_assignments_6_0=ruleyield_or_testlist();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getExpr_stmtRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"assignments",
                    	              		lv_assignments_6_0, 
                    	              		"lu.ses.engineering.spell.controlflow.SpellGrammar.yield_or_testlist");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt25 >= 1 ) break loop25;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(25, input);
                                throw eee;
                        }
                        cnt25++;
                    } while (true);


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 32, ruleexpr_stmt_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleexpr_stmt"


    // $ANTLR start "entryRuleyield_or_testlist"
    // InternalSpellGrammar.g:1328:1: entryRuleyield_or_testlist returns [EObject current=null] : iv_ruleyield_or_testlist= ruleyield_or_testlist EOF ;
    public final EObject entryRuleyield_or_testlist() throws RecognitionException {
        EObject current = null;
        int entryRuleyield_or_testlist_StartIndex = input.index();
        EObject iv_ruleyield_or_testlist = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 33) ) { return current; }
            // InternalSpellGrammar.g:1329:2: (iv_ruleyield_or_testlist= ruleyield_or_testlist EOF )
            // InternalSpellGrammar.g:1330:2: iv_ruleyield_or_testlist= ruleyield_or_testlist EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getYield_or_testlistRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleyield_or_testlist=ruleyield_or_testlist();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleyield_or_testlist; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 33, entryRuleyield_or_testlist_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleyield_or_testlist"


    // $ANTLR start "ruleyield_or_testlist"
    // InternalSpellGrammar.g:1337:1: ruleyield_or_testlist returns [EObject current=null] : (this_yield_expr_0= ruleyield_expr | this_testlist_1= ruletestlist ) ;
    public final EObject ruleyield_or_testlist() throws RecognitionException {
        EObject current = null;
        int ruleyield_or_testlist_StartIndex = input.index();
        EObject this_yield_expr_0 = null;

        EObject this_testlist_1 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 34) ) { return current; }
            // InternalSpellGrammar.g:1340:28: ( (this_yield_expr_0= ruleyield_expr | this_testlist_1= ruletestlist ) )
            // InternalSpellGrammar.g:1341:1: (this_yield_expr_0= ruleyield_expr | this_testlist_1= ruletestlist )
            {
            // InternalSpellGrammar.g:1341:1: (this_yield_expr_0= ruleyield_expr | this_testlist_1= ruletestlist )
            int alt27=2;
            int LA27_0 = input.LA(1);

            if ( (LA27_0==103) ) {
                alt27=1;
            }
            else if ( (LA27_0==RULE_STRING||(LA27_0>=RULE_NAME_TERMINAL && LA27_0<=RULE_NUMBER)||LA27_0==19||LA27_0==28||LA27_0==48||LA27_0==65||LA27_0==79||(LA27_0>=83 && LA27_0<=96)||LA27_0==98||(LA27_0>=100 && LA27_0<=101)) ) {
                alt27=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 27, 0, input);

                throw nvae;
            }
            switch (alt27) {
                case 1 :
                    // InternalSpellGrammar.g:1342:2: this_yield_expr_0= ruleyield_expr
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getYield_or_testlistAccess().getYield_exprParserRuleCall_0()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_yield_expr_0=ruleyield_expr();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_yield_expr_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalSpellGrammar.g:1355:2: this_testlist_1= ruletestlist
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getYield_or_testlistAccess().getTestlistParserRuleCall_1()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_testlist_1=ruletestlist();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_testlist_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 34, ruleyield_or_testlist_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleyield_or_testlist"


    // $ANTLR start "entryRuleaugassign"
    // InternalSpellGrammar.g:1374:1: entryRuleaugassign returns [String current=null] : iv_ruleaugassign= ruleaugassign EOF ;
    public final String entryRuleaugassign() throws RecognitionException {
        String current = null;
        int entryRuleaugassign_StartIndex = input.index();
        AntlrDatatypeRuleToken iv_ruleaugassign = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 35) ) { return current; }
            // InternalSpellGrammar.g:1375:2: (iv_ruleaugassign= ruleaugassign EOF )
            // InternalSpellGrammar.g:1376:2: iv_ruleaugassign= ruleaugassign EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAugassignRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleaugassign=ruleaugassign();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleaugassign.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 35, entryRuleaugassign_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleaugassign"


    // $ANTLR start "ruleaugassign"
    // InternalSpellGrammar.g:1383:1: ruleaugassign returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (kw= '+' kw= '=' ) | kw= '-=' | kw= '*=' | kw= '/=' | kw= '%=' | kw= '&=' | kw= '|=' | kw= '^=' | kw= '<<=' | kw= '>>=' | kw= '**=' | kw= '//=' ) ;
    public final AntlrDatatypeRuleToken ruleaugassign() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();
        int ruleaugassign_StartIndex = input.index();
        Token kw=null;

         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 36) ) { return current; }
            // InternalSpellGrammar.g:1386:28: ( ( (kw= '+' kw= '=' ) | kw= '-=' | kw= '*=' | kw= '/=' | kw= '%=' | kw= '&=' | kw= '|=' | kw= '^=' | kw= '<<=' | kw= '>>=' | kw= '**=' | kw= '//=' ) )
            // InternalSpellGrammar.g:1387:1: ( (kw= '+' kw= '=' ) | kw= '-=' | kw= '*=' | kw= '/=' | kw= '%=' | kw= '&=' | kw= '|=' | kw= '^=' | kw= '<<=' | kw= '>>=' | kw= '**=' | kw= '//=' )
            {
            // InternalSpellGrammar.g:1387:1: ( (kw= '+' kw= '=' ) | kw= '-=' | kw= '*=' | kw= '/=' | kw= '%=' | kw= '&=' | kw= '|=' | kw= '^=' | kw= '<<=' | kw= '>>=' | kw= '**=' | kw= '//=' )
            int alt28=12;
            switch ( input.LA(1) ) {
            case 28:
                {
                alt28=1;
                }
                break;
            case 29:
                {
                alt28=2;
                }
                break;
            case 30:
                {
                alt28=3;
                }
                break;
            case 31:
                {
                alt28=4;
                }
                break;
            case 32:
                {
                alt28=5;
                }
                break;
            case 33:
                {
                alt28=6;
                }
                break;
            case 34:
                {
                alt28=7;
                }
                break;
            case 35:
                {
                alt28=8;
                }
                break;
            case 36:
                {
                alt28=9;
                }
                break;
            case 37:
                {
                alt28=10;
                }
                break;
            case 38:
                {
                alt28=11;
                }
                break;
            case 39:
                {
                alt28=12;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 28, 0, input);

                throw nvae;
            }

            switch (alt28) {
                case 1 :
                    // InternalSpellGrammar.g:1387:2: (kw= '+' kw= '=' )
                    {
                    // InternalSpellGrammar.g:1387:2: (kw= '+' kw= '=' )
                    // InternalSpellGrammar.g:1388:2: kw= '+' kw= '='
                    {
                    kw=(Token)match(input,28,FollowSets000.FOLLOW_27); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getAugassignAccess().getPlusSignKeyword_0_0()); 
                          
                    }
                    kw=(Token)match(input,24,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getAugassignAccess().getEqualsSignKeyword_0_1()); 
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSpellGrammar.g:1401:2: kw= '-='
                    {
                    kw=(Token)match(input,29,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getAugassignAccess().getHyphenMinusEqualsSignKeyword_1()); 
                          
                    }

                    }
                    break;
                case 3 :
                    // InternalSpellGrammar.g:1408:2: kw= '*='
                    {
                    kw=(Token)match(input,30,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getAugassignAccess().getAsteriskEqualsSignKeyword_2()); 
                          
                    }

                    }
                    break;
                case 4 :
                    // InternalSpellGrammar.g:1415:2: kw= '/='
                    {
                    kw=(Token)match(input,31,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getAugassignAccess().getSolidusEqualsSignKeyword_3()); 
                          
                    }

                    }
                    break;
                case 5 :
                    // InternalSpellGrammar.g:1422:2: kw= '%='
                    {
                    kw=(Token)match(input,32,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getAugassignAccess().getPercentSignEqualsSignKeyword_4()); 
                          
                    }

                    }
                    break;
                case 6 :
                    // InternalSpellGrammar.g:1429:2: kw= '&='
                    {
                    kw=(Token)match(input,33,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getAugassignAccess().getAmpersandEqualsSignKeyword_5()); 
                          
                    }

                    }
                    break;
                case 7 :
                    // InternalSpellGrammar.g:1436:2: kw= '|='
                    {
                    kw=(Token)match(input,34,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getAugassignAccess().getVerticalLineEqualsSignKeyword_6()); 
                          
                    }

                    }
                    break;
                case 8 :
                    // InternalSpellGrammar.g:1443:2: kw= '^='
                    {
                    kw=(Token)match(input,35,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getAugassignAccess().getCircumflexAccentEqualsSignKeyword_7()); 
                          
                    }

                    }
                    break;
                case 9 :
                    // InternalSpellGrammar.g:1450:2: kw= '<<='
                    {
                    kw=(Token)match(input,36,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getAugassignAccess().getLessThanSignLessThanSignEqualsSignKeyword_8()); 
                          
                    }

                    }
                    break;
                case 10 :
                    // InternalSpellGrammar.g:1457:2: kw= '>>='
                    {
                    kw=(Token)match(input,37,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getAugassignAccess().getGreaterThanSignGreaterThanSignEqualsSignKeyword_9()); 
                          
                    }

                    }
                    break;
                case 11 :
                    // InternalSpellGrammar.g:1464:2: kw= '**='
                    {
                    kw=(Token)match(input,38,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getAugassignAccess().getAsteriskAsteriskEqualsSignKeyword_10()); 
                          
                    }

                    }
                    break;
                case 12 :
                    // InternalSpellGrammar.g:1471:2: kw= '//='
                    {
                    kw=(Token)match(input,39,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getAugassignAccess().getSolidusSolidusEqualsSignKeyword_11()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 36, ruleaugassign_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleaugassign"


    // $ANTLR start "entryRuledel_stmt"
    // InternalSpellGrammar.g:1484:1: entryRuledel_stmt returns [EObject current=null] : iv_ruledel_stmt= ruledel_stmt EOF ;
    public final EObject entryRuledel_stmt() throws RecognitionException {
        EObject current = null;
        int entryRuledel_stmt_StartIndex = input.index();
        EObject iv_ruledel_stmt = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 37) ) { return current; }
            // InternalSpellGrammar.g:1485:2: (iv_ruledel_stmt= ruledel_stmt EOF )
            // InternalSpellGrammar.g:1486:2: iv_ruledel_stmt= ruledel_stmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDel_stmtRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruledel_stmt=ruledel_stmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruledel_stmt; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 37, entryRuledel_stmt_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuledel_stmt"


    // $ANTLR start "ruledel_stmt"
    // InternalSpellGrammar.g:1493:1: ruledel_stmt returns [EObject current=null] : (otherlv_0= 'del' ( (lv_exprlist_1_0= ruleexprlist ) ) ) ;
    public final EObject ruledel_stmt() throws RecognitionException {
        EObject current = null;
        int ruledel_stmt_StartIndex = input.index();
        Token otherlv_0=null;
        EObject lv_exprlist_1_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 38) ) { return current; }
            // InternalSpellGrammar.g:1496:28: ( (otherlv_0= 'del' ( (lv_exprlist_1_0= ruleexprlist ) ) ) )
            // InternalSpellGrammar.g:1497:1: (otherlv_0= 'del' ( (lv_exprlist_1_0= ruleexprlist ) ) )
            {
            // InternalSpellGrammar.g:1497:1: (otherlv_0= 'del' ( (lv_exprlist_1_0= ruleexprlist ) ) )
            // InternalSpellGrammar.g:1497:3: otherlv_0= 'del' ( (lv_exprlist_1_0= ruleexprlist ) )
            {
            otherlv_0=(Token)match(input,40,FollowSets000.FOLLOW_28); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getDel_stmtAccess().getDelKeyword_0());
                  
            }
            // InternalSpellGrammar.g:1501:1: ( (lv_exprlist_1_0= ruleexprlist ) )
            // InternalSpellGrammar.g:1502:1: (lv_exprlist_1_0= ruleexprlist )
            {
            // InternalSpellGrammar.g:1502:1: (lv_exprlist_1_0= ruleexprlist )
            // InternalSpellGrammar.g:1503:3: lv_exprlist_1_0= ruleexprlist
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getDel_stmtAccess().getExprlistExprlistParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_exprlist_1_0=ruleexprlist();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getDel_stmtRule());
              	        }
                     		set(
                     			current, 
                     			"exprlist",
                      		lv_exprlist_1_0, 
                      		"lu.ses.engineering.spell.controlflow.SpellGrammar.exprlist");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 38, ruledel_stmt_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruledel_stmt"


    // $ANTLR start "entryRulepass_stmt"
    // InternalSpellGrammar.g:1527:1: entryRulepass_stmt returns [EObject current=null] : iv_rulepass_stmt= rulepass_stmt EOF ;
    public final EObject entryRulepass_stmt() throws RecognitionException {
        EObject current = null;
        int entryRulepass_stmt_StartIndex = input.index();
        EObject iv_rulepass_stmt = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 39) ) { return current; }
            // InternalSpellGrammar.g:1528:2: (iv_rulepass_stmt= rulepass_stmt EOF )
            // InternalSpellGrammar.g:1529:2: iv_rulepass_stmt= rulepass_stmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPass_stmtRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulepass_stmt=rulepass_stmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulepass_stmt; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 39, entryRulepass_stmt_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRulepass_stmt"


    // $ANTLR start "rulepass_stmt"
    // InternalSpellGrammar.g:1536:1: rulepass_stmt returns [EObject current=null] : ( () otherlv_1= 'pass' ) ;
    public final EObject rulepass_stmt() throws RecognitionException {
        EObject current = null;
        int rulepass_stmt_StartIndex = input.index();
        Token otherlv_1=null;

         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 40) ) { return current; }
            // InternalSpellGrammar.g:1539:28: ( ( () otherlv_1= 'pass' ) )
            // InternalSpellGrammar.g:1540:1: ( () otherlv_1= 'pass' )
            {
            // InternalSpellGrammar.g:1540:1: ( () otherlv_1= 'pass' )
            // InternalSpellGrammar.g:1540:2: () otherlv_1= 'pass'
            {
            // InternalSpellGrammar.g:1540:2: ()
            // InternalSpellGrammar.g:1541:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getPass_stmtAccess().getPass_stmtAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,41,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getPass_stmtAccess().getPassKeyword_1());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 40, rulepass_stmt_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "rulepass_stmt"


    // $ANTLR start "entryRuleflow_stmt"
    // InternalSpellGrammar.g:1561:1: entryRuleflow_stmt returns [EObject current=null] : iv_ruleflow_stmt= ruleflow_stmt EOF ;
    public final EObject entryRuleflow_stmt() throws RecognitionException {
        EObject current = null;
        int entryRuleflow_stmt_StartIndex = input.index();
        EObject iv_ruleflow_stmt = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 41) ) { return current; }
            // InternalSpellGrammar.g:1562:2: (iv_ruleflow_stmt= ruleflow_stmt EOF )
            // InternalSpellGrammar.g:1563:2: iv_ruleflow_stmt= ruleflow_stmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFlow_stmtRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleflow_stmt=ruleflow_stmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleflow_stmt; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 41, entryRuleflow_stmt_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleflow_stmt"


    // $ANTLR start "ruleflow_stmt"
    // InternalSpellGrammar.g:1570:1: ruleflow_stmt returns [EObject current=null] : (this_break_stmt_0= rulebreak_stmt | this_continue_stmt_1= rulecontinue_stmt | this_return_stmt_2= rulereturn_stmt | this_raise_stmt_3= ruleraise_stmt | this_yield_stmt_4= ruleyield_stmt ) ;
    public final EObject ruleflow_stmt() throws RecognitionException {
        EObject current = null;
        int ruleflow_stmt_StartIndex = input.index();
        EObject this_break_stmt_0 = null;

        EObject this_continue_stmt_1 = null;

        EObject this_return_stmt_2 = null;

        EObject this_raise_stmt_3 = null;

        EObject this_yield_stmt_4 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 42) ) { return current; }
            // InternalSpellGrammar.g:1573:28: ( (this_break_stmt_0= rulebreak_stmt | this_continue_stmt_1= rulecontinue_stmt | this_return_stmt_2= rulereturn_stmt | this_raise_stmt_3= ruleraise_stmt | this_yield_stmt_4= ruleyield_stmt ) )
            // InternalSpellGrammar.g:1574:1: (this_break_stmt_0= rulebreak_stmt | this_continue_stmt_1= rulecontinue_stmt | this_return_stmt_2= rulereturn_stmt | this_raise_stmt_3= ruleraise_stmt | this_yield_stmt_4= ruleyield_stmt )
            {
            // InternalSpellGrammar.g:1574:1: (this_break_stmt_0= rulebreak_stmt | this_continue_stmt_1= rulecontinue_stmt | this_return_stmt_2= rulereturn_stmt | this_raise_stmt_3= ruleraise_stmt | this_yield_stmt_4= ruleyield_stmt )
            int alt29=5;
            switch ( input.LA(1) ) {
            case 42:
                {
                alt29=1;
                }
                break;
            case 43:
                {
                alt29=2;
                }
                break;
            case 44:
                {
                alt29=3;
                }
                break;
            case 45:
                {
                alt29=4;
                }
                break;
            case 103:
                {
                alt29=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 29, 0, input);

                throw nvae;
            }

            switch (alt29) {
                case 1 :
                    // InternalSpellGrammar.g:1575:2: this_break_stmt_0= rulebreak_stmt
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getFlow_stmtAccess().getBreak_stmtParserRuleCall_0()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_break_stmt_0=rulebreak_stmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_break_stmt_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalSpellGrammar.g:1588:2: this_continue_stmt_1= rulecontinue_stmt
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getFlow_stmtAccess().getContinue_stmtParserRuleCall_1()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_continue_stmt_1=rulecontinue_stmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_continue_stmt_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    // InternalSpellGrammar.g:1601:2: this_return_stmt_2= rulereturn_stmt
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getFlow_stmtAccess().getReturn_stmtParserRuleCall_2()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_return_stmt_2=rulereturn_stmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_return_stmt_2; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 4 :
                    // InternalSpellGrammar.g:1614:2: this_raise_stmt_3= ruleraise_stmt
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getFlow_stmtAccess().getRaise_stmtParserRuleCall_3()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_raise_stmt_3=ruleraise_stmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_raise_stmt_3; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 5 :
                    // InternalSpellGrammar.g:1627:2: this_yield_stmt_4= ruleyield_stmt
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getFlow_stmtAccess().getYield_stmtParserRuleCall_4()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_yield_stmt_4=ruleyield_stmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_yield_stmt_4; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 42, ruleflow_stmt_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleflow_stmt"


    // $ANTLR start "entryRulebreak_stmt"
    // InternalSpellGrammar.g:1646:1: entryRulebreak_stmt returns [EObject current=null] : iv_rulebreak_stmt= rulebreak_stmt EOF ;
    public final EObject entryRulebreak_stmt() throws RecognitionException {
        EObject current = null;
        int entryRulebreak_stmt_StartIndex = input.index();
        EObject iv_rulebreak_stmt = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 43) ) { return current; }
            // InternalSpellGrammar.g:1647:2: (iv_rulebreak_stmt= rulebreak_stmt EOF )
            // InternalSpellGrammar.g:1648:2: iv_rulebreak_stmt= rulebreak_stmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBreak_stmtRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulebreak_stmt=rulebreak_stmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulebreak_stmt; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 43, entryRulebreak_stmt_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRulebreak_stmt"


    // $ANTLR start "rulebreak_stmt"
    // InternalSpellGrammar.g:1655:1: rulebreak_stmt returns [EObject current=null] : ( () otherlv_1= 'break' ) ;
    public final EObject rulebreak_stmt() throws RecognitionException {
        EObject current = null;
        int rulebreak_stmt_StartIndex = input.index();
        Token otherlv_1=null;

         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 44) ) { return current; }
            // InternalSpellGrammar.g:1658:28: ( ( () otherlv_1= 'break' ) )
            // InternalSpellGrammar.g:1659:1: ( () otherlv_1= 'break' )
            {
            // InternalSpellGrammar.g:1659:1: ( () otherlv_1= 'break' )
            // InternalSpellGrammar.g:1659:2: () otherlv_1= 'break'
            {
            // InternalSpellGrammar.g:1659:2: ()
            // InternalSpellGrammar.g:1660:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getBreak_stmtAccess().getBreak_stmtAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,42,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getBreak_stmtAccess().getBreakKeyword_1());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 44, rulebreak_stmt_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "rulebreak_stmt"


    // $ANTLR start "entryRulecontinue_stmt"
    // InternalSpellGrammar.g:1680:1: entryRulecontinue_stmt returns [EObject current=null] : iv_rulecontinue_stmt= rulecontinue_stmt EOF ;
    public final EObject entryRulecontinue_stmt() throws RecognitionException {
        EObject current = null;
        int entryRulecontinue_stmt_StartIndex = input.index();
        EObject iv_rulecontinue_stmt = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 45) ) { return current; }
            // InternalSpellGrammar.g:1681:2: (iv_rulecontinue_stmt= rulecontinue_stmt EOF )
            // InternalSpellGrammar.g:1682:2: iv_rulecontinue_stmt= rulecontinue_stmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getContinue_stmtRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulecontinue_stmt=rulecontinue_stmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulecontinue_stmt; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 45, entryRulecontinue_stmt_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRulecontinue_stmt"


    // $ANTLR start "rulecontinue_stmt"
    // InternalSpellGrammar.g:1689:1: rulecontinue_stmt returns [EObject current=null] : ( () otherlv_1= 'continue' ) ;
    public final EObject rulecontinue_stmt() throws RecognitionException {
        EObject current = null;
        int rulecontinue_stmt_StartIndex = input.index();
        Token otherlv_1=null;

         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 46) ) { return current; }
            // InternalSpellGrammar.g:1692:28: ( ( () otherlv_1= 'continue' ) )
            // InternalSpellGrammar.g:1693:1: ( () otherlv_1= 'continue' )
            {
            // InternalSpellGrammar.g:1693:1: ( () otherlv_1= 'continue' )
            // InternalSpellGrammar.g:1693:2: () otherlv_1= 'continue'
            {
            // InternalSpellGrammar.g:1693:2: ()
            // InternalSpellGrammar.g:1694:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getContinue_stmtAccess().getContinue_stmtAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,43,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getContinue_stmtAccess().getContinueKeyword_1());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 46, rulecontinue_stmt_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "rulecontinue_stmt"


    // $ANTLR start "entryRulereturn_stmt"
    // InternalSpellGrammar.g:1714:1: entryRulereturn_stmt returns [EObject current=null] : iv_rulereturn_stmt= rulereturn_stmt EOF ;
    public final EObject entryRulereturn_stmt() throws RecognitionException {
        EObject current = null;
        int entryRulereturn_stmt_StartIndex = input.index();
        EObject iv_rulereturn_stmt = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 47) ) { return current; }
            // InternalSpellGrammar.g:1715:2: (iv_rulereturn_stmt= rulereturn_stmt EOF )
            // InternalSpellGrammar.g:1716:2: iv_rulereturn_stmt= rulereturn_stmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getReturn_stmtRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulereturn_stmt=rulereturn_stmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulereturn_stmt; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 47, entryRulereturn_stmt_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRulereturn_stmt"


    // $ANTLR start "rulereturn_stmt"
    // InternalSpellGrammar.g:1723:1: rulereturn_stmt returns [EObject current=null] : ( () otherlv_1= 'return' ( (lv_testlist_2_0= ruletestlist ) )? ) ;
    public final EObject rulereturn_stmt() throws RecognitionException {
        EObject current = null;
        int rulereturn_stmt_StartIndex = input.index();
        Token otherlv_1=null;
        EObject lv_testlist_2_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 48) ) { return current; }
            // InternalSpellGrammar.g:1726:28: ( ( () otherlv_1= 'return' ( (lv_testlist_2_0= ruletestlist ) )? ) )
            // InternalSpellGrammar.g:1727:1: ( () otherlv_1= 'return' ( (lv_testlist_2_0= ruletestlist ) )? )
            {
            // InternalSpellGrammar.g:1727:1: ( () otherlv_1= 'return' ( (lv_testlist_2_0= ruletestlist ) )? )
            // InternalSpellGrammar.g:1727:2: () otherlv_1= 'return' ( (lv_testlist_2_0= ruletestlist ) )?
            {
            // InternalSpellGrammar.g:1727:2: ()
            // InternalSpellGrammar.g:1728:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getReturn_stmtAccess().getReturn_stmtAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,44,FollowSets000.FOLLOW_29); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getReturn_stmtAccess().getReturnKeyword_1());
                  
            }
            // InternalSpellGrammar.g:1740:1: ( (lv_testlist_2_0= ruletestlist ) )?
            int alt30=2;
            alt30 = dfa30.predict(input);
            switch (alt30) {
                case 1 :
                    // InternalSpellGrammar.g:1741:1: (lv_testlist_2_0= ruletestlist )
                    {
                    // InternalSpellGrammar.g:1741:1: (lv_testlist_2_0= ruletestlist )
                    // InternalSpellGrammar.g:1742:3: lv_testlist_2_0= ruletestlist
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getReturn_stmtAccess().getTestlistTestlistParserRuleCall_2_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_testlist_2_0=ruletestlist();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getReturn_stmtRule());
                      	        }
                             		set(
                             			current, 
                             			"testlist",
                              		lv_testlist_2_0, 
                              		"lu.ses.engineering.spell.controlflow.SpellGrammar.testlist");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 48, rulereturn_stmt_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "rulereturn_stmt"


    // $ANTLR start "entryRuleyield_stmt"
    // InternalSpellGrammar.g:1766:1: entryRuleyield_stmt returns [EObject current=null] : iv_ruleyield_stmt= ruleyield_stmt EOF ;
    public final EObject entryRuleyield_stmt() throws RecognitionException {
        EObject current = null;
        int entryRuleyield_stmt_StartIndex = input.index();
        EObject iv_ruleyield_stmt = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 49) ) { return current; }
            // InternalSpellGrammar.g:1767:2: (iv_ruleyield_stmt= ruleyield_stmt EOF )
            // InternalSpellGrammar.g:1768:2: iv_ruleyield_stmt= ruleyield_stmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getYield_stmtRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleyield_stmt=ruleyield_stmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleyield_stmt; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 49, entryRuleyield_stmt_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleyield_stmt"


    // $ANTLR start "ruleyield_stmt"
    // InternalSpellGrammar.g:1775:1: ruleyield_stmt returns [EObject current=null] : ( (lv_yield_expr_0_0= ruleyield_expr ) ) ;
    public final EObject ruleyield_stmt() throws RecognitionException {
        EObject current = null;
        int ruleyield_stmt_StartIndex = input.index();
        EObject lv_yield_expr_0_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 50) ) { return current; }
            // InternalSpellGrammar.g:1778:28: ( ( (lv_yield_expr_0_0= ruleyield_expr ) ) )
            // InternalSpellGrammar.g:1779:1: ( (lv_yield_expr_0_0= ruleyield_expr ) )
            {
            // InternalSpellGrammar.g:1779:1: ( (lv_yield_expr_0_0= ruleyield_expr ) )
            // InternalSpellGrammar.g:1780:1: (lv_yield_expr_0_0= ruleyield_expr )
            {
            // InternalSpellGrammar.g:1780:1: (lv_yield_expr_0_0= ruleyield_expr )
            // InternalSpellGrammar.g:1781:3: lv_yield_expr_0_0= ruleyield_expr
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getYield_stmtAccess().getYield_exprYield_exprParserRuleCall_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_yield_expr_0_0=ruleyield_expr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getYield_stmtRule());
              	        }
                     		set(
                     			current, 
                     			"yield_expr",
                      		lv_yield_expr_0_0, 
                      		"lu.ses.engineering.spell.controlflow.SpellGrammar.yield_expr");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 50, ruleyield_stmt_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleyield_stmt"


    // $ANTLR start "entryRuleraise_stmt"
    // InternalSpellGrammar.g:1805:1: entryRuleraise_stmt returns [EObject current=null] : iv_ruleraise_stmt= ruleraise_stmt EOF ;
    public final EObject entryRuleraise_stmt() throws RecognitionException {
        EObject current = null;
        int entryRuleraise_stmt_StartIndex = input.index();
        EObject iv_ruleraise_stmt = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 51) ) { return current; }
            // InternalSpellGrammar.g:1806:2: (iv_ruleraise_stmt= ruleraise_stmt EOF )
            // InternalSpellGrammar.g:1807:2: iv_ruleraise_stmt= ruleraise_stmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRaise_stmtRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleraise_stmt=ruleraise_stmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleraise_stmt; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 51, entryRuleraise_stmt_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleraise_stmt"


    // $ANTLR start "ruleraise_stmt"
    // InternalSpellGrammar.g:1814:1: ruleraise_stmt returns [EObject current=null] : ( () otherlv_1= 'raise' ( ( (lv_tests_2_0= ruletest ) ) (otherlv_3= ',' ( (lv_tests_4_0= ruletest ) ) (otherlv_5= ',' ( (lv_tests_6_0= ruletest ) ) )? )? )? ) ;
    public final EObject ruleraise_stmt() throws RecognitionException {
        EObject current = null;
        int ruleraise_stmt_StartIndex = input.index();
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_tests_2_0 = null;

        EObject lv_tests_4_0 = null;

        EObject lv_tests_6_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 52) ) { return current; }
            // InternalSpellGrammar.g:1817:28: ( ( () otherlv_1= 'raise' ( ( (lv_tests_2_0= ruletest ) ) (otherlv_3= ',' ( (lv_tests_4_0= ruletest ) ) (otherlv_5= ',' ( (lv_tests_6_0= ruletest ) ) )? )? )? ) )
            // InternalSpellGrammar.g:1818:1: ( () otherlv_1= 'raise' ( ( (lv_tests_2_0= ruletest ) ) (otherlv_3= ',' ( (lv_tests_4_0= ruletest ) ) (otherlv_5= ',' ( (lv_tests_6_0= ruletest ) ) )? )? )? )
            {
            // InternalSpellGrammar.g:1818:1: ( () otherlv_1= 'raise' ( ( (lv_tests_2_0= ruletest ) ) (otherlv_3= ',' ( (lv_tests_4_0= ruletest ) ) (otherlv_5= ',' ( (lv_tests_6_0= ruletest ) ) )? )? )? )
            // InternalSpellGrammar.g:1818:2: () otherlv_1= 'raise' ( ( (lv_tests_2_0= ruletest ) ) (otherlv_3= ',' ( (lv_tests_4_0= ruletest ) ) (otherlv_5= ',' ( (lv_tests_6_0= ruletest ) ) )? )? )?
            {
            // InternalSpellGrammar.g:1818:2: ()
            // InternalSpellGrammar.g:1819:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getRaise_stmtAccess().getRaise_stmtAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,45,FollowSets000.FOLLOW_29); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getRaise_stmtAccess().getRaiseKeyword_1());
                  
            }
            // InternalSpellGrammar.g:1831:1: ( ( (lv_tests_2_0= ruletest ) ) (otherlv_3= ',' ( (lv_tests_4_0= ruletest ) ) (otherlv_5= ',' ( (lv_tests_6_0= ruletest ) ) )? )? )?
            int alt33=2;
            alt33 = dfa33.predict(input);
            switch (alt33) {
                case 1 :
                    // InternalSpellGrammar.g:1831:2: ( (lv_tests_2_0= ruletest ) ) (otherlv_3= ',' ( (lv_tests_4_0= ruletest ) ) (otherlv_5= ',' ( (lv_tests_6_0= ruletest ) ) )? )?
                    {
                    // InternalSpellGrammar.g:1831:2: ( (lv_tests_2_0= ruletest ) )
                    // InternalSpellGrammar.g:1832:1: (lv_tests_2_0= ruletest )
                    {
                    // InternalSpellGrammar.g:1832:1: (lv_tests_2_0= ruletest )
                    // InternalSpellGrammar.g:1833:3: lv_tests_2_0= ruletest
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getRaise_stmtAccess().getTestsTestParserRuleCall_2_0_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_19);
                    lv_tests_2_0=ruletest();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getRaise_stmtRule());
                      	        }
                             		add(
                             			current, 
                             			"tests",
                              		lv_tests_2_0, 
                              		"lu.ses.engineering.spell.controlflow.SpellGrammar.test");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalSpellGrammar.g:1849:2: (otherlv_3= ',' ( (lv_tests_4_0= ruletest ) ) (otherlv_5= ',' ( (lv_tests_6_0= ruletest ) ) )? )?
                    int alt32=2;
                    alt32 = dfa32.predict(input);
                    switch (alt32) {
                        case 1 :
                            // InternalSpellGrammar.g:1849:4: otherlv_3= ',' ( (lv_tests_4_0= ruletest ) ) (otherlv_5= ',' ( (lv_tests_6_0= ruletest ) ) )?
                            {
                            otherlv_3=(Token)match(input,23,FollowSets000.FOLLOW_16); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_3, grammarAccess.getRaise_stmtAccess().getCommaKeyword_2_1_0());
                                  
                            }
                            // InternalSpellGrammar.g:1853:1: ( (lv_tests_4_0= ruletest ) )
                            // InternalSpellGrammar.g:1854:1: (lv_tests_4_0= ruletest )
                            {
                            // InternalSpellGrammar.g:1854:1: (lv_tests_4_0= ruletest )
                            // InternalSpellGrammar.g:1855:3: lv_tests_4_0= ruletest
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getRaise_stmtAccess().getTestsTestParserRuleCall_2_1_1_0()); 
                              	    
                            }
                            pushFollow(FollowSets000.FOLLOW_19);
                            lv_tests_4_0=ruletest();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getRaise_stmtRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"tests",
                                      		lv_tests_4_0, 
                                      		"lu.ses.engineering.spell.controlflow.SpellGrammar.test");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }

                            // InternalSpellGrammar.g:1871:2: (otherlv_5= ',' ( (lv_tests_6_0= ruletest ) ) )?
                            int alt31=2;
                            alt31 = dfa31.predict(input);
                            switch (alt31) {
                                case 1 :
                                    // InternalSpellGrammar.g:1871:4: otherlv_5= ',' ( (lv_tests_6_0= ruletest ) )
                                    {
                                    otherlv_5=(Token)match(input,23,FollowSets000.FOLLOW_16); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                          	newLeafNode(otherlv_5, grammarAccess.getRaise_stmtAccess().getCommaKeyword_2_1_2_0());
                                          
                                    }
                                    // InternalSpellGrammar.g:1875:1: ( (lv_tests_6_0= ruletest ) )
                                    // InternalSpellGrammar.g:1876:1: (lv_tests_6_0= ruletest )
                                    {
                                    // InternalSpellGrammar.g:1876:1: (lv_tests_6_0= ruletest )
                                    // InternalSpellGrammar.g:1877:3: lv_tests_6_0= ruletest
                                    {
                                    if ( state.backtracking==0 ) {
                                       
                                      	        newCompositeNode(grammarAccess.getRaise_stmtAccess().getTestsTestParserRuleCall_2_1_2_1_0()); 
                                      	    
                                    }
                                    pushFollow(FollowSets000.FOLLOW_2);
                                    lv_tests_6_0=ruletest();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      	        if (current==null) {
                                      	            current = createModelElementForParent(grammarAccess.getRaise_stmtRule());
                                      	        }
                                             		add(
                                             			current, 
                                             			"tests",
                                              		lv_tests_6_0, 
                                              		"lu.ses.engineering.spell.controlflow.SpellGrammar.test");
                                      	        afterParserOrEnumRuleCall();
                                      	    
                                    }

                                    }


                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 52, ruleraise_stmt_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleraise_stmt"


    // $ANTLR start "entryRuleimport_stmt"
    // InternalSpellGrammar.g:1901:1: entryRuleimport_stmt returns [EObject current=null] : iv_ruleimport_stmt= ruleimport_stmt EOF ;
    public final EObject entryRuleimport_stmt() throws RecognitionException {
        EObject current = null;
        int entryRuleimport_stmt_StartIndex = input.index();
        EObject iv_ruleimport_stmt = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 53) ) { return current; }
            // InternalSpellGrammar.g:1902:2: (iv_ruleimport_stmt= ruleimport_stmt EOF )
            // InternalSpellGrammar.g:1903:2: iv_ruleimport_stmt= ruleimport_stmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getImport_stmtRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleimport_stmt=ruleimport_stmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleimport_stmt; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 53, entryRuleimport_stmt_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleimport_stmt"


    // $ANTLR start "ruleimport_stmt"
    // InternalSpellGrammar.g:1910:1: ruleimport_stmt returns [EObject current=null] : (this_import_name_0= ruleimport_name | this_import_from_1= ruleimport_from ) ;
    public final EObject ruleimport_stmt() throws RecognitionException {
        EObject current = null;
        int ruleimport_stmt_StartIndex = input.index();
        EObject this_import_name_0 = null;

        EObject this_import_from_1 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 54) ) { return current; }
            // InternalSpellGrammar.g:1913:28: ( (this_import_name_0= ruleimport_name | this_import_from_1= ruleimport_from ) )
            // InternalSpellGrammar.g:1914:1: (this_import_name_0= ruleimport_name | this_import_from_1= ruleimport_from )
            {
            // InternalSpellGrammar.g:1914:1: (this_import_name_0= ruleimport_name | this_import_from_1= ruleimport_from )
            int alt34=2;
            int LA34_0 = input.LA(1);

            if ( (LA34_0==46) ) {
                alt34=1;
            }
            else if ( (LA34_0==47) ) {
                alt34=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 34, 0, input);

                throw nvae;
            }
            switch (alt34) {
                case 1 :
                    // InternalSpellGrammar.g:1915:2: this_import_name_0= ruleimport_name
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getImport_stmtAccess().getImport_nameParserRuleCall_0()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_import_name_0=ruleimport_name();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_import_name_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalSpellGrammar.g:1928:2: this_import_from_1= ruleimport_from
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getImport_stmtAccess().getImport_fromParserRuleCall_1()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_import_from_1=ruleimport_from();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_import_from_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 54, ruleimport_stmt_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleimport_stmt"


    // $ANTLR start "entryRuleimport_name"
    // InternalSpellGrammar.g:1947:1: entryRuleimport_name returns [EObject current=null] : iv_ruleimport_name= ruleimport_name EOF ;
    public final EObject entryRuleimport_name() throws RecognitionException {
        EObject current = null;
        int entryRuleimport_name_StartIndex = input.index();
        EObject iv_ruleimport_name = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 55) ) { return current; }
            // InternalSpellGrammar.g:1948:2: (iv_ruleimport_name= ruleimport_name EOF )
            // InternalSpellGrammar.g:1949:2: iv_ruleimport_name= ruleimport_name EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getImport_nameRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleimport_name=ruleimport_name();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleimport_name; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 55, entryRuleimport_name_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleimport_name"


    // $ANTLR start "ruleimport_name"
    // InternalSpellGrammar.g:1956:1: ruleimport_name returns [EObject current=null] : (otherlv_0= 'import' ( (lv_dotted_as_names_1_0= ruledotted_as_names ) ) ) ;
    public final EObject ruleimport_name() throws RecognitionException {
        EObject current = null;
        int ruleimport_name_StartIndex = input.index();
        Token otherlv_0=null;
        EObject lv_dotted_as_names_1_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 56) ) { return current; }
            // InternalSpellGrammar.g:1959:28: ( (otherlv_0= 'import' ( (lv_dotted_as_names_1_0= ruledotted_as_names ) ) ) )
            // InternalSpellGrammar.g:1960:1: (otherlv_0= 'import' ( (lv_dotted_as_names_1_0= ruledotted_as_names ) ) )
            {
            // InternalSpellGrammar.g:1960:1: (otherlv_0= 'import' ( (lv_dotted_as_names_1_0= ruledotted_as_names ) ) )
            // InternalSpellGrammar.g:1960:3: otherlv_0= 'import' ( (lv_dotted_as_names_1_0= ruledotted_as_names ) )
            {
            otherlv_0=(Token)match(input,46,FollowSets000.FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getImport_nameAccess().getImportKeyword_0());
                  
            }
            // InternalSpellGrammar.g:1964:1: ( (lv_dotted_as_names_1_0= ruledotted_as_names ) )
            // InternalSpellGrammar.g:1965:1: (lv_dotted_as_names_1_0= ruledotted_as_names )
            {
            // InternalSpellGrammar.g:1965:1: (lv_dotted_as_names_1_0= ruledotted_as_names )
            // InternalSpellGrammar.g:1966:3: lv_dotted_as_names_1_0= ruledotted_as_names
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getImport_nameAccess().getDotted_as_namesDotted_as_namesParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_dotted_as_names_1_0=ruledotted_as_names();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getImport_nameRule());
              	        }
                     		set(
                     			current, 
                     			"dotted_as_names",
                      		lv_dotted_as_names_1_0, 
                      		"lu.ses.engineering.spell.controlflow.SpellGrammar.dotted_as_names");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 56, ruleimport_name_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleimport_name"


    // $ANTLR start "entryRuleimport_from"
    // InternalSpellGrammar.g:1990:1: entryRuleimport_from returns [EObject current=null] : iv_ruleimport_from= ruleimport_from EOF ;
    public final EObject entryRuleimport_from() throws RecognitionException {
        EObject current = null;
        int entryRuleimport_from_StartIndex = input.index();
        EObject iv_ruleimport_from = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 57) ) { return current; }
            // InternalSpellGrammar.g:1991:2: (iv_ruleimport_from= ruleimport_from EOF )
            // InternalSpellGrammar.g:1992:2: iv_ruleimport_from= ruleimport_from EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getImport_fromRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleimport_from=ruleimport_from();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleimport_from; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 57, entryRuleimport_from_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleimport_from"


    // $ANTLR start "ruleimport_from"
    // InternalSpellGrammar.g:1999:1: ruleimport_from returns [EObject current=null] : (otherlv_0= 'from' ( ( ( (lv_dots_1_0= '.' ) )* ( (lv_dotted_name_2_0= ruledotted_name ) ) ) | ( (lv_dots2_3_0= '.' ) )+ ) otherlv_4= 'import' (otherlv_5= '*' | ( ( (lv_roundBracket_6_0= '(' ) ) ( (lv_import_as_names_7_0= ruleimport_as_names ) ) otherlv_8= ')' ) | ( (lv_import_as_names_9_0= ruleimport_as_names ) ) ) ) ;
    public final EObject ruleimport_from() throws RecognitionException {
        EObject current = null;
        int ruleimport_from_StartIndex = input.index();
        Token otherlv_0=null;
        Token lv_dots_1_0=null;
        Token lv_dots2_3_0=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token lv_roundBracket_6_0=null;
        Token otherlv_8=null;
        AntlrDatatypeRuleToken lv_dotted_name_2_0 = null;

        EObject lv_import_as_names_7_0 = null;

        EObject lv_import_as_names_9_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 58) ) { return current; }
            // InternalSpellGrammar.g:2002:28: ( (otherlv_0= 'from' ( ( ( (lv_dots_1_0= '.' ) )* ( (lv_dotted_name_2_0= ruledotted_name ) ) ) | ( (lv_dots2_3_0= '.' ) )+ ) otherlv_4= 'import' (otherlv_5= '*' | ( ( (lv_roundBracket_6_0= '(' ) ) ( (lv_import_as_names_7_0= ruleimport_as_names ) ) otherlv_8= ')' ) | ( (lv_import_as_names_9_0= ruleimport_as_names ) ) ) ) )
            // InternalSpellGrammar.g:2003:1: (otherlv_0= 'from' ( ( ( (lv_dots_1_0= '.' ) )* ( (lv_dotted_name_2_0= ruledotted_name ) ) ) | ( (lv_dots2_3_0= '.' ) )+ ) otherlv_4= 'import' (otherlv_5= '*' | ( ( (lv_roundBracket_6_0= '(' ) ) ( (lv_import_as_names_7_0= ruleimport_as_names ) ) otherlv_8= ')' ) | ( (lv_import_as_names_9_0= ruleimport_as_names ) ) ) )
            {
            // InternalSpellGrammar.g:2003:1: (otherlv_0= 'from' ( ( ( (lv_dots_1_0= '.' ) )* ( (lv_dotted_name_2_0= ruledotted_name ) ) ) | ( (lv_dots2_3_0= '.' ) )+ ) otherlv_4= 'import' (otherlv_5= '*' | ( ( (lv_roundBracket_6_0= '(' ) ) ( (lv_import_as_names_7_0= ruleimport_as_names ) ) otherlv_8= ')' ) | ( (lv_import_as_names_9_0= ruleimport_as_names ) ) ) )
            // InternalSpellGrammar.g:2003:3: otherlv_0= 'from' ( ( ( (lv_dots_1_0= '.' ) )* ( (lv_dotted_name_2_0= ruledotted_name ) ) ) | ( (lv_dots2_3_0= '.' ) )+ ) otherlv_4= 'import' (otherlv_5= '*' | ( ( (lv_roundBracket_6_0= '(' ) ) ( (lv_import_as_names_7_0= ruleimport_as_names ) ) otherlv_8= ')' ) | ( (lv_import_as_names_9_0= ruleimport_as_names ) ) )
            {
            otherlv_0=(Token)match(input,47,FollowSets000.FOLLOW_30); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getImport_fromAccess().getFromKeyword_0());
                  
            }
            // InternalSpellGrammar.g:2007:1: ( ( ( (lv_dots_1_0= '.' ) )* ( (lv_dotted_name_2_0= ruledotted_name ) ) ) | ( (lv_dots2_3_0= '.' ) )+ )
            int alt37=2;
            alt37 = dfa37.predict(input);
            switch (alt37) {
                case 1 :
                    // InternalSpellGrammar.g:2007:2: ( ( (lv_dots_1_0= '.' ) )* ( (lv_dotted_name_2_0= ruledotted_name ) ) )
                    {
                    // InternalSpellGrammar.g:2007:2: ( ( (lv_dots_1_0= '.' ) )* ( (lv_dotted_name_2_0= ruledotted_name ) ) )
                    // InternalSpellGrammar.g:2007:3: ( (lv_dots_1_0= '.' ) )* ( (lv_dotted_name_2_0= ruledotted_name ) )
                    {
                    // InternalSpellGrammar.g:2007:3: ( (lv_dots_1_0= '.' ) )*
                    loop35:
                    do {
                        int alt35=2;
                        int LA35_0 = input.LA(1);

                        if ( (LA35_0==48) ) {
                            alt35=1;
                        }


                        switch (alt35) {
                    	case 1 :
                    	    // InternalSpellGrammar.g:2008:1: (lv_dots_1_0= '.' )
                    	    {
                    	    // InternalSpellGrammar.g:2008:1: (lv_dots_1_0= '.' )
                    	    // InternalSpellGrammar.g:2009:3: lv_dots_1_0= '.'
                    	    {
                    	    lv_dots_1_0=(Token)match(input,48,FollowSets000.FOLLOW_30); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	              newLeafNode(lv_dots_1_0, grammarAccess.getImport_fromAccess().getDotsFullStopKeyword_1_0_0_0());
                    	          
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElement(grammarAccess.getImport_fromRule());
                    	      	        }
                    	             		addWithLastConsumed(current, "dots", lv_dots_1_0, ".");
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop35;
                        }
                    } while (true);

                    // InternalSpellGrammar.g:2022:3: ( (lv_dotted_name_2_0= ruledotted_name ) )
                    // InternalSpellGrammar.g:2023:1: (lv_dotted_name_2_0= ruledotted_name )
                    {
                    // InternalSpellGrammar.g:2023:1: (lv_dotted_name_2_0= ruledotted_name )
                    // InternalSpellGrammar.g:2024:3: lv_dotted_name_2_0= ruledotted_name
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getImport_fromAccess().getDotted_nameDotted_nameParserRuleCall_1_0_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_31);
                    lv_dotted_name_2_0=ruledotted_name();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getImport_fromRule());
                      	        }
                             		set(
                             			current, 
                             			"dotted_name",
                              		lv_dotted_name_2_0, 
                              		"lu.ses.engineering.spell.controlflow.SpellGrammar.dotted_name");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSpellGrammar.g:2041:6: ( (lv_dots2_3_0= '.' ) )+
                    {
                    // InternalSpellGrammar.g:2041:6: ( (lv_dots2_3_0= '.' ) )+
                    int cnt36=0;
                    loop36:
                    do {
                        int alt36=2;
                        int LA36_0 = input.LA(1);

                        if ( (LA36_0==48) ) {
                            alt36=1;
                        }


                        switch (alt36) {
                    	case 1 :
                    	    // InternalSpellGrammar.g:2042:1: (lv_dots2_3_0= '.' )
                    	    {
                    	    // InternalSpellGrammar.g:2042:1: (lv_dots2_3_0= '.' )
                    	    // InternalSpellGrammar.g:2043:3: lv_dots2_3_0= '.'
                    	    {
                    	    lv_dots2_3_0=(Token)match(input,48,FollowSets000.FOLLOW_32); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	              newLeafNode(lv_dots2_3_0, grammarAccess.getImport_fromAccess().getDots2FullStopKeyword_1_1_0());
                    	          
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElement(grammarAccess.getImport_fromRule());
                    	      	        }
                    	             		addWithLastConsumed(current, "dots2", lv_dots2_3_0, ".");
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt36 >= 1 ) break loop36;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(36, input);
                                throw eee;
                        }
                        cnt36++;
                    } while (true);


                    }
                    break;

            }

            otherlv_4=(Token)match(input,46,FollowSets000.FOLLOW_33); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getImport_fromAccess().getImportKeyword_2());
                  
            }
            // InternalSpellGrammar.g:2060:1: (otherlv_5= '*' | ( ( (lv_roundBracket_6_0= '(' ) ) ( (lv_import_as_names_7_0= ruleimport_as_names ) ) otherlv_8= ')' ) | ( (lv_import_as_names_9_0= ruleimport_as_names ) ) )
            int alt38=3;
            switch ( input.LA(1) ) {
            case 25:
                {
                alt38=1;
                }
                break;
            case 19:
                {
                alt38=2;
                }
                break;
            case RULE_NAME_TERMINAL:
            case 84:
            case 85:
            case 86:
            case 87:
            case 88:
            case 89:
            case 90:
            case 91:
            case 92:
            case 93:
            case 94:
                {
                alt38=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 38, 0, input);

                throw nvae;
            }

            switch (alt38) {
                case 1 :
                    // InternalSpellGrammar.g:2060:3: otherlv_5= '*'
                    {
                    otherlv_5=(Token)match(input,25,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getImport_fromAccess().getAsteriskKeyword_3_0());
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalSpellGrammar.g:2065:6: ( ( (lv_roundBracket_6_0= '(' ) ) ( (lv_import_as_names_7_0= ruleimport_as_names ) ) otherlv_8= ')' )
                    {
                    // InternalSpellGrammar.g:2065:6: ( ( (lv_roundBracket_6_0= '(' ) ) ( (lv_import_as_names_7_0= ruleimport_as_names ) ) otherlv_8= ')' )
                    // InternalSpellGrammar.g:2065:7: ( (lv_roundBracket_6_0= '(' ) ) ( (lv_import_as_names_7_0= ruleimport_as_names ) ) otherlv_8= ')'
                    {
                    // InternalSpellGrammar.g:2065:7: ( (lv_roundBracket_6_0= '(' ) )
                    // InternalSpellGrammar.g:2066:1: (lv_roundBracket_6_0= '(' )
                    {
                    // InternalSpellGrammar.g:2066:1: (lv_roundBracket_6_0= '(' )
                    // InternalSpellGrammar.g:2067:3: lv_roundBracket_6_0= '('
                    {
                    lv_roundBracket_6_0=(Token)match(input,19,FollowSets000.FOLLOW_33); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_roundBracket_6_0, grammarAccess.getImport_fromAccess().getRoundBracketLeftParenthesisKeyword_3_1_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getImport_fromRule());
                      	        }
                             		setWithLastConsumed(current, "roundBracket", true, "(");
                      	    
                    }

                    }


                    }

                    // InternalSpellGrammar.g:2080:2: ( (lv_import_as_names_7_0= ruleimport_as_names ) )
                    // InternalSpellGrammar.g:2081:1: (lv_import_as_names_7_0= ruleimport_as_names )
                    {
                    // InternalSpellGrammar.g:2081:1: (lv_import_as_names_7_0= ruleimport_as_names )
                    // InternalSpellGrammar.g:2082:3: lv_import_as_names_7_0= ruleimport_as_names
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getImport_fromAccess().getImport_as_namesImport_as_namesParserRuleCall_3_1_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_7);
                    lv_import_as_names_7_0=ruleimport_as_names();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getImport_fromRule());
                      	        }
                             		set(
                             			current, 
                             			"import_as_names",
                              		lv_import_as_names_7_0, 
                              		"lu.ses.engineering.spell.controlflow.SpellGrammar.import_as_names");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_8=(Token)match(input,20,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_8, grammarAccess.getImport_fromAccess().getRightParenthesisKeyword_3_1_2());
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSpellGrammar.g:2103:6: ( (lv_import_as_names_9_0= ruleimport_as_names ) )
                    {
                    // InternalSpellGrammar.g:2103:6: ( (lv_import_as_names_9_0= ruleimport_as_names ) )
                    // InternalSpellGrammar.g:2104:1: (lv_import_as_names_9_0= ruleimport_as_names )
                    {
                    // InternalSpellGrammar.g:2104:1: (lv_import_as_names_9_0= ruleimport_as_names )
                    // InternalSpellGrammar.g:2105:3: lv_import_as_names_9_0= ruleimport_as_names
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getImport_fromAccess().getImport_as_namesImport_as_namesParserRuleCall_3_2_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_import_as_names_9_0=ruleimport_as_names();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getImport_fromRule());
                      	        }
                             		set(
                             			current, 
                             			"import_as_names",
                              		lv_import_as_names_9_0, 
                              		"lu.ses.engineering.spell.controlflow.SpellGrammar.import_as_names");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 58, ruleimport_from_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleimport_from"


    // $ANTLR start "entryRuleimport_as_name"
    // InternalSpellGrammar.g:2129:1: entryRuleimport_as_name returns [EObject current=null] : iv_ruleimport_as_name= ruleimport_as_name EOF ;
    public final EObject entryRuleimport_as_name() throws RecognitionException {
        EObject current = null;
        int entryRuleimport_as_name_StartIndex = input.index();
        EObject iv_ruleimport_as_name = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 59) ) { return current; }
            // InternalSpellGrammar.g:2130:2: (iv_ruleimport_as_name= ruleimport_as_name EOF )
            // InternalSpellGrammar.g:2131:2: iv_ruleimport_as_name= ruleimport_as_name EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getImport_as_nameRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleimport_as_name=ruleimport_as_name();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleimport_as_name; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 59, entryRuleimport_as_name_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleimport_as_name"


    // $ANTLR start "ruleimport_as_name"
    // InternalSpellGrammar.g:2138:1: ruleimport_as_name returns [EObject current=null] : ( ( (lv_name_0_0= ruleNAME ) ) (otherlv_1= 'as' ( (lv_identifier_2_0= ruleNAME ) ) )? ) ;
    public final EObject ruleimport_as_name() throws RecognitionException {
        EObject current = null;
        int ruleimport_as_name_StartIndex = input.index();
        Token otherlv_1=null;
        AntlrDatatypeRuleToken lv_name_0_0 = null;

        AntlrDatatypeRuleToken lv_identifier_2_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 60) ) { return current; }
            // InternalSpellGrammar.g:2141:28: ( ( ( (lv_name_0_0= ruleNAME ) ) (otherlv_1= 'as' ( (lv_identifier_2_0= ruleNAME ) ) )? ) )
            // InternalSpellGrammar.g:2142:1: ( ( (lv_name_0_0= ruleNAME ) ) (otherlv_1= 'as' ( (lv_identifier_2_0= ruleNAME ) ) )? )
            {
            // InternalSpellGrammar.g:2142:1: ( ( (lv_name_0_0= ruleNAME ) ) (otherlv_1= 'as' ( (lv_identifier_2_0= ruleNAME ) ) )? )
            // InternalSpellGrammar.g:2142:2: ( (lv_name_0_0= ruleNAME ) ) (otherlv_1= 'as' ( (lv_identifier_2_0= ruleNAME ) ) )?
            {
            // InternalSpellGrammar.g:2142:2: ( (lv_name_0_0= ruleNAME ) )
            // InternalSpellGrammar.g:2143:1: (lv_name_0_0= ruleNAME )
            {
            // InternalSpellGrammar.g:2143:1: (lv_name_0_0= ruleNAME )
            // InternalSpellGrammar.g:2144:3: lv_name_0_0= ruleNAME
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getImport_as_nameAccess().getNameNAMEParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_34);
            lv_name_0_0=ruleNAME();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getImport_as_nameRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_0_0, 
                      		"lu.ses.engineering.spell.controlflow.SpellGrammar.NAME");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSpellGrammar.g:2160:2: (otherlv_1= 'as' ( (lv_identifier_2_0= ruleNAME ) ) )?
            int alt39=2;
            int LA39_0 = input.LA(1);

            if ( (LA39_0==49) ) {
                alt39=1;
            }
            switch (alt39) {
                case 1 :
                    // InternalSpellGrammar.g:2160:4: otherlv_1= 'as' ( (lv_identifier_2_0= ruleNAME ) )
                    {
                    otherlv_1=(Token)match(input,49,FollowSets000.FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getImport_as_nameAccess().getAsKeyword_1_0());
                          
                    }
                    // InternalSpellGrammar.g:2164:1: ( (lv_identifier_2_0= ruleNAME ) )
                    // InternalSpellGrammar.g:2165:1: (lv_identifier_2_0= ruleNAME )
                    {
                    // InternalSpellGrammar.g:2165:1: (lv_identifier_2_0= ruleNAME )
                    // InternalSpellGrammar.g:2166:3: lv_identifier_2_0= ruleNAME
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getImport_as_nameAccess().getIdentifierNAMEParserRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_identifier_2_0=ruleNAME();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getImport_as_nameRule());
                      	        }
                             		set(
                             			current, 
                             			"identifier",
                              		lv_identifier_2_0, 
                              		"lu.ses.engineering.spell.controlflow.SpellGrammar.NAME");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 60, ruleimport_as_name_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleimport_as_name"


    // $ANTLR start "entryRuledotted_as_name"
    // InternalSpellGrammar.g:2190:1: entryRuledotted_as_name returns [EObject current=null] : iv_ruledotted_as_name= ruledotted_as_name EOF ;
    public final EObject entryRuledotted_as_name() throws RecognitionException {
        EObject current = null;
        int entryRuledotted_as_name_StartIndex = input.index();
        EObject iv_ruledotted_as_name = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 61) ) { return current; }
            // InternalSpellGrammar.g:2191:2: (iv_ruledotted_as_name= ruledotted_as_name EOF )
            // InternalSpellGrammar.g:2192:2: iv_ruledotted_as_name= ruledotted_as_name EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDotted_as_nameRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruledotted_as_name=ruledotted_as_name();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruledotted_as_name; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 61, entryRuledotted_as_name_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuledotted_as_name"


    // $ANTLR start "ruledotted_as_name"
    // InternalSpellGrammar.g:2199:1: ruledotted_as_name returns [EObject current=null] : ( ( (lv_name_0_0= ruledotted_name ) ) (otherlv_1= 'as' ( (lv_identifier_2_0= ruleNAME ) ) )? ) ;
    public final EObject ruledotted_as_name() throws RecognitionException {
        EObject current = null;
        int ruledotted_as_name_StartIndex = input.index();
        Token otherlv_1=null;
        AntlrDatatypeRuleToken lv_name_0_0 = null;

        AntlrDatatypeRuleToken lv_identifier_2_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 62) ) { return current; }
            // InternalSpellGrammar.g:2202:28: ( ( ( (lv_name_0_0= ruledotted_name ) ) (otherlv_1= 'as' ( (lv_identifier_2_0= ruleNAME ) ) )? ) )
            // InternalSpellGrammar.g:2203:1: ( ( (lv_name_0_0= ruledotted_name ) ) (otherlv_1= 'as' ( (lv_identifier_2_0= ruleNAME ) ) )? )
            {
            // InternalSpellGrammar.g:2203:1: ( ( (lv_name_0_0= ruledotted_name ) ) (otherlv_1= 'as' ( (lv_identifier_2_0= ruleNAME ) ) )? )
            // InternalSpellGrammar.g:2203:2: ( (lv_name_0_0= ruledotted_name ) ) (otherlv_1= 'as' ( (lv_identifier_2_0= ruleNAME ) ) )?
            {
            // InternalSpellGrammar.g:2203:2: ( (lv_name_0_0= ruledotted_name ) )
            // InternalSpellGrammar.g:2204:1: (lv_name_0_0= ruledotted_name )
            {
            // InternalSpellGrammar.g:2204:1: (lv_name_0_0= ruledotted_name )
            // InternalSpellGrammar.g:2205:3: lv_name_0_0= ruledotted_name
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getDotted_as_nameAccess().getNameDotted_nameParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_34);
            lv_name_0_0=ruledotted_name();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getDotted_as_nameRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_0_0, 
                      		"lu.ses.engineering.spell.controlflow.SpellGrammar.dotted_name");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSpellGrammar.g:2221:2: (otherlv_1= 'as' ( (lv_identifier_2_0= ruleNAME ) ) )?
            int alt40=2;
            int LA40_0 = input.LA(1);

            if ( (LA40_0==49) ) {
                alt40=1;
            }
            switch (alt40) {
                case 1 :
                    // InternalSpellGrammar.g:2221:4: otherlv_1= 'as' ( (lv_identifier_2_0= ruleNAME ) )
                    {
                    otherlv_1=(Token)match(input,49,FollowSets000.FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getDotted_as_nameAccess().getAsKeyword_1_0());
                          
                    }
                    // InternalSpellGrammar.g:2225:1: ( (lv_identifier_2_0= ruleNAME ) )
                    // InternalSpellGrammar.g:2226:1: (lv_identifier_2_0= ruleNAME )
                    {
                    // InternalSpellGrammar.g:2226:1: (lv_identifier_2_0= ruleNAME )
                    // InternalSpellGrammar.g:2227:3: lv_identifier_2_0= ruleNAME
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getDotted_as_nameAccess().getIdentifierNAMEParserRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_identifier_2_0=ruleNAME();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getDotted_as_nameRule());
                      	        }
                             		set(
                             			current, 
                             			"identifier",
                              		lv_identifier_2_0, 
                              		"lu.ses.engineering.spell.controlflow.SpellGrammar.NAME");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 62, ruledotted_as_name_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruledotted_as_name"


    // $ANTLR start "entryRuleimport_as_names"
    // InternalSpellGrammar.g:2251:1: entryRuleimport_as_names returns [EObject current=null] : iv_ruleimport_as_names= ruleimport_as_names EOF ;
    public final EObject entryRuleimport_as_names() throws RecognitionException {
        EObject current = null;
        int entryRuleimport_as_names_StartIndex = input.index();
        EObject iv_ruleimport_as_names = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 63) ) { return current; }
            // InternalSpellGrammar.g:2252:2: (iv_ruleimport_as_names= ruleimport_as_names EOF )
            // InternalSpellGrammar.g:2253:2: iv_ruleimport_as_names= ruleimport_as_names EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getImport_as_namesRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleimport_as_names=ruleimport_as_names();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleimport_as_names; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 63, entryRuleimport_as_names_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleimport_as_names"


    // $ANTLR start "ruleimport_as_names"
    // InternalSpellGrammar.g:2260:1: ruleimport_as_names returns [EObject current=null] : ( ( (lv_imports_0_0= ruleimport_as_name ) ) (otherlv_1= ',' ( (lv_imports_2_0= ruleimport_as_name ) ) )* ( (lv_optionalComma_3_0= ',' ) )? ) ;
    public final EObject ruleimport_as_names() throws RecognitionException {
        EObject current = null;
        int ruleimport_as_names_StartIndex = input.index();
        Token otherlv_1=null;
        Token lv_optionalComma_3_0=null;
        EObject lv_imports_0_0 = null;

        EObject lv_imports_2_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 64) ) { return current; }
            // InternalSpellGrammar.g:2263:28: ( ( ( (lv_imports_0_0= ruleimport_as_name ) ) (otherlv_1= ',' ( (lv_imports_2_0= ruleimport_as_name ) ) )* ( (lv_optionalComma_3_0= ',' ) )? ) )
            // InternalSpellGrammar.g:2264:1: ( ( (lv_imports_0_0= ruleimport_as_name ) ) (otherlv_1= ',' ( (lv_imports_2_0= ruleimport_as_name ) ) )* ( (lv_optionalComma_3_0= ',' ) )? )
            {
            // InternalSpellGrammar.g:2264:1: ( ( (lv_imports_0_0= ruleimport_as_name ) ) (otherlv_1= ',' ( (lv_imports_2_0= ruleimport_as_name ) ) )* ( (lv_optionalComma_3_0= ',' ) )? )
            // InternalSpellGrammar.g:2264:2: ( (lv_imports_0_0= ruleimport_as_name ) ) (otherlv_1= ',' ( (lv_imports_2_0= ruleimport_as_name ) ) )* ( (lv_optionalComma_3_0= ',' ) )?
            {
            // InternalSpellGrammar.g:2264:2: ( (lv_imports_0_0= ruleimport_as_name ) )
            // InternalSpellGrammar.g:2265:1: (lv_imports_0_0= ruleimport_as_name )
            {
            // InternalSpellGrammar.g:2265:1: (lv_imports_0_0= ruleimport_as_name )
            // InternalSpellGrammar.g:2266:3: lv_imports_0_0= ruleimport_as_name
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getImport_as_namesAccess().getImportsImport_as_nameParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_19);
            lv_imports_0_0=ruleimport_as_name();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getImport_as_namesRule());
              	        }
                     		add(
                     			current, 
                     			"imports",
                      		lv_imports_0_0, 
                      		"lu.ses.engineering.spell.controlflow.SpellGrammar.import_as_name");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSpellGrammar.g:2282:2: (otherlv_1= ',' ( (lv_imports_2_0= ruleimport_as_name ) ) )*
            loop41:
            do {
                int alt41=2;
                alt41 = dfa41.predict(input);
                switch (alt41) {
            	case 1 :
            	    // InternalSpellGrammar.g:2282:4: otherlv_1= ',' ( (lv_imports_2_0= ruleimport_as_name ) )
            	    {
            	    otherlv_1=(Token)match(input,23,FollowSets000.FOLLOW_33); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_1, grammarAccess.getImport_as_namesAccess().getCommaKeyword_1_0());
            	          
            	    }
            	    // InternalSpellGrammar.g:2286:1: ( (lv_imports_2_0= ruleimport_as_name ) )
            	    // InternalSpellGrammar.g:2287:1: (lv_imports_2_0= ruleimport_as_name )
            	    {
            	    // InternalSpellGrammar.g:2287:1: (lv_imports_2_0= ruleimport_as_name )
            	    // InternalSpellGrammar.g:2288:3: lv_imports_2_0= ruleimport_as_name
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getImport_as_namesAccess().getImportsImport_as_nameParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_19);
            	    lv_imports_2_0=ruleimport_as_name();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getImport_as_namesRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"imports",
            	              		lv_imports_2_0, 
            	              		"lu.ses.engineering.spell.controlflow.SpellGrammar.import_as_name");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop41;
                }
            } while (true);

            // InternalSpellGrammar.g:2304:4: ( (lv_optionalComma_3_0= ',' ) )?
            int alt42=2;
            int LA42_0 = input.LA(1);

            if ( (LA42_0==23) ) {
                int LA42_1 = input.LA(2);

                if ( (synpred63_InternalSpellGrammar()) ) {
                    alt42=1;
                }
            }
            switch (alt42) {
                case 1 :
                    // InternalSpellGrammar.g:2305:1: (lv_optionalComma_3_0= ',' )
                    {
                    // InternalSpellGrammar.g:2305:1: (lv_optionalComma_3_0= ',' )
                    // InternalSpellGrammar.g:2306:3: lv_optionalComma_3_0= ','
                    {
                    lv_optionalComma_3_0=(Token)match(input,23,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_optionalComma_3_0, grammarAccess.getImport_as_namesAccess().getOptionalCommaCommaKeyword_2_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getImport_as_namesRule());
                      	        }
                             		setWithLastConsumed(current, "optionalComma", true, ",");
                      	    
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 64, ruleimport_as_names_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleimport_as_names"


    // $ANTLR start "entryRuledotted_as_names"
    // InternalSpellGrammar.g:2327:1: entryRuledotted_as_names returns [EObject current=null] : iv_ruledotted_as_names= ruledotted_as_names EOF ;
    public final EObject entryRuledotted_as_names() throws RecognitionException {
        EObject current = null;
        int entryRuledotted_as_names_StartIndex = input.index();
        EObject iv_ruledotted_as_names = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 65) ) { return current; }
            // InternalSpellGrammar.g:2328:2: (iv_ruledotted_as_names= ruledotted_as_names EOF )
            // InternalSpellGrammar.g:2329:2: iv_ruledotted_as_names= ruledotted_as_names EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDotted_as_namesRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruledotted_as_names=ruledotted_as_names();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruledotted_as_names; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 65, entryRuledotted_as_names_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuledotted_as_names"


    // $ANTLR start "ruledotted_as_names"
    // InternalSpellGrammar.g:2336:1: ruledotted_as_names returns [EObject current=null] : ( ( (lv_dotted_names_0_0= ruledotted_as_name ) ) (otherlv_1= ',' ( (lv_dotted_names_2_0= ruledotted_as_name ) ) )* ) ;
    public final EObject ruledotted_as_names() throws RecognitionException {
        EObject current = null;
        int ruledotted_as_names_StartIndex = input.index();
        Token otherlv_1=null;
        EObject lv_dotted_names_0_0 = null;

        EObject lv_dotted_names_2_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 66) ) { return current; }
            // InternalSpellGrammar.g:2339:28: ( ( ( (lv_dotted_names_0_0= ruledotted_as_name ) ) (otherlv_1= ',' ( (lv_dotted_names_2_0= ruledotted_as_name ) ) )* ) )
            // InternalSpellGrammar.g:2340:1: ( ( (lv_dotted_names_0_0= ruledotted_as_name ) ) (otherlv_1= ',' ( (lv_dotted_names_2_0= ruledotted_as_name ) ) )* )
            {
            // InternalSpellGrammar.g:2340:1: ( ( (lv_dotted_names_0_0= ruledotted_as_name ) ) (otherlv_1= ',' ( (lv_dotted_names_2_0= ruledotted_as_name ) ) )* )
            // InternalSpellGrammar.g:2340:2: ( (lv_dotted_names_0_0= ruledotted_as_name ) ) (otherlv_1= ',' ( (lv_dotted_names_2_0= ruledotted_as_name ) ) )*
            {
            // InternalSpellGrammar.g:2340:2: ( (lv_dotted_names_0_0= ruledotted_as_name ) )
            // InternalSpellGrammar.g:2341:1: (lv_dotted_names_0_0= ruledotted_as_name )
            {
            // InternalSpellGrammar.g:2341:1: (lv_dotted_names_0_0= ruledotted_as_name )
            // InternalSpellGrammar.g:2342:3: lv_dotted_names_0_0= ruledotted_as_name
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getDotted_as_namesAccess().getDotted_namesDotted_as_nameParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_19);
            lv_dotted_names_0_0=ruledotted_as_name();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getDotted_as_namesRule());
              	        }
                     		add(
                     			current, 
                     			"dotted_names",
                      		lv_dotted_names_0_0, 
                      		"lu.ses.engineering.spell.controlflow.SpellGrammar.dotted_as_name");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSpellGrammar.g:2358:2: (otherlv_1= ',' ( (lv_dotted_names_2_0= ruledotted_as_name ) ) )*
            loop43:
            do {
                int alt43=2;
                alt43 = dfa43.predict(input);
                switch (alt43) {
            	case 1 :
            	    // InternalSpellGrammar.g:2358:4: otherlv_1= ',' ( (lv_dotted_names_2_0= ruledotted_as_name ) )
            	    {
            	    otherlv_1=(Token)match(input,23,FollowSets000.FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_1, grammarAccess.getDotted_as_namesAccess().getCommaKeyword_1_0());
            	          
            	    }
            	    // InternalSpellGrammar.g:2362:1: ( (lv_dotted_names_2_0= ruledotted_as_name ) )
            	    // InternalSpellGrammar.g:2363:1: (lv_dotted_names_2_0= ruledotted_as_name )
            	    {
            	    // InternalSpellGrammar.g:2363:1: (lv_dotted_names_2_0= ruledotted_as_name )
            	    // InternalSpellGrammar.g:2364:3: lv_dotted_names_2_0= ruledotted_as_name
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getDotted_as_namesAccess().getDotted_namesDotted_as_nameParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_19);
            	    lv_dotted_names_2_0=ruledotted_as_name();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getDotted_as_namesRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"dotted_names",
            	              		lv_dotted_names_2_0, 
            	              		"lu.ses.engineering.spell.controlflow.SpellGrammar.dotted_as_name");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop43;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 66, ruledotted_as_names_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruledotted_as_names"


    // $ANTLR start "entryRuledotted_name"
    // InternalSpellGrammar.g:2388:1: entryRuledotted_name returns [String current=null] : iv_ruledotted_name= ruledotted_name EOF ;
    public final String entryRuledotted_name() throws RecognitionException {
        String current = null;
        int entryRuledotted_name_StartIndex = input.index();
        AntlrDatatypeRuleToken iv_ruledotted_name = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 67) ) { return current; }
            // InternalSpellGrammar.g:2389:2: (iv_ruledotted_name= ruledotted_name EOF )
            // InternalSpellGrammar.g:2390:2: iv_ruledotted_name= ruledotted_name EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDotted_nameRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruledotted_name=ruledotted_name();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruledotted_name.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 67, entryRuledotted_name_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuledotted_name"


    // $ANTLR start "ruledotted_name"
    // InternalSpellGrammar.g:2397:1: ruledotted_name returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_NAME_0= ruleNAME (kw= '.' this_NAME_2= ruleNAME )* ) ;
    public final AntlrDatatypeRuleToken ruledotted_name() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();
        int ruledotted_name_StartIndex = input.index();
        Token kw=null;
        AntlrDatatypeRuleToken this_NAME_0 = null;

        AntlrDatatypeRuleToken this_NAME_2 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 68) ) { return current; }
            // InternalSpellGrammar.g:2400:28: ( (this_NAME_0= ruleNAME (kw= '.' this_NAME_2= ruleNAME )* ) )
            // InternalSpellGrammar.g:2401:1: (this_NAME_0= ruleNAME (kw= '.' this_NAME_2= ruleNAME )* )
            {
            // InternalSpellGrammar.g:2401:1: (this_NAME_0= ruleNAME (kw= '.' this_NAME_2= ruleNAME )* )
            // InternalSpellGrammar.g:2402:5: this_NAME_0= ruleNAME (kw= '.' this_NAME_2= ruleNAME )*
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getDotted_nameAccess().getNAMEParserRuleCall_0()); 
                  
            }
            pushFollow(FollowSets000.FOLLOW_35);
            this_NAME_0=ruleNAME();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_NAME_0);
                  
            }
            if ( state.backtracking==0 ) {
               
                      afterParserOrEnumRuleCall();
                  
            }
            // InternalSpellGrammar.g:2412:1: (kw= '.' this_NAME_2= ruleNAME )*
            loop44:
            do {
                int alt44=2;
                int LA44_0 = input.LA(1);

                if ( (LA44_0==48) ) {
                    int LA44_2 = input.LA(2);

                    if ( (LA44_2==RULE_NAME_TERMINAL||(LA44_2>=84 && LA44_2<=94)) ) {
                        alt44=1;
                    }


                }


                switch (alt44) {
            	case 1 :
            	    // InternalSpellGrammar.g:2413:2: kw= '.' this_NAME_2= ruleNAME
            	    {
            	    kw=(Token)match(input,48,FollowSets000.FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	              current.merge(kw);
            	              newLeafNode(kw, grammarAccess.getDotted_nameAccess().getFullStopKeyword_1_0()); 
            	          
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	              newCompositeNode(grammarAccess.getDotted_nameAccess().getNAMEParserRuleCall_1_1()); 
            	          
            	    }
            	    pushFollow(FollowSets000.FOLLOW_35);
            	    this_NAME_2=ruleNAME();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      		current.merge(this_NAME_2);
            	          
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	              afterParserOrEnumRuleCall();
            	          
            	    }

            	    }
            	    break;

            	default :
            	    break loop44;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 68, ruledotted_name_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruledotted_name"


    // $ANTLR start "entryRuleglobal_stmt"
    // InternalSpellGrammar.g:2437:1: entryRuleglobal_stmt returns [EObject current=null] : iv_ruleglobal_stmt= ruleglobal_stmt EOF ;
    public final EObject entryRuleglobal_stmt() throws RecognitionException {
        EObject current = null;
        int entryRuleglobal_stmt_StartIndex = input.index();
        EObject iv_ruleglobal_stmt = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 69) ) { return current; }
            // InternalSpellGrammar.g:2438:2: (iv_ruleglobal_stmt= ruleglobal_stmt EOF )
            // InternalSpellGrammar.g:2439:2: iv_ruleglobal_stmt= ruleglobal_stmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getGlobal_stmtRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleglobal_stmt=ruleglobal_stmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleglobal_stmt; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 69, entryRuleglobal_stmt_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleglobal_stmt"


    // $ANTLR start "ruleglobal_stmt"
    // InternalSpellGrammar.g:2446:1: ruleglobal_stmt returns [EObject current=null] : (otherlv_0= 'global' ( (lv_globals_1_0= ruleNAME ) ) (otherlv_2= ',' ( (lv_globals_3_0= ruleNAME ) ) )* ) ;
    public final EObject ruleglobal_stmt() throws RecognitionException {
        EObject current = null;
        int ruleglobal_stmt_StartIndex = input.index();
        Token otherlv_0=null;
        Token otherlv_2=null;
        AntlrDatatypeRuleToken lv_globals_1_0 = null;

        AntlrDatatypeRuleToken lv_globals_3_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 70) ) { return current; }
            // InternalSpellGrammar.g:2449:28: ( (otherlv_0= 'global' ( (lv_globals_1_0= ruleNAME ) ) (otherlv_2= ',' ( (lv_globals_3_0= ruleNAME ) ) )* ) )
            // InternalSpellGrammar.g:2450:1: (otherlv_0= 'global' ( (lv_globals_1_0= ruleNAME ) ) (otherlv_2= ',' ( (lv_globals_3_0= ruleNAME ) ) )* )
            {
            // InternalSpellGrammar.g:2450:1: (otherlv_0= 'global' ( (lv_globals_1_0= ruleNAME ) ) (otherlv_2= ',' ( (lv_globals_3_0= ruleNAME ) ) )* )
            // InternalSpellGrammar.g:2450:3: otherlv_0= 'global' ( (lv_globals_1_0= ruleNAME ) ) (otherlv_2= ',' ( (lv_globals_3_0= ruleNAME ) ) )*
            {
            otherlv_0=(Token)match(input,50,FollowSets000.FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getGlobal_stmtAccess().getGlobalKeyword_0());
                  
            }
            // InternalSpellGrammar.g:2454:1: ( (lv_globals_1_0= ruleNAME ) )
            // InternalSpellGrammar.g:2455:1: (lv_globals_1_0= ruleNAME )
            {
            // InternalSpellGrammar.g:2455:1: (lv_globals_1_0= ruleNAME )
            // InternalSpellGrammar.g:2456:3: lv_globals_1_0= ruleNAME
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getGlobal_stmtAccess().getGlobalsNAMEParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_19);
            lv_globals_1_0=ruleNAME();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getGlobal_stmtRule());
              	        }
                     		add(
                     			current, 
                     			"globals",
                      		lv_globals_1_0, 
                      		"lu.ses.engineering.spell.controlflow.SpellGrammar.NAME");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSpellGrammar.g:2472:2: (otherlv_2= ',' ( (lv_globals_3_0= ruleNAME ) ) )*
            loop45:
            do {
                int alt45=2;
                alt45 = dfa45.predict(input);
                switch (alt45) {
            	case 1 :
            	    // InternalSpellGrammar.g:2472:4: otherlv_2= ',' ( (lv_globals_3_0= ruleNAME ) )
            	    {
            	    otherlv_2=(Token)match(input,23,FollowSets000.FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_2, grammarAccess.getGlobal_stmtAccess().getCommaKeyword_2_0());
            	          
            	    }
            	    // InternalSpellGrammar.g:2476:1: ( (lv_globals_3_0= ruleNAME ) )
            	    // InternalSpellGrammar.g:2477:1: (lv_globals_3_0= ruleNAME )
            	    {
            	    // InternalSpellGrammar.g:2477:1: (lv_globals_3_0= ruleNAME )
            	    // InternalSpellGrammar.g:2478:3: lv_globals_3_0= ruleNAME
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getGlobal_stmtAccess().getGlobalsNAMEParserRuleCall_2_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_19);
            	    lv_globals_3_0=ruleNAME();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getGlobal_stmtRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"globals",
            	              		lv_globals_3_0, 
            	              		"lu.ses.engineering.spell.controlflow.SpellGrammar.NAME");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop45;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 70, ruleglobal_stmt_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleglobal_stmt"


    // $ANTLR start "entryRuleexec_stmt"
    // InternalSpellGrammar.g:2502:1: entryRuleexec_stmt returns [EObject current=null] : iv_ruleexec_stmt= ruleexec_stmt EOF ;
    public final EObject entryRuleexec_stmt() throws RecognitionException {
        EObject current = null;
        int entryRuleexec_stmt_StartIndex = input.index();
        EObject iv_ruleexec_stmt = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 71) ) { return current; }
            // InternalSpellGrammar.g:2503:2: (iv_ruleexec_stmt= ruleexec_stmt EOF )
            // InternalSpellGrammar.g:2504:2: iv_ruleexec_stmt= ruleexec_stmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExec_stmtRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleexec_stmt=ruleexec_stmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleexec_stmt; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 71, entryRuleexec_stmt_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleexec_stmt"


    // $ANTLR start "ruleexec_stmt"
    // InternalSpellGrammar.g:2511:1: ruleexec_stmt returns [EObject current=null] : (otherlv_0= 'exec' ( (lv_expr_1_0= ruleexpr ) ) (otherlv_2= 'in' ( (lv_tests_3_0= ruletest ) ) (otherlv_4= ',' ( (lv_tests_5_0= ruletest ) ) )? )? ) ;
    public final EObject ruleexec_stmt() throws RecognitionException {
        EObject current = null;
        int ruleexec_stmt_StartIndex = input.index();
        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_expr_1_0 = null;

        EObject lv_tests_3_0 = null;

        EObject lv_tests_5_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 72) ) { return current; }
            // InternalSpellGrammar.g:2514:28: ( (otherlv_0= 'exec' ( (lv_expr_1_0= ruleexpr ) ) (otherlv_2= 'in' ( (lv_tests_3_0= ruletest ) ) (otherlv_4= ',' ( (lv_tests_5_0= ruletest ) ) )? )? ) )
            // InternalSpellGrammar.g:2515:1: (otherlv_0= 'exec' ( (lv_expr_1_0= ruleexpr ) ) (otherlv_2= 'in' ( (lv_tests_3_0= ruletest ) ) (otherlv_4= ',' ( (lv_tests_5_0= ruletest ) ) )? )? )
            {
            // InternalSpellGrammar.g:2515:1: (otherlv_0= 'exec' ( (lv_expr_1_0= ruleexpr ) ) (otherlv_2= 'in' ( (lv_tests_3_0= ruletest ) ) (otherlv_4= ',' ( (lv_tests_5_0= ruletest ) ) )? )? )
            // InternalSpellGrammar.g:2515:3: otherlv_0= 'exec' ( (lv_expr_1_0= ruleexpr ) ) (otherlv_2= 'in' ( (lv_tests_3_0= ruletest ) ) (otherlv_4= ',' ( (lv_tests_5_0= ruletest ) ) )? )?
            {
            otherlv_0=(Token)match(input,51,FollowSets000.FOLLOW_28); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getExec_stmtAccess().getExecKeyword_0());
                  
            }
            // InternalSpellGrammar.g:2519:1: ( (lv_expr_1_0= ruleexpr ) )
            // InternalSpellGrammar.g:2520:1: (lv_expr_1_0= ruleexpr )
            {
            // InternalSpellGrammar.g:2520:1: (lv_expr_1_0= ruleexpr )
            // InternalSpellGrammar.g:2521:3: lv_expr_1_0= ruleexpr
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getExec_stmtAccess().getExprExprParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_36);
            lv_expr_1_0=ruleexpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getExec_stmtRule());
              	        }
                     		set(
                     			current, 
                     			"expr",
                      		lv_expr_1_0, 
                      		"lu.ses.engineering.spell.controlflow.SpellGrammar.expr");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSpellGrammar.g:2537:2: (otherlv_2= 'in' ( (lv_tests_3_0= ruletest ) ) (otherlv_4= ',' ( (lv_tests_5_0= ruletest ) ) )? )?
            int alt47=2;
            int LA47_0 = input.LA(1);

            if ( (LA47_0==52) ) {
                alt47=1;
            }
            switch (alt47) {
                case 1 :
                    // InternalSpellGrammar.g:2537:4: otherlv_2= 'in' ( (lv_tests_3_0= ruletest ) ) (otherlv_4= ',' ( (lv_tests_5_0= ruletest ) ) )?
                    {
                    otherlv_2=(Token)match(input,52,FollowSets000.FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getExec_stmtAccess().getInKeyword_2_0());
                          
                    }
                    // InternalSpellGrammar.g:2541:1: ( (lv_tests_3_0= ruletest ) )
                    // InternalSpellGrammar.g:2542:1: (lv_tests_3_0= ruletest )
                    {
                    // InternalSpellGrammar.g:2542:1: (lv_tests_3_0= ruletest )
                    // InternalSpellGrammar.g:2543:3: lv_tests_3_0= ruletest
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getExec_stmtAccess().getTestsTestParserRuleCall_2_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_19);
                    lv_tests_3_0=ruletest();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getExec_stmtRule());
                      	        }
                             		add(
                             			current, 
                             			"tests",
                              		lv_tests_3_0, 
                              		"lu.ses.engineering.spell.controlflow.SpellGrammar.test");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalSpellGrammar.g:2559:2: (otherlv_4= ',' ( (lv_tests_5_0= ruletest ) ) )?
                    int alt46=2;
                    alt46 = dfa46.predict(input);
                    switch (alt46) {
                        case 1 :
                            // InternalSpellGrammar.g:2559:4: otherlv_4= ',' ( (lv_tests_5_0= ruletest ) )
                            {
                            otherlv_4=(Token)match(input,23,FollowSets000.FOLLOW_16); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_4, grammarAccess.getExec_stmtAccess().getCommaKeyword_2_2_0());
                                  
                            }
                            // InternalSpellGrammar.g:2563:1: ( (lv_tests_5_0= ruletest ) )
                            // InternalSpellGrammar.g:2564:1: (lv_tests_5_0= ruletest )
                            {
                            // InternalSpellGrammar.g:2564:1: (lv_tests_5_0= ruletest )
                            // InternalSpellGrammar.g:2565:3: lv_tests_5_0= ruletest
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getExec_stmtAccess().getTestsTestParserRuleCall_2_2_1_0()); 
                              	    
                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            lv_tests_5_0=ruletest();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getExec_stmtRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"tests",
                                      		lv_tests_5_0, 
                                      		"lu.ses.engineering.spell.controlflow.SpellGrammar.test");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 72, ruleexec_stmt_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleexec_stmt"


    // $ANTLR start "entryRuleassert_stmt"
    // InternalSpellGrammar.g:2589:1: entryRuleassert_stmt returns [EObject current=null] : iv_ruleassert_stmt= ruleassert_stmt EOF ;
    public final EObject entryRuleassert_stmt() throws RecognitionException {
        EObject current = null;
        int entryRuleassert_stmt_StartIndex = input.index();
        EObject iv_ruleassert_stmt = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 73) ) { return current; }
            // InternalSpellGrammar.g:2590:2: (iv_ruleassert_stmt= ruleassert_stmt EOF )
            // InternalSpellGrammar.g:2591:2: iv_ruleassert_stmt= ruleassert_stmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAssert_stmtRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleassert_stmt=ruleassert_stmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleassert_stmt; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 73, entryRuleassert_stmt_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleassert_stmt"


    // $ANTLR start "ruleassert_stmt"
    // InternalSpellGrammar.g:2598:1: ruleassert_stmt returns [EObject current=null] : (otherlv_0= 'assert' ( (lv_assers_1_0= ruletest ) ) (otherlv_2= ',' ( (lv_assers_3_0= ruletest ) ) )? ) ;
    public final EObject ruleassert_stmt() throws RecognitionException {
        EObject current = null;
        int ruleassert_stmt_StartIndex = input.index();
        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject lv_assers_1_0 = null;

        EObject lv_assers_3_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 74) ) { return current; }
            // InternalSpellGrammar.g:2601:28: ( (otherlv_0= 'assert' ( (lv_assers_1_0= ruletest ) ) (otherlv_2= ',' ( (lv_assers_3_0= ruletest ) ) )? ) )
            // InternalSpellGrammar.g:2602:1: (otherlv_0= 'assert' ( (lv_assers_1_0= ruletest ) ) (otherlv_2= ',' ( (lv_assers_3_0= ruletest ) ) )? )
            {
            // InternalSpellGrammar.g:2602:1: (otherlv_0= 'assert' ( (lv_assers_1_0= ruletest ) ) (otherlv_2= ',' ( (lv_assers_3_0= ruletest ) ) )? )
            // InternalSpellGrammar.g:2602:3: otherlv_0= 'assert' ( (lv_assers_1_0= ruletest ) ) (otherlv_2= ',' ( (lv_assers_3_0= ruletest ) ) )?
            {
            otherlv_0=(Token)match(input,53,FollowSets000.FOLLOW_16); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getAssert_stmtAccess().getAssertKeyword_0());
                  
            }
            // InternalSpellGrammar.g:2606:1: ( (lv_assers_1_0= ruletest ) )
            // InternalSpellGrammar.g:2607:1: (lv_assers_1_0= ruletest )
            {
            // InternalSpellGrammar.g:2607:1: (lv_assers_1_0= ruletest )
            // InternalSpellGrammar.g:2608:3: lv_assers_1_0= ruletest
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getAssert_stmtAccess().getAssersTestParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_19);
            lv_assers_1_0=ruletest();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getAssert_stmtRule());
              	        }
                     		add(
                     			current, 
                     			"assers",
                      		lv_assers_1_0, 
                      		"lu.ses.engineering.spell.controlflow.SpellGrammar.test");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSpellGrammar.g:2624:2: (otherlv_2= ',' ( (lv_assers_3_0= ruletest ) ) )?
            int alt48=2;
            alt48 = dfa48.predict(input);
            switch (alt48) {
                case 1 :
                    // InternalSpellGrammar.g:2624:4: otherlv_2= ',' ( (lv_assers_3_0= ruletest ) )
                    {
                    otherlv_2=(Token)match(input,23,FollowSets000.FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getAssert_stmtAccess().getCommaKeyword_2_0());
                          
                    }
                    // InternalSpellGrammar.g:2628:1: ( (lv_assers_3_0= ruletest ) )
                    // InternalSpellGrammar.g:2629:1: (lv_assers_3_0= ruletest )
                    {
                    // InternalSpellGrammar.g:2629:1: (lv_assers_3_0= ruletest )
                    // InternalSpellGrammar.g:2630:3: lv_assers_3_0= ruletest
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getAssert_stmtAccess().getAssersTestParserRuleCall_2_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_assers_3_0=ruletest();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getAssert_stmtRule());
                      	        }
                             		add(
                             			current, 
                             			"assers",
                              		lv_assers_3_0, 
                              		"lu.ses.engineering.spell.controlflow.SpellGrammar.test");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 74, ruleassert_stmt_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleassert_stmt"


    // $ANTLR start "entryRulecompound_stmt"
    // InternalSpellGrammar.g:2654:1: entryRulecompound_stmt returns [EObject current=null] : iv_rulecompound_stmt= rulecompound_stmt EOF ;
    public final EObject entryRulecompound_stmt() throws RecognitionException {
        EObject current = null;
        int entryRulecompound_stmt_StartIndex = input.index();
        EObject iv_rulecompound_stmt = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 75) ) { return current; }
            // InternalSpellGrammar.g:2655:2: (iv_rulecompound_stmt= rulecompound_stmt EOF )
            // InternalSpellGrammar.g:2656:2: iv_rulecompound_stmt= rulecompound_stmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCompound_stmtRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulecompound_stmt=rulecompound_stmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulecompound_stmt; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 75, entryRulecompound_stmt_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRulecompound_stmt"


    // $ANTLR start "rulecompound_stmt"
    // InternalSpellGrammar.g:2663:1: rulecompound_stmt returns [EObject current=null] : (this_if_stmt_0= ruleif_stmt | this_while_stmt_1= rulewhile_stmt | this_for_stmt_2= rulefor_stmt | this_try_stmt_3= ruletry_stmt | this_with_stmt_4= rulewith_stmt | this_funcdef_5= rulefuncdef | this_classdef_6= ruleclassdef | this_decorated_7= ruledecorated ) ;
    public final EObject rulecompound_stmt() throws RecognitionException {
        EObject current = null;
        int rulecompound_stmt_StartIndex = input.index();
        EObject this_if_stmt_0 = null;

        EObject this_while_stmt_1 = null;

        EObject this_for_stmt_2 = null;

        EObject this_try_stmt_3 = null;

        EObject this_with_stmt_4 = null;

        EObject this_funcdef_5 = null;

        EObject this_classdef_6 = null;

        EObject this_decorated_7 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 76) ) { return current; }
            // InternalSpellGrammar.g:2666:28: ( (this_if_stmt_0= ruleif_stmt | this_while_stmt_1= rulewhile_stmt | this_for_stmt_2= rulefor_stmt | this_try_stmt_3= ruletry_stmt | this_with_stmt_4= rulewith_stmt | this_funcdef_5= rulefuncdef | this_classdef_6= ruleclassdef | this_decorated_7= ruledecorated ) )
            // InternalSpellGrammar.g:2667:1: (this_if_stmt_0= ruleif_stmt | this_while_stmt_1= rulewhile_stmt | this_for_stmt_2= rulefor_stmt | this_try_stmt_3= ruletry_stmt | this_with_stmt_4= rulewith_stmt | this_funcdef_5= rulefuncdef | this_classdef_6= ruleclassdef | this_decorated_7= ruledecorated )
            {
            // InternalSpellGrammar.g:2667:1: (this_if_stmt_0= ruleif_stmt | this_while_stmt_1= rulewhile_stmt | this_for_stmt_2= rulefor_stmt | this_try_stmt_3= ruletry_stmt | this_with_stmt_4= rulewith_stmt | this_funcdef_5= rulefuncdef | this_classdef_6= ruleclassdef | this_decorated_7= ruledecorated )
            int alt49=8;
            switch ( input.LA(1) ) {
            case 55:
                {
                alt49=1;
                }
                break;
            case 57:
                {
                alt49=2;
                }
                break;
            case 58:
                {
                alt49=3;
                }
                break;
            case 59:
                {
                alt49=4;
                }
                break;
            case 61:
                {
                alt49=5;
                }
                break;
            case 21:
                {
                alt49=6;
                }
                break;
            case 102:
                {
                alt49=7;
                }
                break;
            case 18:
                {
                alt49=8;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 49, 0, input);

                throw nvae;
            }

            switch (alt49) {
                case 1 :
                    // InternalSpellGrammar.g:2668:2: this_if_stmt_0= ruleif_stmt
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getCompound_stmtAccess().getIf_stmtParserRuleCall_0()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_if_stmt_0=ruleif_stmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_if_stmt_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalSpellGrammar.g:2681:2: this_while_stmt_1= rulewhile_stmt
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getCompound_stmtAccess().getWhile_stmtParserRuleCall_1()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_while_stmt_1=rulewhile_stmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_while_stmt_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    // InternalSpellGrammar.g:2694:2: this_for_stmt_2= rulefor_stmt
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getCompound_stmtAccess().getFor_stmtParserRuleCall_2()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_for_stmt_2=rulefor_stmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_for_stmt_2; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 4 :
                    // InternalSpellGrammar.g:2707:2: this_try_stmt_3= ruletry_stmt
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getCompound_stmtAccess().getTry_stmtParserRuleCall_3()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_try_stmt_3=ruletry_stmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_try_stmt_3; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 5 :
                    // InternalSpellGrammar.g:2720:2: this_with_stmt_4= rulewith_stmt
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getCompound_stmtAccess().getWith_stmtParserRuleCall_4()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_with_stmt_4=rulewith_stmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_with_stmt_4; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 6 :
                    // InternalSpellGrammar.g:2733:2: this_funcdef_5= rulefuncdef
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getCompound_stmtAccess().getFuncdefParserRuleCall_5()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_funcdef_5=rulefuncdef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_funcdef_5; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 7 :
                    // InternalSpellGrammar.g:2746:2: this_classdef_6= ruleclassdef
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getCompound_stmtAccess().getClassdefParserRuleCall_6()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_classdef_6=ruleclassdef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_classdef_6; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 8 :
                    // InternalSpellGrammar.g:2759:2: this_decorated_7= ruledecorated
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getCompound_stmtAccess().getDecoratedParserRuleCall_7()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_decorated_7=ruledecorated();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_decorated_7; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 76, rulecompound_stmt_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "rulecompound_stmt"


    // $ANTLR start "entryRuleelse_if_stmt"
    // InternalSpellGrammar.g:2778:1: entryRuleelse_if_stmt returns [EObject current=null] : iv_ruleelse_if_stmt= ruleelse_if_stmt EOF ;
    public final EObject entryRuleelse_if_stmt() throws RecognitionException {
        EObject current = null;
        int entryRuleelse_if_stmt_StartIndex = input.index();
        EObject iv_ruleelse_if_stmt = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 77) ) { return current; }
            // InternalSpellGrammar.g:2779:2: (iv_ruleelse_if_stmt= ruleelse_if_stmt EOF )
            // InternalSpellGrammar.g:2780:2: iv_ruleelse_if_stmt= ruleelse_if_stmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getElse_if_stmtRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleelse_if_stmt=ruleelse_if_stmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleelse_if_stmt; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 77, entryRuleelse_if_stmt_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleelse_if_stmt"


    // $ANTLR start "ruleelse_if_stmt"
    // InternalSpellGrammar.g:2787:1: ruleelse_if_stmt returns [EObject current=null] : (otherlv_0= 'elif' ( (lv_test_1_0= ruletest ) ) otherlv_2= ':' ( (lv_suite_3_0= rulesuite ) ) ) ;
    public final EObject ruleelse_if_stmt() throws RecognitionException {
        EObject current = null;
        int ruleelse_if_stmt_StartIndex = input.index();
        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject lv_test_1_0 = null;

        EObject lv_suite_3_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 78) ) { return current; }
            // InternalSpellGrammar.g:2790:28: ( (otherlv_0= 'elif' ( (lv_test_1_0= ruletest ) ) otherlv_2= ':' ( (lv_suite_3_0= rulesuite ) ) ) )
            // InternalSpellGrammar.g:2791:1: (otherlv_0= 'elif' ( (lv_test_1_0= ruletest ) ) otherlv_2= ':' ( (lv_suite_3_0= rulesuite ) ) )
            {
            // InternalSpellGrammar.g:2791:1: (otherlv_0= 'elif' ( (lv_test_1_0= ruletest ) ) otherlv_2= ':' ( (lv_suite_3_0= rulesuite ) ) )
            // InternalSpellGrammar.g:2791:3: otherlv_0= 'elif' ( (lv_test_1_0= ruletest ) ) otherlv_2= ':' ( (lv_suite_3_0= rulesuite ) )
            {
            otherlv_0=(Token)match(input,54,FollowSets000.FOLLOW_16); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getElse_if_stmtAccess().getElifKeyword_0());
                  
            }
            // InternalSpellGrammar.g:2795:1: ( (lv_test_1_0= ruletest ) )
            // InternalSpellGrammar.g:2796:1: (lv_test_1_0= ruletest )
            {
            // InternalSpellGrammar.g:2796:1: (lv_test_1_0= ruletest )
            // InternalSpellGrammar.g:2797:3: lv_test_1_0= ruletest
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getElse_if_stmtAccess().getTestTestParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_10);
            lv_test_1_0=ruletest();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getElse_if_stmtRule());
              	        }
                     		set(
                     			current, 
                     			"test",
                      		lv_test_1_0, 
                      		"lu.ses.engineering.spell.controlflow.SpellGrammar.test");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_2=(Token)match(input,22,FollowSets000.FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getElse_if_stmtAccess().getColonKeyword_2());
                  
            }
            // InternalSpellGrammar.g:2817:1: ( (lv_suite_3_0= rulesuite ) )
            // InternalSpellGrammar.g:2818:1: (lv_suite_3_0= rulesuite )
            {
            // InternalSpellGrammar.g:2818:1: (lv_suite_3_0= rulesuite )
            // InternalSpellGrammar.g:2819:3: lv_suite_3_0= rulesuite
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getElse_if_stmtAccess().getSuiteSuiteParserRuleCall_3_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_suite_3_0=rulesuite();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getElse_if_stmtRule());
              	        }
                     		set(
                     			current, 
                     			"suite",
                      		lv_suite_3_0, 
                      		"lu.ses.engineering.spell.controlflow.SpellGrammar.suite");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 78, ruleelse_if_stmt_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleelse_if_stmt"


    // $ANTLR start "entryRuleif_stmt"
    // InternalSpellGrammar.g:2843:1: entryRuleif_stmt returns [EObject current=null] : iv_ruleif_stmt= ruleif_stmt EOF ;
    public final EObject entryRuleif_stmt() throws RecognitionException {
        EObject current = null;
        int entryRuleif_stmt_StartIndex = input.index();
        EObject iv_ruleif_stmt = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 79) ) { return current; }
            // InternalSpellGrammar.g:2844:2: (iv_ruleif_stmt= ruleif_stmt EOF )
            // InternalSpellGrammar.g:2845:2: iv_ruleif_stmt= ruleif_stmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIf_stmtRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleif_stmt=ruleif_stmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleif_stmt; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 79, entryRuleif_stmt_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleif_stmt"


    // $ANTLR start "ruleif_stmt"
    // InternalSpellGrammar.g:2852:1: ruleif_stmt returns [EObject current=null] : (otherlv_0= 'if' ( (lv_test_1_0= ruletest ) ) otherlv_2= ':' ( (lv_suite_3_0= rulesuite ) ) ( (lv_else_if_stmts_4_0= ruleelse_if_stmt ) )* (otherlv_5= 'else' otherlv_6= ':' ( (lv_else_7_0= rulesuite ) ) )? this_ENDIF_8= RULE_ENDIF ) ;
    public final EObject ruleif_stmt() throws RecognitionException {
        EObject current = null;
        int ruleif_stmt_StartIndex = input.index();
        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token this_ENDIF_8=null;
        EObject lv_test_1_0 = null;

        EObject lv_suite_3_0 = null;

        EObject lv_else_if_stmts_4_0 = null;

        EObject lv_else_7_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 80) ) { return current; }
            // InternalSpellGrammar.g:2855:28: ( (otherlv_0= 'if' ( (lv_test_1_0= ruletest ) ) otherlv_2= ':' ( (lv_suite_3_0= rulesuite ) ) ( (lv_else_if_stmts_4_0= ruleelse_if_stmt ) )* (otherlv_5= 'else' otherlv_6= ':' ( (lv_else_7_0= rulesuite ) ) )? this_ENDIF_8= RULE_ENDIF ) )
            // InternalSpellGrammar.g:2856:1: (otherlv_0= 'if' ( (lv_test_1_0= ruletest ) ) otherlv_2= ':' ( (lv_suite_3_0= rulesuite ) ) ( (lv_else_if_stmts_4_0= ruleelse_if_stmt ) )* (otherlv_5= 'else' otherlv_6= ':' ( (lv_else_7_0= rulesuite ) ) )? this_ENDIF_8= RULE_ENDIF )
            {
            // InternalSpellGrammar.g:2856:1: (otherlv_0= 'if' ( (lv_test_1_0= ruletest ) ) otherlv_2= ':' ( (lv_suite_3_0= rulesuite ) ) ( (lv_else_if_stmts_4_0= ruleelse_if_stmt ) )* (otherlv_5= 'else' otherlv_6= ':' ( (lv_else_7_0= rulesuite ) ) )? this_ENDIF_8= RULE_ENDIF )
            // InternalSpellGrammar.g:2856:3: otherlv_0= 'if' ( (lv_test_1_0= ruletest ) ) otherlv_2= ':' ( (lv_suite_3_0= rulesuite ) ) ( (lv_else_if_stmts_4_0= ruleelse_if_stmt ) )* (otherlv_5= 'else' otherlv_6= ':' ( (lv_else_7_0= rulesuite ) ) )? this_ENDIF_8= RULE_ENDIF
            {
            otherlv_0=(Token)match(input,55,FollowSets000.FOLLOW_16); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getIf_stmtAccess().getIfKeyword_0());
                  
            }
            // InternalSpellGrammar.g:2860:1: ( (lv_test_1_0= ruletest ) )
            // InternalSpellGrammar.g:2861:1: (lv_test_1_0= ruletest )
            {
            // InternalSpellGrammar.g:2861:1: (lv_test_1_0= ruletest )
            // InternalSpellGrammar.g:2862:3: lv_test_1_0= ruletest
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getIf_stmtAccess().getTestTestParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_10);
            lv_test_1_0=ruletest();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getIf_stmtRule());
              	        }
                     		set(
                     			current, 
                     			"test",
                      		lv_test_1_0, 
                      		"lu.ses.engineering.spell.controlflow.SpellGrammar.test");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_2=(Token)match(input,22,FollowSets000.FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getIf_stmtAccess().getColonKeyword_2());
                  
            }
            // InternalSpellGrammar.g:2882:1: ( (lv_suite_3_0= rulesuite ) )
            // InternalSpellGrammar.g:2883:1: (lv_suite_3_0= rulesuite )
            {
            // InternalSpellGrammar.g:2883:1: (lv_suite_3_0= rulesuite )
            // InternalSpellGrammar.g:2884:3: lv_suite_3_0= rulesuite
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getIf_stmtAccess().getSuiteSuiteParserRuleCall_3_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_37);
            lv_suite_3_0=rulesuite();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getIf_stmtRule());
              	        }
                     		set(
                     			current, 
                     			"suite",
                      		lv_suite_3_0, 
                      		"lu.ses.engineering.spell.controlflow.SpellGrammar.suite");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSpellGrammar.g:2900:2: ( (lv_else_if_stmts_4_0= ruleelse_if_stmt ) )*
            loop50:
            do {
                int alt50=2;
                int LA50_0 = input.LA(1);

                if ( (LA50_0==54) ) {
                    alt50=1;
                }


                switch (alt50) {
            	case 1 :
            	    // InternalSpellGrammar.g:2901:1: (lv_else_if_stmts_4_0= ruleelse_if_stmt )
            	    {
            	    // InternalSpellGrammar.g:2901:1: (lv_else_if_stmts_4_0= ruleelse_if_stmt )
            	    // InternalSpellGrammar.g:2902:3: lv_else_if_stmts_4_0= ruleelse_if_stmt
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getIf_stmtAccess().getElse_if_stmtsElse_if_stmtParserRuleCall_4_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_37);
            	    lv_else_if_stmts_4_0=ruleelse_if_stmt();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getIf_stmtRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"else_if_stmts",
            	              		lv_else_if_stmts_4_0, 
            	              		"lu.ses.engineering.spell.controlflow.SpellGrammar.else_if_stmt");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop50;
                }
            } while (true);

            // InternalSpellGrammar.g:2918:3: (otherlv_5= 'else' otherlv_6= ':' ( (lv_else_7_0= rulesuite ) ) )?
            int alt51=2;
            int LA51_0 = input.LA(1);

            if ( (LA51_0==56) ) {
                alt51=1;
            }
            switch (alt51) {
                case 1 :
                    // InternalSpellGrammar.g:2918:5: otherlv_5= 'else' otherlv_6= ':' ( (lv_else_7_0= rulesuite ) )
                    {
                    otherlv_5=(Token)match(input,56,FollowSets000.FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getIf_stmtAccess().getElseKeyword_5_0());
                          
                    }
                    otherlv_6=(Token)match(input,22,FollowSets000.FOLLOW_11); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_6, grammarAccess.getIf_stmtAccess().getColonKeyword_5_1());
                          
                    }
                    // InternalSpellGrammar.g:2926:1: ( (lv_else_7_0= rulesuite ) )
                    // InternalSpellGrammar.g:2927:1: (lv_else_7_0= rulesuite )
                    {
                    // InternalSpellGrammar.g:2927:1: (lv_else_7_0= rulesuite )
                    // InternalSpellGrammar.g:2928:3: lv_else_7_0= rulesuite
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getIf_stmtAccess().getElseSuiteParserRuleCall_5_2_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_38);
                    lv_else_7_0=rulesuite();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getIf_stmtRule());
                      	        }
                             		set(
                             			current, 
                             			"else",
                              		lv_else_7_0, 
                              		"lu.ses.engineering.spell.controlflow.SpellGrammar.suite");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            this_ENDIF_8=(Token)match(input,RULE_ENDIF,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_ENDIF_8, grammarAccess.getIf_stmtAccess().getENDIFTerminalRuleCall_6()); 
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 80, ruleif_stmt_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleif_stmt"


    // $ANTLR start "entryRulewhile_stmt"
    // InternalSpellGrammar.g:2956:1: entryRulewhile_stmt returns [EObject current=null] : iv_rulewhile_stmt= rulewhile_stmt EOF ;
    public final EObject entryRulewhile_stmt() throws RecognitionException {
        EObject current = null;
        int entryRulewhile_stmt_StartIndex = input.index();
        EObject iv_rulewhile_stmt = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 81) ) { return current; }
            // InternalSpellGrammar.g:2957:2: (iv_rulewhile_stmt= rulewhile_stmt EOF )
            // InternalSpellGrammar.g:2958:2: iv_rulewhile_stmt= rulewhile_stmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getWhile_stmtRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulewhile_stmt=rulewhile_stmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulewhile_stmt; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 81, entryRulewhile_stmt_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRulewhile_stmt"


    // $ANTLR start "rulewhile_stmt"
    // InternalSpellGrammar.g:2965:1: rulewhile_stmt returns [EObject current=null] : (otherlv_0= 'while' ( (lv_test_1_0= ruletest ) ) otherlv_2= ':' ( (lv_suite_3_0= rulesuite ) ) (otherlv_4= 'else' otherlv_5= ':' ( (lv_else_6_0= rulesuite ) ) )? this_ENDWHILE_7= RULE_ENDWHILE ) ;
    public final EObject rulewhile_stmt() throws RecognitionException {
        EObject current = null;
        int rulewhile_stmt_StartIndex = input.index();
        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token this_ENDWHILE_7=null;
        EObject lv_test_1_0 = null;

        EObject lv_suite_3_0 = null;

        EObject lv_else_6_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 82) ) { return current; }
            // InternalSpellGrammar.g:2968:28: ( (otherlv_0= 'while' ( (lv_test_1_0= ruletest ) ) otherlv_2= ':' ( (lv_suite_3_0= rulesuite ) ) (otherlv_4= 'else' otherlv_5= ':' ( (lv_else_6_0= rulesuite ) ) )? this_ENDWHILE_7= RULE_ENDWHILE ) )
            // InternalSpellGrammar.g:2969:1: (otherlv_0= 'while' ( (lv_test_1_0= ruletest ) ) otherlv_2= ':' ( (lv_suite_3_0= rulesuite ) ) (otherlv_4= 'else' otherlv_5= ':' ( (lv_else_6_0= rulesuite ) ) )? this_ENDWHILE_7= RULE_ENDWHILE )
            {
            // InternalSpellGrammar.g:2969:1: (otherlv_0= 'while' ( (lv_test_1_0= ruletest ) ) otherlv_2= ':' ( (lv_suite_3_0= rulesuite ) ) (otherlv_4= 'else' otherlv_5= ':' ( (lv_else_6_0= rulesuite ) ) )? this_ENDWHILE_7= RULE_ENDWHILE )
            // InternalSpellGrammar.g:2969:3: otherlv_0= 'while' ( (lv_test_1_0= ruletest ) ) otherlv_2= ':' ( (lv_suite_3_0= rulesuite ) ) (otherlv_4= 'else' otherlv_5= ':' ( (lv_else_6_0= rulesuite ) ) )? this_ENDWHILE_7= RULE_ENDWHILE
            {
            otherlv_0=(Token)match(input,57,FollowSets000.FOLLOW_16); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getWhile_stmtAccess().getWhileKeyword_0());
                  
            }
            // InternalSpellGrammar.g:2973:1: ( (lv_test_1_0= ruletest ) )
            // InternalSpellGrammar.g:2974:1: (lv_test_1_0= ruletest )
            {
            // InternalSpellGrammar.g:2974:1: (lv_test_1_0= ruletest )
            // InternalSpellGrammar.g:2975:3: lv_test_1_0= ruletest
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getWhile_stmtAccess().getTestTestParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_10);
            lv_test_1_0=ruletest();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getWhile_stmtRule());
              	        }
                     		set(
                     			current, 
                     			"test",
                      		lv_test_1_0, 
                      		"lu.ses.engineering.spell.controlflow.SpellGrammar.test");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_2=(Token)match(input,22,FollowSets000.FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getWhile_stmtAccess().getColonKeyword_2());
                  
            }
            // InternalSpellGrammar.g:2995:1: ( (lv_suite_3_0= rulesuite ) )
            // InternalSpellGrammar.g:2996:1: (lv_suite_3_0= rulesuite )
            {
            // InternalSpellGrammar.g:2996:1: (lv_suite_3_0= rulesuite )
            // InternalSpellGrammar.g:2997:3: lv_suite_3_0= rulesuite
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getWhile_stmtAccess().getSuiteSuiteParserRuleCall_3_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_39);
            lv_suite_3_0=rulesuite();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getWhile_stmtRule());
              	        }
                     		set(
                     			current, 
                     			"suite",
                      		lv_suite_3_0, 
                      		"lu.ses.engineering.spell.controlflow.SpellGrammar.suite");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSpellGrammar.g:3013:2: (otherlv_4= 'else' otherlv_5= ':' ( (lv_else_6_0= rulesuite ) ) )?
            int alt52=2;
            int LA52_0 = input.LA(1);

            if ( (LA52_0==56) ) {
                alt52=1;
            }
            switch (alt52) {
                case 1 :
                    // InternalSpellGrammar.g:3013:4: otherlv_4= 'else' otherlv_5= ':' ( (lv_else_6_0= rulesuite ) )
                    {
                    otherlv_4=(Token)match(input,56,FollowSets000.FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getWhile_stmtAccess().getElseKeyword_4_0());
                          
                    }
                    otherlv_5=(Token)match(input,22,FollowSets000.FOLLOW_11); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getWhile_stmtAccess().getColonKeyword_4_1());
                          
                    }
                    // InternalSpellGrammar.g:3021:1: ( (lv_else_6_0= rulesuite ) )
                    // InternalSpellGrammar.g:3022:1: (lv_else_6_0= rulesuite )
                    {
                    // InternalSpellGrammar.g:3022:1: (lv_else_6_0= rulesuite )
                    // InternalSpellGrammar.g:3023:3: lv_else_6_0= rulesuite
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getWhile_stmtAccess().getElseSuiteParserRuleCall_4_2_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_40);
                    lv_else_6_0=rulesuite();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getWhile_stmtRule());
                      	        }
                             		set(
                             			current, 
                             			"else",
                              		lv_else_6_0, 
                              		"lu.ses.engineering.spell.controlflow.SpellGrammar.suite");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            this_ENDWHILE_7=(Token)match(input,RULE_ENDWHILE,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_ENDWHILE_7, grammarAccess.getWhile_stmtAccess().getENDWHILETerminalRuleCall_5()); 
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 82, rulewhile_stmt_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "rulewhile_stmt"


    // $ANTLR start "entryRulefor_stmt"
    // InternalSpellGrammar.g:3051:1: entryRulefor_stmt returns [EObject current=null] : iv_rulefor_stmt= rulefor_stmt EOF ;
    public final EObject entryRulefor_stmt() throws RecognitionException {
        EObject current = null;
        int entryRulefor_stmt_StartIndex = input.index();
        EObject iv_rulefor_stmt = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 83) ) { return current; }
            // InternalSpellGrammar.g:3052:2: (iv_rulefor_stmt= rulefor_stmt EOF )
            // InternalSpellGrammar.g:3053:2: iv_rulefor_stmt= rulefor_stmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFor_stmtRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulefor_stmt=rulefor_stmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulefor_stmt; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 83, entryRulefor_stmt_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRulefor_stmt"


    // $ANTLR start "rulefor_stmt"
    // InternalSpellGrammar.g:3060:1: rulefor_stmt returns [EObject current=null] : (otherlv_0= 'for' ( (lv_exprlist_1_0= ruleexprlist ) ) otherlv_2= 'in' ( (lv_testlist_3_0= ruletestlist ) ) otherlv_4= ':' ( (lv_suite_5_0= rulesuite ) ) (otherlv_6= 'else' otherlv_7= ':' ( (lv_else_8_0= rulesuite ) ) )? (this_ENDFOR_9= RULE_ENDFOR | this_ENDIF_10= RULE_ENDIF ) ) ;
    public final EObject rulefor_stmt() throws RecognitionException {
        EObject current = null;
        int rulefor_stmt_StartIndex = input.index();
        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token this_ENDFOR_9=null;
        Token this_ENDIF_10=null;
        EObject lv_exprlist_1_0 = null;

        EObject lv_testlist_3_0 = null;

        EObject lv_suite_5_0 = null;

        EObject lv_else_8_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 84) ) { return current; }
            // InternalSpellGrammar.g:3063:28: ( (otherlv_0= 'for' ( (lv_exprlist_1_0= ruleexprlist ) ) otherlv_2= 'in' ( (lv_testlist_3_0= ruletestlist ) ) otherlv_4= ':' ( (lv_suite_5_0= rulesuite ) ) (otherlv_6= 'else' otherlv_7= ':' ( (lv_else_8_0= rulesuite ) ) )? (this_ENDFOR_9= RULE_ENDFOR | this_ENDIF_10= RULE_ENDIF ) ) )
            // InternalSpellGrammar.g:3064:1: (otherlv_0= 'for' ( (lv_exprlist_1_0= ruleexprlist ) ) otherlv_2= 'in' ( (lv_testlist_3_0= ruletestlist ) ) otherlv_4= ':' ( (lv_suite_5_0= rulesuite ) ) (otherlv_6= 'else' otherlv_7= ':' ( (lv_else_8_0= rulesuite ) ) )? (this_ENDFOR_9= RULE_ENDFOR | this_ENDIF_10= RULE_ENDIF ) )
            {
            // InternalSpellGrammar.g:3064:1: (otherlv_0= 'for' ( (lv_exprlist_1_0= ruleexprlist ) ) otherlv_2= 'in' ( (lv_testlist_3_0= ruletestlist ) ) otherlv_4= ':' ( (lv_suite_5_0= rulesuite ) ) (otherlv_6= 'else' otherlv_7= ':' ( (lv_else_8_0= rulesuite ) ) )? (this_ENDFOR_9= RULE_ENDFOR | this_ENDIF_10= RULE_ENDIF ) )
            // InternalSpellGrammar.g:3064:3: otherlv_0= 'for' ( (lv_exprlist_1_0= ruleexprlist ) ) otherlv_2= 'in' ( (lv_testlist_3_0= ruletestlist ) ) otherlv_4= ':' ( (lv_suite_5_0= rulesuite ) ) (otherlv_6= 'else' otherlv_7= ':' ( (lv_else_8_0= rulesuite ) ) )? (this_ENDFOR_9= RULE_ENDFOR | this_ENDIF_10= RULE_ENDIF )
            {
            otherlv_0=(Token)match(input,58,FollowSets000.FOLLOW_28); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getFor_stmtAccess().getForKeyword_0());
                  
            }
            // InternalSpellGrammar.g:3068:1: ( (lv_exprlist_1_0= ruleexprlist ) )
            // InternalSpellGrammar.g:3069:1: (lv_exprlist_1_0= ruleexprlist )
            {
            // InternalSpellGrammar.g:3069:1: (lv_exprlist_1_0= ruleexprlist )
            // InternalSpellGrammar.g:3070:3: lv_exprlist_1_0= ruleexprlist
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getFor_stmtAccess().getExprlistExprlistParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_41);
            lv_exprlist_1_0=ruleexprlist();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getFor_stmtRule());
              	        }
                     		set(
                     			current, 
                     			"exprlist",
                      		lv_exprlist_1_0, 
                      		"lu.ses.engineering.spell.controlflow.SpellGrammar.exprlist");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_2=(Token)match(input,52,FollowSets000.FOLLOW_16); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getFor_stmtAccess().getInKeyword_2());
                  
            }
            // InternalSpellGrammar.g:3090:1: ( (lv_testlist_3_0= ruletestlist ) )
            // InternalSpellGrammar.g:3091:1: (lv_testlist_3_0= ruletestlist )
            {
            // InternalSpellGrammar.g:3091:1: (lv_testlist_3_0= ruletestlist )
            // InternalSpellGrammar.g:3092:3: lv_testlist_3_0= ruletestlist
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getFor_stmtAccess().getTestlistTestlistParserRuleCall_3_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_10);
            lv_testlist_3_0=ruletestlist();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getFor_stmtRule());
              	        }
                     		set(
                     			current, 
                     			"testlist",
                      		lv_testlist_3_0, 
                      		"lu.ses.engineering.spell.controlflow.SpellGrammar.testlist");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_4=(Token)match(input,22,FollowSets000.FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getFor_stmtAccess().getColonKeyword_4());
                  
            }
            // InternalSpellGrammar.g:3112:1: ( (lv_suite_5_0= rulesuite ) )
            // InternalSpellGrammar.g:3113:1: (lv_suite_5_0= rulesuite )
            {
            // InternalSpellGrammar.g:3113:1: (lv_suite_5_0= rulesuite )
            // InternalSpellGrammar.g:3114:3: lv_suite_5_0= rulesuite
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getFor_stmtAccess().getSuiteSuiteParserRuleCall_5_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_42);
            lv_suite_5_0=rulesuite();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getFor_stmtRule());
              	        }
                     		set(
                     			current, 
                     			"suite",
                      		lv_suite_5_0, 
                      		"lu.ses.engineering.spell.controlflow.SpellGrammar.suite");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSpellGrammar.g:3130:2: (otherlv_6= 'else' otherlv_7= ':' ( (lv_else_8_0= rulesuite ) ) )?
            int alt53=2;
            int LA53_0 = input.LA(1);

            if ( (LA53_0==56) ) {
                alt53=1;
            }
            switch (alt53) {
                case 1 :
                    // InternalSpellGrammar.g:3130:4: otherlv_6= 'else' otherlv_7= ':' ( (lv_else_8_0= rulesuite ) )
                    {
                    otherlv_6=(Token)match(input,56,FollowSets000.FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_6, grammarAccess.getFor_stmtAccess().getElseKeyword_6_0());
                          
                    }
                    otherlv_7=(Token)match(input,22,FollowSets000.FOLLOW_11); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_7, grammarAccess.getFor_stmtAccess().getColonKeyword_6_1());
                          
                    }
                    // InternalSpellGrammar.g:3138:1: ( (lv_else_8_0= rulesuite ) )
                    // InternalSpellGrammar.g:3139:1: (lv_else_8_0= rulesuite )
                    {
                    // InternalSpellGrammar.g:3139:1: (lv_else_8_0= rulesuite )
                    // InternalSpellGrammar.g:3140:3: lv_else_8_0= rulesuite
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getFor_stmtAccess().getElseSuiteParserRuleCall_6_2_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_43);
                    lv_else_8_0=rulesuite();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getFor_stmtRule());
                      	        }
                             		set(
                             			current, 
                             			"else",
                              		lv_else_8_0, 
                              		"lu.ses.engineering.spell.controlflow.SpellGrammar.suite");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalSpellGrammar.g:3156:4: (this_ENDFOR_9= RULE_ENDFOR | this_ENDIF_10= RULE_ENDIF )
            int alt54=2;
            int LA54_0 = input.LA(1);

            if ( (LA54_0==RULE_ENDFOR) ) {
                alt54=1;
            }
            else if ( (LA54_0==RULE_ENDIF) ) {
                alt54=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 54, 0, input);

                throw nvae;
            }
            switch (alt54) {
                case 1 :
                    // InternalSpellGrammar.g:3156:5: this_ENDFOR_9= RULE_ENDFOR
                    {
                    this_ENDFOR_9=(Token)match(input,RULE_ENDFOR,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_ENDFOR_9, grammarAccess.getFor_stmtAccess().getENDFORTerminalRuleCall_7_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalSpellGrammar.g:3161:6: this_ENDIF_10= RULE_ENDIF
                    {
                    this_ENDIF_10=(Token)match(input,RULE_ENDIF,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_ENDIF_10, grammarAccess.getFor_stmtAccess().getENDIFTerminalRuleCall_7_1()); 
                          
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 84, rulefor_stmt_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "rulefor_stmt"


    // $ANTLR start "entryRuletry_stmt"
    // InternalSpellGrammar.g:3173:1: entryRuletry_stmt returns [EObject current=null] : iv_ruletry_stmt= ruletry_stmt EOF ;
    public final EObject entryRuletry_stmt() throws RecognitionException {
        EObject current = null;
        int entryRuletry_stmt_StartIndex = input.index();
        EObject iv_ruletry_stmt = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 85) ) { return current; }
            // InternalSpellGrammar.g:3174:2: (iv_ruletry_stmt= ruletry_stmt EOF )
            // InternalSpellGrammar.g:3175:2: iv_ruletry_stmt= ruletry_stmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTry_stmtRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruletry_stmt=ruletry_stmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruletry_stmt; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 85, entryRuletry_stmt_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuletry_stmt"


    // $ANTLR start "ruletry_stmt"
    // InternalSpellGrammar.g:3182:1: ruletry_stmt returns [EObject current=null] : ( (otherlv_0= 'try' otherlv_1= ':' ( (lv_suite_2_0= rulesuite ) ) (this_ENDTRY_3= RULE_ENDTRY )? ( ( ( (lv_except_clause_4_0= ruleexcept_clause ) )+ (otherlv_5= 'else' otherlv_6= ':' ( (lv_else_7_0= rulesuite ) ) )? (otherlv_8= 'finally' otherlv_9= ':' ( (lv_finally_10_0= rulesuite ) ) )? ) | (otherlv_11= 'finally' otherlv_12= ':' ( (lv_finally_13_0= rulesuite ) ) ) ) ) this_ENDTRY_14= RULE_ENDTRY ) ;
    public final EObject ruletry_stmt() throws RecognitionException {
        EObject current = null;
        int ruletry_stmt_StartIndex = input.index();
        Token otherlv_0=null;
        Token otherlv_1=null;
        Token this_ENDTRY_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_12=null;
        Token this_ENDTRY_14=null;
        EObject lv_suite_2_0 = null;

        EObject lv_except_clause_4_0 = null;

        EObject lv_else_7_0 = null;

        EObject lv_finally_10_0 = null;

        EObject lv_finally_13_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 86) ) { return current; }
            // InternalSpellGrammar.g:3185:28: ( ( (otherlv_0= 'try' otherlv_1= ':' ( (lv_suite_2_0= rulesuite ) ) (this_ENDTRY_3= RULE_ENDTRY )? ( ( ( (lv_except_clause_4_0= ruleexcept_clause ) )+ (otherlv_5= 'else' otherlv_6= ':' ( (lv_else_7_0= rulesuite ) ) )? (otherlv_8= 'finally' otherlv_9= ':' ( (lv_finally_10_0= rulesuite ) ) )? ) | (otherlv_11= 'finally' otherlv_12= ':' ( (lv_finally_13_0= rulesuite ) ) ) ) ) this_ENDTRY_14= RULE_ENDTRY ) )
            // InternalSpellGrammar.g:3186:1: ( (otherlv_0= 'try' otherlv_1= ':' ( (lv_suite_2_0= rulesuite ) ) (this_ENDTRY_3= RULE_ENDTRY )? ( ( ( (lv_except_clause_4_0= ruleexcept_clause ) )+ (otherlv_5= 'else' otherlv_6= ':' ( (lv_else_7_0= rulesuite ) ) )? (otherlv_8= 'finally' otherlv_9= ':' ( (lv_finally_10_0= rulesuite ) ) )? ) | (otherlv_11= 'finally' otherlv_12= ':' ( (lv_finally_13_0= rulesuite ) ) ) ) ) this_ENDTRY_14= RULE_ENDTRY )
            {
            // InternalSpellGrammar.g:3186:1: ( (otherlv_0= 'try' otherlv_1= ':' ( (lv_suite_2_0= rulesuite ) ) (this_ENDTRY_3= RULE_ENDTRY )? ( ( ( (lv_except_clause_4_0= ruleexcept_clause ) )+ (otherlv_5= 'else' otherlv_6= ':' ( (lv_else_7_0= rulesuite ) ) )? (otherlv_8= 'finally' otherlv_9= ':' ( (lv_finally_10_0= rulesuite ) ) )? ) | (otherlv_11= 'finally' otherlv_12= ':' ( (lv_finally_13_0= rulesuite ) ) ) ) ) this_ENDTRY_14= RULE_ENDTRY )
            // InternalSpellGrammar.g:3186:2: (otherlv_0= 'try' otherlv_1= ':' ( (lv_suite_2_0= rulesuite ) ) (this_ENDTRY_3= RULE_ENDTRY )? ( ( ( (lv_except_clause_4_0= ruleexcept_clause ) )+ (otherlv_5= 'else' otherlv_6= ':' ( (lv_else_7_0= rulesuite ) ) )? (otherlv_8= 'finally' otherlv_9= ':' ( (lv_finally_10_0= rulesuite ) ) )? ) | (otherlv_11= 'finally' otherlv_12= ':' ( (lv_finally_13_0= rulesuite ) ) ) ) ) this_ENDTRY_14= RULE_ENDTRY
            {
            // InternalSpellGrammar.g:3186:2: (otherlv_0= 'try' otherlv_1= ':' ( (lv_suite_2_0= rulesuite ) ) (this_ENDTRY_3= RULE_ENDTRY )? ( ( ( (lv_except_clause_4_0= ruleexcept_clause ) )+ (otherlv_5= 'else' otherlv_6= ':' ( (lv_else_7_0= rulesuite ) ) )? (otherlv_8= 'finally' otherlv_9= ':' ( (lv_finally_10_0= rulesuite ) ) )? ) | (otherlv_11= 'finally' otherlv_12= ':' ( (lv_finally_13_0= rulesuite ) ) ) ) )
            // InternalSpellGrammar.g:3186:4: otherlv_0= 'try' otherlv_1= ':' ( (lv_suite_2_0= rulesuite ) ) (this_ENDTRY_3= RULE_ENDTRY )? ( ( ( (lv_except_clause_4_0= ruleexcept_clause ) )+ (otherlv_5= 'else' otherlv_6= ':' ( (lv_else_7_0= rulesuite ) ) )? (otherlv_8= 'finally' otherlv_9= ':' ( (lv_finally_10_0= rulesuite ) ) )? ) | (otherlv_11= 'finally' otherlv_12= ':' ( (lv_finally_13_0= rulesuite ) ) ) )
            {
            otherlv_0=(Token)match(input,59,FollowSets000.FOLLOW_10); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getTry_stmtAccess().getTryKeyword_0_0());
                  
            }
            otherlv_1=(Token)match(input,22,FollowSets000.FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getTry_stmtAccess().getColonKeyword_0_1());
                  
            }
            // InternalSpellGrammar.g:3194:1: ( (lv_suite_2_0= rulesuite ) )
            // InternalSpellGrammar.g:3195:1: (lv_suite_2_0= rulesuite )
            {
            // InternalSpellGrammar.g:3195:1: (lv_suite_2_0= rulesuite )
            // InternalSpellGrammar.g:3196:3: lv_suite_2_0= rulesuite
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getTry_stmtAccess().getSuiteSuiteParserRuleCall_0_2_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_44);
            lv_suite_2_0=rulesuite();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTry_stmtRule());
              	        }
                     		set(
                     			current, 
                     			"suite",
                      		lv_suite_2_0, 
                      		"lu.ses.engineering.spell.controlflow.SpellGrammar.suite");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSpellGrammar.g:3212:2: (this_ENDTRY_3= RULE_ENDTRY )?
            int alt55=2;
            int LA55_0 = input.LA(1);

            if ( (LA55_0==RULE_ENDTRY) ) {
                alt55=1;
            }
            switch (alt55) {
                case 1 :
                    // InternalSpellGrammar.g:3212:3: this_ENDTRY_3= RULE_ENDTRY
                    {
                    this_ENDTRY_3=(Token)match(input,RULE_ENDTRY,FollowSets000.FOLLOW_45); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_ENDTRY_3, grammarAccess.getTry_stmtAccess().getENDTRYTerminalRuleCall_0_3()); 
                          
                    }

                    }
                    break;

            }

            // InternalSpellGrammar.g:3216:3: ( ( ( (lv_except_clause_4_0= ruleexcept_clause ) )+ (otherlv_5= 'else' otherlv_6= ':' ( (lv_else_7_0= rulesuite ) ) )? (otherlv_8= 'finally' otherlv_9= ':' ( (lv_finally_10_0= rulesuite ) ) )? ) | (otherlv_11= 'finally' otherlv_12= ':' ( (lv_finally_13_0= rulesuite ) ) ) )
            int alt59=2;
            int LA59_0 = input.LA(1);

            if ( (LA59_0==62) ) {
                alt59=1;
            }
            else if ( (LA59_0==60) ) {
                alt59=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 59, 0, input);

                throw nvae;
            }
            switch (alt59) {
                case 1 :
                    // InternalSpellGrammar.g:3216:4: ( ( (lv_except_clause_4_0= ruleexcept_clause ) )+ (otherlv_5= 'else' otherlv_6= ':' ( (lv_else_7_0= rulesuite ) ) )? (otherlv_8= 'finally' otherlv_9= ':' ( (lv_finally_10_0= rulesuite ) ) )? )
                    {
                    // InternalSpellGrammar.g:3216:4: ( ( (lv_except_clause_4_0= ruleexcept_clause ) )+ (otherlv_5= 'else' otherlv_6= ':' ( (lv_else_7_0= rulesuite ) ) )? (otherlv_8= 'finally' otherlv_9= ':' ( (lv_finally_10_0= rulesuite ) ) )? )
                    // InternalSpellGrammar.g:3216:5: ( (lv_except_clause_4_0= ruleexcept_clause ) )+ (otherlv_5= 'else' otherlv_6= ':' ( (lv_else_7_0= rulesuite ) ) )? (otherlv_8= 'finally' otherlv_9= ':' ( (lv_finally_10_0= rulesuite ) ) )?
                    {
                    // InternalSpellGrammar.g:3216:5: ( (lv_except_clause_4_0= ruleexcept_clause ) )+
                    int cnt56=0;
                    loop56:
                    do {
                        int alt56=2;
                        int LA56_0 = input.LA(1);

                        if ( (LA56_0==62) ) {
                            alt56=1;
                        }


                        switch (alt56) {
                    	case 1 :
                    	    // InternalSpellGrammar.g:3217:1: (lv_except_clause_4_0= ruleexcept_clause )
                    	    {
                    	    // InternalSpellGrammar.g:3217:1: (lv_except_clause_4_0= ruleexcept_clause )
                    	    // InternalSpellGrammar.g:3218:3: lv_except_clause_4_0= ruleexcept_clause
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getTry_stmtAccess().getExcept_clauseExcept_clauseParserRuleCall_0_4_0_0_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_46);
                    	    lv_except_clause_4_0=ruleexcept_clause();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getTry_stmtRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"except_clause",
                    	              		lv_except_clause_4_0, 
                    	              		"lu.ses.engineering.spell.controlflow.SpellGrammar.except_clause");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt56 >= 1 ) break loop56;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(56, input);
                                throw eee;
                        }
                        cnt56++;
                    } while (true);

                    // InternalSpellGrammar.g:3234:3: (otherlv_5= 'else' otherlv_6= ':' ( (lv_else_7_0= rulesuite ) ) )?
                    int alt57=2;
                    int LA57_0 = input.LA(1);

                    if ( (LA57_0==56) ) {
                        alt57=1;
                    }
                    switch (alt57) {
                        case 1 :
                            // InternalSpellGrammar.g:3234:5: otherlv_5= 'else' otherlv_6= ':' ( (lv_else_7_0= rulesuite ) )
                            {
                            otherlv_5=(Token)match(input,56,FollowSets000.FOLLOW_10); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_5, grammarAccess.getTry_stmtAccess().getElseKeyword_0_4_0_1_0());
                                  
                            }
                            otherlv_6=(Token)match(input,22,FollowSets000.FOLLOW_11); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_6, grammarAccess.getTry_stmtAccess().getColonKeyword_0_4_0_1_1());
                                  
                            }
                            // InternalSpellGrammar.g:3242:1: ( (lv_else_7_0= rulesuite ) )
                            // InternalSpellGrammar.g:3243:1: (lv_else_7_0= rulesuite )
                            {
                            // InternalSpellGrammar.g:3243:1: (lv_else_7_0= rulesuite )
                            // InternalSpellGrammar.g:3244:3: lv_else_7_0= rulesuite
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getTry_stmtAccess().getElseSuiteParserRuleCall_0_4_0_1_2_0()); 
                              	    
                            }
                            pushFollow(FollowSets000.FOLLOW_47);
                            lv_else_7_0=rulesuite();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getTry_stmtRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"else",
                                      		lv_else_7_0, 
                                      		"lu.ses.engineering.spell.controlflow.SpellGrammar.suite");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalSpellGrammar.g:3260:4: (otherlv_8= 'finally' otherlv_9= ':' ( (lv_finally_10_0= rulesuite ) ) )?
                    int alt58=2;
                    int LA58_0 = input.LA(1);

                    if ( (LA58_0==60) ) {
                        alt58=1;
                    }
                    switch (alt58) {
                        case 1 :
                            // InternalSpellGrammar.g:3260:6: otherlv_8= 'finally' otherlv_9= ':' ( (lv_finally_10_0= rulesuite ) )
                            {
                            otherlv_8=(Token)match(input,60,FollowSets000.FOLLOW_10); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_8, grammarAccess.getTry_stmtAccess().getFinallyKeyword_0_4_0_2_0());
                                  
                            }
                            otherlv_9=(Token)match(input,22,FollowSets000.FOLLOW_11); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_9, grammarAccess.getTry_stmtAccess().getColonKeyword_0_4_0_2_1());
                                  
                            }
                            // InternalSpellGrammar.g:3268:1: ( (lv_finally_10_0= rulesuite ) )
                            // InternalSpellGrammar.g:3269:1: (lv_finally_10_0= rulesuite )
                            {
                            // InternalSpellGrammar.g:3269:1: (lv_finally_10_0= rulesuite )
                            // InternalSpellGrammar.g:3270:3: lv_finally_10_0= rulesuite
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getTry_stmtAccess().getFinallySuiteParserRuleCall_0_4_0_2_2_0()); 
                              	    
                            }
                            pushFollow(FollowSets000.FOLLOW_48);
                            lv_finally_10_0=rulesuite();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getTry_stmtRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"finally",
                                      		lv_finally_10_0, 
                                      		"lu.ses.engineering.spell.controlflow.SpellGrammar.suite");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSpellGrammar.g:3287:6: (otherlv_11= 'finally' otherlv_12= ':' ( (lv_finally_13_0= rulesuite ) ) )
                    {
                    // InternalSpellGrammar.g:3287:6: (otherlv_11= 'finally' otherlv_12= ':' ( (lv_finally_13_0= rulesuite ) ) )
                    // InternalSpellGrammar.g:3287:8: otherlv_11= 'finally' otherlv_12= ':' ( (lv_finally_13_0= rulesuite ) )
                    {
                    otherlv_11=(Token)match(input,60,FollowSets000.FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_11, grammarAccess.getTry_stmtAccess().getFinallyKeyword_0_4_1_0());
                          
                    }
                    otherlv_12=(Token)match(input,22,FollowSets000.FOLLOW_11); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_12, grammarAccess.getTry_stmtAccess().getColonKeyword_0_4_1_1());
                          
                    }
                    // InternalSpellGrammar.g:3295:1: ( (lv_finally_13_0= rulesuite ) )
                    // InternalSpellGrammar.g:3296:1: (lv_finally_13_0= rulesuite )
                    {
                    // InternalSpellGrammar.g:3296:1: (lv_finally_13_0= rulesuite )
                    // InternalSpellGrammar.g:3297:3: lv_finally_13_0= rulesuite
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getTry_stmtAccess().getFinallySuiteParserRuleCall_0_4_1_2_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_48);
                    lv_finally_13_0=rulesuite();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTry_stmtRule());
                      	        }
                             		set(
                             			current, 
                             			"finally",
                              		lv_finally_13_0, 
                              		"lu.ses.engineering.spell.controlflow.SpellGrammar.suite");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            this_ENDTRY_14=(Token)match(input,RULE_ENDTRY,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_ENDTRY_14, grammarAccess.getTry_stmtAccess().getENDTRYTerminalRuleCall_1()); 
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 86, ruletry_stmt_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruletry_stmt"


    // $ANTLR start "entryRulewith_stmt"
    // InternalSpellGrammar.g:3325:1: entryRulewith_stmt returns [EObject current=null] : iv_rulewith_stmt= rulewith_stmt EOF ;
    public final EObject entryRulewith_stmt() throws RecognitionException {
        EObject current = null;
        int entryRulewith_stmt_StartIndex = input.index();
        EObject iv_rulewith_stmt = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 87) ) { return current; }
            // InternalSpellGrammar.g:3326:2: (iv_rulewith_stmt= rulewith_stmt EOF )
            // InternalSpellGrammar.g:3327:2: iv_rulewith_stmt= rulewith_stmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getWith_stmtRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulewith_stmt=rulewith_stmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulewith_stmt; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 87, entryRulewith_stmt_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRulewith_stmt"


    // $ANTLR start "rulewith_stmt"
    // InternalSpellGrammar.g:3334:1: rulewith_stmt returns [EObject current=null] : (otherlv_0= 'with' ( (lv_with_item_1_0= rulewith_item ) ) (otherlv_2= ',' ( (lv_with_item_3_0= rulewith_item ) ) )* otherlv_4= ':' ( (lv_suite_5_0= rulesuite ) ) this_ENDWITH_6= RULE_ENDWITH ) ;
    public final EObject rulewith_stmt() throws RecognitionException {
        EObject current = null;
        int rulewith_stmt_StartIndex = input.index();
        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token this_ENDWITH_6=null;
        EObject lv_with_item_1_0 = null;

        EObject lv_with_item_3_0 = null;

        EObject lv_suite_5_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 88) ) { return current; }
            // InternalSpellGrammar.g:3337:28: ( (otherlv_0= 'with' ( (lv_with_item_1_0= rulewith_item ) ) (otherlv_2= ',' ( (lv_with_item_3_0= rulewith_item ) ) )* otherlv_4= ':' ( (lv_suite_5_0= rulesuite ) ) this_ENDWITH_6= RULE_ENDWITH ) )
            // InternalSpellGrammar.g:3338:1: (otherlv_0= 'with' ( (lv_with_item_1_0= rulewith_item ) ) (otherlv_2= ',' ( (lv_with_item_3_0= rulewith_item ) ) )* otherlv_4= ':' ( (lv_suite_5_0= rulesuite ) ) this_ENDWITH_6= RULE_ENDWITH )
            {
            // InternalSpellGrammar.g:3338:1: (otherlv_0= 'with' ( (lv_with_item_1_0= rulewith_item ) ) (otherlv_2= ',' ( (lv_with_item_3_0= rulewith_item ) ) )* otherlv_4= ':' ( (lv_suite_5_0= rulesuite ) ) this_ENDWITH_6= RULE_ENDWITH )
            // InternalSpellGrammar.g:3338:3: otherlv_0= 'with' ( (lv_with_item_1_0= rulewith_item ) ) (otherlv_2= ',' ( (lv_with_item_3_0= rulewith_item ) ) )* otherlv_4= ':' ( (lv_suite_5_0= rulesuite ) ) this_ENDWITH_6= RULE_ENDWITH
            {
            otherlv_0=(Token)match(input,61,FollowSets000.FOLLOW_16); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getWith_stmtAccess().getWithKeyword_0());
                  
            }
            // InternalSpellGrammar.g:3342:1: ( (lv_with_item_1_0= rulewith_item ) )
            // InternalSpellGrammar.g:3343:1: (lv_with_item_1_0= rulewith_item )
            {
            // InternalSpellGrammar.g:3343:1: (lv_with_item_1_0= rulewith_item )
            // InternalSpellGrammar.g:3344:3: lv_with_item_1_0= rulewith_item
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getWith_stmtAccess().getWith_itemWith_itemParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_49);
            lv_with_item_1_0=rulewith_item();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getWith_stmtRule());
              	        }
                     		add(
                     			current, 
                     			"with_item",
                      		lv_with_item_1_0, 
                      		"lu.ses.engineering.spell.controlflow.SpellGrammar.with_item");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSpellGrammar.g:3360:2: (otherlv_2= ',' ( (lv_with_item_3_0= rulewith_item ) ) )*
            loop60:
            do {
                int alt60=2;
                int LA60_0 = input.LA(1);

                if ( (LA60_0==23) ) {
                    alt60=1;
                }


                switch (alt60) {
            	case 1 :
            	    // InternalSpellGrammar.g:3360:4: otherlv_2= ',' ( (lv_with_item_3_0= rulewith_item ) )
            	    {
            	    otherlv_2=(Token)match(input,23,FollowSets000.FOLLOW_16); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_2, grammarAccess.getWith_stmtAccess().getCommaKeyword_2_0());
            	          
            	    }
            	    // InternalSpellGrammar.g:3364:1: ( (lv_with_item_3_0= rulewith_item ) )
            	    // InternalSpellGrammar.g:3365:1: (lv_with_item_3_0= rulewith_item )
            	    {
            	    // InternalSpellGrammar.g:3365:1: (lv_with_item_3_0= rulewith_item )
            	    // InternalSpellGrammar.g:3366:3: lv_with_item_3_0= rulewith_item
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getWith_stmtAccess().getWith_itemWith_itemParserRuleCall_2_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_49);
            	    lv_with_item_3_0=rulewith_item();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getWith_stmtRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"with_item",
            	              		lv_with_item_3_0, 
            	              		"lu.ses.engineering.spell.controlflow.SpellGrammar.with_item");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop60;
                }
            } while (true);

            otherlv_4=(Token)match(input,22,FollowSets000.FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getWith_stmtAccess().getColonKeyword_3());
                  
            }
            // InternalSpellGrammar.g:3386:1: ( (lv_suite_5_0= rulesuite ) )
            // InternalSpellGrammar.g:3387:1: (lv_suite_5_0= rulesuite )
            {
            // InternalSpellGrammar.g:3387:1: (lv_suite_5_0= rulesuite )
            // InternalSpellGrammar.g:3388:3: lv_suite_5_0= rulesuite
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getWith_stmtAccess().getSuiteSuiteParserRuleCall_4_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_50);
            lv_suite_5_0=rulesuite();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getWith_stmtRule());
              	        }
                     		set(
                     			current, 
                     			"suite",
                      		lv_suite_5_0, 
                      		"lu.ses.engineering.spell.controlflow.SpellGrammar.suite");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            this_ENDWITH_6=(Token)match(input,RULE_ENDWITH,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_ENDWITH_6, grammarAccess.getWith_stmtAccess().getENDWITHTerminalRuleCall_5()); 
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 88, rulewith_stmt_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "rulewith_stmt"


    // $ANTLR start "entryRulewith_item"
    // InternalSpellGrammar.g:3416:1: entryRulewith_item returns [EObject current=null] : iv_rulewith_item= rulewith_item EOF ;
    public final EObject entryRulewith_item() throws RecognitionException {
        EObject current = null;
        int entryRulewith_item_StartIndex = input.index();
        EObject iv_rulewith_item = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 89) ) { return current; }
            // InternalSpellGrammar.g:3417:2: (iv_rulewith_item= rulewith_item EOF )
            // InternalSpellGrammar.g:3418:2: iv_rulewith_item= rulewith_item EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getWith_itemRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulewith_item=rulewith_item();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulewith_item; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 89, entryRulewith_item_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRulewith_item"


    // $ANTLR start "rulewith_item"
    // InternalSpellGrammar.g:3425:1: rulewith_item returns [EObject current=null] : ( ( (lv_test_0_0= ruletest ) ) (otherlv_1= 'as' ( (lv_expr_2_0= ruleexpr ) ) )? ) ;
    public final EObject rulewith_item() throws RecognitionException {
        EObject current = null;
        int rulewith_item_StartIndex = input.index();
        Token otherlv_1=null;
        EObject lv_test_0_0 = null;

        EObject lv_expr_2_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 90) ) { return current; }
            // InternalSpellGrammar.g:3428:28: ( ( ( (lv_test_0_0= ruletest ) ) (otherlv_1= 'as' ( (lv_expr_2_0= ruleexpr ) ) )? ) )
            // InternalSpellGrammar.g:3429:1: ( ( (lv_test_0_0= ruletest ) ) (otherlv_1= 'as' ( (lv_expr_2_0= ruleexpr ) ) )? )
            {
            // InternalSpellGrammar.g:3429:1: ( ( (lv_test_0_0= ruletest ) ) (otherlv_1= 'as' ( (lv_expr_2_0= ruleexpr ) ) )? )
            // InternalSpellGrammar.g:3429:2: ( (lv_test_0_0= ruletest ) ) (otherlv_1= 'as' ( (lv_expr_2_0= ruleexpr ) ) )?
            {
            // InternalSpellGrammar.g:3429:2: ( (lv_test_0_0= ruletest ) )
            // InternalSpellGrammar.g:3430:1: (lv_test_0_0= ruletest )
            {
            // InternalSpellGrammar.g:3430:1: (lv_test_0_0= ruletest )
            // InternalSpellGrammar.g:3431:3: lv_test_0_0= ruletest
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getWith_itemAccess().getTestTestParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_34);
            lv_test_0_0=ruletest();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getWith_itemRule());
              	        }
                     		set(
                     			current, 
                     			"test",
                      		lv_test_0_0, 
                      		"lu.ses.engineering.spell.controlflow.SpellGrammar.test");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSpellGrammar.g:3447:2: (otherlv_1= 'as' ( (lv_expr_2_0= ruleexpr ) ) )?
            int alt61=2;
            int LA61_0 = input.LA(1);

            if ( (LA61_0==49) ) {
                alt61=1;
            }
            switch (alt61) {
                case 1 :
                    // InternalSpellGrammar.g:3447:4: otherlv_1= 'as' ( (lv_expr_2_0= ruleexpr ) )
                    {
                    otherlv_1=(Token)match(input,49,FollowSets000.FOLLOW_28); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getWith_itemAccess().getAsKeyword_1_0());
                          
                    }
                    // InternalSpellGrammar.g:3451:1: ( (lv_expr_2_0= ruleexpr ) )
                    // InternalSpellGrammar.g:3452:1: (lv_expr_2_0= ruleexpr )
                    {
                    // InternalSpellGrammar.g:3452:1: (lv_expr_2_0= ruleexpr )
                    // InternalSpellGrammar.g:3453:3: lv_expr_2_0= ruleexpr
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getWith_itemAccess().getExprExprParserRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_expr_2_0=ruleexpr();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getWith_itemRule());
                      	        }
                             		set(
                             			current, 
                             			"expr",
                              		lv_expr_2_0, 
                              		"lu.ses.engineering.spell.controlflow.SpellGrammar.expr");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 90, rulewith_item_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "rulewith_item"


    // $ANTLR start "entryRuleexcept_clause"
    // InternalSpellGrammar.g:3477:1: entryRuleexcept_clause returns [EObject current=null] : iv_ruleexcept_clause= ruleexcept_clause EOF ;
    public final EObject entryRuleexcept_clause() throws RecognitionException {
        EObject current = null;
        int entryRuleexcept_clause_StartIndex = input.index();
        EObject iv_ruleexcept_clause = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 91) ) { return current; }
            // InternalSpellGrammar.g:3478:2: (iv_ruleexcept_clause= ruleexcept_clause EOF )
            // InternalSpellGrammar.g:3479:2: iv_ruleexcept_clause= ruleexcept_clause EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExcept_clauseRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleexcept_clause=ruleexcept_clause();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleexcept_clause; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 91, entryRuleexcept_clause_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleexcept_clause"


    // $ANTLR start "ruleexcept_clause"
    // InternalSpellGrammar.g:3486:1: ruleexcept_clause returns [EObject current=null] : (otherlv_0= 'except' ( ( (lv_test_1_0= ruletest ) ) ( ( ( (lv_sign_2_1= 'as' | lv_sign_2_2= ',' ) ) ) ( (lv_next_test_3_0= ruletest ) ) )? )? otherlv_4= ':' ( (lv_suite_5_0= rulesuite ) ) ) ;
    public final EObject ruleexcept_clause() throws RecognitionException {
        EObject current = null;
        int ruleexcept_clause_StartIndex = input.index();
        Token otherlv_0=null;
        Token lv_sign_2_1=null;
        Token lv_sign_2_2=null;
        Token otherlv_4=null;
        EObject lv_test_1_0 = null;

        EObject lv_next_test_3_0 = null;

        EObject lv_suite_5_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 92) ) { return current; }
            // InternalSpellGrammar.g:3489:28: ( (otherlv_0= 'except' ( ( (lv_test_1_0= ruletest ) ) ( ( ( (lv_sign_2_1= 'as' | lv_sign_2_2= ',' ) ) ) ( (lv_next_test_3_0= ruletest ) ) )? )? otherlv_4= ':' ( (lv_suite_5_0= rulesuite ) ) ) )
            // InternalSpellGrammar.g:3490:1: (otherlv_0= 'except' ( ( (lv_test_1_0= ruletest ) ) ( ( ( (lv_sign_2_1= 'as' | lv_sign_2_2= ',' ) ) ) ( (lv_next_test_3_0= ruletest ) ) )? )? otherlv_4= ':' ( (lv_suite_5_0= rulesuite ) ) )
            {
            // InternalSpellGrammar.g:3490:1: (otherlv_0= 'except' ( ( (lv_test_1_0= ruletest ) ) ( ( ( (lv_sign_2_1= 'as' | lv_sign_2_2= ',' ) ) ) ( (lv_next_test_3_0= ruletest ) ) )? )? otherlv_4= ':' ( (lv_suite_5_0= rulesuite ) ) )
            // InternalSpellGrammar.g:3490:3: otherlv_0= 'except' ( ( (lv_test_1_0= ruletest ) ) ( ( ( (lv_sign_2_1= 'as' | lv_sign_2_2= ',' ) ) ) ( (lv_next_test_3_0= ruletest ) ) )? )? otherlv_4= ':' ( (lv_suite_5_0= rulesuite ) )
            {
            otherlv_0=(Token)match(input,62,FollowSets000.FOLLOW_51); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getExcept_clauseAccess().getExceptKeyword_0());
                  
            }
            // InternalSpellGrammar.g:3494:1: ( ( (lv_test_1_0= ruletest ) ) ( ( ( (lv_sign_2_1= 'as' | lv_sign_2_2= ',' ) ) ) ( (lv_next_test_3_0= ruletest ) ) )? )?
            int alt64=2;
            int LA64_0 = input.LA(1);

            if ( (LA64_0==RULE_STRING||(LA64_0>=RULE_NAME_TERMINAL && LA64_0<=RULE_NUMBER)||LA64_0==19||LA64_0==28||LA64_0==48||LA64_0==65||LA64_0==79||(LA64_0>=83 && LA64_0<=96)||LA64_0==98||(LA64_0>=100 && LA64_0<=101)) ) {
                alt64=1;
            }
            switch (alt64) {
                case 1 :
                    // InternalSpellGrammar.g:3494:2: ( (lv_test_1_0= ruletest ) ) ( ( ( (lv_sign_2_1= 'as' | lv_sign_2_2= ',' ) ) ) ( (lv_next_test_3_0= ruletest ) ) )?
                    {
                    // InternalSpellGrammar.g:3494:2: ( (lv_test_1_0= ruletest ) )
                    // InternalSpellGrammar.g:3495:1: (lv_test_1_0= ruletest )
                    {
                    // InternalSpellGrammar.g:3495:1: (lv_test_1_0= ruletest )
                    // InternalSpellGrammar.g:3496:3: lv_test_1_0= ruletest
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getExcept_clauseAccess().getTestTestParserRuleCall_1_0_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_52);
                    lv_test_1_0=ruletest();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getExcept_clauseRule());
                      	        }
                             		set(
                             			current, 
                             			"test",
                              		lv_test_1_0, 
                              		"lu.ses.engineering.spell.controlflow.SpellGrammar.test");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalSpellGrammar.g:3512:2: ( ( ( (lv_sign_2_1= 'as' | lv_sign_2_2= ',' ) ) ) ( (lv_next_test_3_0= ruletest ) ) )?
                    int alt63=2;
                    int LA63_0 = input.LA(1);

                    if ( (LA63_0==23||LA63_0==49) ) {
                        alt63=1;
                    }
                    switch (alt63) {
                        case 1 :
                            // InternalSpellGrammar.g:3512:3: ( ( (lv_sign_2_1= 'as' | lv_sign_2_2= ',' ) ) ) ( (lv_next_test_3_0= ruletest ) )
                            {
                            // InternalSpellGrammar.g:3512:3: ( ( (lv_sign_2_1= 'as' | lv_sign_2_2= ',' ) ) )
                            // InternalSpellGrammar.g:3513:1: ( (lv_sign_2_1= 'as' | lv_sign_2_2= ',' ) )
                            {
                            // InternalSpellGrammar.g:3513:1: ( (lv_sign_2_1= 'as' | lv_sign_2_2= ',' ) )
                            // InternalSpellGrammar.g:3514:1: (lv_sign_2_1= 'as' | lv_sign_2_2= ',' )
                            {
                            // InternalSpellGrammar.g:3514:1: (lv_sign_2_1= 'as' | lv_sign_2_2= ',' )
                            int alt62=2;
                            int LA62_0 = input.LA(1);

                            if ( (LA62_0==49) ) {
                                alt62=1;
                            }
                            else if ( (LA62_0==23) ) {
                                alt62=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 62, 0, input);

                                throw nvae;
                            }
                            switch (alt62) {
                                case 1 :
                                    // InternalSpellGrammar.g:3515:3: lv_sign_2_1= 'as'
                                    {
                                    lv_sign_2_1=(Token)match(input,49,FollowSets000.FOLLOW_16); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                              newLeafNode(lv_sign_2_1, grammarAccess.getExcept_clauseAccess().getSignAsKeyword_1_1_0_0_0());
                                          
                                    }
                                    if ( state.backtracking==0 ) {

                                      	        if (current==null) {
                                      	            current = createModelElement(grammarAccess.getExcept_clauseRule());
                                      	        }
                                             		setWithLastConsumed(current, "sign", lv_sign_2_1, null);
                                      	    
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalSpellGrammar.g:3527:8: lv_sign_2_2= ','
                                    {
                                    lv_sign_2_2=(Token)match(input,23,FollowSets000.FOLLOW_16); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                              newLeafNode(lv_sign_2_2, grammarAccess.getExcept_clauseAccess().getSignCommaKeyword_1_1_0_0_1());
                                          
                                    }
                                    if ( state.backtracking==0 ) {

                                      	        if (current==null) {
                                      	            current = createModelElement(grammarAccess.getExcept_clauseRule());
                                      	        }
                                             		setWithLastConsumed(current, "sign", lv_sign_2_2, null);
                                      	    
                                    }

                                    }
                                    break;

                            }


                            }


                            }

                            // InternalSpellGrammar.g:3542:2: ( (lv_next_test_3_0= ruletest ) )
                            // InternalSpellGrammar.g:3543:1: (lv_next_test_3_0= ruletest )
                            {
                            // InternalSpellGrammar.g:3543:1: (lv_next_test_3_0= ruletest )
                            // InternalSpellGrammar.g:3544:3: lv_next_test_3_0= ruletest
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getExcept_clauseAccess().getNext_testTestParserRuleCall_1_1_1_0()); 
                              	    
                            }
                            pushFollow(FollowSets000.FOLLOW_10);
                            lv_next_test_3_0=ruletest();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getExcept_clauseRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"next_test",
                                      		lv_next_test_3_0, 
                                      		"lu.ses.engineering.spell.controlflow.SpellGrammar.test");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }


                    }
                    break;

            }

            otherlv_4=(Token)match(input,22,FollowSets000.FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getExcept_clauseAccess().getColonKeyword_2());
                  
            }
            // InternalSpellGrammar.g:3564:1: ( (lv_suite_5_0= rulesuite ) )
            // InternalSpellGrammar.g:3565:1: (lv_suite_5_0= rulesuite )
            {
            // InternalSpellGrammar.g:3565:1: (lv_suite_5_0= rulesuite )
            // InternalSpellGrammar.g:3566:3: lv_suite_5_0= rulesuite
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getExcept_clauseAccess().getSuiteSuiteParserRuleCall_3_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_suite_5_0=rulesuite();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getExcept_clauseRule());
              	        }
                     		set(
                     			current, 
                     			"suite",
                      		lv_suite_5_0, 
                      		"lu.ses.engineering.spell.controlflow.SpellGrammar.suite");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 92, ruleexcept_clause_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleexcept_clause"


    // $ANTLR start "entryRulesuite"
    // InternalSpellGrammar.g:3590:1: entryRulesuite returns [EObject current=null] : iv_rulesuite= rulesuite EOF ;
    public final EObject entryRulesuite() throws RecognitionException {
        EObject current = null;
        int entryRulesuite_StartIndex = input.index();
        EObject iv_rulesuite = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 93) ) { return current; }
            // InternalSpellGrammar.g:3591:2: (iv_rulesuite= rulesuite EOF )
            // InternalSpellGrammar.g:3592:2: iv_rulesuite= rulesuite EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSuiteRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulesuite=rulesuite();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulesuite; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 93, entryRulesuite_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRulesuite"


    // $ANTLR start "rulesuite"
    // InternalSpellGrammar.g:3599:1: rulesuite returns [EObject current=null] : ( ( ( rulestmt ) )=> (lv_stmts_0_0= rulestmt ) )+ ;
    public final EObject rulesuite() throws RecognitionException {
        EObject current = null;
        int rulesuite_StartIndex = input.index();
        EObject lv_stmts_0_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 94) ) { return current; }
            // InternalSpellGrammar.g:3602:28: ( ( ( ( rulestmt ) )=> (lv_stmts_0_0= rulestmt ) )+ )
            // InternalSpellGrammar.g:3603:1: ( ( ( rulestmt ) )=> (lv_stmts_0_0= rulestmt ) )+
            {
            // InternalSpellGrammar.g:3603:1: ( ( ( rulestmt ) )=> (lv_stmts_0_0= rulestmt ) )+
            int cnt65=0;
            loop65:
            do {
                int alt65=2;
                alt65 = dfa65.predict(input);
                switch (alt65) {
            	case 1 :
            	    // InternalSpellGrammar.g:3603:2: ( ( rulestmt ) )=> (lv_stmts_0_0= rulestmt )
            	    {
            	    // InternalSpellGrammar.g:3608:1: (lv_stmts_0_0= rulestmt )
            	    // InternalSpellGrammar.g:3609:3: lv_stmts_0_0= rulestmt
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getSuiteAccess().getStmtsStmtParserRuleCall_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_3);
            	    lv_stmts_0_0=rulestmt();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getSuiteRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"stmts",
            	              		lv_stmts_0_0, 
            	              		"lu.ses.engineering.spell.controlflow.SpellGrammar.stmt");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt65 >= 1 ) break loop65;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(65, input);
                        throw eee;
                }
                cnt65++;
            } while (true);


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 94, rulesuite_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "rulesuite"


    // $ANTLR start "entryRuletestlist_safe"
    // InternalSpellGrammar.g:3633:1: entryRuletestlist_safe returns [EObject current=null] : iv_ruletestlist_safe= ruletestlist_safe EOF ;
    public final EObject entryRuletestlist_safe() throws RecognitionException {
        EObject current = null;
        int entryRuletestlist_safe_StartIndex = input.index();
        EObject iv_ruletestlist_safe = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 95) ) { return current; }
            // InternalSpellGrammar.g:3634:2: (iv_ruletestlist_safe= ruletestlist_safe EOF )
            // InternalSpellGrammar.g:3635:2: iv_ruletestlist_safe= ruletestlist_safe EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTestlist_safeRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruletestlist_safe=ruletestlist_safe();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruletestlist_safe; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 95, entryRuletestlist_safe_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuletestlist_safe"


    // $ANTLR start "ruletestlist_safe"
    // InternalSpellGrammar.g:3642:1: ruletestlist_safe returns [EObject current=null] : ( ( (lv_old_test_0_0= ruletest ) ) ( (otherlv_1= ',' ( (lv_old_test_2_0= ruletest ) ) )+ ( (lv_optionalComa_3_0= ',' ) )? )? ) ;
    public final EObject ruletestlist_safe() throws RecognitionException {
        EObject current = null;
        int ruletestlist_safe_StartIndex = input.index();
        Token otherlv_1=null;
        Token lv_optionalComa_3_0=null;
        EObject lv_old_test_0_0 = null;

        EObject lv_old_test_2_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 96) ) { return current; }
            // InternalSpellGrammar.g:3645:28: ( ( ( (lv_old_test_0_0= ruletest ) ) ( (otherlv_1= ',' ( (lv_old_test_2_0= ruletest ) ) )+ ( (lv_optionalComa_3_0= ',' ) )? )? ) )
            // InternalSpellGrammar.g:3646:1: ( ( (lv_old_test_0_0= ruletest ) ) ( (otherlv_1= ',' ( (lv_old_test_2_0= ruletest ) ) )+ ( (lv_optionalComa_3_0= ',' ) )? )? )
            {
            // InternalSpellGrammar.g:3646:1: ( ( (lv_old_test_0_0= ruletest ) ) ( (otherlv_1= ',' ( (lv_old_test_2_0= ruletest ) ) )+ ( (lv_optionalComa_3_0= ',' ) )? )? )
            // InternalSpellGrammar.g:3646:2: ( (lv_old_test_0_0= ruletest ) ) ( (otherlv_1= ',' ( (lv_old_test_2_0= ruletest ) ) )+ ( (lv_optionalComa_3_0= ',' ) )? )?
            {
            // InternalSpellGrammar.g:3646:2: ( (lv_old_test_0_0= ruletest ) )
            // InternalSpellGrammar.g:3647:1: (lv_old_test_0_0= ruletest )
            {
            // InternalSpellGrammar.g:3647:1: (lv_old_test_0_0= ruletest )
            // InternalSpellGrammar.g:3648:3: lv_old_test_0_0= ruletest
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getTestlist_safeAccess().getOld_testTestParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_19);
            lv_old_test_0_0=ruletest();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTestlist_safeRule());
              	        }
                     		add(
                     			current, 
                     			"old_test",
                      		lv_old_test_0_0, 
                      		"lu.ses.engineering.spell.controlflow.SpellGrammar.test");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSpellGrammar.g:3664:2: ( (otherlv_1= ',' ( (lv_old_test_2_0= ruletest ) ) )+ ( (lv_optionalComa_3_0= ',' ) )? )?
            int alt68=2;
            int LA68_0 = input.LA(1);

            if ( (LA68_0==23) ) {
                alt68=1;
            }
            switch (alt68) {
                case 1 :
                    // InternalSpellGrammar.g:3664:3: (otherlv_1= ',' ( (lv_old_test_2_0= ruletest ) ) )+ ( (lv_optionalComa_3_0= ',' ) )?
                    {
                    // InternalSpellGrammar.g:3664:3: (otherlv_1= ',' ( (lv_old_test_2_0= ruletest ) ) )+
                    int cnt66=0;
                    loop66:
                    do {
                        int alt66=2;
                        int LA66_0 = input.LA(1);

                        if ( (LA66_0==23) ) {
                            int LA66_1 = input.LA(2);

                            if ( (LA66_1==RULE_STRING||(LA66_1>=RULE_NAME_TERMINAL && LA66_1<=RULE_NUMBER)||LA66_1==19||LA66_1==28||LA66_1==48||LA66_1==65||LA66_1==79||(LA66_1>=83 && LA66_1<=96)||LA66_1==98||(LA66_1>=100 && LA66_1<=101)) ) {
                                alt66=1;
                            }


                        }


                        switch (alt66) {
                    	case 1 :
                    	    // InternalSpellGrammar.g:3664:5: otherlv_1= ',' ( (lv_old_test_2_0= ruletest ) )
                    	    {
                    	    otherlv_1=(Token)match(input,23,FollowSets000.FOLLOW_16); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_1, grammarAccess.getTestlist_safeAccess().getCommaKeyword_1_0_0());
                    	          
                    	    }
                    	    // InternalSpellGrammar.g:3668:1: ( (lv_old_test_2_0= ruletest ) )
                    	    // InternalSpellGrammar.g:3669:1: (lv_old_test_2_0= ruletest )
                    	    {
                    	    // InternalSpellGrammar.g:3669:1: (lv_old_test_2_0= ruletest )
                    	    // InternalSpellGrammar.g:3670:3: lv_old_test_2_0= ruletest
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getTestlist_safeAccess().getOld_testTestParserRuleCall_1_0_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_19);
                    	    lv_old_test_2_0=ruletest();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getTestlist_safeRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"old_test",
                    	              		lv_old_test_2_0, 
                    	              		"lu.ses.engineering.spell.controlflow.SpellGrammar.test");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt66 >= 1 ) break loop66;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(66, input);
                                throw eee;
                        }
                        cnt66++;
                    } while (true);

                    // InternalSpellGrammar.g:3686:4: ( (lv_optionalComa_3_0= ',' ) )?
                    int alt67=2;
                    int LA67_0 = input.LA(1);

                    if ( (LA67_0==23) ) {
                        alt67=1;
                    }
                    switch (alt67) {
                        case 1 :
                            // InternalSpellGrammar.g:3687:1: (lv_optionalComa_3_0= ',' )
                            {
                            // InternalSpellGrammar.g:3687:1: (lv_optionalComa_3_0= ',' )
                            // InternalSpellGrammar.g:3688:3: lv_optionalComa_3_0= ','
                            {
                            lv_optionalComa_3_0=(Token)match(input,23,FollowSets000.FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_optionalComa_3_0, grammarAccess.getTestlist_safeAccess().getOptionalComaCommaKeyword_1_1_0());
                                  
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getTestlist_safeRule());
                              	        }
                                     		setWithLastConsumed(current, "optionalComa", true, ",");
                              	    
                            }

                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 96, ruletestlist_safe_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruletestlist_safe"


    // $ANTLR start "entryRuletest"
    // InternalSpellGrammar.g:3709:1: entryRuletest returns [EObject current=null] : iv_ruletest= ruletest EOF ;
    public final EObject entryRuletest() throws RecognitionException {
        EObject current = null;
        int entryRuletest_StartIndex = input.index();
        EObject iv_ruletest = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 97) ) { return current; }
            // InternalSpellGrammar.g:3710:2: (iv_ruletest= ruletest EOF )
            // InternalSpellGrammar.g:3711:2: iv_ruletest= ruletest EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTestRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruletest=ruletest();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruletest; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 97, entryRuletest_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuletest"


    // $ANTLR start "ruletest"
    // InternalSpellGrammar.g:3718:1: ruletest returns [EObject current=null] : ( (this_or_test_0= ruleor_test ( () otherlv_2= 'if' ( (lv_if_test_3_0= ruleor_test ) ) otherlv_4= 'else' ( (lv_if_else_test_5_0= ruletest ) ) )? ) | this_lambdef_6= rulelambdef ) ;
    public final EObject ruletest() throws RecognitionException {
        EObject current = null;
        int ruletest_StartIndex = input.index();
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject this_or_test_0 = null;

        EObject lv_if_test_3_0 = null;

        EObject lv_if_else_test_5_0 = null;

        EObject this_lambdef_6 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 98) ) { return current; }
            // InternalSpellGrammar.g:3721:28: ( ( (this_or_test_0= ruleor_test ( () otherlv_2= 'if' ( (lv_if_test_3_0= ruleor_test ) ) otherlv_4= 'else' ( (lv_if_else_test_5_0= ruletest ) ) )? ) | this_lambdef_6= rulelambdef ) )
            // InternalSpellGrammar.g:3722:1: ( (this_or_test_0= ruleor_test ( () otherlv_2= 'if' ( (lv_if_test_3_0= ruleor_test ) ) otherlv_4= 'else' ( (lv_if_else_test_5_0= ruletest ) ) )? ) | this_lambdef_6= rulelambdef )
            {
            // InternalSpellGrammar.g:3722:1: ( (this_or_test_0= ruleor_test ( () otherlv_2= 'if' ( (lv_if_test_3_0= ruleor_test ) ) otherlv_4= 'else' ( (lv_if_else_test_5_0= ruletest ) ) )? ) | this_lambdef_6= rulelambdef )
            int alt70=2;
            int LA70_0 = input.LA(1);

            if ( (LA70_0==RULE_STRING||(LA70_0>=RULE_NAME_TERMINAL && LA70_0<=RULE_NUMBER)||LA70_0==19||LA70_0==28||LA70_0==48||LA70_0==65||LA70_0==79||(LA70_0>=83 && LA70_0<=96)||LA70_0==98||LA70_0==100) ) {
                alt70=1;
            }
            else if ( (LA70_0==101) ) {
                alt70=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 70, 0, input);

                throw nvae;
            }
            switch (alt70) {
                case 1 :
                    // InternalSpellGrammar.g:3722:2: (this_or_test_0= ruleor_test ( () otherlv_2= 'if' ( (lv_if_test_3_0= ruleor_test ) ) otherlv_4= 'else' ( (lv_if_else_test_5_0= ruletest ) ) )? )
                    {
                    // InternalSpellGrammar.g:3722:2: (this_or_test_0= ruleor_test ( () otherlv_2= 'if' ( (lv_if_test_3_0= ruleor_test ) ) otherlv_4= 'else' ( (lv_if_else_test_5_0= ruletest ) ) )? )
                    // InternalSpellGrammar.g:3723:2: this_or_test_0= ruleor_test ( () otherlv_2= 'if' ( (lv_if_test_3_0= ruleor_test ) ) otherlv_4= 'else' ( (lv_if_else_test_5_0= ruletest ) ) )?
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTestAccess().getOr_testParserRuleCall_0_0()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_53);
                    this_or_test_0=ruleor_test();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_or_test_0; 
                              afterParserOrEnumRuleCall();
                          
                    }
                    // InternalSpellGrammar.g:3734:1: ( () otherlv_2= 'if' ( (lv_if_test_3_0= ruleor_test ) ) otherlv_4= 'else' ( (lv_if_else_test_5_0= ruletest ) ) )?
                    int alt69=2;
                    alt69 = dfa69.predict(input);
                    switch (alt69) {
                        case 1 :
                            // InternalSpellGrammar.g:3734:2: () otherlv_2= 'if' ( (lv_if_test_3_0= ruleor_test ) ) otherlv_4= 'else' ( (lv_if_else_test_5_0= ruletest ) )
                            {
                            // InternalSpellGrammar.g:3734:2: ()
                            // InternalSpellGrammar.g:3735:2: 
                            {
                            if ( state.backtracking==0 ) {
                               
                              	  /* */ 
                              	
                            }
                            if ( state.backtracking==0 ) {

                                      current = forceCreateModelElementAndSet(
                                          grammarAccess.getTestAccess().getTestLeftAction_0_1_0(),
                                          current);
                                  
                            }

                            }

                            otherlv_2=(Token)match(input,55,FollowSets000.FOLLOW_28); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_2, grammarAccess.getTestAccess().getIfKeyword_0_1_1());
                                  
                            }
                            // InternalSpellGrammar.g:3747:1: ( (lv_if_test_3_0= ruleor_test ) )
                            // InternalSpellGrammar.g:3748:1: (lv_if_test_3_0= ruleor_test )
                            {
                            // InternalSpellGrammar.g:3748:1: (lv_if_test_3_0= ruleor_test )
                            // InternalSpellGrammar.g:3749:3: lv_if_test_3_0= ruleor_test
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getTestAccess().getIf_testOr_testParserRuleCall_0_1_2_0()); 
                              	    
                            }
                            pushFollow(FollowSets000.FOLLOW_54);
                            lv_if_test_3_0=ruleor_test();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getTestRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"if_test",
                                      		lv_if_test_3_0, 
                                      		"lu.ses.engineering.spell.controlflow.SpellGrammar.or_test");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }

                            otherlv_4=(Token)match(input,56,FollowSets000.FOLLOW_16); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_4, grammarAccess.getTestAccess().getElseKeyword_0_1_3());
                                  
                            }
                            // InternalSpellGrammar.g:3769:1: ( (lv_if_else_test_5_0= ruletest ) )
                            // InternalSpellGrammar.g:3770:1: (lv_if_else_test_5_0= ruletest )
                            {
                            // InternalSpellGrammar.g:3770:1: (lv_if_else_test_5_0= ruletest )
                            // InternalSpellGrammar.g:3771:3: lv_if_else_test_5_0= ruletest
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getTestAccess().getIf_else_testTestParserRuleCall_0_1_4_0()); 
                              	    
                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            lv_if_else_test_5_0=ruletest();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getTestRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"if_else_test",
                                      		lv_if_else_test_5_0, 
                                      		"lu.ses.engineering.spell.controlflow.SpellGrammar.test");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSpellGrammar.g:3789:2: this_lambdef_6= rulelambdef
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTestAccess().getLambdefParserRuleCall_1()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_lambdef_6=rulelambdef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_lambdef_6; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 98, ruletest_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruletest"


    // $ANTLR start "entryRuleor_test"
    // InternalSpellGrammar.g:3808:1: entryRuleor_test returns [EObject current=null] : iv_ruleor_test= ruleor_test EOF ;
    public final EObject entryRuleor_test() throws RecognitionException {
        EObject current = null;
        int entryRuleor_test_StartIndex = input.index();
        EObject iv_ruleor_test = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 99) ) { return current; }
            // InternalSpellGrammar.g:3809:2: (iv_ruleor_test= ruleor_test EOF )
            // InternalSpellGrammar.g:3810:2: iv_ruleor_test= ruleor_test EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOr_testRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleor_test=ruleor_test();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleor_test; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 99, entryRuleor_test_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleor_test"


    // $ANTLR start "ruleor_test"
    // InternalSpellGrammar.g:3817:1: ruleor_test returns [EObject current=null] : (this_and_test_0= ruleand_test ( () ( (lv_sign_2_0= 'or' ) ) ( ruleNL )? ( (lv_right_4_0= ruleand_test ) ) )* ) ;
    public final EObject ruleor_test() throws RecognitionException {
        EObject current = null;
        int ruleor_test_StartIndex = input.index();
        Token lv_sign_2_0=null;
        EObject this_and_test_0 = null;

        EObject lv_right_4_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 100) ) { return current; }
            // InternalSpellGrammar.g:3820:28: ( (this_and_test_0= ruleand_test ( () ( (lv_sign_2_0= 'or' ) ) ( ruleNL )? ( (lv_right_4_0= ruleand_test ) ) )* ) )
            // InternalSpellGrammar.g:3821:1: (this_and_test_0= ruleand_test ( () ( (lv_sign_2_0= 'or' ) ) ( ruleNL )? ( (lv_right_4_0= ruleand_test ) ) )* )
            {
            // InternalSpellGrammar.g:3821:1: (this_and_test_0= ruleand_test ( () ( (lv_sign_2_0= 'or' ) ) ( ruleNL )? ( (lv_right_4_0= ruleand_test ) ) )* )
            // InternalSpellGrammar.g:3822:2: this_and_test_0= ruleand_test ( () ( (lv_sign_2_0= 'or' ) ) ( ruleNL )? ( (lv_right_4_0= ruleand_test ) ) )*
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getOr_testAccess().getAnd_testParserRuleCall_0()); 
                  
            }
            pushFollow(FollowSets000.FOLLOW_55);
            this_and_test_0=ruleand_test();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                      current = this_and_test_0; 
                      afterParserOrEnumRuleCall();
                  
            }
            // InternalSpellGrammar.g:3833:1: ( () ( (lv_sign_2_0= 'or' ) ) ( ruleNL )? ( (lv_right_4_0= ruleand_test ) ) )*
            loop72:
            do {
                int alt72=2;
                int LA72_0 = input.LA(1);

                if ( (LA72_0==63) ) {
                    alt72=1;
                }


                switch (alt72) {
            	case 1 :
            	    // InternalSpellGrammar.g:3833:2: () ( (lv_sign_2_0= 'or' ) ) ( ruleNL )? ( (lv_right_4_0= ruleand_test ) )
            	    {
            	    // InternalSpellGrammar.g:3833:2: ()
            	    // InternalSpellGrammar.g:3834:2: 
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	  /* */ 
            	      	
            	    }
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getOr_testAccess().getOr_testLeftAction_1_0(),
            	                  current);
            	          
            	    }

            	    }

            	    // InternalSpellGrammar.g:3842:2: ( (lv_sign_2_0= 'or' ) )
            	    // InternalSpellGrammar.g:3843:1: (lv_sign_2_0= 'or' )
            	    {
            	    // InternalSpellGrammar.g:3843:1: (lv_sign_2_0= 'or' )
            	    // InternalSpellGrammar.g:3844:3: lv_sign_2_0= 'or'
            	    {
            	    lv_sign_2_0=(Token)match(input,63,FollowSets000.FOLLOW_56); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	              newLeafNode(lv_sign_2_0, grammarAccess.getOr_testAccess().getSignOrKeyword_1_1_0());
            	          
            	    }
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElement(grammarAccess.getOr_testRule());
            	      	        }
            	             		setWithLastConsumed(current, "sign", lv_sign_2_0, "or");
            	      	    
            	    }

            	    }


            	    }

            	    // InternalSpellGrammar.g:3857:2: ( ruleNL )?
            	    int alt71=2;
            	    int LA71_0 = input.LA(1);

            	    if ( (LA71_0==104) ) {
            	        alt71=1;
            	    }
            	    switch (alt71) {
            	        case 1 :
            	            // InternalSpellGrammar.g:3858:2: ruleNL
            	            {
            	            if ( state.backtracking==0 ) {
            	               
            	              	  /* */ 
            	              	
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                      newCompositeNode(grammarAccess.getOr_testAccess().getNLParserRuleCall_1_2()); 
            	                  
            	            }
            	            pushFollow(FollowSets000.FOLLOW_28);
            	            ruleNL();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {
            	               
            	                      afterParserOrEnumRuleCall();
            	                  
            	            }

            	            }
            	            break;

            	    }

            	    // InternalSpellGrammar.g:3868:3: ( (lv_right_4_0= ruleand_test ) )
            	    // InternalSpellGrammar.g:3869:1: (lv_right_4_0= ruleand_test )
            	    {
            	    // InternalSpellGrammar.g:3869:1: (lv_right_4_0= ruleand_test )
            	    // InternalSpellGrammar.g:3870:3: lv_right_4_0= ruleand_test
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getOr_testAccess().getRightAnd_testParserRuleCall_1_3_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_55);
            	    lv_right_4_0=ruleand_test();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getOr_testRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"right",
            	              		lv_right_4_0, 
            	              		"lu.ses.engineering.spell.controlflow.SpellGrammar.and_test");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop72;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 100, ruleor_test_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleor_test"


    // $ANTLR start "entryRuleand_test"
    // InternalSpellGrammar.g:3894:1: entryRuleand_test returns [EObject current=null] : iv_ruleand_test= ruleand_test EOF ;
    public final EObject entryRuleand_test() throws RecognitionException {
        EObject current = null;
        int entryRuleand_test_StartIndex = input.index();
        EObject iv_ruleand_test = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 101) ) { return current; }
            // InternalSpellGrammar.g:3895:2: (iv_ruleand_test= ruleand_test EOF )
            // InternalSpellGrammar.g:3896:2: iv_ruleand_test= ruleand_test EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnd_testRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleand_test=ruleand_test();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleand_test; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 101, entryRuleand_test_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleand_test"


    // $ANTLR start "ruleand_test"
    // InternalSpellGrammar.g:3903:1: ruleand_test returns [EObject current=null] : (this_not_test_0= rulenot_test ( () ( (lv_sign_2_0= 'and' ) ) ( ruleNL )? ( (lv_right_4_0= rulenot_test ) ) )* ) ;
    public final EObject ruleand_test() throws RecognitionException {
        EObject current = null;
        int ruleand_test_StartIndex = input.index();
        Token lv_sign_2_0=null;
        EObject this_not_test_0 = null;

        EObject lv_right_4_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 102) ) { return current; }
            // InternalSpellGrammar.g:3906:28: ( (this_not_test_0= rulenot_test ( () ( (lv_sign_2_0= 'and' ) ) ( ruleNL )? ( (lv_right_4_0= rulenot_test ) ) )* ) )
            // InternalSpellGrammar.g:3907:1: (this_not_test_0= rulenot_test ( () ( (lv_sign_2_0= 'and' ) ) ( ruleNL )? ( (lv_right_4_0= rulenot_test ) ) )* )
            {
            // InternalSpellGrammar.g:3907:1: (this_not_test_0= rulenot_test ( () ( (lv_sign_2_0= 'and' ) ) ( ruleNL )? ( (lv_right_4_0= rulenot_test ) ) )* )
            // InternalSpellGrammar.g:3908:2: this_not_test_0= rulenot_test ( () ( (lv_sign_2_0= 'and' ) ) ( ruleNL )? ( (lv_right_4_0= rulenot_test ) ) )*
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getAnd_testAccess().getNot_testParserRuleCall_0()); 
                  
            }
            pushFollow(FollowSets000.FOLLOW_57);
            this_not_test_0=rulenot_test();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                      current = this_not_test_0; 
                      afterParserOrEnumRuleCall();
                  
            }
            // InternalSpellGrammar.g:3919:1: ( () ( (lv_sign_2_0= 'and' ) ) ( ruleNL )? ( (lv_right_4_0= rulenot_test ) ) )*
            loop74:
            do {
                int alt74=2;
                int LA74_0 = input.LA(1);

                if ( (LA74_0==64) ) {
                    alt74=1;
                }


                switch (alt74) {
            	case 1 :
            	    // InternalSpellGrammar.g:3919:2: () ( (lv_sign_2_0= 'and' ) ) ( ruleNL )? ( (lv_right_4_0= rulenot_test ) )
            	    {
            	    // InternalSpellGrammar.g:3919:2: ()
            	    // InternalSpellGrammar.g:3920:2: 
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	  /* */ 
            	      	
            	    }
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getAnd_testAccess().getAnd_testLeftAction_1_0(),
            	                  current);
            	          
            	    }

            	    }

            	    // InternalSpellGrammar.g:3928:2: ( (lv_sign_2_0= 'and' ) )
            	    // InternalSpellGrammar.g:3929:1: (lv_sign_2_0= 'and' )
            	    {
            	    // InternalSpellGrammar.g:3929:1: (lv_sign_2_0= 'and' )
            	    // InternalSpellGrammar.g:3930:3: lv_sign_2_0= 'and'
            	    {
            	    lv_sign_2_0=(Token)match(input,64,FollowSets000.FOLLOW_56); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	              newLeafNode(lv_sign_2_0, grammarAccess.getAnd_testAccess().getSignAndKeyword_1_1_0());
            	          
            	    }
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElement(grammarAccess.getAnd_testRule());
            	      	        }
            	             		setWithLastConsumed(current, "sign", lv_sign_2_0, "and");
            	      	    
            	    }

            	    }


            	    }

            	    // InternalSpellGrammar.g:3943:2: ( ruleNL )?
            	    int alt73=2;
            	    int LA73_0 = input.LA(1);

            	    if ( (LA73_0==104) ) {
            	        alt73=1;
            	    }
            	    switch (alt73) {
            	        case 1 :
            	            // InternalSpellGrammar.g:3944:2: ruleNL
            	            {
            	            if ( state.backtracking==0 ) {
            	               
            	              	  /* */ 
            	              	
            	            }
            	            if ( state.backtracking==0 ) {
            	               
            	                      newCompositeNode(grammarAccess.getAnd_testAccess().getNLParserRuleCall_1_2()); 
            	                  
            	            }
            	            pushFollow(FollowSets000.FOLLOW_28);
            	            ruleNL();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {
            	               
            	                      afterParserOrEnumRuleCall();
            	                  
            	            }

            	            }
            	            break;

            	    }

            	    // InternalSpellGrammar.g:3954:3: ( (lv_right_4_0= rulenot_test ) )
            	    // InternalSpellGrammar.g:3955:1: (lv_right_4_0= rulenot_test )
            	    {
            	    // InternalSpellGrammar.g:3955:1: (lv_right_4_0= rulenot_test )
            	    // InternalSpellGrammar.g:3956:3: lv_right_4_0= rulenot_test
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getAnd_testAccess().getRightNot_testParserRuleCall_1_3_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_57);
            	    lv_right_4_0=rulenot_test();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getAnd_testRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"right",
            	              		lv_right_4_0, 
            	              		"lu.ses.engineering.spell.controlflow.SpellGrammar.not_test");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop74;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 102, ruleand_test_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleand_test"


    // $ANTLR start "entryRulenot_test"
    // InternalSpellGrammar.g:3980:1: entryRulenot_test returns [EObject current=null] : iv_rulenot_test= rulenot_test EOF ;
    public final EObject entryRulenot_test() throws RecognitionException {
        EObject current = null;
        int entryRulenot_test_StartIndex = input.index();
        EObject iv_rulenot_test = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 103) ) { return current; }
            // InternalSpellGrammar.g:3981:2: (iv_rulenot_test= rulenot_test EOF )
            // InternalSpellGrammar.g:3982:2: iv_rulenot_test= rulenot_test EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNot_testRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulenot_test=rulenot_test();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulenot_test; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 103, entryRulenot_test_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRulenot_test"


    // $ANTLR start "rulenot_test"
    // InternalSpellGrammar.g:3989:1: rulenot_test returns [EObject current=null] : ( ( ( (lv_not_0_0= 'not' ) )+ ( (lv_comparison_1_0= rulecomparison ) ) ) | this_comparison_2= rulecomparison ) ;
    public final EObject rulenot_test() throws RecognitionException {
        EObject current = null;
        int rulenot_test_StartIndex = input.index();
        Token lv_not_0_0=null;
        EObject lv_comparison_1_0 = null;

        EObject this_comparison_2 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 104) ) { return current; }
            // InternalSpellGrammar.g:3992:28: ( ( ( ( (lv_not_0_0= 'not' ) )+ ( (lv_comparison_1_0= rulecomparison ) ) ) | this_comparison_2= rulecomparison ) )
            // InternalSpellGrammar.g:3993:1: ( ( ( (lv_not_0_0= 'not' ) )+ ( (lv_comparison_1_0= rulecomparison ) ) ) | this_comparison_2= rulecomparison )
            {
            // InternalSpellGrammar.g:3993:1: ( ( ( (lv_not_0_0= 'not' ) )+ ( (lv_comparison_1_0= rulecomparison ) ) ) | this_comparison_2= rulecomparison )
            int alt76=2;
            int LA76_0 = input.LA(1);

            if ( (LA76_0==65) ) {
                alt76=1;
            }
            else if ( (LA76_0==RULE_STRING||(LA76_0>=RULE_NAME_TERMINAL && LA76_0<=RULE_NUMBER)||LA76_0==19||LA76_0==28||LA76_0==48||LA76_0==79||(LA76_0>=83 && LA76_0<=96)||LA76_0==98||LA76_0==100) ) {
                alt76=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 76, 0, input);

                throw nvae;
            }
            switch (alt76) {
                case 1 :
                    // InternalSpellGrammar.g:3993:2: ( ( (lv_not_0_0= 'not' ) )+ ( (lv_comparison_1_0= rulecomparison ) ) )
                    {
                    // InternalSpellGrammar.g:3993:2: ( ( (lv_not_0_0= 'not' ) )+ ( (lv_comparison_1_0= rulecomparison ) ) )
                    // InternalSpellGrammar.g:3993:3: ( (lv_not_0_0= 'not' ) )+ ( (lv_comparison_1_0= rulecomparison ) )
                    {
                    // InternalSpellGrammar.g:3993:3: ( (lv_not_0_0= 'not' ) )+
                    int cnt75=0;
                    loop75:
                    do {
                        int alt75=2;
                        int LA75_0 = input.LA(1);

                        if ( (LA75_0==65) ) {
                            alt75=1;
                        }


                        switch (alt75) {
                    	case 1 :
                    	    // InternalSpellGrammar.g:3994:1: (lv_not_0_0= 'not' )
                    	    {
                    	    // InternalSpellGrammar.g:3994:1: (lv_not_0_0= 'not' )
                    	    // InternalSpellGrammar.g:3995:3: lv_not_0_0= 'not'
                    	    {
                    	    lv_not_0_0=(Token)match(input,65,FollowSets000.FOLLOW_28); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	              newLeafNode(lv_not_0_0, grammarAccess.getNot_testAccess().getNotNotKeyword_0_0_0());
                    	          
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElement(grammarAccess.getNot_testRule());
                    	      	        }
                    	             		addWithLastConsumed(current, "not", lv_not_0_0, "not");
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt75 >= 1 ) break loop75;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(75, input);
                                throw eee;
                        }
                        cnt75++;
                    } while (true);

                    // InternalSpellGrammar.g:4008:3: ( (lv_comparison_1_0= rulecomparison ) )
                    // InternalSpellGrammar.g:4009:1: (lv_comparison_1_0= rulecomparison )
                    {
                    // InternalSpellGrammar.g:4009:1: (lv_comparison_1_0= rulecomparison )
                    // InternalSpellGrammar.g:4010:3: lv_comparison_1_0= rulecomparison
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getNot_testAccess().getComparisonComparisonParserRuleCall_0_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_comparison_1_0=rulecomparison();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getNot_testRule());
                      	        }
                             		set(
                             			current, 
                             			"comparison",
                              		lv_comparison_1_0, 
                              		"lu.ses.engineering.spell.controlflow.SpellGrammar.comparison");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSpellGrammar.g:4028:2: this_comparison_2= rulecomparison
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getNot_testAccess().getComparisonParserRuleCall_1()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_comparison_2=rulecomparison();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_comparison_2; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 104, rulenot_test_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "rulenot_test"


    // $ANTLR start "entryRulecomparison"
    // InternalSpellGrammar.g:4047:1: entryRulecomparison returns [EObject current=null] : iv_rulecomparison= rulecomparison EOF ;
    public final EObject entryRulecomparison() throws RecognitionException {
        EObject current = null;
        int entryRulecomparison_StartIndex = input.index();
        EObject iv_rulecomparison = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 105) ) { return current; }
            // InternalSpellGrammar.g:4048:2: (iv_rulecomparison= rulecomparison EOF )
            // InternalSpellGrammar.g:4049:2: iv_rulecomparison= rulecomparison EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getComparisonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulecomparison=rulecomparison();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulecomparison; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 105, entryRulecomparison_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRulecomparison"


    // $ANTLR start "rulecomparison"
    // InternalSpellGrammar.g:4056:1: rulecomparison returns [EObject current=null] : (this_expr_0= ruleexpr ( () ( (lv_comp_op_2_0= rulecomp_op ) ) ( (lv_right_3_0= ruleexpr ) ) )* ) ;
    public final EObject rulecomparison() throws RecognitionException {
        EObject current = null;
        int rulecomparison_StartIndex = input.index();
        EObject this_expr_0 = null;

        AntlrDatatypeRuleToken lv_comp_op_2_0 = null;

        EObject lv_right_3_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 106) ) { return current; }
            // InternalSpellGrammar.g:4059:28: ( (this_expr_0= ruleexpr ( () ( (lv_comp_op_2_0= rulecomp_op ) ) ( (lv_right_3_0= ruleexpr ) ) )* ) )
            // InternalSpellGrammar.g:4060:1: (this_expr_0= ruleexpr ( () ( (lv_comp_op_2_0= rulecomp_op ) ) ( (lv_right_3_0= ruleexpr ) ) )* )
            {
            // InternalSpellGrammar.g:4060:1: (this_expr_0= ruleexpr ( () ( (lv_comp_op_2_0= rulecomp_op ) ) ( (lv_right_3_0= ruleexpr ) ) )* )
            // InternalSpellGrammar.g:4061:2: this_expr_0= ruleexpr ( () ( (lv_comp_op_2_0= rulecomp_op ) ) ( (lv_right_3_0= ruleexpr ) ) )*
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getComparisonAccess().getExprParserRuleCall_0()); 
                  
            }
            pushFollow(FollowSets000.FOLLOW_58);
            this_expr_0=ruleexpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                      current = this_expr_0; 
                      afterParserOrEnumRuleCall();
                  
            }
            // InternalSpellGrammar.g:4072:1: ( () ( (lv_comp_op_2_0= rulecomp_op ) ) ( (lv_right_3_0= ruleexpr ) ) )*
            loop77:
            do {
                int alt77=2;
                int LA77_0 = input.LA(1);

                if ( (LA77_0==65) ) {
                    int LA77_2 = input.LA(2);

                    if ( (LA77_2==52) ) {
                        alt77=1;
                    }


                }
                else if ( (LA77_0==52||(LA77_0>=66 && LA77_0<=73)) ) {
                    alt77=1;
                }


                switch (alt77) {
            	case 1 :
            	    // InternalSpellGrammar.g:4072:2: () ( (lv_comp_op_2_0= rulecomp_op ) ) ( (lv_right_3_0= ruleexpr ) )
            	    {
            	    // InternalSpellGrammar.g:4072:2: ()
            	    // InternalSpellGrammar.g:4073:2: 
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	  /* */ 
            	      	
            	    }
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getComparisonAccess().getComparisonLeftAction_1_0(),
            	                  current);
            	          
            	    }

            	    }

            	    // InternalSpellGrammar.g:4081:2: ( (lv_comp_op_2_0= rulecomp_op ) )
            	    // InternalSpellGrammar.g:4082:1: (lv_comp_op_2_0= rulecomp_op )
            	    {
            	    // InternalSpellGrammar.g:4082:1: (lv_comp_op_2_0= rulecomp_op )
            	    // InternalSpellGrammar.g:4083:3: lv_comp_op_2_0= rulecomp_op
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getComparisonAccess().getComp_opComp_opParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_28);
            	    lv_comp_op_2_0=rulecomp_op();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getComparisonRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"comp_op",
            	              		lv_comp_op_2_0, 
            	              		"lu.ses.engineering.spell.controlflow.SpellGrammar.comp_op");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }

            	    // InternalSpellGrammar.g:4099:2: ( (lv_right_3_0= ruleexpr ) )
            	    // InternalSpellGrammar.g:4100:1: (lv_right_3_0= ruleexpr )
            	    {
            	    // InternalSpellGrammar.g:4100:1: (lv_right_3_0= ruleexpr )
            	    // InternalSpellGrammar.g:4101:3: lv_right_3_0= ruleexpr
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getComparisonAccess().getRightExprParserRuleCall_1_2_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_58);
            	    lv_right_3_0=ruleexpr();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getComparisonRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"right",
            	              		lv_right_3_0, 
            	              		"lu.ses.engineering.spell.controlflow.SpellGrammar.expr");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop77;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 106, rulecomparison_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "rulecomparison"


    // $ANTLR start "entryRulecomp_op"
    // InternalSpellGrammar.g:4125:1: entryRulecomp_op returns [String current=null] : iv_rulecomp_op= rulecomp_op EOF ;
    public final String entryRulecomp_op() throws RecognitionException {
        String current = null;
        int entryRulecomp_op_StartIndex = input.index();
        AntlrDatatypeRuleToken iv_rulecomp_op = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 107) ) { return current; }
            // InternalSpellGrammar.g:4126:2: (iv_rulecomp_op= rulecomp_op EOF )
            // InternalSpellGrammar.g:4127:2: iv_rulecomp_op= rulecomp_op EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getComp_opRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulecomp_op=rulecomp_op();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulecomp_op.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 107, entryRulecomp_op_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRulecomp_op"


    // $ANTLR start "rulecomp_op"
    // InternalSpellGrammar.g:4134:1: rulecomp_op returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '<' | kw= '>' | kw= '==' | kw= '>=' | kw= '<=' | kw= '<>' | kw= '!=' | kw= 'in' | (kw= 'not' kw= 'in' ) | kw= 'is' | (kw= 'is' kw= 'not' ) ) ;
    public final AntlrDatatypeRuleToken rulecomp_op() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();
        int rulecomp_op_StartIndex = input.index();
        Token kw=null;

         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 108) ) { return current; }
            // InternalSpellGrammar.g:4137:28: ( (kw= '<' | kw= '>' | kw= '==' | kw= '>=' | kw= '<=' | kw= '<>' | kw= '!=' | kw= 'in' | (kw= 'not' kw= 'in' ) | kw= 'is' | (kw= 'is' kw= 'not' ) ) )
            // InternalSpellGrammar.g:4138:1: (kw= '<' | kw= '>' | kw= '==' | kw= '>=' | kw= '<=' | kw= '<>' | kw= '!=' | kw= 'in' | (kw= 'not' kw= 'in' ) | kw= 'is' | (kw= 'is' kw= 'not' ) )
            {
            // InternalSpellGrammar.g:4138:1: (kw= '<' | kw= '>' | kw= '==' | kw= '>=' | kw= '<=' | kw= '<>' | kw= '!=' | kw= 'in' | (kw= 'not' kw= 'in' ) | kw= 'is' | (kw= 'is' kw= 'not' ) )
            int alt78=11;
            alt78 = dfa78.predict(input);
            switch (alt78) {
                case 1 :
                    // InternalSpellGrammar.g:4139:2: kw= '<'
                    {
                    kw=(Token)match(input,66,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getComp_opAccess().getLessThanSignKeyword_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalSpellGrammar.g:4146:2: kw= '>'
                    {
                    kw=(Token)match(input,67,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getComp_opAccess().getGreaterThanSignKeyword_1()); 
                          
                    }

                    }
                    break;
                case 3 :
                    // InternalSpellGrammar.g:4153:2: kw= '=='
                    {
                    kw=(Token)match(input,68,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getComp_opAccess().getEqualsSignEqualsSignKeyword_2()); 
                          
                    }

                    }
                    break;
                case 4 :
                    // InternalSpellGrammar.g:4160:2: kw= '>='
                    {
                    kw=(Token)match(input,69,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getComp_opAccess().getGreaterThanSignEqualsSignKeyword_3()); 
                          
                    }

                    }
                    break;
                case 5 :
                    // InternalSpellGrammar.g:4167:2: kw= '<='
                    {
                    kw=(Token)match(input,70,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getComp_opAccess().getLessThanSignEqualsSignKeyword_4()); 
                          
                    }

                    }
                    break;
                case 6 :
                    // InternalSpellGrammar.g:4174:2: kw= '<>'
                    {
                    kw=(Token)match(input,71,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getComp_opAccess().getLessThanSignGreaterThanSignKeyword_5()); 
                          
                    }

                    }
                    break;
                case 7 :
                    // InternalSpellGrammar.g:4181:2: kw= '!='
                    {
                    kw=(Token)match(input,72,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getComp_opAccess().getExclamationMarkEqualsSignKeyword_6()); 
                          
                    }

                    }
                    break;
                case 8 :
                    // InternalSpellGrammar.g:4188:2: kw= 'in'
                    {
                    kw=(Token)match(input,52,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getComp_opAccess().getInKeyword_7()); 
                          
                    }

                    }
                    break;
                case 9 :
                    // InternalSpellGrammar.g:4194:6: (kw= 'not' kw= 'in' )
                    {
                    // InternalSpellGrammar.g:4194:6: (kw= 'not' kw= 'in' )
                    // InternalSpellGrammar.g:4195:2: kw= 'not' kw= 'in'
                    {
                    kw=(Token)match(input,65,FollowSets000.FOLLOW_41); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getComp_opAccess().getNotKeyword_8_0()); 
                          
                    }
                    kw=(Token)match(input,52,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getComp_opAccess().getInKeyword_8_1()); 
                          
                    }

                    }


                    }
                    break;
                case 10 :
                    // InternalSpellGrammar.g:4208:2: kw= 'is'
                    {
                    kw=(Token)match(input,73,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getComp_opAccess().getIsKeyword_9()); 
                          
                    }

                    }
                    break;
                case 11 :
                    // InternalSpellGrammar.g:4214:6: (kw= 'is' kw= 'not' )
                    {
                    // InternalSpellGrammar.g:4214:6: (kw= 'is' kw= 'not' )
                    // InternalSpellGrammar.g:4215:2: kw= 'is' kw= 'not'
                    {
                    kw=(Token)match(input,73,FollowSets000.FOLLOW_59); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getComp_opAccess().getIsKeyword_10_0()); 
                          
                    }
                    kw=(Token)match(input,65,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getComp_opAccess().getNotKeyword_10_1()); 
                          
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 108, rulecomp_op_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "rulecomp_op"


    // $ANTLR start "entryRuleexpr"
    // InternalSpellGrammar.g:4234:1: entryRuleexpr returns [EObject current=null] : iv_ruleexpr= ruleexpr EOF ;
    public final EObject entryRuleexpr() throws RecognitionException {
        EObject current = null;
        int entryRuleexpr_StartIndex = input.index();
        EObject iv_ruleexpr = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 109) ) { return current; }
            // InternalSpellGrammar.g:4235:2: (iv_ruleexpr= ruleexpr EOF )
            // InternalSpellGrammar.g:4236:2: iv_ruleexpr= ruleexpr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExprRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleexpr=ruleexpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleexpr; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 109, entryRuleexpr_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleexpr"


    // $ANTLR start "ruleexpr"
    // InternalSpellGrammar.g:4243:1: ruleexpr returns [EObject current=null] : (this_xor_expr_0= rulexor_expr ( () ( (lv_sign_2_0= '|' ) ) ( (lv_right_3_0= rulexor_expr ) ) )* ) ;
    public final EObject ruleexpr() throws RecognitionException {
        EObject current = null;
        int ruleexpr_StartIndex = input.index();
        Token lv_sign_2_0=null;
        EObject this_xor_expr_0 = null;

        EObject lv_right_3_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 110) ) { return current; }
            // InternalSpellGrammar.g:4246:28: ( (this_xor_expr_0= rulexor_expr ( () ( (lv_sign_2_0= '|' ) ) ( (lv_right_3_0= rulexor_expr ) ) )* ) )
            // InternalSpellGrammar.g:4247:1: (this_xor_expr_0= rulexor_expr ( () ( (lv_sign_2_0= '|' ) ) ( (lv_right_3_0= rulexor_expr ) ) )* )
            {
            // InternalSpellGrammar.g:4247:1: (this_xor_expr_0= rulexor_expr ( () ( (lv_sign_2_0= '|' ) ) ( (lv_right_3_0= rulexor_expr ) ) )* )
            // InternalSpellGrammar.g:4248:2: this_xor_expr_0= rulexor_expr ( () ( (lv_sign_2_0= '|' ) ) ( (lv_right_3_0= rulexor_expr ) ) )*
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getExprAccess().getXor_exprParserRuleCall_0()); 
                  
            }
            pushFollow(FollowSets000.FOLLOW_60);
            this_xor_expr_0=rulexor_expr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                      current = this_xor_expr_0; 
                      afterParserOrEnumRuleCall();
                  
            }
            // InternalSpellGrammar.g:4259:1: ( () ( (lv_sign_2_0= '|' ) ) ( (lv_right_3_0= rulexor_expr ) ) )*
            loop79:
            do {
                int alt79=2;
                int LA79_0 = input.LA(1);

                if ( (LA79_0==74) ) {
                    alt79=1;
                }


                switch (alt79) {
            	case 1 :
            	    // InternalSpellGrammar.g:4259:2: () ( (lv_sign_2_0= '|' ) ) ( (lv_right_3_0= rulexor_expr ) )
            	    {
            	    // InternalSpellGrammar.g:4259:2: ()
            	    // InternalSpellGrammar.g:4260:2: 
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	  /* */ 
            	      	
            	    }
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getExprAccess().getExprLeftAction_1_0(),
            	                  current);
            	          
            	    }

            	    }

            	    // InternalSpellGrammar.g:4268:2: ( (lv_sign_2_0= '|' ) )
            	    // InternalSpellGrammar.g:4269:1: (lv_sign_2_0= '|' )
            	    {
            	    // InternalSpellGrammar.g:4269:1: (lv_sign_2_0= '|' )
            	    // InternalSpellGrammar.g:4270:3: lv_sign_2_0= '|'
            	    {
            	    lv_sign_2_0=(Token)match(input,74,FollowSets000.FOLLOW_28); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	              newLeafNode(lv_sign_2_0, grammarAccess.getExprAccess().getSignVerticalLineKeyword_1_1_0());
            	          
            	    }
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElement(grammarAccess.getExprRule());
            	      	        }
            	             		setWithLastConsumed(current, "sign", lv_sign_2_0, "|");
            	      	    
            	    }

            	    }


            	    }

            	    // InternalSpellGrammar.g:4283:2: ( (lv_right_3_0= rulexor_expr ) )
            	    // InternalSpellGrammar.g:4284:1: (lv_right_3_0= rulexor_expr )
            	    {
            	    // InternalSpellGrammar.g:4284:1: (lv_right_3_0= rulexor_expr )
            	    // InternalSpellGrammar.g:4285:3: lv_right_3_0= rulexor_expr
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getExprAccess().getRightXor_exprParserRuleCall_1_2_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_60);
            	    lv_right_3_0=rulexor_expr();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getExprRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"right",
            	              		lv_right_3_0, 
            	              		"lu.ses.engineering.spell.controlflow.SpellGrammar.xor_expr");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop79;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 110, ruleexpr_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleexpr"


    // $ANTLR start "entryRulexor_expr"
    // InternalSpellGrammar.g:4309:1: entryRulexor_expr returns [EObject current=null] : iv_rulexor_expr= rulexor_expr EOF ;
    public final EObject entryRulexor_expr() throws RecognitionException {
        EObject current = null;
        int entryRulexor_expr_StartIndex = input.index();
        EObject iv_rulexor_expr = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 111) ) { return current; }
            // InternalSpellGrammar.g:4310:2: (iv_rulexor_expr= rulexor_expr EOF )
            // InternalSpellGrammar.g:4311:2: iv_rulexor_expr= rulexor_expr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXor_exprRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulexor_expr=rulexor_expr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulexor_expr; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 111, entryRulexor_expr_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRulexor_expr"


    // $ANTLR start "rulexor_expr"
    // InternalSpellGrammar.g:4318:1: rulexor_expr returns [EObject current=null] : (this_and_expr_0= ruleand_expr ( () ( (lv_sign_2_0= '^' ) ) ( (lv_right_3_0= ruleand_expr ) ) )* ) ;
    public final EObject rulexor_expr() throws RecognitionException {
        EObject current = null;
        int rulexor_expr_StartIndex = input.index();
        Token lv_sign_2_0=null;
        EObject this_and_expr_0 = null;

        EObject lv_right_3_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 112) ) { return current; }
            // InternalSpellGrammar.g:4321:28: ( (this_and_expr_0= ruleand_expr ( () ( (lv_sign_2_0= '^' ) ) ( (lv_right_3_0= ruleand_expr ) ) )* ) )
            // InternalSpellGrammar.g:4322:1: (this_and_expr_0= ruleand_expr ( () ( (lv_sign_2_0= '^' ) ) ( (lv_right_3_0= ruleand_expr ) ) )* )
            {
            // InternalSpellGrammar.g:4322:1: (this_and_expr_0= ruleand_expr ( () ( (lv_sign_2_0= '^' ) ) ( (lv_right_3_0= ruleand_expr ) ) )* )
            // InternalSpellGrammar.g:4323:2: this_and_expr_0= ruleand_expr ( () ( (lv_sign_2_0= '^' ) ) ( (lv_right_3_0= ruleand_expr ) ) )*
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getXor_exprAccess().getAnd_exprParserRuleCall_0()); 
                  
            }
            pushFollow(FollowSets000.FOLLOW_61);
            this_and_expr_0=ruleand_expr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                      current = this_and_expr_0; 
                      afterParserOrEnumRuleCall();
                  
            }
            // InternalSpellGrammar.g:4334:1: ( () ( (lv_sign_2_0= '^' ) ) ( (lv_right_3_0= ruleand_expr ) ) )*
            loop80:
            do {
                int alt80=2;
                int LA80_0 = input.LA(1);

                if ( (LA80_0==75) ) {
                    alt80=1;
                }


                switch (alt80) {
            	case 1 :
            	    // InternalSpellGrammar.g:4334:2: () ( (lv_sign_2_0= '^' ) ) ( (lv_right_3_0= ruleand_expr ) )
            	    {
            	    // InternalSpellGrammar.g:4334:2: ()
            	    // InternalSpellGrammar.g:4335:2: 
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	  /* */ 
            	      	
            	    }
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getXor_exprAccess().getXor_exprLeftAction_1_0(),
            	                  current);
            	          
            	    }

            	    }

            	    // InternalSpellGrammar.g:4343:2: ( (lv_sign_2_0= '^' ) )
            	    // InternalSpellGrammar.g:4344:1: (lv_sign_2_0= '^' )
            	    {
            	    // InternalSpellGrammar.g:4344:1: (lv_sign_2_0= '^' )
            	    // InternalSpellGrammar.g:4345:3: lv_sign_2_0= '^'
            	    {
            	    lv_sign_2_0=(Token)match(input,75,FollowSets000.FOLLOW_28); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	              newLeafNode(lv_sign_2_0, grammarAccess.getXor_exprAccess().getSignCircumflexAccentKeyword_1_1_0());
            	          
            	    }
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElement(grammarAccess.getXor_exprRule());
            	      	        }
            	             		setWithLastConsumed(current, "sign", lv_sign_2_0, "^");
            	      	    
            	    }

            	    }


            	    }

            	    // InternalSpellGrammar.g:4358:2: ( (lv_right_3_0= ruleand_expr ) )
            	    // InternalSpellGrammar.g:4359:1: (lv_right_3_0= ruleand_expr )
            	    {
            	    // InternalSpellGrammar.g:4359:1: (lv_right_3_0= ruleand_expr )
            	    // InternalSpellGrammar.g:4360:3: lv_right_3_0= ruleand_expr
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXor_exprAccess().getRightAnd_exprParserRuleCall_1_2_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_61);
            	    lv_right_3_0=ruleand_expr();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getXor_exprRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"right",
            	              		lv_right_3_0, 
            	              		"lu.ses.engineering.spell.controlflow.SpellGrammar.and_expr");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop80;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 112, rulexor_expr_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "rulexor_expr"


    // $ANTLR start "entryRuleand_expr"
    // InternalSpellGrammar.g:4384:1: entryRuleand_expr returns [EObject current=null] : iv_ruleand_expr= ruleand_expr EOF ;
    public final EObject entryRuleand_expr() throws RecognitionException {
        EObject current = null;
        int entryRuleand_expr_StartIndex = input.index();
        EObject iv_ruleand_expr = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 113) ) { return current; }
            // InternalSpellGrammar.g:4385:2: (iv_ruleand_expr= ruleand_expr EOF )
            // InternalSpellGrammar.g:4386:2: iv_ruleand_expr= ruleand_expr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnd_exprRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleand_expr=ruleand_expr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleand_expr; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 113, entryRuleand_expr_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleand_expr"


    // $ANTLR start "ruleand_expr"
    // InternalSpellGrammar.g:4393:1: ruleand_expr returns [EObject current=null] : (this_shift_expr_0= ruleshift_expr ( () ( (lv_sign_2_0= '&' ) ) ( (lv_right_3_0= ruleshift_expr ) ) )* ) ;
    public final EObject ruleand_expr() throws RecognitionException {
        EObject current = null;
        int ruleand_expr_StartIndex = input.index();
        Token lv_sign_2_0=null;
        EObject this_shift_expr_0 = null;

        EObject lv_right_3_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 114) ) { return current; }
            // InternalSpellGrammar.g:4396:28: ( (this_shift_expr_0= ruleshift_expr ( () ( (lv_sign_2_0= '&' ) ) ( (lv_right_3_0= ruleshift_expr ) ) )* ) )
            // InternalSpellGrammar.g:4397:1: (this_shift_expr_0= ruleshift_expr ( () ( (lv_sign_2_0= '&' ) ) ( (lv_right_3_0= ruleshift_expr ) ) )* )
            {
            // InternalSpellGrammar.g:4397:1: (this_shift_expr_0= ruleshift_expr ( () ( (lv_sign_2_0= '&' ) ) ( (lv_right_3_0= ruleshift_expr ) ) )* )
            // InternalSpellGrammar.g:4398:2: this_shift_expr_0= ruleshift_expr ( () ( (lv_sign_2_0= '&' ) ) ( (lv_right_3_0= ruleshift_expr ) ) )*
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getAnd_exprAccess().getShift_exprParserRuleCall_0()); 
                  
            }
            pushFollow(FollowSets000.FOLLOW_62);
            this_shift_expr_0=ruleshift_expr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                      current = this_shift_expr_0; 
                      afterParserOrEnumRuleCall();
                  
            }
            // InternalSpellGrammar.g:4409:1: ( () ( (lv_sign_2_0= '&' ) ) ( (lv_right_3_0= ruleshift_expr ) ) )*
            loop81:
            do {
                int alt81=2;
                int LA81_0 = input.LA(1);

                if ( (LA81_0==76) ) {
                    alt81=1;
                }


                switch (alt81) {
            	case 1 :
            	    // InternalSpellGrammar.g:4409:2: () ( (lv_sign_2_0= '&' ) ) ( (lv_right_3_0= ruleshift_expr ) )
            	    {
            	    // InternalSpellGrammar.g:4409:2: ()
            	    // InternalSpellGrammar.g:4410:2: 
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	  /* */ 
            	      	
            	    }
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getAnd_exprAccess().getAnd_exprLeftAction_1_0(),
            	                  current);
            	          
            	    }

            	    }

            	    // InternalSpellGrammar.g:4418:2: ( (lv_sign_2_0= '&' ) )
            	    // InternalSpellGrammar.g:4419:1: (lv_sign_2_0= '&' )
            	    {
            	    // InternalSpellGrammar.g:4419:1: (lv_sign_2_0= '&' )
            	    // InternalSpellGrammar.g:4420:3: lv_sign_2_0= '&'
            	    {
            	    lv_sign_2_0=(Token)match(input,76,FollowSets000.FOLLOW_28); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	              newLeafNode(lv_sign_2_0, grammarAccess.getAnd_exprAccess().getSignAmpersandKeyword_1_1_0());
            	          
            	    }
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElement(grammarAccess.getAnd_exprRule());
            	      	        }
            	             		setWithLastConsumed(current, "sign", lv_sign_2_0, "&");
            	      	    
            	    }

            	    }


            	    }

            	    // InternalSpellGrammar.g:4433:2: ( (lv_right_3_0= ruleshift_expr ) )
            	    // InternalSpellGrammar.g:4434:1: (lv_right_3_0= ruleshift_expr )
            	    {
            	    // InternalSpellGrammar.g:4434:1: (lv_right_3_0= ruleshift_expr )
            	    // InternalSpellGrammar.g:4435:3: lv_right_3_0= ruleshift_expr
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getAnd_exprAccess().getRightShift_exprParserRuleCall_1_2_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_62);
            	    lv_right_3_0=ruleshift_expr();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getAnd_exprRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"right",
            	              		lv_right_3_0, 
            	              		"lu.ses.engineering.spell.controlflow.SpellGrammar.shift_expr");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop81;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 114, ruleand_expr_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleand_expr"


    // $ANTLR start "entryRuleshift_expr"
    // InternalSpellGrammar.g:4459:1: entryRuleshift_expr returns [EObject current=null] : iv_ruleshift_expr= ruleshift_expr EOF ;
    public final EObject entryRuleshift_expr() throws RecognitionException {
        EObject current = null;
        int entryRuleshift_expr_StartIndex = input.index();
        EObject iv_ruleshift_expr = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 115) ) { return current; }
            // InternalSpellGrammar.g:4460:2: (iv_ruleshift_expr= ruleshift_expr EOF )
            // InternalSpellGrammar.g:4461:2: iv_ruleshift_expr= ruleshift_expr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getShift_exprRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleshift_expr=ruleshift_expr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleshift_expr; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 115, entryRuleshift_expr_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleshift_expr"


    // $ANTLR start "ruleshift_expr"
    // InternalSpellGrammar.g:4468:1: ruleshift_expr returns [EObject current=null] : (this_arith_expr_0= rulearith_expr ( () ( ( (lv_sign_2_1= '<<' | lv_sign_2_2= '>>' ) ) ) ( (lv_right_3_0= rulearith_expr ) ) )* ) ;
    public final EObject ruleshift_expr() throws RecognitionException {
        EObject current = null;
        int ruleshift_expr_StartIndex = input.index();
        Token lv_sign_2_1=null;
        Token lv_sign_2_2=null;
        EObject this_arith_expr_0 = null;

        EObject lv_right_3_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 116) ) { return current; }
            // InternalSpellGrammar.g:4471:28: ( (this_arith_expr_0= rulearith_expr ( () ( ( (lv_sign_2_1= '<<' | lv_sign_2_2= '>>' ) ) ) ( (lv_right_3_0= rulearith_expr ) ) )* ) )
            // InternalSpellGrammar.g:4472:1: (this_arith_expr_0= rulearith_expr ( () ( ( (lv_sign_2_1= '<<' | lv_sign_2_2= '>>' ) ) ) ( (lv_right_3_0= rulearith_expr ) ) )* )
            {
            // InternalSpellGrammar.g:4472:1: (this_arith_expr_0= rulearith_expr ( () ( ( (lv_sign_2_1= '<<' | lv_sign_2_2= '>>' ) ) ) ( (lv_right_3_0= rulearith_expr ) ) )* )
            // InternalSpellGrammar.g:4473:2: this_arith_expr_0= rulearith_expr ( () ( ( (lv_sign_2_1= '<<' | lv_sign_2_2= '>>' ) ) ) ( (lv_right_3_0= rulearith_expr ) ) )*
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getShift_exprAccess().getArith_exprParserRuleCall_0()); 
                  
            }
            pushFollow(FollowSets000.FOLLOW_63);
            this_arith_expr_0=rulearith_expr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                      current = this_arith_expr_0; 
                      afterParserOrEnumRuleCall();
                  
            }
            // InternalSpellGrammar.g:4484:1: ( () ( ( (lv_sign_2_1= '<<' | lv_sign_2_2= '>>' ) ) ) ( (lv_right_3_0= rulearith_expr ) ) )*
            loop83:
            do {
                int alt83=2;
                int LA83_0 = input.LA(1);

                if ( ((LA83_0>=77 && LA83_0<=78)) ) {
                    alt83=1;
                }


                switch (alt83) {
            	case 1 :
            	    // InternalSpellGrammar.g:4484:2: () ( ( (lv_sign_2_1= '<<' | lv_sign_2_2= '>>' ) ) ) ( (lv_right_3_0= rulearith_expr ) )
            	    {
            	    // InternalSpellGrammar.g:4484:2: ()
            	    // InternalSpellGrammar.g:4485:2: 
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	  /* */ 
            	      	
            	    }
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getShift_exprAccess().getShift_exprLeftAction_1_0(),
            	                  current);
            	          
            	    }

            	    }

            	    // InternalSpellGrammar.g:4493:2: ( ( (lv_sign_2_1= '<<' | lv_sign_2_2= '>>' ) ) )
            	    // InternalSpellGrammar.g:4494:1: ( (lv_sign_2_1= '<<' | lv_sign_2_2= '>>' ) )
            	    {
            	    // InternalSpellGrammar.g:4494:1: ( (lv_sign_2_1= '<<' | lv_sign_2_2= '>>' ) )
            	    // InternalSpellGrammar.g:4495:1: (lv_sign_2_1= '<<' | lv_sign_2_2= '>>' )
            	    {
            	    // InternalSpellGrammar.g:4495:1: (lv_sign_2_1= '<<' | lv_sign_2_2= '>>' )
            	    int alt82=2;
            	    int LA82_0 = input.LA(1);

            	    if ( (LA82_0==77) ) {
            	        alt82=1;
            	    }
            	    else if ( (LA82_0==78) ) {
            	        alt82=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 82, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt82) {
            	        case 1 :
            	            // InternalSpellGrammar.g:4496:3: lv_sign_2_1= '<<'
            	            {
            	            lv_sign_2_1=(Token)match(input,77,FollowSets000.FOLLOW_28); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                      newLeafNode(lv_sign_2_1, grammarAccess.getShift_exprAccess().getSignLessThanSignLessThanSignKeyword_1_1_0_0());
            	                  
            	            }
            	            if ( state.backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = createModelElement(grammarAccess.getShift_exprRule());
            	              	        }
            	                     		setWithLastConsumed(current, "sign", lv_sign_2_1, null);
            	              	    
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalSpellGrammar.g:4508:8: lv_sign_2_2= '>>'
            	            {
            	            lv_sign_2_2=(Token)match(input,78,FollowSets000.FOLLOW_28); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                      newLeafNode(lv_sign_2_2, grammarAccess.getShift_exprAccess().getSignGreaterThanSignGreaterThanSignKeyword_1_1_0_1());
            	                  
            	            }
            	            if ( state.backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = createModelElement(grammarAccess.getShift_exprRule());
            	              	        }
            	                     		setWithLastConsumed(current, "sign", lv_sign_2_2, null);
            	              	    
            	            }

            	            }
            	            break;

            	    }


            	    }


            	    }

            	    // InternalSpellGrammar.g:4523:2: ( (lv_right_3_0= rulearith_expr ) )
            	    // InternalSpellGrammar.g:4524:1: (lv_right_3_0= rulearith_expr )
            	    {
            	    // InternalSpellGrammar.g:4524:1: (lv_right_3_0= rulearith_expr )
            	    // InternalSpellGrammar.g:4525:3: lv_right_3_0= rulearith_expr
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getShift_exprAccess().getRightArith_exprParserRuleCall_1_2_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_63);
            	    lv_right_3_0=rulearith_expr();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getShift_exprRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"right",
            	              		lv_right_3_0, 
            	              		"lu.ses.engineering.spell.controlflow.SpellGrammar.arith_expr");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop83;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 116, ruleshift_expr_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleshift_expr"


    // $ANTLR start "entryRulearith_expr"
    // InternalSpellGrammar.g:4549:1: entryRulearith_expr returns [EObject current=null] : iv_rulearith_expr= rulearith_expr EOF ;
    public final EObject entryRulearith_expr() throws RecognitionException {
        EObject current = null;
        int entryRulearith_expr_StartIndex = input.index();
        EObject iv_rulearith_expr = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 117) ) { return current; }
            // InternalSpellGrammar.g:4550:2: (iv_rulearith_expr= rulearith_expr EOF )
            // InternalSpellGrammar.g:4551:2: iv_rulearith_expr= rulearith_expr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getArith_exprRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulearith_expr=rulearith_expr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulearith_expr; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 117, entryRulearith_expr_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRulearith_expr"


    // $ANTLR start "rulearith_expr"
    // InternalSpellGrammar.g:4558:1: rulearith_expr returns [EObject current=null] : (this_term_0= ruleterm ( () ( ( (lv_sign_2_1= '+' | lv_sign_2_2= '-' ) ) ) ( (lv_right_3_0= ruleterm ) ) )* ) ;
    public final EObject rulearith_expr() throws RecognitionException {
        EObject current = null;
        int rulearith_expr_StartIndex = input.index();
        Token lv_sign_2_1=null;
        Token lv_sign_2_2=null;
        EObject this_term_0 = null;

        EObject lv_right_3_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 118) ) { return current; }
            // InternalSpellGrammar.g:4561:28: ( (this_term_0= ruleterm ( () ( ( (lv_sign_2_1= '+' | lv_sign_2_2= '-' ) ) ) ( (lv_right_3_0= ruleterm ) ) )* ) )
            // InternalSpellGrammar.g:4562:1: (this_term_0= ruleterm ( () ( ( (lv_sign_2_1= '+' | lv_sign_2_2= '-' ) ) ) ( (lv_right_3_0= ruleterm ) ) )* )
            {
            // InternalSpellGrammar.g:4562:1: (this_term_0= ruleterm ( () ( ( (lv_sign_2_1= '+' | lv_sign_2_2= '-' ) ) ) ( (lv_right_3_0= ruleterm ) ) )* )
            // InternalSpellGrammar.g:4563:2: this_term_0= ruleterm ( () ( ( (lv_sign_2_1= '+' | lv_sign_2_2= '-' ) ) ) ( (lv_right_3_0= ruleterm ) ) )*
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getArith_exprAccess().getTermParserRuleCall_0()); 
                  
            }
            pushFollow(FollowSets000.FOLLOW_64);
            this_term_0=ruleterm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                      current = this_term_0; 
                      afterParserOrEnumRuleCall();
                  
            }
            // InternalSpellGrammar.g:4574:1: ( () ( ( (lv_sign_2_1= '+' | lv_sign_2_2= '-' ) ) ) ( (lv_right_3_0= ruleterm ) ) )*
            loop85:
            do {
                int alt85=2;
                alt85 = dfa85.predict(input);
                switch (alt85) {
            	case 1 :
            	    // InternalSpellGrammar.g:4574:2: () ( ( (lv_sign_2_1= '+' | lv_sign_2_2= '-' ) ) ) ( (lv_right_3_0= ruleterm ) )
            	    {
            	    // InternalSpellGrammar.g:4574:2: ()
            	    // InternalSpellGrammar.g:4575:2: 
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	  /* */ 
            	      	
            	    }
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getArith_exprAccess().getArith_exprLeftAction_1_0(),
            	                  current);
            	          
            	    }

            	    }

            	    // InternalSpellGrammar.g:4583:2: ( ( (lv_sign_2_1= '+' | lv_sign_2_2= '-' ) ) )
            	    // InternalSpellGrammar.g:4584:1: ( (lv_sign_2_1= '+' | lv_sign_2_2= '-' ) )
            	    {
            	    // InternalSpellGrammar.g:4584:1: ( (lv_sign_2_1= '+' | lv_sign_2_2= '-' ) )
            	    // InternalSpellGrammar.g:4585:1: (lv_sign_2_1= '+' | lv_sign_2_2= '-' )
            	    {
            	    // InternalSpellGrammar.g:4585:1: (lv_sign_2_1= '+' | lv_sign_2_2= '-' )
            	    int alt84=2;
            	    int LA84_0 = input.LA(1);

            	    if ( (LA84_0==28) ) {
            	        alt84=1;
            	    }
            	    else if ( (LA84_0==79) ) {
            	        alt84=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 84, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt84) {
            	        case 1 :
            	            // InternalSpellGrammar.g:4586:3: lv_sign_2_1= '+'
            	            {
            	            lv_sign_2_1=(Token)match(input,28,FollowSets000.FOLLOW_28); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                      newLeafNode(lv_sign_2_1, grammarAccess.getArith_exprAccess().getSignPlusSignKeyword_1_1_0_0());
            	                  
            	            }
            	            if ( state.backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = createModelElement(grammarAccess.getArith_exprRule());
            	              	        }
            	                     		setWithLastConsumed(current, "sign", lv_sign_2_1, null);
            	              	    
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalSpellGrammar.g:4598:8: lv_sign_2_2= '-'
            	            {
            	            lv_sign_2_2=(Token)match(input,79,FollowSets000.FOLLOW_28); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                      newLeafNode(lv_sign_2_2, grammarAccess.getArith_exprAccess().getSignHyphenMinusKeyword_1_1_0_1());
            	                  
            	            }
            	            if ( state.backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = createModelElement(grammarAccess.getArith_exprRule());
            	              	        }
            	                     		setWithLastConsumed(current, "sign", lv_sign_2_2, null);
            	              	    
            	            }

            	            }
            	            break;

            	    }


            	    }


            	    }

            	    // InternalSpellGrammar.g:4613:2: ( (lv_right_3_0= ruleterm ) )
            	    // InternalSpellGrammar.g:4614:1: (lv_right_3_0= ruleterm )
            	    {
            	    // InternalSpellGrammar.g:4614:1: (lv_right_3_0= ruleterm )
            	    // InternalSpellGrammar.g:4615:3: lv_right_3_0= ruleterm
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getArith_exprAccess().getRightTermParserRuleCall_1_2_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_64);
            	    lv_right_3_0=ruleterm();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getArith_exprRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"right",
            	              		lv_right_3_0, 
            	              		"lu.ses.engineering.spell.controlflow.SpellGrammar.term");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop85;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 118, rulearith_expr_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "rulearith_expr"


    // $ANTLR start "entryRuleterm"
    // InternalSpellGrammar.g:4639:1: entryRuleterm returns [EObject current=null] : iv_ruleterm= ruleterm EOF ;
    public final EObject entryRuleterm() throws RecognitionException {
        EObject current = null;
        int entryRuleterm_StartIndex = input.index();
        EObject iv_ruleterm = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 119) ) { return current; }
            // InternalSpellGrammar.g:4640:2: (iv_ruleterm= ruleterm EOF )
            // InternalSpellGrammar.g:4641:2: iv_ruleterm= ruleterm EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTermRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleterm=ruleterm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleterm; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 119, entryRuleterm_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleterm"


    // $ANTLR start "ruleterm"
    // InternalSpellGrammar.g:4648:1: ruleterm returns [EObject current=null] : (this_factor_0= rulefactor ( () ( ( (lv_sign_2_1= '*' | lv_sign_2_2= '/' | lv_sign_2_3= '%' | lv_sign_2_4= '//' | lv_sign_2_5= '**' ) ) ) ( (lv_right_3_0= rulefactor ) ) )* ) ;
    public final EObject ruleterm() throws RecognitionException {
        EObject current = null;
        int ruleterm_StartIndex = input.index();
        Token lv_sign_2_1=null;
        Token lv_sign_2_2=null;
        Token lv_sign_2_3=null;
        Token lv_sign_2_4=null;
        Token lv_sign_2_5=null;
        EObject this_factor_0 = null;

        EObject lv_right_3_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 120) ) { return current; }
            // InternalSpellGrammar.g:4651:28: ( (this_factor_0= rulefactor ( () ( ( (lv_sign_2_1= '*' | lv_sign_2_2= '/' | lv_sign_2_3= '%' | lv_sign_2_4= '//' | lv_sign_2_5= '**' ) ) ) ( (lv_right_3_0= rulefactor ) ) )* ) )
            // InternalSpellGrammar.g:4652:1: (this_factor_0= rulefactor ( () ( ( (lv_sign_2_1= '*' | lv_sign_2_2= '/' | lv_sign_2_3= '%' | lv_sign_2_4= '//' | lv_sign_2_5= '**' ) ) ) ( (lv_right_3_0= rulefactor ) ) )* )
            {
            // InternalSpellGrammar.g:4652:1: (this_factor_0= rulefactor ( () ( ( (lv_sign_2_1= '*' | lv_sign_2_2= '/' | lv_sign_2_3= '%' | lv_sign_2_4= '//' | lv_sign_2_5= '**' ) ) ) ( (lv_right_3_0= rulefactor ) ) )* )
            // InternalSpellGrammar.g:4653:2: this_factor_0= rulefactor ( () ( ( (lv_sign_2_1= '*' | lv_sign_2_2= '/' | lv_sign_2_3= '%' | lv_sign_2_4= '//' | lv_sign_2_5= '**' ) ) ) ( (lv_right_3_0= rulefactor ) ) )*
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getTermAccess().getFactorParserRuleCall_0()); 
                  
            }
            pushFollow(FollowSets000.FOLLOW_65);
            this_factor_0=rulefactor();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                      current = this_factor_0; 
                      afterParserOrEnumRuleCall();
                  
            }
            // InternalSpellGrammar.g:4664:1: ( () ( ( (lv_sign_2_1= '*' | lv_sign_2_2= '/' | lv_sign_2_3= '%' | lv_sign_2_4= '//' | lv_sign_2_5= '**' ) ) ) ( (lv_right_3_0= rulefactor ) ) )*
            loop87:
            do {
                int alt87=2;
                alt87 = dfa87.predict(input);
                switch (alt87) {
            	case 1 :
            	    // InternalSpellGrammar.g:4664:2: () ( ( (lv_sign_2_1= '*' | lv_sign_2_2= '/' | lv_sign_2_3= '%' | lv_sign_2_4= '//' | lv_sign_2_5= '**' ) ) ) ( (lv_right_3_0= rulefactor ) )
            	    {
            	    // InternalSpellGrammar.g:4664:2: ()
            	    // InternalSpellGrammar.g:4665:2: 
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	  /* */ 
            	      	
            	    }
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getTermAccess().getTermLeftAction_1_0(),
            	                  current);
            	          
            	    }

            	    }

            	    // InternalSpellGrammar.g:4673:2: ( ( (lv_sign_2_1= '*' | lv_sign_2_2= '/' | lv_sign_2_3= '%' | lv_sign_2_4= '//' | lv_sign_2_5= '**' ) ) )
            	    // InternalSpellGrammar.g:4674:1: ( (lv_sign_2_1= '*' | lv_sign_2_2= '/' | lv_sign_2_3= '%' | lv_sign_2_4= '//' | lv_sign_2_5= '**' ) )
            	    {
            	    // InternalSpellGrammar.g:4674:1: ( (lv_sign_2_1= '*' | lv_sign_2_2= '/' | lv_sign_2_3= '%' | lv_sign_2_4= '//' | lv_sign_2_5= '**' ) )
            	    // InternalSpellGrammar.g:4675:1: (lv_sign_2_1= '*' | lv_sign_2_2= '/' | lv_sign_2_3= '%' | lv_sign_2_4= '//' | lv_sign_2_5= '**' )
            	    {
            	    // InternalSpellGrammar.g:4675:1: (lv_sign_2_1= '*' | lv_sign_2_2= '/' | lv_sign_2_3= '%' | lv_sign_2_4= '//' | lv_sign_2_5= '**' )
            	    int alt86=5;
            	    switch ( input.LA(1) ) {
            	    case 25:
            	        {
            	        alt86=1;
            	        }
            	        break;
            	    case 80:
            	        {
            	        alt86=2;
            	        }
            	        break;
            	    case 81:
            	        {
            	        alt86=3;
            	        }
            	        break;
            	    case 82:
            	        {
            	        alt86=4;
            	        }
            	        break;
            	    case 26:
            	        {
            	        alt86=5;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 86, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt86) {
            	        case 1 :
            	            // InternalSpellGrammar.g:4676:3: lv_sign_2_1= '*'
            	            {
            	            lv_sign_2_1=(Token)match(input,25,FollowSets000.FOLLOW_28); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                      newLeafNode(lv_sign_2_1, grammarAccess.getTermAccess().getSignAsteriskKeyword_1_1_0_0());
            	                  
            	            }
            	            if ( state.backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = createModelElement(grammarAccess.getTermRule());
            	              	        }
            	                     		setWithLastConsumed(current, "sign", lv_sign_2_1, null);
            	              	    
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalSpellGrammar.g:4688:8: lv_sign_2_2= '/'
            	            {
            	            lv_sign_2_2=(Token)match(input,80,FollowSets000.FOLLOW_28); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                      newLeafNode(lv_sign_2_2, grammarAccess.getTermAccess().getSignSolidusKeyword_1_1_0_1());
            	                  
            	            }
            	            if ( state.backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = createModelElement(grammarAccess.getTermRule());
            	              	        }
            	                     		setWithLastConsumed(current, "sign", lv_sign_2_2, null);
            	              	    
            	            }

            	            }
            	            break;
            	        case 3 :
            	            // InternalSpellGrammar.g:4700:8: lv_sign_2_3= '%'
            	            {
            	            lv_sign_2_3=(Token)match(input,81,FollowSets000.FOLLOW_28); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                      newLeafNode(lv_sign_2_3, grammarAccess.getTermAccess().getSignPercentSignKeyword_1_1_0_2());
            	                  
            	            }
            	            if ( state.backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = createModelElement(grammarAccess.getTermRule());
            	              	        }
            	                     		setWithLastConsumed(current, "sign", lv_sign_2_3, null);
            	              	    
            	            }

            	            }
            	            break;
            	        case 4 :
            	            // InternalSpellGrammar.g:4712:8: lv_sign_2_4= '//'
            	            {
            	            lv_sign_2_4=(Token)match(input,82,FollowSets000.FOLLOW_28); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                      newLeafNode(lv_sign_2_4, grammarAccess.getTermAccess().getSignSolidusSolidusKeyword_1_1_0_3());
            	                  
            	            }
            	            if ( state.backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = createModelElement(grammarAccess.getTermRule());
            	              	        }
            	                     		setWithLastConsumed(current, "sign", lv_sign_2_4, null);
            	              	    
            	            }

            	            }
            	            break;
            	        case 5 :
            	            // InternalSpellGrammar.g:4724:8: lv_sign_2_5= '**'
            	            {
            	            lv_sign_2_5=(Token)match(input,26,FollowSets000.FOLLOW_28); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                      newLeafNode(lv_sign_2_5, grammarAccess.getTermAccess().getSignAsteriskAsteriskKeyword_1_1_0_4());
            	                  
            	            }
            	            if ( state.backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = createModelElement(grammarAccess.getTermRule());
            	              	        }
            	                     		setWithLastConsumed(current, "sign", lv_sign_2_5, null);
            	              	    
            	            }

            	            }
            	            break;

            	    }


            	    }


            	    }

            	    // InternalSpellGrammar.g:4739:2: ( (lv_right_3_0= rulefactor ) )
            	    // InternalSpellGrammar.g:4740:1: (lv_right_3_0= rulefactor )
            	    {
            	    // InternalSpellGrammar.g:4740:1: (lv_right_3_0= rulefactor )
            	    // InternalSpellGrammar.g:4741:3: lv_right_3_0= rulefactor
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getTermAccess().getRightFactorParserRuleCall_1_2_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_65);
            	    lv_right_3_0=rulefactor();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getTermRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"right",
            	              		lv_right_3_0, 
            	              		"lu.ses.engineering.spell.controlflow.SpellGrammar.factor");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop87;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 120, ruleterm_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleterm"


    // $ANTLR start "entryRulefactor"
    // InternalSpellGrammar.g:4765:1: entryRulefactor returns [EObject current=null] : iv_rulefactor= rulefactor EOF ;
    public final EObject entryRulefactor() throws RecognitionException {
        EObject current = null;
        int entryRulefactor_StartIndex = input.index();
        EObject iv_rulefactor = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 121) ) { return current; }
            // InternalSpellGrammar.g:4766:2: (iv_rulefactor= rulefactor EOF )
            // InternalSpellGrammar.g:4767:2: iv_rulefactor= rulefactor EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFactorRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulefactor=rulefactor();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulefactor; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 121, entryRulefactor_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRulefactor"


    // $ANTLR start "rulefactor"
    // InternalSpellGrammar.g:4774:1: rulefactor returns [EObject current=null] : ( ( ( ( (lv_sign_0_1= '+' | lv_sign_0_2= '-' | lv_sign_0_3= '~' ) ) ) ( (lv_factor_1_0= rulefactor ) ) ) | this_power_2= rulepower ) ;
    public final EObject rulefactor() throws RecognitionException {
        EObject current = null;
        int rulefactor_StartIndex = input.index();
        Token lv_sign_0_1=null;
        Token lv_sign_0_2=null;
        Token lv_sign_0_3=null;
        EObject lv_factor_1_0 = null;

        EObject this_power_2 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 122) ) { return current; }
            // InternalSpellGrammar.g:4777:28: ( ( ( ( ( (lv_sign_0_1= '+' | lv_sign_0_2= '-' | lv_sign_0_3= '~' ) ) ) ( (lv_factor_1_0= rulefactor ) ) ) | this_power_2= rulepower ) )
            // InternalSpellGrammar.g:4778:1: ( ( ( ( (lv_sign_0_1= '+' | lv_sign_0_2= '-' | lv_sign_0_3= '~' ) ) ) ( (lv_factor_1_0= rulefactor ) ) ) | this_power_2= rulepower )
            {
            // InternalSpellGrammar.g:4778:1: ( ( ( ( (lv_sign_0_1= '+' | lv_sign_0_2= '-' | lv_sign_0_3= '~' ) ) ) ( (lv_factor_1_0= rulefactor ) ) ) | this_power_2= rulepower )
            int alt89=2;
            switch ( input.LA(1) ) {
            case 28:
                {
                int LA89_1 = input.LA(2);

                if ( (synpred129_InternalSpellGrammar()) ) {
                    alt89=1;
                }
                else if ( (true) ) {
                    alt89=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 89, 1, input);

                    throw nvae;
                }
                }
                break;
            case 79:
                {
                int LA89_2 = input.LA(2);

                if ( (synpred129_InternalSpellGrammar()) ) {
                    alt89=1;
                }
                else if ( (true) ) {
                    alt89=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 89, 2, input);

                    throw nvae;
                }
                }
                break;
            case 83:
                {
                alt89=1;
                }
                break;
            case RULE_STRING:
            case RULE_NAME_TERMINAL:
            case RULE_NUMBER:
            case 19:
            case 48:
            case 84:
            case 85:
            case 86:
            case 87:
            case 88:
            case 89:
            case 90:
            case 91:
            case 92:
            case 93:
            case 94:
            case 95:
            case 96:
            case 98:
            case 100:
                {
                alt89=2;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 89, 0, input);

                throw nvae;
            }

            switch (alt89) {
                case 1 :
                    // InternalSpellGrammar.g:4778:2: ( ( ( (lv_sign_0_1= '+' | lv_sign_0_2= '-' | lv_sign_0_3= '~' ) ) ) ( (lv_factor_1_0= rulefactor ) ) )
                    {
                    // InternalSpellGrammar.g:4778:2: ( ( ( (lv_sign_0_1= '+' | lv_sign_0_2= '-' | lv_sign_0_3= '~' ) ) ) ( (lv_factor_1_0= rulefactor ) ) )
                    // InternalSpellGrammar.g:4778:3: ( ( (lv_sign_0_1= '+' | lv_sign_0_2= '-' | lv_sign_0_3= '~' ) ) ) ( (lv_factor_1_0= rulefactor ) )
                    {
                    // InternalSpellGrammar.g:4778:3: ( ( (lv_sign_0_1= '+' | lv_sign_0_2= '-' | lv_sign_0_3= '~' ) ) )
                    // InternalSpellGrammar.g:4779:1: ( (lv_sign_0_1= '+' | lv_sign_0_2= '-' | lv_sign_0_3= '~' ) )
                    {
                    // InternalSpellGrammar.g:4779:1: ( (lv_sign_0_1= '+' | lv_sign_0_2= '-' | lv_sign_0_3= '~' ) )
                    // InternalSpellGrammar.g:4780:1: (lv_sign_0_1= '+' | lv_sign_0_2= '-' | lv_sign_0_3= '~' )
                    {
                    // InternalSpellGrammar.g:4780:1: (lv_sign_0_1= '+' | lv_sign_0_2= '-' | lv_sign_0_3= '~' )
                    int alt88=3;
                    switch ( input.LA(1) ) {
                    case 28:
                        {
                        alt88=1;
                        }
                        break;
                    case 79:
                        {
                        alt88=2;
                        }
                        break;
                    case 83:
                        {
                        alt88=3;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 88, 0, input);

                        throw nvae;
                    }

                    switch (alt88) {
                        case 1 :
                            // InternalSpellGrammar.g:4781:3: lv_sign_0_1= '+'
                            {
                            lv_sign_0_1=(Token)match(input,28,FollowSets000.FOLLOW_28); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_sign_0_1, grammarAccess.getFactorAccess().getSignPlusSignKeyword_0_0_0_0());
                                  
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getFactorRule());
                              	        }
                                     		setWithLastConsumed(current, "sign", lv_sign_0_1, null);
                              	    
                            }

                            }
                            break;
                        case 2 :
                            // InternalSpellGrammar.g:4793:8: lv_sign_0_2= '-'
                            {
                            lv_sign_0_2=(Token)match(input,79,FollowSets000.FOLLOW_28); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_sign_0_2, grammarAccess.getFactorAccess().getSignHyphenMinusKeyword_0_0_0_1());
                                  
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getFactorRule());
                              	        }
                                     		setWithLastConsumed(current, "sign", lv_sign_0_2, null);
                              	    
                            }

                            }
                            break;
                        case 3 :
                            // InternalSpellGrammar.g:4805:8: lv_sign_0_3= '~'
                            {
                            lv_sign_0_3=(Token)match(input,83,FollowSets000.FOLLOW_28); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_sign_0_3, grammarAccess.getFactorAccess().getSignTildeKeyword_0_0_0_2());
                                  
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getFactorRule());
                              	        }
                                     		setWithLastConsumed(current, "sign", lv_sign_0_3, null);
                              	    
                            }

                            }
                            break;

                    }


                    }


                    }

                    // InternalSpellGrammar.g:4820:2: ( (lv_factor_1_0= rulefactor ) )
                    // InternalSpellGrammar.g:4821:1: (lv_factor_1_0= rulefactor )
                    {
                    // InternalSpellGrammar.g:4821:1: (lv_factor_1_0= rulefactor )
                    // InternalSpellGrammar.g:4822:3: lv_factor_1_0= rulefactor
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getFactorAccess().getFactorFactorParserRuleCall_0_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_factor_1_0=rulefactor();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getFactorRule());
                      	        }
                             		set(
                             			current, 
                             			"factor",
                              		lv_factor_1_0, 
                              		"lu.ses.engineering.spell.controlflow.SpellGrammar.factor");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSpellGrammar.g:4840:2: this_power_2= rulepower
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getFactorAccess().getPowerParserRuleCall_1()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_power_2=rulepower();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_power_2; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 122, rulefactor_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "rulefactor"


    // $ANTLR start "entryRulepower"
    // InternalSpellGrammar.g:4859:1: entryRulepower returns [EObject current=null] : iv_rulepower= rulepower EOF ;
    public final EObject entryRulepower() throws RecognitionException {
        EObject current = null;
        int entryRulepower_StartIndex = input.index();
        EObject iv_rulepower = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 123) ) { return current; }
            // InternalSpellGrammar.g:4860:2: (iv_rulepower= rulepower EOF )
            // InternalSpellGrammar.g:4861:2: iv_rulepower= rulepower EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPowerRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulepower=rulepower();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulepower; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 123, entryRulepower_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRulepower"


    // $ANTLR start "rulepower"
    // InternalSpellGrammar.g:4868:1: rulepower returns [EObject current=null] : ( ( () otherlv_1= 'Step' otherlv_2= '(' ( (lv_id_3_0= ruleatom ) ) (otherlv_4= ',' ( (lv_description_5_0= rulearith_expr ) ) )? (otherlv_6= ',' )? otherlv_7= ')' ) | ( () otherlv_9= 'DisplayStep' otherlv_10= '(' ( (lv_id_11_0= rulearith_expr ) ) (otherlv_12= ',' ( (lv_description_13_0= rulearith_expr ) ) )? (otherlv_14= ',' )? otherlv_15= ')' ) | ( () otherlv_17= 'ShowTM' otherlv_18= '(' ( (lv_args_19_0= rulearglist ) ) (otherlv_20= ',' )? otherlv_21= ')' ) | ( () otherlv_23= 'Send' otherlv_24= '(' ( (lv_args_25_0= rulearglist ) ) (otherlv_26= ',' )? otherlv_27= ')' ( (lv_trailer_28_0= ruletrailer ) )* ) | ( () otherlv_30= 'BuildTC' otherlv_31= '(' ( (lv_args_32_0= rulearglist ) ) (otherlv_33= ',' )? otherlv_34= ')' ( (lv_trailer_35_0= ruletrailer ) )* ) | ( () otherlv_37= 'SetLimits' otherlv_38= '(' ( (lv_tm_39_0= ruletest ) ) ( (otherlv_40= ',' )? ( (lv_args_41_0= rulearglist ) ) )* (otherlv_42= ',' )? otherlv_43= ')' ( (lv_trailer_44_0= ruletrailer ) )* ) | ( () otherlv_46= 'GetLimits' otherlv_47= '(' ( (lv_tm_48_0= ruletest ) ) ( (otherlv_49= ',' )? ( (lv_args_50_0= rulearglist ) ) )* (otherlv_51= ',' )? otherlv_52= ')' ( (lv_trailer_53_0= ruletrailer ) )* ) | ( () otherlv_55= 'GetTM' otherlv_56= '(' ( (lv_tm_57_0= ruletest ) ) ( (otherlv_58= ',' )? ( (lv_args_59_0= rulearglist ) ) )* (otherlv_60= ',' )? otherlv_61= ')' ( (lv_trailer_62_0= ruletrailer ) )* ) | ( () otherlv_64= 'Goto' otherlv_65= '(' ( (lv_target_66_0= RULE_STRING ) ) otherlv_67= ')' ( (lv_trailer_68_0= ruletrailer ) )* ) | ( () otherlv_70= 'Goto' otherlv_71= '(' ( (lv_expr_72_0= ruletest ) ) otherlv_73= ')' ( (lv_trailer_74_0= ruletrailer ) )* ) | ( () otherlv_76= 'Verify' otherlv_77= '(' ( (lv_args_78_0= rulearglist ) ) (otherlv_79= ',' )? otherlv_80= ')' ( (lv_trailer_81_0= ruletrailer ) )* ) | ( () otherlv_83= 'WaitFor' otherlv_84= '(' ( (lv_args_85_0= rulearglist ) ) (otherlv_86= ',' )? otherlv_87= ')' ( (lv_trailer_88_0= ruletrailer ) )* ) | ( () otherlv_90= 'ChangeLanguageConfig' otherlv_91= '(' ( (lv_statement_92_0= rulePython_Statement ) ) otherlv_93= ',' ( (lv_args_94_0= rulearglist ) ) otherlv_95= ')' ) | (this_atom_96= ruleatom ( () ( (lv_trailer_98_0= ruletrailer ) )+ (otherlv_99= '**' ( (lv_factor_100_0= rulefactor ) ) )? )? ) ) ;
    public final EObject rulepower() throws RecognitionException {
        EObject current = null;
        int rulepower_StartIndex = input.index();
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_18=null;
        Token otherlv_20=null;
        Token otherlv_21=null;
        Token otherlv_23=null;
        Token otherlv_24=null;
        Token otherlv_26=null;
        Token otherlv_27=null;
        Token otherlv_30=null;
        Token otherlv_31=null;
        Token otherlv_33=null;
        Token otherlv_34=null;
        Token otherlv_37=null;
        Token otherlv_38=null;
        Token otherlv_40=null;
        Token otherlv_42=null;
        Token otherlv_43=null;
        Token otherlv_46=null;
        Token otherlv_47=null;
        Token otherlv_49=null;
        Token otherlv_51=null;
        Token otherlv_52=null;
        Token otherlv_55=null;
        Token otherlv_56=null;
        Token otherlv_58=null;
        Token otherlv_60=null;
        Token otherlv_61=null;
        Token otherlv_64=null;
        Token otherlv_65=null;
        Token lv_target_66_0=null;
        Token otherlv_67=null;
        Token otherlv_70=null;
        Token otherlv_71=null;
        Token otherlv_73=null;
        Token otherlv_76=null;
        Token otherlv_77=null;
        Token otherlv_79=null;
        Token otherlv_80=null;
        Token otherlv_83=null;
        Token otherlv_84=null;
        Token otherlv_86=null;
        Token otherlv_87=null;
        Token otherlv_90=null;
        Token otherlv_91=null;
        Token otherlv_93=null;
        Token otherlv_95=null;
        Token otherlv_99=null;
        EObject lv_id_3_0 = null;

        EObject lv_description_5_0 = null;

        EObject lv_id_11_0 = null;

        EObject lv_description_13_0 = null;

        EObject lv_args_19_0 = null;

        EObject lv_args_25_0 = null;

        EObject lv_trailer_28_0 = null;

        EObject lv_args_32_0 = null;

        EObject lv_trailer_35_0 = null;

        EObject lv_tm_39_0 = null;

        EObject lv_args_41_0 = null;

        EObject lv_trailer_44_0 = null;

        EObject lv_tm_48_0 = null;

        EObject lv_args_50_0 = null;

        EObject lv_trailer_53_0 = null;

        EObject lv_tm_57_0 = null;

        EObject lv_args_59_0 = null;

        EObject lv_trailer_62_0 = null;

        EObject lv_trailer_68_0 = null;

        EObject lv_expr_72_0 = null;

        EObject lv_trailer_74_0 = null;

        EObject lv_args_78_0 = null;

        EObject lv_trailer_81_0 = null;

        EObject lv_args_85_0 = null;

        EObject lv_trailer_88_0 = null;

        AntlrDatatypeRuleToken lv_statement_92_0 = null;

        EObject lv_args_94_0 = null;

        EObject this_atom_96 = null;

        EObject lv_trailer_98_0 = null;

        EObject lv_factor_100_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 124) ) { return current; }
            // InternalSpellGrammar.g:4871:28: ( ( ( () otherlv_1= 'Step' otherlv_2= '(' ( (lv_id_3_0= ruleatom ) ) (otherlv_4= ',' ( (lv_description_5_0= rulearith_expr ) ) )? (otherlv_6= ',' )? otherlv_7= ')' ) | ( () otherlv_9= 'DisplayStep' otherlv_10= '(' ( (lv_id_11_0= rulearith_expr ) ) (otherlv_12= ',' ( (lv_description_13_0= rulearith_expr ) ) )? (otherlv_14= ',' )? otherlv_15= ')' ) | ( () otherlv_17= 'ShowTM' otherlv_18= '(' ( (lv_args_19_0= rulearglist ) ) (otherlv_20= ',' )? otherlv_21= ')' ) | ( () otherlv_23= 'Send' otherlv_24= '(' ( (lv_args_25_0= rulearglist ) ) (otherlv_26= ',' )? otherlv_27= ')' ( (lv_trailer_28_0= ruletrailer ) )* ) | ( () otherlv_30= 'BuildTC' otherlv_31= '(' ( (lv_args_32_0= rulearglist ) ) (otherlv_33= ',' )? otherlv_34= ')' ( (lv_trailer_35_0= ruletrailer ) )* ) | ( () otherlv_37= 'SetLimits' otherlv_38= '(' ( (lv_tm_39_0= ruletest ) ) ( (otherlv_40= ',' )? ( (lv_args_41_0= rulearglist ) ) )* (otherlv_42= ',' )? otherlv_43= ')' ( (lv_trailer_44_0= ruletrailer ) )* ) | ( () otherlv_46= 'GetLimits' otherlv_47= '(' ( (lv_tm_48_0= ruletest ) ) ( (otherlv_49= ',' )? ( (lv_args_50_0= rulearglist ) ) )* (otherlv_51= ',' )? otherlv_52= ')' ( (lv_trailer_53_0= ruletrailer ) )* ) | ( () otherlv_55= 'GetTM' otherlv_56= '(' ( (lv_tm_57_0= ruletest ) ) ( (otherlv_58= ',' )? ( (lv_args_59_0= rulearglist ) ) )* (otherlv_60= ',' )? otherlv_61= ')' ( (lv_trailer_62_0= ruletrailer ) )* ) | ( () otherlv_64= 'Goto' otherlv_65= '(' ( (lv_target_66_0= RULE_STRING ) ) otherlv_67= ')' ( (lv_trailer_68_0= ruletrailer ) )* ) | ( () otherlv_70= 'Goto' otherlv_71= '(' ( (lv_expr_72_0= ruletest ) ) otherlv_73= ')' ( (lv_trailer_74_0= ruletrailer ) )* ) | ( () otherlv_76= 'Verify' otherlv_77= '(' ( (lv_args_78_0= rulearglist ) ) (otherlv_79= ',' )? otherlv_80= ')' ( (lv_trailer_81_0= ruletrailer ) )* ) | ( () otherlv_83= 'WaitFor' otherlv_84= '(' ( (lv_args_85_0= rulearglist ) ) (otherlv_86= ',' )? otherlv_87= ')' ( (lv_trailer_88_0= ruletrailer ) )* ) | ( () otherlv_90= 'ChangeLanguageConfig' otherlv_91= '(' ( (lv_statement_92_0= rulePython_Statement ) ) otherlv_93= ',' ( (lv_args_94_0= rulearglist ) ) otherlv_95= ')' ) | (this_atom_96= ruleatom ( () ( (lv_trailer_98_0= ruletrailer ) )+ (otherlv_99= '**' ( (lv_factor_100_0= rulefactor ) ) )? )? ) ) )
            // InternalSpellGrammar.g:4872:1: ( ( () otherlv_1= 'Step' otherlv_2= '(' ( (lv_id_3_0= ruleatom ) ) (otherlv_4= ',' ( (lv_description_5_0= rulearith_expr ) ) )? (otherlv_6= ',' )? otherlv_7= ')' ) | ( () otherlv_9= 'DisplayStep' otherlv_10= '(' ( (lv_id_11_0= rulearith_expr ) ) (otherlv_12= ',' ( (lv_description_13_0= rulearith_expr ) ) )? (otherlv_14= ',' )? otherlv_15= ')' ) | ( () otherlv_17= 'ShowTM' otherlv_18= '(' ( (lv_args_19_0= rulearglist ) ) (otherlv_20= ',' )? otherlv_21= ')' ) | ( () otherlv_23= 'Send' otherlv_24= '(' ( (lv_args_25_0= rulearglist ) ) (otherlv_26= ',' )? otherlv_27= ')' ( (lv_trailer_28_0= ruletrailer ) )* ) | ( () otherlv_30= 'BuildTC' otherlv_31= '(' ( (lv_args_32_0= rulearglist ) ) (otherlv_33= ',' )? otherlv_34= ')' ( (lv_trailer_35_0= ruletrailer ) )* ) | ( () otherlv_37= 'SetLimits' otherlv_38= '(' ( (lv_tm_39_0= ruletest ) ) ( (otherlv_40= ',' )? ( (lv_args_41_0= rulearglist ) ) )* (otherlv_42= ',' )? otherlv_43= ')' ( (lv_trailer_44_0= ruletrailer ) )* ) | ( () otherlv_46= 'GetLimits' otherlv_47= '(' ( (lv_tm_48_0= ruletest ) ) ( (otherlv_49= ',' )? ( (lv_args_50_0= rulearglist ) ) )* (otherlv_51= ',' )? otherlv_52= ')' ( (lv_trailer_53_0= ruletrailer ) )* ) | ( () otherlv_55= 'GetTM' otherlv_56= '(' ( (lv_tm_57_0= ruletest ) ) ( (otherlv_58= ',' )? ( (lv_args_59_0= rulearglist ) ) )* (otherlv_60= ',' )? otherlv_61= ')' ( (lv_trailer_62_0= ruletrailer ) )* ) | ( () otherlv_64= 'Goto' otherlv_65= '(' ( (lv_target_66_0= RULE_STRING ) ) otherlv_67= ')' ( (lv_trailer_68_0= ruletrailer ) )* ) | ( () otherlv_70= 'Goto' otherlv_71= '(' ( (lv_expr_72_0= ruletest ) ) otherlv_73= ')' ( (lv_trailer_74_0= ruletrailer ) )* ) | ( () otherlv_76= 'Verify' otherlv_77= '(' ( (lv_args_78_0= rulearglist ) ) (otherlv_79= ',' )? otherlv_80= ')' ( (lv_trailer_81_0= ruletrailer ) )* ) | ( () otherlv_83= 'WaitFor' otherlv_84= '(' ( (lv_args_85_0= rulearglist ) ) (otherlv_86= ',' )? otherlv_87= ')' ( (lv_trailer_88_0= ruletrailer ) )* ) | ( () otherlv_90= 'ChangeLanguageConfig' otherlv_91= '(' ( (lv_statement_92_0= rulePython_Statement ) ) otherlv_93= ',' ( (lv_args_94_0= rulearglist ) ) otherlv_95= ')' ) | (this_atom_96= ruleatom ( () ( (lv_trailer_98_0= ruletrailer ) )+ (otherlv_99= '**' ( (lv_factor_100_0= rulefactor ) ) )? )? ) )
            {
            // InternalSpellGrammar.g:4872:1: ( ( () otherlv_1= 'Step' otherlv_2= '(' ( (lv_id_3_0= ruleatom ) ) (otherlv_4= ',' ( (lv_description_5_0= rulearith_expr ) ) )? (otherlv_6= ',' )? otherlv_7= ')' ) | ( () otherlv_9= 'DisplayStep' otherlv_10= '(' ( (lv_id_11_0= rulearith_expr ) ) (otherlv_12= ',' ( (lv_description_13_0= rulearith_expr ) ) )? (otherlv_14= ',' )? otherlv_15= ')' ) | ( () otherlv_17= 'ShowTM' otherlv_18= '(' ( (lv_args_19_0= rulearglist ) ) (otherlv_20= ',' )? otherlv_21= ')' ) | ( () otherlv_23= 'Send' otherlv_24= '(' ( (lv_args_25_0= rulearglist ) ) (otherlv_26= ',' )? otherlv_27= ')' ( (lv_trailer_28_0= ruletrailer ) )* ) | ( () otherlv_30= 'BuildTC' otherlv_31= '(' ( (lv_args_32_0= rulearglist ) ) (otherlv_33= ',' )? otherlv_34= ')' ( (lv_trailer_35_0= ruletrailer ) )* ) | ( () otherlv_37= 'SetLimits' otherlv_38= '(' ( (lv_tm_39_0= ruletest ) ) ( (otherlv_40= ',' )? ( (lv_args_41_0= rulearglist ) ) )* (otherlv_42= ',' )? otherlv_43= ')' ( (lv_trailer_44_0= ruletrailer ) )* ) | ( () otherlv_46= 'GetLimits' otherlv_47= '(' ( (lv_tm_48_0= ruletest ) ) ( (otherlv_49= ',' )? ( (lv_args_50_0= rulearglist ) ) )* (otherlv_51= ',' )? otherlv_52= ')' ( (lv_trailer_53_0= ruletrailer ) )* ) | ( () otherlv_55= 'GetTM' otherlv_56= '(' ( (lv_tm_57_0= ruletest ) ) ( (otherlv_58= ',' )? ( (lv_args_59_0= rulearglist ) ) )* (otherlv_60= ',' )? otherlv_61= ')' ( (lv_trailer_62_0= ruletrailer ) )* ) | ( () otherlv_64= 'Goto' otherlv_65= '(' ( (lv_target_66_0= RULE_STRING ) ) otherlv_67= ')' ( (lv_trailer_68_0= ruletrailer ) )* ) | ( () otherlv_70= 'Goto' otherlv_71= '(' ( (lv_expr_72_0= ruletest ) ) otherlv_73= ')' ( (lv_trailer_74_0= ruletrailer ) )* ) | ( () otherlv_76= 'Verify' otherlv_77= '(' ( (lv_args_78_0= rulearglist ) ) (otherlv_79= ',' )? otherlv_80= ')' ( (lv_trailer_81_0= ruletrailer ) )* ) | ( () otherlv_83= 'WaitFor' otherlv_84= '(' ( (lv_args_85_0= rulearglist ) ) (otherlv_86= ',' )? otherlv_87= ')' ( (lv_trailer_88_0= ruletrailer ) )* ) | ( () otherlv_90= 'ChangeLanguageConfig' otherlv_91= '(' ( (lv_statement_92_0= rulePython_Statement ) ) otherlv_93= ',' ( (lv_args_94_0= rulearglist ) ) otherlv_95= ')' ) | (this_atom_96= ruleatom ( () ( (lv_trailer_98_0= ruletrailer ) )+ (otherlv_99= '**' ( (lv_factor_100_0= rulefactor ) ) )? )? ) )
            int alt120=14;
            alt120 = dfa120.predict(input);
            switch (alt120) {
                case 1 :
                    // InternalSpellGrammar.g:4872:2: ( () otherlv_1= 'Step' otherlv_2= '(' ( (lv_id_3_0= ruleatom ) ) (otherlv_4= ',' ( (lv_description_5_0= rulearith_expr ) ) )? (otherlv_6= ',' )? otherlv_7= ')' )
                    {
                    // InternalSpellGrammar.g:4872:2: ( () otherlv_1= 'Step' otherlv_2= '(' ( (lv_id_3_0= ruleatom ) ) (otherlv_4= ',' ( (lv_description_5_0= rulearith_expr ) ) )? (otherlv_6= ',' )? otherlv_7= ')' )
                    // InternalSpellGrammar.g:4872:3: () otherlv_1= 'Step' otherlv_2= '(' ( (lv_id_3_0= ruleatom ) ) (otherlv_4= ',' ( (lv_description_5_0= rulearith_expr ) ) )? (otherlv_6= ',' )? otherlv_7= ')'
                    {
                    // InternalSpellGrammar.g:4872:3: ()
                    // InternalSpellGrammar.g:4873:2: 
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getPowerAccess().getStepAction_0_0(),
                                  current);
                          
                    }

                    }

                    otherlv_1=(Token)match(input,84,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getPowerAccess().getStepKeyword_0_1());
                          
                    }
                    otherlv_2=(Token)match(input,19,FollowSets000.FOLLOW_28); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getPowerAccess().getLeftParenthesisKeyword_0_2());
                          
                    }
                    // InternalSpellGrammar.g:4889:1: ( (lv_id_3_0= ruleatom ) )
                    // InternalSpellGrammar.g:4890:1: (lv_id_3_0= ruleatom )
                    {
                    // InternalSpellGrammar.g:4890:1: (lv_id_3_0= ruleatom )
                    // InternalSpellGrammar.g:4891:3: lv_id_3_0= ruleatom
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getPowerAccess().getIdAtomParserRuleCall_0_3_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_14);
                    lv_id_3_0=ruleatom();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPowerRule());
                      	        }
                             		set(
                             			current, 
                             			"id",
                              		lv_id_3_0, 
                              		"lu.ses.engineering.spell.controlflow.SpellGrammar.atom");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalSpellGrammar.g:4907:2: (otherlv_4= ',' ( (lv_description_5_0= rulearith_expr ) ) )?
                    int alt90=2;
                    int LA90_0 = input.LA(1);

                    if ( (LA90_0==23) ) {
                        int LA90_1 = input.LA(2);

                        if ( (LA90_1==RULE_STRING||(LA90_1>=RULE_NAME_TERMINAL && LA90_1<=RULE_NUMBER)||LA90_1==19||LA90_1==28||LA90_1==48||LA90_1==79||(LA90_1>=83 && LA90_1<=96)||LA90_1==98||LA90_1==100) ) {
                            alt90=1;
                        }
                    }
                    switch (alt90) {
                        case 1 :
                            // InternalSpellGrammar.g:4907:4: otherlv_4= ',' ( (lv_description_5_0= rulearith_expr ) )
                            {
                            otherlv_4=(Token)match(input,23,FollowSets000.FOLLOW_28); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_4, grammarAccess.getPowerAccess().getCommaKeyword_0_4_0());
                                  
                            }
                            // InternalSpellGrammar.g:4911:1: ( (lv_description_5_0= rulearith_expr ) )
                            // InternalSpellGrammar.g:4912:1: (lv_description_5_0= rulearith_expr )
                            {
                            // InternalSpellGrammar.g:4912:1: (lv_description_5_0= rulearith_expr )
                            // InternalSpellGrammar.g:4913:3: lv_description_5_0= rulearith_expr
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getPowerAccess().getDescriptionArith_exprParserRuleCall_0_4_1_0()); 
                              	    
                            }
                            pushFollow(FollowSets000.FOLLOW_14);
                            lv_description_5_0=rulearith_expr();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getPowerRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"description",
                                      		lv_description_5_0, 
                                      		"lu.ses.engineering.spell.controlflow.SpellGrammar.arith_expr");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalSpellGrammar.g:4929:4: (otherlv_6= ',' )?
                    int alt91=2;
                    int LA91_0 = input.LA(1);

                    if ( (LA91_0==23) ) {
                        alt91=1;
                    }
                    switch (alt91) {
                        case 1 :
                            // InternalSpellGrammar.g:4929:6: otherlv_6= ','
                            {
                            otherlv_6=(Token)match(input,23,FollowSets000.FOLLOW_7); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_6, grammarAccess.getPowerAccess().getCommaKeyword_0_5());
                                  
                            }

                            }
                            break;

                    }

                    otherlv_7=(Token)match(input,20,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_7, grammarAccess.getPowerAccess().getRightParenthesisKeyword_0_6());
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSpellGrammar.g:4938:6: ( () otherlv_9= 'DisplayStep' otherlv_10= '(' ( (lv_id_11_0= rulearith_expr ) ) (otherlv_12= ',' ( (lv_description_13_0= rulearith_expr ) ) )? (otherlv_14= ',' )? otherlv_15= ')' )
                    {
                    // InternalSpellGrammar.g:4938:6: ( () otherlv_9= 'DisplayStep' otherlv_10= '(' ( (lv_id_11_0= rulearith_expr ) ) (otherlv_12= ',' ( (lv_description_13_0= rulearith_expr ) ) )? (otherlv_14= ',' )? otherlv_15= ')' )
                    // InternalSpellGrammar.g:4938:7: () otherlv_9= 'DisplayStep' otherlv_10= '(' ( (lv_id_11_0= rulearith_expr ) ) (otherlv_12= ',' ( (lv_description_13_0= rulearith_expr ) ) )? (otherlv_14= ',' )? otherlv_15= ')'
                    {
                    // InternalSpellGrammar.g:4938:7: ()
                    // InternalSpellGrammar.g:4939:2: 
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getPowerAccess().getDisplayStepAction_1_0(),
                                  current);
                          
                    }

                    }

                    otherlv_9=(Token)match(input,85,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_9, grammarAccess.getPowerAccess().getDisplayStepKeyword_1_1());
                          
                    }
                    otherlv_10=(Token)match(input,19,FollowSets000.FOLLOW_28); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_10, grammarAccess.getPowerAccess().getLeftParenthesisKeyword_1_2());
                          
                    }
                    // InternalSpellGrammar.g:4955:1: ( (lv_id_11_0= rulearith_expr ) )
                    // InternalSpellGrammar.g:4956:1: (lv_id_11_0= rulearith_expr )
                    {
                    // InternalSpellGrammar.g:4956:1: (lv_id_11_0= rulearith_expr )
                    // InternalSpellGrammar.g:4957:3: lv_id_11_0= rulearith_expr
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getPowerAccess().getIdArith_exprParserRuleCall_1_3_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_14);
                    lv_id_11_0=rulearith_expr();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPowerRule());
                      	        }
                             		set(
                             			current, 
                             			"id",
                              		lv_id_11_0, 
                              		"lu.ses.engineering.spell.controlflow.SpellGrammar.arith_expr");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalSpellGrammar.g:4973:2: (otherlv_12= ',' ( (lv_description_13_0= rulearith_expr ) ) )?
                    int alt92=2;
                    int LA92_0 = input.LA(1);

                    if ( (LA92_0==23) ) {
                        int LA92_1 = input.LA(2);

                        if ( (LA92_1==RULE_STRING||(LA92_1>=RULE_NAME_TERMINAL && LA92_1<=RULE_NUMBER)||LA92_1==19||LA92_1==28||LA92_1==48||LA92_1==79||(LA92_1>=83 && LA92_1<=96)||LA92_1==98||LA92_1==100) ) {
                            alt92=1;
                        }
                    }
                    switch (alt92) {
                        case 1 :
                            // InternalSpellGrammar.g:4973:4: otherlv_12= ',' ( (lv_description_13_0= rulearith_expr ) )
                            {
                            otherlv_12=(Token)match(input,23,FollowSets000.FOLLOW_28); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_12, grammarAccess.getPowerAccess().getCommaKeyword_1_4_0());
                                  
                            }
                            // InternalSpellGrammar.g:4977:1: ( (lv_description_13_0= rulearith_expr ) )
                            // InternalSpellGrammar.g:4978:1: (lv_description_13_0= rulearith_expr )
                            {
                            // InternalSpellGrammar.g:4978:1: (lv_description_13_0= rulearith_expr )
                            // InternalSpellGrammar.g:4979:3: lv_description_13_0= rulearith_expr
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getPowerAccess().getDescriptionArith_exprParserRuleCall_1_4_1_0()); 
                              	    
                            }
                            pushFollow(FollowSets000.FOLLOW_14);
                            lv_description_13_0=rulearith_expr();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getPowerRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"description",
                                      		lv_description_13_0, 
                                      		"lu.ses.engineering.spell.controlflow.SpellGrammar.arith_expr");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalSpellGrammar.g:4995:4: (otherlv_14= ',' )?
                    int alt93=2;
                    int LA93_0 = input.LA(1);

                    if ( (LA93_0==23) ) {
                        alt93=1;
                    }
                    switch (alt93) {
                        case 1 :
                            // InternalSpellGrammar.g:4995:6: otherlv_14= ','
                            {
                            otherlv_14=(Token)match(input,23,FollowSets000.FOLLOW_7); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_14, grammarAccess.getPowerAccess().getCommaKeyword_1_5());
                                  
                            }

                            }
                            break;

                    }

                    otherlv_15=(Token)match(input,20,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_15, grammarAccess.getPowerAccess().getRightParenthesisKeyword_1_6());
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSpellGrammar.g:5004:6: ( () otherlv_17= 'ShowTM' otherlv_18= '(' ( (lv_args_19_0= rulearglist ) ) (otherlv_20= ',' )? otherlv_21= ')' )
                    {
                    // InternalSpellGrammar.g:5004:6: ( () otherlv_17= 'ShowTM' otherlv_18= '(' ( (lv_args_19_0= rulearglist ) ) (otherlv_20= ',' )? otherlv_21= ')' )
                    // InternalSpellGrammar.g:5004:7: () otherlv_17= 'ShowTM' otherlv_18= '(' ( (lv_args_19_0= rulearglist ) ) (otherlv_20= ',' )? otherlv_21= ')'
                    {
                    // InternalSpellGrammar.g:5004:7: ()
                    // InternalSpellGrammar.g:5005:2: 
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getPowerAccess().getShowTMAction_2_0(),
                                  current);
                          
                    }

                    }

                    otherlv_17=(Token)match(input,86,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_17, grammarAccess.getPowerAccess().getShowTMKeyword_2_1());
                          
                    }
                    otherlv_18=(Token)match(input,19,FollowSets000.FOLLOW_66); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_18, grammarAccess.getPowerAccess().getLeftParenthesisKeyword_2_2());
                          
                    }
                    // InternalSpellGrammar.g:5021:1: ( (lv_args_19_0= rulearglist ) )
                    // InternalSpellGrammar.g:5022:1: (lv_args_19_0= rulearglist )
                    {
                    // InternalSpellGrammar.g:5022:1: (lv_args_19_0= rulearglist )
                    // InternalSpellGrammar.g:5023:3: lv_args_19_0= rulearglist
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getPowerAccess().getArgsArglistParserRuleCall_2_3_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_14);
                    lv_args_19_0=rulearglist();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPowerRule());
                      	        }
                             		add(
                             			current, 
                             			"args",
                              		lv_args_19_0, 
                              		"lu.ses.engineering.spell.controlflow.SpellGrammar.arglist");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalSpellGrammar.g:5039:2: (otherlv_20= ',' )?
                    int alt94=2;
                    int LA94_0 = input.LA(1);

                    if ( (LA94_0==23) ) {
                        alt94=1;
                    }
                    switch (alt94) {
                        case 1 :
                            // InternalSpellGrammar.g:5039:4: otherlv_20= ','
                            {
                            otherlv_20=(Token)match(input,23,FollowSets000.FOLLOW_7); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_20, grammarAccess.getPowerAccess().getCommaKeyword_2_4());
                                  
                            }

                            }
                            break;

                    }

                    otherlv_21=(Token)match(input,20,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_21, grammarAccess.getPowerAccess().getRightParenthesisKeyword_2_5());
                          
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSpellGrammar.g:5048:6: ( () otherlv_23= 'Send' otherlv_24= '(' ( (lv_args_25_0= rulearglist ) ) (otherlv_26= ',' )? otherlv_27= ')' ( (lv_trailer_28_0= ruletrailer ) )* )
                    {
                    // InternalSpellGrammar.g:5048:6: ( () otherlv_23= 'Send' otherlv_24= '(' ( (lv_args_25_0= rulearglist ) ) (otherlv_26= ',' )? otherlv_27= ')' ( (lv_trailer_28_0= ruletrailer ) )* )
                    // InternalSpellGrammar.g:5048:7: () otherlv_23= 'Send' otherlv_24= '(' ( (lv_args_25_0= rulearglist ) ) (otherlv_26= ',' )? otherlv_27= ')' ( (lv_trailer_28_0= ruletrailer ) )*
                    {
                    // InternalSpellGrammar.g:5048:7: ()
                    // InternalSpellGrammar.g:5049:2: 
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getPowerAccess().getSendAction_3_0(),
                                  current);
                          
                    }

                    }

                    otherlv_23=(Token)match(input,87,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_23, grammarAccess.getPowerAccess().getSendKeyword_3_1());
                          
                    }
                    otherlv_24=(Token)match(input,19,FollowSets000.FOLLOW_66); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_24, grammarAccess.getPowerAccess().getLeftParenthesisKeyword_3_2());
                          
                    }
                    // InternalSpellGrammar.g:5065:1: ( (lv_args_25_0= rulearglist ) )
                    // InternalSpellGrammar.g:5066:1: (lv_args_25_0= rulearglist )
                    {
                    // InternalSpellGrammar.g:5066:1: (lv_args_25_0= rulearglist )
                    // InternalSpellGrammar.g:5067:3: lv_args_25_0= rulearglist
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getPowerAccess().getArgsArglistParserRuleCall_3_3_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_14);
                    lv_args_25_0=rulearglist();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPowerRule());
                      	        }
                             		add(
                             			current, 
                             			"args",
                              		lv_args_25_0, 
                              		"lu.ses.engineering.spell.controlflow.SpellGrammar.arglist");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalSpellGrammar.g:5083:2: (otherlv_26= ',' )?
                    int alt95=2;
                    int LA95_0 = input.LA(1);

                    if ( (LA95_0==23) ) {
                        alt95=1;
                    }
                    switch (alt95) {
                        case 1 :
                            // InternalSpellGrammar.g:5083:4: otherlv_26= ','
                            {
                            otherlv_26=(Token)match(input,23,FollowSets000.FOLLOW_7); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_26, grammarAccess.getPowerAccess().getCommaKeyword_3_4());
                                  
                            }

                            }
                            break;

                    }

                    otherlv_27=(Token)match(input,20,FollowSets000.FOLLOW_67); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_27, grammarAccess.getPowerAccess().getRightParenthesisKeyword_3_5());
                          
                    }
                    // InternalSpellGrammar.g:5091:1: ( (lv_trailer_28_0= ruletrailer ) )*
                    loop96:
                    do {
                        int alt96=2;
                        alt96 = dfa96.predict(input);
                        switch (alt96) {
                    	case 1 :
                    	    // InternalSpellGrammar.g:5092:1: (lv_trailer_28_0= ruletrailer )
                    	    {
                    	    // InternalSpellGrammar.g:5092:1: (lv_trailer_28_0= ruletrailer )
                    	    // InternalSpellGrammar.g:5093:3: lv_trailer_28_0= ruletrailer
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getPowerAccess().getTrailerTrailerParserRuleCall_3_6_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_67);
                    	    lv_trailer_28_0=ruletrailer();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getPowerRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"trailer",
                    	              		lv_trailer_28_0, 
                    	              		"lu.ses.engineering.spell.controlflow.SpellGrammar.trailer");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop96;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 5 :
                    // InternalSpellGrammar.g:5110:6: ( () otherlv_30= 'BuildTC' otherlv_31= '(' ( (lv_args_32_0= rulearglist ) ) (otherlv_33= ',' )? otherlv_34= ')' ( (lv_trailer_35_0= ruletrailer ) )* )
                    {
                    // InternalSpellGrammar.g:5110:6: ( () otherlv_30= 'BuildTC' otherlv_31= '(' ( (lv_args_32_0= rulearglist ) ) (otherlv_33= ',' )? otherlv_34= ')' ( (lv_trailer_35_0= ruletrailer ) )* )
                    // InternalSpellGrammar.g:5110:7: () otherlv_30= 'BuildTC' otherlv_31= '(' ( (lv_args_32_0= rulearglist ) ) (otherlv_33= ',' )? otherlv_34= ')' ( (lv_trailer_35_0= ruletrailer ) )*
                    {
                    // InternalSpellGrammar.g:5110:7: ()
                    // InternalSpellGrammar.g:5111:2: 
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getPowerAccess().getBuildTCAction_4_0(),
                                  current);
                          
                    }

                    }

                    otherlv_30=(Token)match(input,88,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_30, grammarAccess.getPowerAccess().getBuildTCKeyword_4_1());
                          
                    }
                    otherlv_31=(Token)match(input,19,FollowSets000.FOLLOW_66); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_31, grammarAccess.getPowerAccess().getLeftParenthesisKeyword_4_2());
                          
                    }
                    // InternalSpellGrammar.g:5127:1: ( (lv_args_32_0= rulearglist ) )
                    // InternalSpellGrammar.g:5128:1: (lv_args_32_0= rulearglist )
                    {
                    // InternalSpellGrammar.g:5128:1: (lv_args_32_0= rulearglist )
                    // InternalSpellGrammar.g:5129:3: lv_args_32_0= rulearglist
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getPowerAccess().getArgsArglistParserRuleCall_4_3_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_14);
                    lv_args_32_0=rulearglist();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPowerRule());
                      	        }
                             		add(
                             			current, 
                             			"args",
                              		lv_args_32_0, 
                              		"lu.ses.engineering.spell.controlflow.SpellGrammar.arglist");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalSpellGrammar.g:5145:2: (otherlv_33= ',' )?
                    int alt97=2;
                    int LA97_0 = input.LA(1);

                    if ( (LA97_0==23) ) {
                        alt97=1;
                    }
                    switch (alt97) {
                        case 1 :
                            // InternalSpellGrammar.g:5145:4: otherlv_33= ','
                            {
                            otherlv_33=(Token)match(input,23,FollowSets000.FOLLOW_7); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_33, grammarAccess.getPowerAccess().getCommaKeyword_4_4());
                                  
                            }

                            }
                            break;

                    }

                    otherlv_34=(Token)match(input,20,FollowSets000.FOLLOW_67); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_34, grammarAccess.getPowerAccess().getRightParenthesisKeyword_4_5());
                          
                    }
                    // InternalSpellGrammar.g:5153:1: ( (lv_trailer_35_0= ruletrailer ) )*
                    loop98:
                    do {
                        int alt98=2;
                        alt98 = dfa98.predict(input);
                        switch (alt98) {
                    	case 1 :
                    	    // InternalSpellGrammar.g:5154:1: (lv_trailer_35_0= ruletrailer )
                    	    {
                    	    // InternalSpellGrammar.g:5154:1: (lv_trailer_35_0= ruletrailer )
                    	    // InternalSpellGrammar.g:5155:3: lv_trailer_35_0= ruletrailer
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getPowerAccess().getTrailerTrailerParserRuleCall_4_6_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_67);
                    	    lv_trailer_35_0=ruletrailer();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getPowerRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"trailer",
                    	              		lv_trailer_35_0, 
                    	              		"lu.ses.engineering.spell.controlflow.SpellGrammar.trailer");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop98;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 6 :
                    // InternalSpellGrammar.g:5172:6: ( () otherlv_37= 'SetLimits' otherlv_38= '(' ( (lv_tm_39_0= ruletest ) ) ( (otherlv_40= ',' )? ( (lv_args_41_0= rulearglist ) ) )* (otherlv_42= ',' )? otherlv_43= ')' ( (lv_trailer_44_0= ruletrailer ) )* )
                    {
                    // InternalSpellGrammar.g:5172:6: ( () otherlv_37= 'SetLimits' otherlv_38= '(' ( (lv_tm_39_0= ruletest ) ) ( (otherlv_40= ',' )? ( (lv_args_41_0= rulearglist ) ) )* (otherlv_42= ',' )? otherlv_43= ')' ( (lv_trailer_44_0= ruletrailer ) )* )
                    // InternalSpellGrammar.g:5172:7: () otherlv_37= 'SetLimits' otherlv_38= '(' ( (lv_tm_39_0= ruletest ) ) ( (otherlv_40= ',' )? ( (lv_args_41_0= rulearglist ) ) )* (otherlv_42= ',' )? otherlv_43= ')' ( (lv_trailer_44_0= ruletrailer ) )*
                    {
                    // InternalSpellGrammar.g:5172:7: ()
                    // InternalSpellGrammar.g:5173:2: 
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getPowerAccess().getSetLimitsAction_5_0(),
                                  current);
                          
                    }

                    }

                    otherlv_37=(Token)match(input,89,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_37, grammarAccess.getPowerAccess().getSetLimitsKeyword_5_1());
                          
                    }
                    otherlv_38=(Token)match(input,19,FollowSets000.FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_38, grammarAccess.getPowerAccess().getLeftParenthesisKeyword_5_2());
                          
                    }
                    // InternalSpellGrammar.g:5189:1: ( (lv_tm_39_0= ruletest ) )
                    // InternalSpellGrammar.g:5190:1: (lv_tm_39_0= ruletest )
                    {
                    // InternalSpellGrammar.g:5190:1: (lv_tm_39_0= ruletest )
                    // InternalSpellGrammar.g:5191:3: lv_tm_39_0= ruletest
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getPowerAccess().getTmTestParserRuleCall_5_3_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_68);
                    lv_tm_39_0=ruletest();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPowerRule());
                      	        }
                             		set(
                             			current, 
                             			"tm",
                              		lv_tm_39_0, 
                              		"lu.ses.engineering.spell.controlflow.SpellGrammar.test");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalSpellGrammar.g:5207:2: ( (otherlv_40= ',' )? ( (lv_args_41_0= rulearglist ) ) )*
                    loop100:
                    do {
                        int alt100=2;
                        int LA100_0 = input.LA(1);

                        if ( (LA100_0==23) ) {
                            int LA100_1 = input.LA(2);

                            if ( (LA100_1==RULE_STRING||(LA100_1>=RULE_NAME_TERMINAL && LA100_1<=RULE_NUMBER)||LA100_1==19||(LA100_1>=25 && LA100_1<=26)||LA100_1==28||LA100_1==48||LA100_1==65||LA100_1==79||(LA100_1>=83 && LA100_1<=96)||LA100_1==98||(LA100_1>=100 && LA100_1<=101)) ) {
                                alt100=1;
                            }


                        }
                        else if ( (LA100_0==RULE_STRING||(LA100_0>=RULE_NAME_TERMINAL && LA100_0<=RULE_NUMBER)||LA100_0==19||(LA100_0>=25 && LA100_0<=26)||LA100_0==28||LA100_0==48||LA100_0==65||LA100_0==79||(LA100_0>=83 && LA100_0<=96)||LA100_0==98||(LA100_0>=100 && LA100_0<=101)) ) {
                            alt100=1;
                        }


                        switch (alt100) {
                    	case 1 :
                    	    // InternalSpellGrammar.g:5207:3: (otherlv_40= ',' )? ( (lv_args_41_0= rulearglist ) )
                    	    {
                    	    // InternalSpellGrammar.g:5207:3: (otherlv_40= ',' )?
                    	    int alt99=2;
                    	    int LA99_0 = input.LA(1);

                    	    if ( (LA99_0==23) ) {
                    	        alt99=1;
                    	    }
                    	    switch (alt99) {
                    	        case 1 :
                    	            // InternalSpellGrammar.g:5207:5: otherlv_40= ','
                    	            {
                    	            otherlv_40=(Token)match(input,23,FollowSets000.FOLLOW_66); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                  	newLeafNode(otherlv_40, grammarAccess.getPowerAccess().getCommaKeyword_5_4_0());
                    	                  
                    	            }

                    	            }
                    	            break;

                    	    }

                    	    // InternalSpellGrammar.g:5211:3: ( (lv_args_41_0= rulearglist ) )
                    	    // InternalSpellGrammar.g:5212:1: (lv_args_41_0= rulearglist )
                    	    {
                    	    // InternalSpellGrammar.g:5212:1: (lv_args_41_0= rulearglist )
                    	    // InternalSpellGrammar.g:5213:3: lv_args_41_0= rulearglist
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getPowerAccess().getArgsArglistParserRuleCall_5_4_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_68);
                    	    lv_args_41_0=rulearglist();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getPowerRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"args",
                    	              		lv_args_41_0, 
                    	              		"lu.ses.engineering.spell.controlflow.SpellGrammar.arglist");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop100;
                        }
                    } while (true);

                    // InternalSpellGrammar.g:5229:4: (otherlv_42= ',' )?
                    int alt101=2;
                    int LA101_0 = input.LA(1);

                    if ( (LA101_0==23) ) {
                        alt101=1;
                    }
                    switch (alt101) {
                        case 1 :
                            // InternalSpellGrammar.g:5229:6: otherlv_42= ','
                            {
                            otherlv_42=(Token)match(input,23,FollowSets000.FOLLOW_7); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_42, grammarAccess.getPowerAccess().getCommaKeyword_5_5());
                                  
                            }

                            }
                            break;

                    }

                    otherlv_43=(Token)match(input,20,FollowSets000.FOLLOW_67); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_43, grammarAccess.getPowerAccess().getRightParenthesisKeyword_5_6());
                          
                    }
                    // InternalSpellGrammar.g:5237:1: ( (lv_trailer_44_0= ruletrailer ) )*
                    loop102:
                    do {
                        int alt102=2;
                        alt102 = dfa102.predict(input);
                        switch (alt102) {
                    	case 1 :
                    	    // InternalSpellGrammar.g:5238:1: (lv_trailer_44_0= ruletrailer )
                    	    {
                    	    // InternalSpellGrammar.g:5238:1: (lv_trailer_44_0= ruletrailer )
                    	    // InternalSpellGrammar.g:5239:3: lv_trailer_44_0= ruletrailer
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getPowerAccess().getTrailerTrailerParserRuleCall_5_7_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_67);
                    	    lv_trailer_44_0=ruletrailer();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getPowerRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"trailer",
                    	              		lv_trailer_44_0, 
                    	              		"lu.ses.engineering.spell.controlflow.SpellGrammar.trailer");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop102;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 7 :
                    // InternalSpellGrammar.g:5256:6: ( () otherlv_46= 'GetLimits' otherlv_47= '(' ( (lv_tm_48_0= ruletest ) ) ( (otherlv_49= ',' )? ( (lv_args_50_0= rulearglist ) ) )* (otherlv_51= ',' )? otherlv_52= ')' ( (lv_trailer_53_0= ruletrailer ) )* )
                    {
                    // InternalSpellGrammar.g:5256:6: ( () otherlv_46= 'GetLimits' otherlv_47= '(' ( (lv_tm_48_0= ruletest ) ) ( (otherlv_49= ',' )? ( (lv_args_50_0= rulearglist ) ) )* (otherlv_51= ',' )? otherlv_52= ')' ( (lv_trailer_53_0= ruletrailer ) )* )
                    // InternalSpellGrammar.g:5256:7: () otherlv_46= 'GetLimits' otherlv_47= '(' ( (lv_tm_48_0= ruletest ) ) ( (otherlv_49= ',' )? ( (lv_args_50_0= rulearglist ) ) )* (otherlv_51= ',' )? otherlv_52= ')' ( (lv_trailer_53_0= ruletrailer ) )*
                    {
                    // InternalSpellGrammar.g:5256:7: ()
                    // InternalSpellGrammar.g:5257:2: 
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getPowerAccess().getSetLimitsAction_6_0(),
                                  current);
                          
                    }

                    }

                    otherlv_46=(Token)match(input,90,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_46, grammarAccess.getPowerAccess().getGetLimitsKeyword_6_1());
                          
                    }
                    otherlv_47=(Token)match(input,19,FollowSets000.FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_47, grammarAccess.getPowerAccess().getLeftParenthesisKeyword_6_2());
                          
                    }
                    // InternalSpellGrammar.g:5273:1: ( (lv_tm_48_0= ruletest ) )
                    // InternalSpellGrammar.g:5274:1: (lv_tm_48_0= ruletest )
                    {
                    // InternalSpellGrammar.g:5274:1: (lv_tm_48_0= ruletest )
                    // InternalSpellGrammar.g:5275:3: lv_tm_48_0= ruletest
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getPowerAccess().getTmTestParserRuleCall_6_3_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_68);
                    lv_tm_48_0=ruletest();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPowerRule());
                      	        }
                             		set(
                             			current, 
                             			"tm",
                              		lv_tm_48_0, 
                              		"lu.ses.engineering.spell.controlflow.SpellGrammar.test");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalSpellGrammar.g:5291:2: ( (otherlv_49= ',' )? ( (lv_args_50_0= rulearglist ) ) )*
                    loop104:
                    do {
                        int alt104=2;
                        int LA104_0 = input.LA(1);

                        if ( (LA104_0==23) ) {
                            int LA104_1 = input.LA(2);

                            if ( (LA104_1==RULE_STRING||(LA104_1>=RULE_NAME_TERMINAL && LA104_1<=RULE_NUMBER)||LA104_1==19||(LA104_1>=25 && LA104_1<=26)||LA104_1==28||LA104_1==48||LA104_1==65||LA104_1==79||(LA104_1>=83 && LA104_1<=96)||LA104_1==98||(LA104_1>=100 && LA104_1<=101)) ) {
                                alt104=1;
                            }


                        }
                        else if ( (LA104_0==RULE_STRING||(LA104_0>=RULE_NAME_TERMINAL && LA104_0<=RULE_NUMBER)||LA104_0==19||(LA104_0>=25 && LA104_0<=26)||LA104_0==28||LA104_0==48||LA104_0==65||LA104_0==79||(LA104_0>=83 && LA104_0<=96)||LA104_0==98||(LA104_0>=100 && LA104_0<=101)) ) {
                            alt104=1;
                        }


                        switch (alt104) {
                    	case 1 :
                    	    // InternalSpellGrammar.g:5291:3: (otherlv_49= ',' )? ( (lv_args_50_0= rulearglist ) )
                    	    {
                    	    // InternalSpellGrammar.g:5291:3: (otherlv_49= ',' )?
                    	    int alt103=2;
                    	    int LA103_0 = input.LA(1);

                    	    if ( (LA103_0==23) ) {
                    	        alt103=1;
                    	    }
                    	    switch (alt103) {
                    	        case 1 :
                    	            // InternalSpellGrammar.g:5291:5: otherlv_49= ','
                    	            {
                    	            otherlv_49=(Token)match(input,23,FollowSets000.FOLLOW_66); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                  	newLeafNode(otherlv_49, grammarAccess.getPowerAccess().getCommaKeyword_6_4_0());
                    	                  
                    	            }

                    	            }
                    	            break;

                    	    }

                    	    // InternalSpellGrammar.g:5295:3: ( (lv_args_50_0= rulearglist ) )
                    	    // InternalSpellGrammar.g:5296:1: (lv_args_50_0= rulearglist )
                    	    {
                    	    // InternalSpellGrammar.g:5296:1: (lv_args_50_0= rulearglist )
                    	    // InternalSpellGrammar.g:5297:3: lv_args_50_0= rulearglist
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getPowerAccess().getArgsArglistParserRuleCall_6_4_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_68);
                    	    lv_args_50_0=rulearglist();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getPowerRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"args",
                    	              		lv_args_50_0, 
                    	              		"lu.ses.engineering.spell.controlflow.SpellGrammar.arglist");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop104;
                        }
                    } while (true);

                    // InternalSpellGrammar.g:5313:4: (otherlv_51= ',' )?
                    int alt105=2;
                    int LA105_0 = input.LA(1);

                    if ( (LA105_0==23) ) {
                        alt105=1;
                    }
                    switch (alt105) {
                        case 1 :
                            // InternalSpellGrammar.g:5313:6: otherlv_51= ','
                            {
                            otherlv_51=(Token)match(input,23,FollowSets000.FOLLOW_7); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_51, grammarAccess.getPowerAccess().getCommaKeyword_6_5());
                                  
                            }

                            }
                            break;

                    }

                    otherlv_52=(Token)match(input,20,FollowSets000.FOLLOW_67); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_52, grammarAccess.getPowerAccess().getRightParenthesisKeyword_6_6());
                          
                    }
                    // InternalSpellGrammar.g:5321:1: ( (lv_trailer_53_0= ruletrailer ) )*
                    loop106:
                    do {
                        int alt106=2;
                        alt106 = dfa106.predict(input);
                        switch (alt106) {
                    	case 1 :
                    	    // InternalSpellGrammar.g:5322:1: (lv_trailer_53_0= ruletrailer )
                    	    {
                    	    // InternalSpellGrammar.g:5322:1: (lv_trailer_53_0= ruletrailer )
                    	    // InternalSpellGrammar.g:5323:3: lv_trailer_53_0= ruletrailer
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getPowerAccess().getTrailerTrailerParserRuleCall_6_7_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_67);
                    	    lv_trailer_53_0=ruletrailer();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getPowerRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"trailer",
                    	              		lv_trailer_53_0, 
                    	              		"lu.ses.engineering.spell.controlflow.SpellGrammar.trailer");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop106;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 8 :
                    // InternalSpellGrammar.g:5340:6: ( () otherlv_55= 'GetTM' otherlv_56= '(' ( (lv_tm_57_0= ruletest ) ) ( (otherlv_58= ',' )? ( (lv_args_59_0= rulearglist ) ) )* (otherlv_60= ',' )? otherlv_61= ')' ( (lv_trailer_62_0= ruletrailer ) )* )
                    {
                    // InternalSpellGrammar.g:5340:6: ( () otherlv_55= 'GetTM' otherlv_56= '(' ( (lv_tm_57_0= ruletest ) ) ( (otherlv_58= ',' )? ( (lv_args_59_0= rulearglist ) ) )* (otherlv_60= ',' )? otherlv_61= ')' ( (lv_trailer_62_0= ruletrailer ) )* )
                    // InternalSpellGrammar.g:5340:7: () otherlv_55= 'GetTM' otherlv_56= '(' ( (lv_tm_57_0= ruletest ) ) ( (otherlv_58= ',' )? ( (lv_args_59_0= rulearglist ) ) )* (otherlv_60= ',' )? otherlv_61= ')' ( (lv_trailer_62_0= ruletrailer ) )*
                    {
                    // InternalSpellGrammar.g:5340:7: ()
                    // InternalSpellGrammar.g:5341:2: 
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getPowerAccess().getGetTMAction_7_0(),
                                  current);
                          
                    }

                    }

                    otherlv_55=(Token)match(input,91,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_55, grammarAccess.getPowerAccess().getGetTMKeyword_7_1());
                          
                    }
                    otherlv_56=(Token)match(input,19,FollowSets000.FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_56, grammarAccess.getPowerAccess().getLeftParenthesisKeyword_7_2());
                          
                    }
                    // InternalSpellGrammar.g:5357:1: ( (lv_tm_57_0= ruletest ) )
                    // InternalSpellGrammar.g:5358:1: (lv_tm_57_0= ruletest )
                    {
                    // InternalSpellGrammar.g:5358:1: (lv_tm_57_0= ruletest )
                    // InternalSpellGrammar.g:5359:3: lv_tm_57_0= ruletest
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getPowerAccess().getTmTestParserRuleCall_7_3_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_68);
                    lv_tm_57_0=ruletest();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPowerRule());
                      	        }
                             		set(
                             			current, 
                             			"tm",
                              		lv_tm_57_0, 
                              		"lu.ses.engineering.spell.controlflow.SpellGrammar.test");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalSpellGrammar.g:5375:2: ( (otherlv_58= ',' )? ( (lv_args_59_0= rulearglist ) ) )*
                    loop108:
                    do {
                        int alt108=2;
                        int LA108_0 = input.LA(1);

                        if ( (LA108_0==23) ) {
                            int LA108_1 = input.LA(2);

                            if ( (LA108_1==RULE_STRING||(LA108_1>=RULE_NAME_TERMINAL && LA108_1<=RULE_NUMBER)||LA108_1==19||(LA108_1>=25 && LA108_1<=26)||LA108_1==28||LA108_1==48||LA108_1==65||LA108_1==79||(LA108_1>=83 && LA108_1<=96)||LA108_1==98||(LA108_1>=100 && LA108_1<=101)) ) {
                                alt108=1;
                            }


                        }
                        else if ( (LA108_0==RULE_STRING||(LA108_0>=RULE_NAME_TERMINAL && LA108_0<=RULE_NUMBER)||LA108_0==19||(LA108_0>=25 && LA108_0<=26)||LA108_0==28||LA108_0==48||LA108_0==65||LA108_0==79||(LA108_0>=83 && LA108_0<=96)||LA108_0==98||(LA108_0>=100 && LA108_0<=101)) ) {
                            alt108=1;
                        }


                        switch (alt108) {
                    	case 1 :
                    	    // InternalSpellGrammar.g:5375:3: (otherlv_58= ',' )? ( (lv_args_59_0= rulearglist ) )
                    	    {
                    	    // InternalSpellGrammar.g:5375:3: (otherlv_58= ',' )?
                    	    int alt107=2;
                    	    int LA107_0 = input.LA(1);

                    	    if ( (LA107_0==23) ) {
                    	        alt107=1;
                    	    }
                    	    switch (alt107) {
                    	        case 1 :
                    	            // InternalSpellGrammar.g:5375:5: otherlv_58= ','
                    	            {
                    	            otherlv_58=(Token)match(input,23,FollowSets000.FOLLOW_66); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                  	newLeafNode(otherlv_58, grammarAccess.getPowerAccess().getCommaKeyword_7_4_0());
                    	                  
                    	            }

                    	            }
                    	            break;

                    	    }

                    	    // InternalSpellGrammar.g:5379:3: ( (lv_args_59_0= rulearglist ) )
                    	    // InternalSpellGrammar.g:5380:1: (lv_args_59_0= rulearglist )
                    	    {
                    	    // InternalSpellGrammar.g:5380:1: (lv_args_59_0= rulearglist )
                    	    // InternalSpellGrammar.g:5381:3: lv_args_59_0= rulearglist
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getPowerAccess().getArgsArglistParserRuleCall_7_4_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_68);
                    	    lv_args_59_0=rulearglist();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getPowerRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"args",
                    	              		lv_args_59_0, 
                    	              		"lu.ses.engineering.spell.controlflow.SpellGrammar.arglist");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop108;
                        }
                    } while (true);

                    // InternalSpellGrammar.g:5397:4: (otherlv_60= ',' )?
                    int alt109=2;
                    int LA109_0 = input.LA(1);

                    if ( (LA109_0==23) ) {
                        alt109=1;
                    }
                    switch (alt109) {
                        case 1 :
                            // InternalSpellGrammar.g:5397:6: otherlv_60= ','
                            {
                            otherlv_60=(Token)match(input,23,FollowSets000.FOLLOW_7); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_60, grammarAccess.getPowerAccess().getCommaKeyword_7_5());
                                  
                            }

                            }
                            break;

                    }

                    otherlv_61=(Token)match(input,20,FollowSets000.FOLLOW_67); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_61, grammarAccess.getPowerAccess().getRightParenthesisKeyword_7_6());
                          
                    }
                    // InternalSpellGrammar.g:5405:1: ( (lv_trailer_62_0= ruletrailer ) )*
                    loop110:
                    do {
                        int alt110=2;
                        alt110 = dfa110.predict(input);
                        switch (alt110) {
                    	case 1 :
                    	    // InternalSpellGrammar.g:5406:1: (lv_trailer_62_0= ruletrailer )
                    	    {
                    	    // InternalSpellGrammar.g:5406:1: (lv_trailer_62_0= ruletrailer )
                    	    // InternalSpellGrammar.g:5407:3: lv_trailer_62_0= ruletrailer
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getPowerAccess().getTrailerTrailerParserRuleCall_7_7_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_67);
                    	    lv_trailer_62_0=ruletrailer();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getPowerRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"trailer",
                    	              		lv_trailer_62_0, 
                    	              		"lu.ses.engineering.spell.controlflow.SpellGrammar.trailer");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop110;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 9 :
                    // InternalSpellGrammar.g:5424:6: ( () otherlv_64= 'Goto' otherlv_65= '(' ( (lv_target_66_0= RULE_STRING ) ) otherlv_67= ')' ( (lv_trailer_68_0= ruletrailer ) )* )
                    {
                    // InternalSpellGrammar.g:5424:6: ( () otherlv_64= 'Goto' otherlv_65= '(' ( (lv_target_66_0= RULE_STRING ) ) otherlv_67= ')' ( (lv_trailer_68_0= ruletrailer ) )* )
                    // InternalSpellGrammar.g:5424:7: () otherlv_64= 'Goto' otherlv_65= '(' ( (lv_target_66_0= RULE_STRING ) ) otherlv_67= ')' ( (lv_trailer_68_0= ruletrailer ) )*
                    {
                    // InternalSpellGrammar.g:5424:7: ()
                    // InternalSpellGrammar.g:5425:2: 
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getPowerAccess().getGotoAction_8_0(),
                                  current);
                          
                    }

                    }

                    otherlv_64=(Token)match(input,92,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_64, grammarAccess.getPowerAccess().getGotoKeyword_8_1());
                          
                    }
                    otherlv_65=(Token)match(input,19,FollowSets000.FOLLOW_69); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_65, grammarAccess.getPowerAccess().getLeftParenthesisKeyword_8_2());
                          
                    }
                    // InternalSpellGrammar.g:5441:1: ( (lv_target_66_0= RULE_STRING ) )
                    // InternalSpellGrammar.g:5442:1: (lv_target_66_0= RULE_STRING )
                    {
                    // InternalSpellGrammar.g:5442:1: (lv_target_66_0= RULE_STRING )
                    // InternalSpellGrammar.g:5443:3: lv_target_66_0= RULE_STRING
                    {
                    lv_target_66_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_target_66_0, grammarAccess.getPowerAccess().getTargetSTRINGTerminalRuleCall_8_3_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPowerRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"target",
                              		lv_target_66_0, 
                              		"lu.ses.engineering.spell.controlflow.SpellGrammar.STRING");
                      	    
                    }

                    }


                    }

                    otherlv_67=(Token)match(input,20,FollowSets000.FOLLOW_67); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_67, grammarAccess.getPowerAccess().getRightParenthesisKeyword_8_4());
                          
                    }
                    // InternalSpellGrammar.g:5463:1: ( (lv_trailer_68_0= ruletrailer ) )*
                    loop111:
                    do {
                        int alt111=2;
                        alt111 = dfa111.predict(input);
                        switch (alt111) {
                    	case 1 :
                    	    // InternalSpellGrammar.g:5464:1: (lv_trailer_68_0= ruletrailer )
                    	    {
                    	    // InternalSpellGrammar.g:5464:1: (lv_trailer_68_0= ruletrailer )
                    	    // InternalSpellGrammar.g:5465:3: lv_trailer_68_0= ruletrailer
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getPowerAccess().getTrailerTrailerParserRuleCall_8_5_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_67);
                    	    lv_trailer_68_0=ruletrailer();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getPowerRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"trailer",
                    	              		lv_trailer_68_0, 
                    	              		"lu.ses.engineering.spell.controlflow.SpellGrammar.trailer");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop111;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 10 :
                    // InternalSpellGrammar.g:5482:6: ( () otherlv_70= 'Goto' otherlv_71= '(' ( (lv_expr_72_0= ruletest ) ) otherlv_73= ')' ( (lv_trailer_74_0= ruletrailer ) )* )
                    {
                    // InternalSpellGrammar.g:5482:6: ( () otherlv_70= 'Goto' otherlv_71= '(' ( (lv_expr_72_0= ruletest ) ) otherlv_73= ')' ( (lv_trailer_74_0= ruletrailer ) )* )
                    // InternalSpellGrammar.g:5482:7: () otherlv_70= 'Goto' otherlv_71= '(' ( (lv_expr_72_0= ruletest ) ) otherlv_73= ')' ( (lv_trailer_74_0= ruletrailer ) )*
                    {
                    // InternalSpellGrammar.g:5482:7: ()
                    // InternalSpellGrammar.g:5483:2: 
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getPowerAccess().getGotoAction_9_0(),
                                  current);
                          
                    }

                    }

                    otherlv_70=(Token)match(input,92,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_70, grammarAccess.getPowerAccess().getGotoKeyword_9_1());
                          
                    }
                    otherlv_71=(Token)match(input,19,FollowSets000.FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_71, grammarAccess.getPowerAccess().getLeftParenthesisKeyword_9_2());
                          
                    }
                    // InternalSpellGrammar.g:5499:1: ( (lv_expr_72_0= ruletest ) )
                    // InternalSpellGrammar.g:5500:1: (lv_expr_72_0= ruletest )
                    {
                    // InternalSpellGrammar.g:5500:1: (lv_expr_72_0= ruletest )
                    // InternalSpellGrammar.g:5501:3: lv_expr_72_0= ruletest
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getPowerAccess().getExprTestParserRuleCall_9_3_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_7);
                    lv_expr_72_0=ruletest();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPowerRule());
                      	        }
                             		set(
                             			current, 
                             			"expr",
                              		lv_expr_72_0, 
                              		"lu.ses.engineering.spell.controlflow.SpellGrammar.test");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_73=(Token)match(input,20,FollowSets000.FOLLOW_67); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_73, grammarAccess.getPowerAccess().getRightParenthesisKeyword_9_4());
                          
                    }
                    // InternalSpellGrammar.g:5521:1: ( (lv_trailer_74_0= ruletrailer ) )*
                    loop112:
                    do {
                        int alt112=2;
                        alt112 = dfa112.predict(input);
                        switch (alt112) {
                    	case 1 :
                    	    // InternalSpellGrammar.g:5522:1: (lv_trailer_74_0= ruletrailer )
                    	    {
                    	    // InternalSpellGrammar.g:5522:1: (lv_trailer_74_0= ruletrailer )
                    	    // InternalSpellGrammar.g:5523:3: lv_trailer_74_0= ruletrailer
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getPowerAccess().getTrailerTrailerParserRuleCall_9_5_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_67);
                    	    lv_trailer_74_0=ruletrailer();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getPowerRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"trailer",
                    	              		lv_trailer_74_0, 
                    	              		"lu.ses.engineering.spell.controlflow.SpellGrammar.trailer");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop112;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 11 :
                    // InternalSpellGrammar.g:5540:6: ( () otherlv_76= 'Verify' otherlv_77= '(' ( (lv_args_78_0= rulearglist ) ) (otherlv_79= ',' )? otherlv_80= ')' ( (lv_trailer_81_0= ruletrailer ) )* )
                    {
                    // InternalSpellGrammar.g:5540:6: ( () otherlv_76= 'Verify' otherlv_77= '(' ( (lv_args_78_0= rulearglist ) ) (otherlv_79= ',' )? otherlv_80= ')' ( (lv_trailer_81_0= ruletrailer ) )* )
                    // InternalSpellGrammar.g:5540:7: () otherlv_76= 'Verify' otherlv_77= '(' ( (lv_args_78_0= rulearglist ) ) (otherlv_79= ',' )? otherlv_80= ')' ( (lv_trailer_81_0= ruletrailer ) )*
                    {
                    // InternalSpellGrammar.g:5540:7: ()
                    // InternalSpellGrammar.g:5541:2: 
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getPowerAccess().getVerifyAction_10_0(),
                                  current);
                          
                    }

                    }

                    otherlv_76=(Token)match(input,93,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_76, grammarAccess.getPowerAccess().getVerifyKeyword_10_1());
                          
                    }
                    otherlv_77=(Token)match(input,19,FollowSets000.FOLLOW_66); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_77, grammarAccess.getPowerAccess().getLeftParenthesisKeyword_10_2());
                          
                    }
                    // InternalSpellGrammar.g:5557:1: ( (lv_args_78_0= rulearglist ) )
                    // InternalSpellGrammar.g:5558:1: (lv_args_78_0= rulearglist )
                    {
                    // InternalSpellGrammar.g:5558:1: (lv_args_78_0= rulearglist )
                    // InternalSpellGrammar.g:5559:3: lv_args_78_0= rulearglist
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getPowerAccess().getArgsArglistParserRuleCall_10_3_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_14);
                    lv_args_78_0=rulearglist();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPowerRule());
                      	        }
                             		set(
                             			current, 
                             			"args",
                              		lv_args_78_0, 
                              		"lu.ses.engineering.spell.controlflow.SpellGrammar.arglist");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalSpellGrammar.g:5575:2: (otherlv_79= ',' )?
                    int alt113=2;
                    int LA113_0 = input.LA(1);

                    if ( (LA113_0==23) ) {
                        alt113=1;
                    }
                    switch (alt113) {
                        case 1 :
                            // InternalSpellGrammar.g:5575:4: otherlv_79= ','
                            {
                            otherlv_79=(Token)match(input,23,FollowSets000.FOLLOW_7); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_79, grammarAccess.getPowerAccess().getCommaKeyword_10_4());
                                  
                            }

                            }
                            break;

                    }

                    otherlv_80=(Token)match(input,20,FollowSets000.FOLLOW_67); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_80, grammarAccess.getPowerAccess().getRightParenthesisKeyword_10_5());
                          
                    }
                    // InternalSpellGrammar.g:5583:1: ( (lv_trailer_81_0= ruletrailer ) )*
                    loop114:
                    do {
                        int alt114=2;
                        alt114 = dfa114.predict(input);
                        switch (alt114) {
                    	case 1 :
                    	    // InternalSpellGrammar.g:5584:1: (lv_trailer_81_0= ruletrailer )
                    	    {
                    	    // InternalSpellGrammar.g:5584:1: (lv_trailer_81_0= ruletrailer )
                    	    // InternalSpellGrammar.g:5585:3: lv_trailer_81_0= ruletrailer
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getPowerAccess().getTrailerTrailerParserRuleCall_10_6_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_67);
                    	    lv_trailer_81_0=ruletrailer();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getPowerRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"trailer",
                    	              		lv_trailer_81_0, 
                    	              		"lu.ses.engineering.spell.controlflow.SpellGrammar.trailer");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop114;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 12 :
                    // InternalSpellGrammar.g:5602:6: ( () otherlv_83= 'WaitFor' otherlv_84= '(' ( (lv_args_85_0= rulearglist ) ) (otherlv_86= ',' )? otherlv_87= ')' ( (lv_trailer_88_0= ruletrailer ) )* )
                    {
                    // InternalSpellGrammar.g:5602:6: ( () otherlv_83= 'WaitFor' otherlv_84= '(' ( (lv_args_85_0= rulearglist ) ) (otherlv_86= ',' )? otherlv_87= ')' ( (lv_trailer_88_0= ruletrailer ) )* )
                    // InternalSpellGrammar.g:5602:7: () otherlv_83= 'WaitFor' otherlv_84= '(' ( (lv_args_85_0= rulearglist ) ) (otherlv_86= ',' )? otherlv_87= ')' ( (lv_trailer_88_0= ruletrailer ) )*
                    {
                    // InternalSpellGrammar.g:5602:7: ()
                    // InternalSpellGrammar.g:5603:2: 
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getPowerAccess().getVerifyAction_11_0(),
                                  current);
                          
                    }

                    }

                    otherlv_83=(Token)match(input,94,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_83, grammarAccess.getPowerAccess().getWaitForKeyword_11_1());
                          
                    }
                    otherlv_84=(Token)match(input,19,FollowSets000.FOLLOW_66); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_84, grammarAccess.getPowerAccess().getLeftParenthesisKeyword_11_2());
                          
                    }
                    // InternalSpellGrammar.g:5619:1: ( (lv_args_85_0= rulearglist ) )
                    // InternalSpellGrammar.g:5620:1: (lv_args_85_0= rulearglist )
                    {
                    // InternalSpellGrammar.g:5620:1: (lv_args_85_0= rulearglist )
                    // InternalSpellGrammar.g:5621:3: lv_args_85_0= rulearglist
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getPowerAccess().getArgsArglistParserRuleCall_11_3_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_14);
                    lv_args_85_0=rulearglist();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPowerRule());
                      	        }
                             		set(
                             			current, 
                             			"args",
                              		lv_args_85_0, 
                              		"lu.ses.engineering.spell.controlflow.SpellGrammar.arglist");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalSpellGrammar.g:5637:2: (otherlv_86= ',' )?
                    int alt115=2;
                    int LA115_0 = input.LA(1);

                    if ( (LA115_0==23) ) {
                        alt115=1;
                    }
                    switch (alt115) {
                        case 1 :
                            // InternalSpellGrammar.g:5637:4: otherlv_86= ','
                            {
                            otherlv_86=(Token)match(input,23,FollowSets000.FOLLOW_7); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_86, grammarAccess.getPowerAccess().getCommaKeyword_11_4());
                                  
                            }

                            }
                            break;

                    }

                    otherlv_87=(Token)match(input,20,FollowSets000.FOLLOW_67); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_87, grammarAccess.getPowerAccess().getRightParenthesisKeyword_11_5());
                          
                    }
                    // InternalSpellGrammar.g:5645:1: ( (lv_trailer_88_0= ruletrailer ) )*
                    loop116:
                    do {
                        int alt116=2;
                        alt116 = dfa116.predict(input);
                        switch (alt116) {
                    	case 1 :
                    	    // InternalSpellGrammar.g:5646:1: (lv_trailer_88_0= ruletrailer )
                    	    {
                    	    // InternalSpellGrammar.g:5646:1: (lv_trailer_88_0= ruletrailer )
                    	    // InternalSpellGrammar.g:5647:3: lv_trailer_88_0= ruletrailer
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getPowerAccess().getTrailerTrailerParserRuleCall_11_6_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_67);
                    	    lv_trailer_88_0=ruletrailer();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getPowerRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"trailer",
                    	              		lv_trailer_88_0, 
                    	              		"lu.ses.engineering.spell.controlflow.SpellGrammar.trailer");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop116;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 13 :
                    // InternalSpellGrammar.g:5664:6: ( () otherlv_90= 'ChangeLanguageConfig' otherlv_91= '(' ( (lv_statement_92_0= rulePython_Statement ) ) otherlv_93= ',' ( (lv_args_94_0= rulearglist ) ) otherlv_95= ')' )
                    {
                    // InternalSpellGrammar.g:5664:6: ( () otherlv_90= 'ChangeLanguageConfig' otherlv_91= '(' ( (lv_statement_92_0= rulePython_Statement ) ) otherlv_93= ',' ( (lv_args_94_0= rulearglist ) ) otherlv_95= ')' )
                    // InternalSpellGrammar.g:5664:7: () otherlv_90= 'ChangeLanguageConfig' otherlv_91= '(' ( (lv_statement_92_0= rulePython_Statement ) ) otherlv_93= ',' ( (lv_args_94_0= rulearglist ) ) otherlv_95= ')'
                    {
                    // InternalSpellGrammar.g:5664:7: ()
                    // InternalSpellGrammar.g:5665:2: 
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getPowerAccess().getChangeLanguageConfigAction_12_0(),
                                  current);
                          
                    }

                    }

                    otherlv_90=(Token)match(input,95,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_90, grammarAccess.getPowerAccess().getChangeLanguageConfigKeyword_12_1());
                          
                    }
                    otherlv_91=(Token)match(input,19,FollowSets000.FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_91, grammarAccess.getPowerAccess().getLeftParenthesisKeyword_12_2());
                          
                    }
                    // InternalSpellGrammar.g:5681:1: ( (lv_statement_92_0= rulePython_Statement ) )
                    // InternalSpellGrammar.g:5682:1: (lv_statement_92_0= rulePython_Statement )
                    {
                    // InternalSpellGrammar.g:5682:1: (lv_statement_92_0= rulePython_Statement )
                    // InternalSpellGrammar.g:5683:3: lv_statement_92_0= rulePython_Statement
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getPowerAccess().getStatementPython_StatementParserRuleCall_12_3_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_17);
                    lv_statement_92_0=rulePython_Statement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPowerRule());
                      	        }
                             		set(
                             			current, 
                             			"statement",
                              		lv_statement_92_0, 
                              		"lu.ses.engineering.spell.controlflow.SpellGrammar.Python_Statement");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_93=(Token)match(input,23,FollowSets000.FOLLOW_66); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_93, grammarAccess.getPowerAccess().getCommaKeyword_12_4());
                          
                    }
                    // InternalSpellGrammar.g:5703:1: ( (lv_args_94_0= rulearglist ) )
                    // InternalSpellGrammar.g:5704:1: (lv_args_94_0= rulearglist )
                    {
                    // InternalSpellGrammar.g:5704:1: (lv_args_94_0= rulearglist )
                    // InternalSpellGrammar.g:5705:3: lv_args_94_0= rulearglist
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getPowerAccess().getArgsArglistParserRuleCall_12_5_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_7);
                    lv_args_94_0=rulearglist();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPowerRule());
                      	        }
                             		set(
                             			current, 
                             			"args",
                              		lv_args_94_0, 
                              		"lu.ses.engineering.spell.controlflow.SpellGrammar.arglist");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_95=(Token)match(input,20,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_95, grammarAccess.getPowerAccess().getRightParenthesisKeyword_12_6());
                          
                    }

                    }


                    }
                    break;
                case 14 :
                    // InternalSpellGrammar.g:5726:6: (this_atom_96= ruleatom ( () ( (lv_trailer_98_0= ruletrailer ) )+ (otherlv_99= '**' ( (lv_factor_100_0= rulefactor ) ) )? )? )
                    {
                    // InternalSpellGrammar.g:5726:6: (this_atom_96= ruleatom ( () ( (lv_trailer_98_0= ruletrailer ) )+ (otherlv_99= '**' ( (lv_factor_100_0= rulefactor ) ) )? )? )
                    // InternalSpellGrammar.g:5727:2: this_atom_96= ruleatom ( () ( (lv_trailer_98_0= ruletrailer ) )+ (otherlv_99= '**' ( (lv_factor_100_0= rulefactor ) ) )? )?
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPowerAccess().getAtomParserRuleCall_13_0()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_67);
                    this_atom_96=ruleatom();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_atom_96; 
                              afterParserOrEnumRuleCall();
                          
                    }
                    // InternalSpellGrammar.g:5738:1: ( () ( (lv_trailer_98_0= ruletrailer ) )+ (otherlv_99= '**' ( (lv_factor_100_0= rulefactor ) ) )? )?
                    int alt119=2;
                    alt119 = dfa119.predict(input);
                    switch (alt119) {
                        case 1 :
                            // InternalSpellGrammar.g:5738:2: () ( (lv_trailer_98_0= ruletrailer ) )+ (otherlv_99= '**' ( (lv_factor_100_0= rulefactor ) ) )?
                            {
                            // InternalSpellGrammar.g:5738:2: ()
                            // InternalSpellGrammar.g:5739:2: 
                            {
                            if ( state.backtracking==0 ) {
                               
                              	  /* */ 
                              	
                            }
                            if ( state.backtracking==0 ) {

                                      current = forceCreateModelElementAndSet(
                                          grammarAccess.getPowerAccess().getPowerAtomAction_13_1_0(),
                                          current);
                                  
                            }

                            }

                            // InternalSpellGrammar.g:5747:2: ( (lv_trailer_98_0= ruletrailer ) )+
                            int cnt117=0;
                            loop117:
                            do {
                                int alt117=2;
                                alt117 = dfa117.predict(input);
                                switch (alt117) {
                            	case 1 :
                            	    // InternalSpellGrammar.g:5748:1: (lv_trailer_98_0= ruletrailer )
                            	    {
                            	    // InternalSpellGrammar.g:5748:1: (lv_trailer_98_0= ruletrailer )
                            	    // InternalSpellGrammar.g:5749:3: lv_trailer_98_0= ruletrailer
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getPowerAccess().getTrailerTrailerParserRuleCall_13_1_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FollowSets000.FOLLOW_70);
                            	    lv_trailer_98_0=ruletrailer();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getPowerRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"trailer",
                            	              		lv_trailer_98_0, 
                            	              		"lu.ses.engineering.spell.controlflow.SpellGrammar.trailer");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    if ( cnt117 >= 1 ) break loop117;
                            	    if (state.backtracking>0) {state.failed=true; return current;}
                                        EarlyExitException eee =
                                            new EarlyExitException(117, input);
                                        throw eee;
                                }
                                cnt117++;
                            } while (true);

                            // InternalSpellGrammar.g:5765:3: (otherlv_99= '**' ( (lv_factor_100_0= rulefactor ) ) )?
                            int alt118=2;
                            alt118 = dfa118.predict(input);
                            switch (alt118) {
                                case 1 :
                                    // InternalSpellGrammar.g:5765:5: otherlv_99= '**' ( (lv_factor_100_0= rulefactor ) )
                                    {
                                    otherlv_99=(Token)match(input,26,FollowSets000.FOLLOW_28); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                          	newLeafNode(otherlv_99, grammarAccess.getPowerAccess().getAsteriskAsteriskKeyword_13_1_2_0());
                                          
                                    }
                                    // InternalSpellGrammar.g:5769:1: ( (lv_factor_100_0= rulefactor ) )
                                    // InternalSpellGrammar.g:5770:1: (lv_factor_100_0= rulefactor )
                                    {
                                    // InternalSpellGrammar.g:5770:1: (lv_factor_100_0= rulefactor )
                                    // InternalSpellGrammar.g:5771:3: lv_factor_100_0= rulefactor
                                    {
                                    if ( state.backtracking==0 ) {
                                       
                                      	        newCompositeNode(grammarAccess.getPowerAccess().getFactorFactorParserRuleCall_13_1_2_1_0()); 
                                      	    
                                    }
                                    pushFollow(FollowSets000.FOLLOW_2);
                                    lv_factor_100_0=rulefactor();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      	        if (current==null) {
                                      	            current = createModelElementForParent(grammarAccess.getPowerRule());
                                      	        }
                                             		set(
                                             			current, 
                                             			"factor",
                                              		lv_factor_100_0, 
                                              		"lu.ses.engineering.spell.controlflow.SpellGrammar.factor");
                                      	        afterParserOrEnumRuleCall();
                                      	    
                                    }

                                    }


                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 124, rulepower_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "rulepower"


    // $ANTLR start "entryRuleyield_or_testlist_comp"
    // InternalSpellGrammar.g:5795:1: entryRuleyield_or_testlist_comp returns [EObject current=null] : iv_ruleyield_or_testlist_comp= ruleyield_or_testlist_comp EOF ;
    public final EObject entryRuleyield_or_testlist_comp() throws RecognitionException {
        EObject current = null;
        int entryRuleyield_or_testlist_comp_StartIndex = input.index();
        EObject iv_ruleyield_or_testlist_comp = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 125) ) { return current; }
            // InternalSpellGrammar.g:5796:2: (iv_ruleyield_or_testlist_comp= ruleyield_or_testlist_comp EOF )
            // InternalSpellGrammar.g:5797:2: iv_ruleyield_or_testlist_comp= ruleyield_or_testlist_comp EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getYield_or_testlist_compRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleyield_or_testlist_comp=ruleyield_or_testlist_comp();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleyield_or_testlist_comp; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 125, entryRuleyield_or_testlist_comp_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleyield_or_testlist_comp"


    // $ANTLR start "ruleyield_or_testlist_comp"
    // InternalSpellGrammar.g:5804:1: ruleyield_or_testlist_comp returns [EObject current=null] : (this_yield_expr_0= ruleyield_expr | this_testlist_comp_1= ruletestlist_comp ) ;
    public final EObject ruleyield_or_testlist_comp() throws RecognitionException {
        EObject current = null;
        int ruleyield_or_testlist_comp_StartIndex = input.index();
        EObject this_yield_expr_0 = null;

        EObject this_testlist_comp_1 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 126) ) { return current; }
            // InternalSpellGrammar.g:5807:28: ( (this_yield_expr_0= ruleyield_expr | this_testlist_comp_1= ruletestlist_comp ) )
            // InternalSpellGrammar.g:5808:1: (this_yield_expr_0= ruleyield_expr | this_testlist_comp_1= ruletestlist_comp )
            {
            // InternalSpellGrammar.g:5808:1: (this_yield_expr_0= ruleyield_expr | this_testlist_comp_1= ruletestlist_comp )
            int alt121=2;
            int LA121_0 = input.LA(1);

            if ( (LA121_0==103) ) {
                alt121=1;
            }
            else if ( (LA121_0==RULE_STRING||(LA121_0>=RULE_NAME_TERMINAL && LA121_0<=RULE_NUMBER)||LA121_0==19||LA121_0==28||LA121_0==48||LA121_0==65||LA121_0==79||(LA121_0>=83 && LA121_0<=96)||LA121_0==98||(LA121_0>=100 && LA121_0<=101)) ) {
                alt121=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 121, 0, input);

                throw nvae;
            }
            switch (alt121) {
                case 1 :
                    // InternalSpellGrammar.g:5809:2: this_yield_expr_0= ruleyield_expr
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getYield_or_testlist_compAccess().getYield_exprParserRuleCall_0()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_yield_expr_0=ruleyield_expr();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_yield_expr_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalSpellGrammar.g:5822:2: this_testlist_comp_1= ruletestlist_comp
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getYield_or_testlist_compAccess().getTestlist_compParserRuleCall_1()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_testlist_comp_1=ruletestlist_comp();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_testlist_comp_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 126, ruleyield_or_testlist_comp_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleyield_or_testlist_comp"


    // $ANTLR start "entryRuleatom"
    // InternalSpellGrammar.g:5841:1: entryRuleatom returns [EObject current=null] : iv_ruleatom= ruleatom EOF ;
    public final EObject entryRuleatom() throws RecognitionException {
        EObject current = null;
        int entryRuleatom_StartIndex = input.index();
        EObject iv_ruleatom = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 127) ) { return current; }
            // InternalSpellGrammar.g:5842:2: (iv_ruleatom= ruleatom EOF )
            // InternalSpellGrammar.g:5843:2: iv_ruleatom= ruleatom EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAtomRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleatom=ruleatom();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleatom; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 127, entryRuleatom_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleatom"


    // $ANTLR start "ruleatom"
    // InternalSpellGrammar.g:5850:1: ruleatom returns [EObject current=null] : ( ( ( (lv_roundBracket_0_0= '(' ) ) ( (lv_yield_or_testlist_comp_1_0= ruleyield_or_testlist_comp ) )? otherlv_2= ')' ) | ( ( (lv_squareBracket_3_0= '[' ) ) ( (lv_listmaker_4_0= rulelistmaker ) )? otherlv_5= ']' ) | ( ( (lv_curlyBracket_6_0= '{' ) ) ( (lv_dictorsetmaker_7_0= ruledictorsetmaker ) )? otherlv_8= '}' ) | (otherlv_9= '`' ( (lv_testlist1_10_0= ruletestlist1 ) ) otherlv_11= '`' ) | ( (lv_name_12_0= ruleNAME ) ) | ( (lv_name_13_0= ruleNumberWithPlusOrMinus ) ) | ( ( (lv_strings_14_0= RULE_STRING ) ) (this_WS_15= RULE_WS )? )+ ) ;
    public final EObject ruleatom() throws RecognitionException {
        EObject current = null;
        int ruleatom_StartIndex = input.index();
        Token lv_roundBracket_0_0=null;
        Token otherlv_2=null;
        Token lv_squareBracket_3_0=null;
        Token otherlv_5=null;
        Token lv_curlyBracket_6_0=null;
        Token otherlv_8=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token lv_strings_14_0=null;
        Token this_WS_15=null;
        EObject lv_yield_or_testlist_comp_1_0 = null;

        EObject lv_listmaker_4_0 = null;

        EObject lv_dictorsetmaker_7_0 = null;

        EObject lv_testlist1_10_0 = null;

        AntlrDatatypeRuleToken lv_name_12_0 = null;

        AntlrDatatypeRuleToken lv_name_13_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 128) ) { return current; }
            // InternalSpellGrammar.g:5853:28: ( ( ( ( (lv_roundBracket_0_0= '(' ) ) ( (lv_yield_or_testlist_comp_1_0= ruleyield_or_testlist_comp ) )? otherlv_2= ')' ) | ( ( (lv_squareBracket_3_0= '[' ) ) ( (lv_listmaker_4_0= rulelistmaker ) )? otherlv_5= ']' ) | ( ( (lv_curlyBracket_6_0= '{' ) ) ( (lv_dictorsetmaker_7_0= ruledictorsetmaker ) )? otherlv_8= '}' ) | (otherlv_9= '`' ( (lv_testlist1_10_0= ruletestlist1 ) ) otherlv_11= '`' ) | ( (lv_name_12_0= ruleNAME ) ) | ( (lv_name_13_0= ruleNumberWithPlusOrMinus ) ) | ( ( (lv_strings_14_0= RULE_STRING ) ) (this_WS_15= RULE_WS )? )+ ) )
            // InternalSpellGrammar.g:5854:1: ( ( ( (lv_roundBracket_0_0= '(' ) ) ( (lv_yield_or_testlist_comp_1_0= ruleyield_or_testlist_comp ) )? otherlv_2= ')' ) | ( ( (lv_squareBracket_3_0= '[' ) ) ( (lv_listmaker_4_0= rulelistmaker ) )? otherlv_5= ']' ) | ( ( (lv_curlyBracket_6_0= '{' ) ) ( (lv_dictorsetmaker_7_0= ruledictorsetmaker ) )? otherlv_8= '}' ) | (otherlv_9= '`' ( (lv_testlist1_10_0= ruletestlist1 ) ) otherlv_11= '`' ) | ( (lv_name_12_0= ruleNAME ) ) | ( (lv_name_13_0= ruleNumberWithPlusOrMinus ) ) | ( ( (lv_strings_14_0= RULE_STRING ) ) (this_WS_15= RULE_WS )? )+ )
            {
            // InternalSpellGrammar.g:5854:1: ( ( ( (lv_roundBracket_0_0= '(' ) ) ( (lv_yield_or_testlist_comp_1_0= ruleyield_or_testlist_comp ) )? otherlv_2= ')' ) | ( ( (lv_squareBracket_3_0= '[' ) ) ( (lv_listmaker_4_0= rulelistmaker ) )? otherlv_5= ']' ) | ( ( (lv_curlyBracket_6_0= '{' ) ) ( (lv_dictorsetmaker_7_0= ruledictorsetmaker ) )? otherlv_8= '}' ) | (otherlv_9= '`' ( (lv_testlist1_10_0= ruletestlist1 ) ) otherlv_11= '`' ) | ( (lv_name_12_0= ruleNAME ) ) | ( (lv_name_13_0= ruleNumberWithPlusOrMinus ) ) | ( ( (lv_strings_14_0= RULE_STRING ) ) (this_WS_15= RULE_WS )? )+ )
            int alt127=7;
            switch ( input.LA(1) ) {
            case 19:
                {
                alt127=1;
                }
                break;
            case 96:
                {
                alt127=2;
                }
                break;
            case 98:
                {
                alt127=3;
                }
                break;
            case 100:
                {
                alt127=4;
                }
                break;
            case RULE_NAME_TERMINAL:
            case 84:
            case 85:
            case 86:
            case 87:
            case 88:
            case 89:
            case 90:
            case 91:
            case 92:
            case 93:
            case 94:
                {
                alt127=5;
                }
                break;
            case RULE_NUMBER:
            case 28:
            case 48:
            case 79:
                {
                alt127=6;
                }
                break;
            case RULE_STRING:
                {
                alt127=7;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 127, 0, input);

                throw nvae;
            }

            switch (alt127) {
                case 1 :
                    // InternalSpellGrammar.g:5854:2: ( ( (lv_roundBracket_0_0= '(' ) ) ( (lv_yield_or_testlist_comp_1_0= ruleyield_or_testlist_comp ) )? otherlv_2= ')' )
                    {
                    // InternalSpellGrammar.g:5854:2: ( ( (lv_roundBracket_0_0= '(' ) ) ( (lv_yield_or_testlist_comp_1_0= ruleyield_or_testlist_comp ) )? otherlv_2= ')' )
                    // InternalSpellGrammar.g:5854:3: ( (lv_roundBracket_0_0= '(' ) ) ( (lv_yield_or_testlist_comp_1_0= ruleyield_or_testlist_comp ) )? otherlv_2= ')'
                    {
                    // InternalSpellGrammar.g:5854:3: ( (lv_roundBracket_0_0= '(' ) )
                    // InternalSpellGrammar.g:5855:1: (lv_roundBracket_0_0= '(' )
                    {
                    // InternalSpellGrammar.g:5855:1: (lv_roundBracket_0_0= '(' )
                    // InternalSpellGrammar.g:5856:3: lv_roundBracket_0_0= '('
                    {
                    lv_roundBracket_0_0=(Token)match(input,19,FollowSets000.FOLLOW_71); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_roundBracket_0_0, grammarAccess.getAtomAccess().getRoundBracketLeftParenthesisKeyword_0_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getAtomRule());
                      	        }
                             		setWithLastConsumed(current, "roundBracket", true, "(");
                      	    
                    }

                    }


                    }

                    // InternalSpellGrammar.g:5869:2: ( (lv_yield_or_testlist_comp_1_0= ruleyield_or_testlist_comp ) )?
                    int alt122=2;
                    int LA122_0 = input.LA(1);

                    if ( (LA122_0==RULE_STRING||(LA122_0>=RULE_NAME_TERMINAL && LA122_0<=RULE_NUMBER)||LA122_0==19||LA122_0==28||LA122_0==48||LA122_0==65||LA122_0==79||(LA122_0>=83 && LA122_0<=96)||LA122_0==98||(LA122_0>=100 && LA122_0<=101)||LA122_0==103) ) {
                        alt122=1;
                    }
                    switch (alt122) {
                        case 1 :
                            // InternalSpellGrammar.g:5870:1: (lv_yield_or_testlist_comp_1_0= ruleyield_or_testlist_comp )
                            {
                            // InternalSpellGrammar.g:5870:1: (lv_yield_or_testlist_comp_1_0= ruleyield_or_testlist_comp )
                            // InternalSpellGrammar.g:5871:3: lv_yield_or_testlist_comp_1_0= ruleyield_or_testlist_comp
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getAtomAccess().getYield_or_testlist_compYield_or_testlist_compParserRuleCall_0_1_0()); 
                              	    
                            }
                            pushFollow(FollowSets000.FOLLOW_7);
                            lv_yield_or_testlist_comp_1_0=ruleyield_or_testlist_comp();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getAtomRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"yield_or_testlist_comp",
                                      		lv_yield_or_testlist_comp_1_0, 
                                      		"lu.ses.engineering.spell.controlflow.SpellGrammar.yield_or_testlist_comp");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            break;

                    }

                    otherlv_2=(Token)match(input,20,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getAtomAccess().getRightParenthesisKeyword_0_2());
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSpellGrammar.g:5892:6: ( ( (lv_squareBracket_3_0= '[' ) ) ( (lv_listmaker_4_0= rulelistmaker ) )? otherlv_5= ']' )
                    {
                    // InternalSpellGrammar.g:5892:6: ( ( (lv_squareBracket_3_0= '[' ) ) ( (lv_listmaker_4_0= rulelistmaker ) )? otherlv_5= ']' )
                    // InternalSpellGrammar.g:5892:7: ( (lv_squareBracket_3_0= '[' ) ) ( (lv_listmaker_4_0= rulelistmaker ) )? otherlv_5= ']'
                    {
                    // InternalSpellGrammar.g:5892:7: ( (lv_squareBracket_3_0= '[' ) )
                    // InternalSpellGrammar.g:5893:1: (lv_squareBracket_3_0= '[' )
                    {
                    // InternalSpellGrammar.g:5893:1: (lv_squareBracket_3_0= '[' )
                    // InternalSpellGrammar.g:5894:3: lv_squareBracket_3_0= '['
                    {
                    lv_squareBracket_3_0=(Token)match(input,96,FollowSets000.FOLLOW_72); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_squareBracket_3_0, grammarAccess.getAtomAccess().getSquareBracketLeftSquareBracketKeyword_1_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getAtomRule());
                      	        }
                             		setWithLastConsumed(current, "squareBracket", true, "[");
                      	    
                    }

                    }


                    }

                    // InternalSpellGrammar.g:5907:2: ( (lv_listmaker_4_0= rulelistmaker ) )?
                    int alt123=2;
                    int LA123_0 = input.LA(1);

                    if ( (LA123_0==RULE_STRING||(LA123_0>=RULE_NAME_TERMINAL && LA123_0<=RULE_NUMBER)||LA123_0==19||LA123_0==28||LA123_0==48||LA123_0==65||LA123_0==79||(LA123_0>=83 && LA123_0<=96)||LA123_0==98||(LA123_0>=100 && LA123_0<=101)) ) {
                        alt123=1;
                    }
                    switch (alt123) {
                        case 1 :
                            // InternalSpellGrammar.g:5908:1: (lv_listmaker_4_0= rulelistmaker )
                            {
                            // InternalSpellGrammar.g:5908:1: (lv_listmaker_4_0= rulelistmaker )
                            // InternalSpellGrammar.g:5909:3: lv_listmaker_4_0= rulelistmaker
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getAtomAccess().getListmakerListmakerParserRuleCall_1_1_0()); 
                              	    
                            }
                            pushFollow(FollowSets000.FOLLOW_73);
                            lv_listmaker_4_0=rulelistmaker();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getAtomRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"listmaker",
                                      		lv_listmaker_4_0, 
                                      		"lu.ses.engineering.spell.controlflow.SpellGrammar.listmaker");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            break;

                    }

                    otherlv_5=(Token)match(input,97,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getAtomAccess().getRightSquareBracketKeyword_1_2());
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSpellGrammar.g:5930:6: ( ( (lv_curlyBracket_6_0= '{' ) ) ( (lv_dictorsetmaker_7_0= ruledictorsetmaker ) )? otherlv_8= '}' )
                    {
                    // InternalSpellGrammar.g:5930:6: ( ( (lv_curlyBracket_6_0= '{' ) ) ( (lv_dictorsetmaker_7_0= ruledictorsetmaker ) )? otherlv_8= '}' )
                    // InternalSpellGrammar.g:5930:7: ( (lv_curlyBracket_6_0= '{' ) ) ( (lv_dictorsetmaker_7_0= ruledictorsetmaker ) )? otherlv_8= '}'
                    {
                    // InternalSpellGrammar.g:5930:7: ( (lv_curlyBracket_6_0= '{' ) )
                    // InternalSpellGrammar.g:5931:1: (lv_curlyBracket_6_0= '{' )
                    {
                    // InternalSpellGrammar.g:5931:1: (lv_curlyBracket_6_0= '{' )
                    // InternalSpellGrammar.g:5932:3: lv_curlyBracket_6_0= '{'
                    {
                    lv_curlyBracket_6_0=(Token)match(input,98,FollowSets000.FOLLOW_74); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_curlyBracket_6_0, grammarAccess.getAtomAccess().getCurlyBracketLeftCurlyBracketKeyword_2_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getAtomRule());
                      	        }
                             		setWithLastConsumed(current, "curlyBracket", true, "{");
                      	    
                    }

                    }


                    }

                    // InternalSpellGrammar.g:5945:2: ( (lv_dictorsetmaker_7_0= ruledictorsetmaker ) )?
                    int alt124=2;
                    int LA124_0 = input.LA(1);

                    if ( (LA124_0==RULE_STRING||(LA124_0>=RULE_NAME_TERMINAL && LA124_0<=RULE_NUMBER)||LA124_0==19||LA124_0==28||LA124_0==48||LA124_0==65||LA124_0==79||(LA124_0>=83 && LA124_0<=96)||LA124_0==98||(LA124_0>=100 && LA124_0<=101)) ) {
                        alt124=1;
                    }
                    switch (alt124) {
                        case 1 :
                            // InternalSpellGrammar.g:5946:1: (lv_dictorsetmaker_7_0= ruledictorsetmaker )
                            {
                            // InternalSpellGrammar.g:5946:1: (lv_dictorsetmaker_7_0= ruledictorsetmaker )
                            // InternalSpellGrammar.g:5947:3: lv_dictorsetmaker_7_0= ruledictorsetmaker
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getAtomAccess().getDictorsetmakerDictorsetmakerParserRuleCall_2_1_0()); 
                              	    
                            }
                            pushFollow(FollowSets000.FOLLOW_75);
                            lv_dictorsetmaker_7_0=ruledictorsetmaker();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getAtomRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"dictorsetmaker",
                                      		lv_dictorsetmaker_7_0, 
                                      		"lu.ses.engineering.spell.controlflow.SpellGrammar.dictorsetmaker");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            break;

                    }

                    otherlv_8=(Token)match(input,99,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_8, grammarAccess.getAtomAccess().getRightCurlyBracketKeyword_2_2());
                          
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSpellGrammar.g:5968:6: (otherlv_9= '`' ( (lv_testlist1_10_0= ruletestlist1 ) ) otherlv_11= '`' )
                    {
                    // InternalSpellGrammar.g:5968:6: (otherlv_9= '`' ( (lv_testlist1_10_0= ruletestlist1 ) ) otherlv_11= '`' )
                    // InternalSpellGrammar.g:5968:8: otherlv_9= '`' ( (lv_testlist1_10_0= ruletestlist1 ) ) otherlv_11= '`'
                    {
                    otherlv_9=(Token)match(input,100,FollowSets000.FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_9, grammarAccess.getAtomAccess().getGraveAccentKeyword_3_0());
                          
                    }
                    // InternalSpellGrammar.g:5972:1: ( (lv_testlist1_10_0= ruletestlist1 ) )
                    // InternalSpellGrammar.g:5973:1: (lv_testlist1_10_0= ruletestlist1 )
                    {
                    // InternalSpellGrammar.g:5973:1: (lv_testlist1_10_0= ruletestlist1 )
                    // InternalSpellGrammar.g:5974:3: lv_testlist1_10_0= ruletestlist1
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getAtomAccess().getTestlist1Testlist1ParserRuleCall_3_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_76);
                    lv_testlist1_10_0=ruletestlist1();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getAtomRule());
                      	        }
                             		set(
                             			current, 
                             			"testlist1",
                              		lv_testlist1_10_0, 
                              		"lu.ses.engineering.spell.controlflow.SpellGrammar.testlist1");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_11=(Token)match(input,100,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_11, grammarAccess.getAtomAccess().getGraveAccentKeyword_3_2());
                          
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSpellGrammar.g:5995:6: ( (lv_name_12_0= ruleNAME ) )
                    {
                    // InternalSpellGrammar.g:5995:6: ( (lv_name_12_0= ruleNAME ) )
                    // InternalSpellGrammar.g:5996:1: (lv_name_12_0= ruleNAME )
                    {
                    // InternalSpellGrammar.g:5996:1: (lv_name_12_0= ruleNAME )
                    // InternalSpellGrammar.g:5997:3: lv_name_12_0= ruleNAME
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getAtomAccess().getNameNAMEParserRuleCall_4_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_name_12_0=ruleNAME();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getAtomRule());
                      	        }
                             		set(
                             			current, 
                             			"name",
                              		lv_name_12_0, 
                              		"lu.ses.engineering.spell.controlflow.SpellGrammar.NAME");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalSpellGrammar.g:6014:6: ( (lv_name_13_0= ruleNumberWithPlusOrMinus ) )
                    {
                    // InternalSpellGrammar.g:6014:6: ( (lv_name_13_0= ruleNumberWithPlusOrMinus ) )
                    // InternalSpellGrammar.g:6015:1: (lv_name_13_0= ruleNumberWithPlusOrMinus )
                    {
                    // InternalSpellGrammar.g:6015:1: (lv_name_13_0= ruleNumberWithPlusOrMinus )
                    // InternalSpellGrammar.g:6016:3: lv_name_13_0= ruleNumberWithPlusOrMinus
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getAtomAccess().getNameNumberWithPlusOrMinusParserRuleCall_5_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_name_13_0=ruleNumberWithPlusOrMinus();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getAtomRule());
                      	        }
                             		set(
                             			current, 
                             			"name",
                              		lv_name_13_0, 
                              		"lu.ses.engineering.spell.controlflow.SpellGrammar.NumberWithPlusOrMinus");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 7 :
                    // InternalSpellGrammar.g:6033:6: ( ( (lv_strings_14_0= RULE_STRING ) ) (this_WS_15= RULE_WS )? )+
                    {
                    // InternalSpellGrammar.g:6033:6: ( ( (lv_strings_14_0= RULE_STRING ) ) (this_WS_15= RULE_WS )? )+
                    int cnt126=0;
                    loop126:
                    do {
                        int alt126=2;
                        int LA126_0 = input.LA(1);

                        if ( (LA126_0==RULE_STRING) ) {
                            int LA126_2 = input.LA(2);

                            if ( (synpred184_InternalSpellGrammar()) ) {
                                alt126=1;
                            }


                        }


                        switch (alt126) {
                    	case 1 :
                    	    // InternalSpellGrammar.g:6033:7: ( (lv_strings_14_0= RULE_STRING ) ) (this_WS_15= RULE_WS )?
                    	    {
                    	    // InternalSpellGrammar.g:6033:7: ( (lv_strings_14_0= RULE_STRING ) )
                    	    // InternalSpellGrammar.g:6034:1: (lv_strings_14_0= RULE_STRING )
                    	    {
                    	    // InternalSpellGrammar.g:6034:1: (lv_strings_14_0= RULE_STRING )
                    	    // InternalSpellGrammar.g:6035:3: lv_strings_14_0= RULE_STRING
                    	    {
                    	    lv_strings_14_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_77); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      			newLeafNode(lv_strings_14_0, grammarAccess.getAtomAccess().getStringsSTRINGTerminalRuleCall_6_0_0()); 
                    	      		
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElement(grammarAccess.getAtomRule());
                    	      	        }
                    	             		addWithLastConsumed(
                    	             			current, 
                    	             			"strings",
                    	              		lv_strings_14_0, 
                    	              		"lu.ses.engineering.spell.controlflow.SpellGrammar.STRING");
                    	      	    
                    	    }

                    	    }


                    	    }

                    	    // InternalSpellGrammar.g:6051:2: (this_WS_15= RULE_WS )?
                    	    int alt125=2;
                    	    int LA125_0 = input.LA(1);

                    	    if ( (LA125_0==RULE_WS) ) {
                    	        alt125=1;
                    	    }
                    	    switch (alt125) {
                    	        case 1 :
                    	            // InternalSpellGrammar.g:6051:3: this_WS_15= RULE_WS
                    	            {
                    	            this_WS_15=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_78); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {
                    	               
                    	                  newLeafNode(this_WS_15, grammarAccess.getAtomAccess().getWSTerminalRuleCall_6_1()); 
                    	                  
                    	            }

                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt126 >= 1 ) break loop126;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(126, input);
                                throw eee;
                        }
                        cnt126++;
                    } while (true);


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 128, ruleatom_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleatom"


    // $ANTLR start "entryRulelistmaker"
    // InternalSpellGrammar.g:6063:1: entryRulelistmaker returns [EObject current=null] : iv_rulelistmaker= rulelistmaker EOF ;
    public final EObject entryRulelistmaker() throws RecognitionException {
        EObject current = null;
        int entryRulelistmaker_StartIndex = input.index();
        EObject iv_rulelistmaker = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 129) ) { return current; }
            // InternalSpellGrammar.g:6064:2: (iv_rulelistmaker= rulelistmaker EOF )
            // InternalSpellGrammar.g:6065:2: iv_rulelistmaker= rulelistmaker EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getListmakerRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulelistmaker=rulelistmaker();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulelistmaker; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 129, entryRulelistmaker_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRulelistmaker"


    // $ANTLR start "rulelistmaker"
    // InternalSpellGrammar.g:6072:1: rulelistmaker returns [EObject current=null] : ( ( (lv_test_0_0= ruletest ) ) ( ( (lv_list_for_1_0= rulelist_for ) ) | ( (otherlv_2= ',' ( (lv_additionalTests_3_0= ruletest ) ) )* ( (lv_optionalComma_4_0= ',' ) )? ) )? ) ;
    public final EObject rulelistmaker() throws RecognitionException {
        EObject current = null;
        int rulelistmaker_StartIndex = input.index();
        Token otherlv_2=null;
        Token lv_optionalComma_4_0=null;
        EObject lv_test_0_0 = null;

        EObject lv_list_for_1_0 = null;

        EObject lv_additionalTests_3_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 130) ) { return current; }
            // InternalSpellGrammar.g:6075:28: ( ( ( (lv_test_0_0= ruletest ) ) ( ( (lv_list_for_1_0= rulelist_for ) ) | ( (otherlv_2= ',' ( (lv_additionalTests_3_0= ruletest ) ) )* ( (lv_optionalComma_4_0= ',' ) )? ) )? ) )
            // InternalSpellGrammar.g:6076:1: ( ( (lv_test_0_0= ruletest ) ) ( ( (lv_list_for_1_0= rulelist_for ) ) | ( (otherlv_2= ',' ( (lv_additionalTests_3_0= ruletest ) ) )* ( (lv_optionalComma_4_0= ',' ) )? ) )? )
            {
            // InternalSpellGrammar.g:6076:1: ( ( (lv_test_0_0= ruletest ) ) ( ( (lv_list_for_1_0= rulelist_for ) ) | ( (otherlv_2= ',' ( (lv_additionalTests_3_0= ruletest ) ) )* ( (lv_optionalComma_4_0= ',' ) )? ) )? )
            // InternalSpellGrammar.g:6076:2: ( (lv_test_0_0= ruletest ) ) ( ( (lv_list_for_1_0= rulelist_for ) ) | ( (otherlv_2= ',' ( (lv_additionalTests_3_0= ruletest ) ) )* ( (lv_optionalComma_4_0= ',' ) )? ) )?
            {
            // InternalSpellGrammar.g:6076:2: ( (lv_test_0_0= ruletest ) )
            // InternalSpellGrammar.g:6077:1: (lv_test_0_0= ruletest )
            {
            // InternalSpellGrammar.g:6077:1: (lv_test_0_0= ruletest )
            // InternalSpellGrammar.g:6078:3: lv_test_0_0= ruletest
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getListmakerAccess().getTestTestParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_79);
            lv_test_0_0=ruletest();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getListmakerRule());
              	        }
                     		set(
                     			current, 
                     			"test",
                      		lv_test_0_0, 
                      		"lu.ses.engineering.spell.controlflow.SpellGrammar.test");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSpellGrammar.g:6094:2: ( ( (lv_list_for_1_0= rulelist_for ) ) | ( (otherlv_2= ',' ( (lv_additionalTests_3_0= ruletest ) ) )* ( (lv_optionalComma_4_0= ',' ) )? ) )?
            int alt130=3;
            switch ( input.LA(1) ) {
                case 58:
                    {
                    alt130=1;
                    }
                    break;
                case 23:
                    {
                    alt130=2;
                    }
                    break;
                case 97:
                    {
                    int LA130_3 = input.LA(2);

                    if ( (synpred188_InternalSpellGrammar()) ) {
                        alt130=2;
                    }
                    }
                    break;
                case EOF:
                    {
                    int LA130_4 = input.LA(2);

                    if ( (synpred188_InternalSpellGrammar()) ) {
                        alt130=2;
                    }
                    }
                    break;
            }

            switch (alt130) {
                case 1 :
                    // InternalSpellGrammar.g:6094:3: ( (lv_list_for_1_0= rulelist_for ) )
                    {
                    // InternalSpellGrammar.g:6094:3: ( (lv_list_for_1_0= rulelist_for ) )
                    // InternalSpellGrammar.g:6095:1: (lv_list_for_1_0= rulelist_for )
                    {
                    // InternalSpellGrammar.g:6095:1: (lv_list_for_1_0= rulelist_for )
                    // InternalSpellGrammar.g:6096:3: lv_list_for_1_0= rulelist_for
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getListmakerAccess().getList_forList_forParserRuleCall_1_0_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_list_for_1_0=rulelist_for();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getListmakerRule());
                      	        }
                             		set(
                             			current, 
                             			"list_for",
                              		lv_list_for_1_0, 
                              		"lu.ses.engineering.spell.controlflow.SpellGrammar.list_for");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSpellGrammar.g:6113:6: ( (otherlv_2= ',' ( (lv_additionalTests_3_0= ruletest ) ) )* ( (lv_optionalComma_4_0= ',' ) )? )
                    {
                    // InternalSpellGrammar.g:6113:6: ( (otherlv_2= ',' ( (lv_additionalTests_3_0= ruletest ) ) )* ( (lv_optionalComma_4_0= ',' ) )? )
                    // InternalSpellGrammar.g:6113:7: (otherlv_2= ',' ( (lv_additionalTests_3_0= ruletest ) ) )* ( (lv_optionalComma_4_0= ',' ) )?
                    {
                    // InternalSpellGrammar.g:6113:7: (otherlv_2= ',' ( (lv_additionalTests_3_0= ruletest ) ) )*
                    loop128:
                    do {
                        int alt128=2;
                        int LA128_0 = input.LA(1);

                        if ( (LA128_0==23) ) {
                            int LA128_1 = input.LA(2);

                            if ( (LA128_1==RULE_STRING||(LA128_1>=RULE_NAME_TERMINAL && LA128_1<=RULE_NUMBER)||LA128_1==19||LA128_1==28||LA128_1==48||LA128_1==65||LA128_1==79||(LA128_1>=83 && LA128_1<=96)||LA128_1==98||(LA128_1>=100 && LA128_1<=101)) ) {
                                alt128=1;
                            }


                        }


                        switch (alt128) {
                    	case 1 :
                    	    // InternalSpellGrammar.g:6113:9: otherlv_2= ',' ( (lv_additionalTests_3_0= ruletest ) )
                    	    {
                    	    otherlv_2=(Token)match(input,23,FollowSets000.FOLLOW_16); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_2, grammarAccess.getListmakerAccess().getCommaKeyword_1_1_0_0());
                    	          
                    	    }
                    	    // InternalSpellGrammar.g:6117:1: ( (lv_additionalTests_3_0= ruletest ) )
                    	    // InternalSpellGrammar.g:6118:1: (lv_additionalTests_3_0= ruletest )
                    	    {
                    	    // InternalSpellGrammar.g:6118:1: (lv_additionalTests_3_0= ruletest )
                    	    // InternalSpellGrammar.g:6119:3: lv_additionalTests_3_0= ruletest
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getListmakerAccess().getAdditionalTestsTestParserRuleCall_1_1_0_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_19);
                    	    lv_additionalTests_3_0=ruletest();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getListmakerRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"additionalTests",
                    	              		lv_additionalTests_3_0, 
                    	              		"lu.ses.engineering.spell.controlflow.SpellGrammar.test");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop128;
                        }
                    } while (true);

                    // InternalSpellGrammar.g:6135:4: ( (lv_optionalComma_4_0= ',' ) )?
                    int alt129=2;
                    int LA129_0 = input.LA(1);

                    if ( (LA129_0==23) ) {
                        alt129=1;
                    }
                    switch (alt129) {
                        case 1 :
                            // InternalSpellGrammar.g:6136:1: (lv_optionalComma_4_0= ',' )
                            {
                            // InternalSpellGrammar.g:6136:1: (lv_optionalComma_4_0= ',' )
                            // InternalSpellGrammar.g:6137:3: lv_optionalComma_4_0= ','
                            {
                            lv_optionalComma_4_0=(Token)match(input,23,FollowSets000.FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_optionalComma_4_0, grammarAccess.getListmakerAccess().getOptionalCommaCommaKeyword_1_1_1_0());
                                  
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getListmakerRule());
                              	        }
                                     		setWithLastConsumed(current, "optionalComma", true, ",");
                              	    
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 130, rulelistmaker_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "rulelistmaker"


    // $ANTLR start "entryRuletestlist_comp"
    // InternalSpellGrammar.g:6158:1: entryRuletestlist_comp returns [EObject current=null] : iv_ruletestlist_comp= ruletestlist_comp EOF ;
    public final EObject entryRuletestlist_comp() throws RecognitionException {
        EObject current = null;
        int entryRuletestlist_comp_StartIndex = input.index();
        EObject iv_ruletestlist_comp = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 131) ) { return current; }
            // InternalSpellGrammar.g:6159:2: (iv_ruletestlist_comp= ruletestlist_comp EOF )
            // InternalSpellGrammar.g:6160:2: iv_ruletestlist_comp= ruletestlist_comp EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTestlist_compRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruletestlist_comp=ruletestlist_comp();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruletestlist_comp; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 131, entryRuletestlist_comp_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuletestlist_comp"


    // $ANTLR start "ruletestlist_comp"
    // InternalSpellGrammar.g:6167:1: ruletestlist_comp returns [EObject current=null] : ( ( (lv_test_0_0= ruletest ) ) ( ( (lv_comp_for_1_0= rulecomp_for ) ) | ( (otherlv_2= ',' ( (lv_additionalTests_3_0= ruletest ) ) )* ( (lv_optionalComma_4_0= ',' ) )? ) )? ) ;
    public final EObject ruletestlist_comp() throws RecognitionException {
        EObject current = null;
        int ruletestlist_comp_StartIndex = input.index();
        Token otherlv_2=null;
        Token lv_optionalComma_4_0=null;
        EObject lv_test_0_0 = null;

        EObject lv_comp_for_1_0 = null;

        EObject lv_additionalTests_3_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 132) ) { return current; }
            // InternalSpellGrammar.g:6170:28: ( ( ( (lv_test_0_0= ruletest ) ) ( ( (lv_comp_for_1_0= rulecomp_for ) ) | ( (otherlv_2= ',' ( (lv_additionalTests_3_0= ruletest ) ) )* ( (lv_optionalComma_4_0= ',' ) )? ) )? ) )
            // InternalSpellGrammar.g:6171:1: ( ( (lv_test_0_0= ruletest ) ) ( ( (lv_comp_for_1_0= rulecomp_for ) ) | ( (otherlv_2= ',' ( (lv_additionalTests_3_0= ruletest ) ) )* ( (lv_optionalComma_4_0= ',' ) )? ) )? )
            {
            // InternalSpellGrammar.g:6171:1: ( ( (lv_test_0_0= ruletest ) ) ( ( (lv_comp_for_1_0= rulecomp_for ) ) | ( (otherlv_2= ',' ( (lv_additionalTests_3_0= ruletest ) ) )* ( (lv_optionalComma_4_0= ',' ) )? ) )? )
            // InternalSpellGrammar.g:6171:2: ( (lv_test_0_0= ruletest ) ) ( ( (lv_comp_for_1_0= rulecomp_for ) ) | ( (otherlv_2= ',' ( (lv_additionalTests_3_0= ruletest ) ) )* ( (lv_optionalComma_4_0= ',' ) )? ) )?
            {
            // InternalSpellGrammar.g:6171:2: ( (lv_test_0_0= ruletest ) )
            // InternalSpellGrammar.g:6172:1: (lv_test_0_0= ruletest )
            {
            // InternalSpellGrammar.g:6172:1: (lv_test_0_0= ruletest )
            // InternalSpellGrammar.g:6173:3: lv_test_0_0= ruletest
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getTestlist_compAccess().getTestTestParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_79);
            lv_test_0_0=ruletest();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTestlist_compRule());
              	        }
                     		set(
                     			current, 
                     			"test",
                      		lv_test_0_0, 
                      		"lu.ses.engineering.spell.controlflow.SpellGrammar.test");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSpellGrammar.g:6189:2: ( ( (lv_comp_for_1_0= rulecomp_for ) ) | ( (otherlv_2= ',' ( (lv_additionalTests_3_0= ruletest ) ) )* ( (lv_optionalComma_4_0= ',' ) )? ) )?
            int alt133=3;
            switch ( input.LA(1) ) {
                case 58:
                    {
                    alt133=1;
                    }
                    break;
                case 23:
                    {
                    alt133=2;
                    }
                    break;
                case EOF:
                    {
                    int LA133_3 = input.LA(2);

                    if ( (synpred192_InternalSpellGrammar()) ) {
                        alt133=2;
                    }
                    }
                    break;
                case 20:
                    {
                    int LA133_4 = input.LA(2);

                    if ( (synpred192_InternalSpellGrammar()) ) {
                        alt133=2;
                    }
                    }
                    break;
            }

            switch (alt133) {
                case 1 :
                    // InternalSpellGrammar.g:6189:3: ( (lv_comp_for_1_0= rulecomp_for ) )
                    {
                    // InternalSpellGrammar.g:6189:3: ( (lv_comp_for_1_0= rulecomp_for ) )
                    // InternalSpellGrammar.g:6190:1: (lv_comp_for_1_0= rulecomp_for )
                    {
                    // InternalSpellGrammar.g:6190:1: (lv_comp_for_1_0= rulecomp_for )
                    // InternalSpellGrammar.g:6191:3: lv_comp_for_1_0= rulecomp_for
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getTestlist_compAccess().getComp_forComp_forParserRuleCall_1_0_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_comp_for_1_0=rulecomp_for();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTestlist_compRule());
                      	        }
                             		set(
                             			current, 
                             			"comp_for",
                              		lv_comp_for_1_0, 
                              		"lu.ses.engineering.spell.controlflow.SpellGrammar.comp_for");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSpellGrammar.g:6208:6: ( (otherlv_2= ',' ( (lv_additionalTests_3_0= ruletest ) ) )* ( (lv_optionalComma_4_0= ',' ) )? )
                    {
                    // InternalSpellGrammar.g:6208:6: ( (otherlv_2= ',' ( (lv_additionalTests_3_0= ruletest ) ) )* ( (lv_optionalComma_4_0= ',' ) )? )
                    // InternalSpellGrammar.g:6208:7: (otherlv_2= ',' ( (lv_additionalTests_3_0= ruletest ) ) )* ( (lv_optionalComma_4_0= ',' ) )?
                    {
                    // InternalSpellGrammar.g:6208:7: (otherlv_2= ',' ( (lv_additionalTests_3_0= ruletest ) ) )*
                    loop131:
                    do {
                        int alt131=2;
                        int LA131_0 = input.LA(1);

                        if ( (LA131_0==23) ) {
                            int LA131_1 = input.LA(2);

                            if ( (LA131_1==RULE_STRING||(LA131_1>=RULE_NAME_TERMINAL && LA131_1<=RULE_NUMBER)||LA131_1==19||LA131_1==28||LA131_1==48||LA131_1==65||LA131_1==79||(LA131_1>=83 && LA131_1<=96)||LA131_1==98||(LA131_1>=100 && LA131_1<=101)) ) {
                                alt131=1;
                            }


                        }


                        switch (alt131) {
                    	case 1 :
                    	    // InternalSpellGrammar.g:6208:9: otherlv_2= ',' ( (lv_additionalTests_3_0= ruletest ) )
                    	    {
                    	    otherlv_2=(Token)match(input,23,FollowSets000.FOLLOW_16); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_2, grammarAccess.getTestlist_compAccess().getCommaKeyword_1_1_0_0());
                    	          
                    	    }
                    	    // InternalSpellGrammar.g:6212:1: ( (lv_additionalTests_3_0= ruletest ) )
                    	    // InternalSpellGrammar.g:6213:1: (lv_additionalTests_3_0= ruletest )
                    	    {
                    	    // InternalSpellGrammar.g:6213:1: (lv_additionalTests_3_0= ruletest )
                    	    // InternalSpellGrammar.g:6214:3: lv_additionalTests_3_0= ruletest
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getTestlist_compAccess().getAdditionalTestsTestParserRuleCall_1_1_0_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_19);
                    	    lv_additionalTests_3_0=ruletest();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getTestlist_compRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"additionalTests",
                    	              		lv_additionalTests_3_0, 
                    	              		"lu.ses.engineering.spell.controlflow.SpellGrammar.test");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop131;
                        }
                    } while (true);

                    // InternalSpellGrammar.g:6230:4: ( (lv_optionalComma_4_0= ',' ) )?
                    int alt132=2;
                    int LA132_0 = input.LA(1);

                    if ( (LA132_0==23) ) {
                        alt132=1;
                    }
                    switch (alt132) {
                        case 1 :
                            // InternalSpellGrammar.g:6231:1: (lv_optionalComma_4_0= ',' )
                            {
                            // InternalSpellGrammar.g:6231:1: (lv_optionalComma_4_0= ',' )
                            // InternalSpellGrammar.g:6232:3: lv_optionalComma_4_0= ','
                            {
                            lv_optionalComma_4_0=(Token)match(input,23,FollowSets000.FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_optionalComma_4_0, grammarAccess.getTestlist_compAccess().getOptionalCommaCommaKeyword_1_1_1_0());
                                  
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getTestlist_compRule());
                              	        }
                                     		setWithLastConsumed(current, "optionalComma", true, ",");
                              	    
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 132, ruletestlist_comp_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruletestlist_comp"


    // $ANTLR start "entryRulelambdef"
    // InternalSpellGrammar.g:6253:1: entryRulelambdef returns [EObject current=null] : iv_rulelambdef= rulelambdef EOF ;
    public final EObject entryRulelambdef() throws RecognitionException {
        EObject current = null;
        int entryRulelambdef_StartIndex = input.index();
        EObject iv_rulelambdef = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 133) ) { return current; }
            // InternalSpellGrammar.g:6254:2: (iv_rulelambdef= rulelambdef EOF )
            // InternalSpellGrammar.g:6255:2: iv_rulelambdef= rulelambdef EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLambdefRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulelambdef=rulelambdef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulelambdef; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 133, entryRulelambdef_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRulelambdef"


    // $ANTLR start "rulelambdef"
    // InternalSpellGrammar.g:6262:1: rulelambdef returns [EObject current=null] : ( () otherlv_1= 'lambda' ( (lv_varargslist_2_0= rulevarargslist ) )? otherlv_3= ':' ( (lv_test_4_0= ruletest ) ) ) ;
    public final EObject rulelambdef() throws RecognitionException {
        EObject current = null;
        int rulelambdef_StartIndex = input.index();
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_varargslist_2_0 = null;

        EObject lv_test_4_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 134) ) { return current; }
            // InternalSpellGrammar.g:6265:28: ( ( () otherlv_1= 'lambda' ( (lv_varargslist_2_0= rulevarargslist ) )? otherlv_3= ':' ( (lv_test_4_0= ruletest ) ) ) )
            // InternalSpellGrammar.g:6266:1: ( () otherlv_1= 'lambda' ( (lv_varargslist_2_0= rulevarargslist ) )? otherlv_3= ':' ( (lv_test_4_0= ruletest ) ) )
            {
            // InternalSpellGrammar.g:6266:1: ( () otherlv_1= 'lambda' ( (lv_varargslist_2_0= rulevarargslist ) )? otherlv_3= ':' ( (lv_test_4_0= ruletest ) ) )
            // InternalSpellGrammar.g:6266:2: () otherlv_1= 'lambda' ( (lv_varargslist_2_0= rulevarargslist ) )? otherlv_3= ':' ( (lv_test_4_0= ruletest ) )
            {
            // InternalSpellGrammar.g:6266:2: ()
            // InternalSpellGrammar.g:6267:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getLambdefAccess().getLambdefAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,101,FollowSets000.FOLLOW_80); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getLambdefAccess().getLambdaKeyword_1());
                  
            }
            // InternalSpellGrammar.g:6279:1: ( (lv_varargslist_2_0= rulevarargslist ) )?
            int alt134=2;
            int LA134_0 = input.LA(1);

            if ( (LA134_0==RULE_NAME_TERMINAL||LA134_0==19||(LA134_0>=25 && LA134_0<=26)||(LA134_0>=84 && LA134_0<=94)) ) {
                alt134=1;
            }
            switch (alt134) {
                case 1 :
                    // InternalSpellGrammar.g:6280:1: (lv_varargslist_2_0= rulevarargslist )
                    {
                    // InternalSpellGrammar.g:6280:1: (lv_varargslist_2_0= rulevarargslist )
                    // InternalSpellGrammar.g:6281:3: lv_varargslist_2_0= rulevarargslist
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getLambdefAccess().getVarargslistVarargslistParserRuleCall_2_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_10);
                    lv_varargslist_2_0=rulevarargslist();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getLambdefRule());
                      	        }
                             		set(
                             			current, 
                             			"varargslist",
                              		lv_varargslist_2_0, 
                              		"lu.ses.engineering.spell.controlflow.SpellGrammar.varargslist");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }

            otherlv_3=(Token)match(input,22,FollowSets000.FOLLOW_16); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getLambdefAccess().getColonKeyword_3());
                  
            }
            // InternalSpellGrammar.g:6301:1: ( (lv_test_4_0= ruletest ) )
            // InternalSpellGrammar.g:6302:1: (lv_test_4_0= ruletest )
            {
            // InternalSpellGrammar.g:6302:1: (lv_test_4_0= ruletest )
            // InternalSpellGrammar.g:6303:3: lv_test_4_0= ruletest
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getLambdefAccess().getTestTestParserRuleCall_4_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_test_4_0=ruletest();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getLambdefRule());
              	        }
                     		set(
                     			current, 
                     			"test",
                      		lv_test_4_0, 
                      		"lu.ses.engineering.spell.controlflow.SpellGrammar.test");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 134, rulelambdef_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "rulelambdef"


    // $ANTLR start "entryRuletrailer"
    // InternalSpellGrammar.g:6327:1: entryRuletrailer returns [EObject current=null] : iv_ruletrailer= ruletrailer EOF ;
    public final EObject entryRuletrailer() throws RecognitionException {
        EObject current = null;
        int entryRuletrailer_StartIndex = input.index();
        EObject iv_ruletrailer = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 135) ) { return current; }
            // InternalSpellGrammar.g:6328:2: (iv_ruletrailer= ruletrailer EOF )
            // InternalSpellGrammar.g:6329:2: iv_ruletrailer= ruletrailer EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTrailerRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruletrailer=ruletrailer();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruletrailer; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 135, entryRuletrailer_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuletrailer"


    // $ANTLR start "ruletrailer"
    // InternalSpellGrammar.g:6336:1: ruletrailer returns [EObject current=null] : ( ( ( (lv_roundBracket_0_0= '(' ) ) ( (lv_arglist_1_0= rulearglist ) )? (otherlv_2= ',' )? otherlv_3= ')' ) | ( ( (lv_squareBracket_4_0= '[' ) ) ( (lv_subscriptlist_5_0= rulesubscriptlist ) ) otherlv_6= ']' ) | (otherlv_7= '.' ( (lv_dotName_8_0= ruleNAME ) ) ) ) ;
    public final EObject ruletrailer() throws RecognitionException {
        EObject current = null;
        int ruletrailer_StartIndex = input.index();
        Token lv_roundBracket_0_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token lv_squareBracket_4_0=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        EObject lv_arglist_1_0 = null;

        EObject lv_subscriptlist_5_0 = null;

        AntlrDatatypeRuleToken lv_dotName_8_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 136) ) { return current; }
            // InternalSpellGrammar.g:6339:28: ( ( ( ( (lv_roundBracket_0_0= '(' ) ) ( (lv_arglist_1_0= rulearglist ) )? (otherlv_2= ',' )? otherlv_3= ')' ) | ( ( (lv_squareBracket_4_0= '[' ) ) ( (lv_subscriptlist_5_0= rulesubscriptlist ) ) otherlv_6= ']' ) | (otherlv_7= '.' ( (lv_dotName_8_0= ruleNAME ) ) ) ) )
            // InternalSpellGrammar.g:6340:1: ( ( ( (lv_roundBracket_0_0= '(' ) ) ( (lv_arglist_1_0= rulearglist ) )? (otherlv_2= ',' )? otherlv_3= ')' ) | ( ( (lv_squareBracket_4_0= '[' ) ) ( (lv_subscriptlist_5_0= rulesubscriptlist ) ) otherlv_6= ']' ) | (otherlv_7= '.' ( (lv_dotName_8_0= ruleNAME ) ) ) )
            {
            // InternalSpellGrammar.g:6340:1: ( ( ( (lv_roundBracket_0_0= '(' ) ) ( (lv_arglist_1_0= rulearglist ) )? (otherlv_2= ',' )? otherlv_3= ')' ) | ( ( (lv_squareBracket_4_0= '[' ) ) ( (lv_subscriptlist_5_0= rulesubscriptlist ) ) otherlv_6= ']' ) | (otherlv_7= '.' ( (lv_dotName_8_0= ruleNAME ) ) ) )
            int alt137=3;
            switch ( input.LA(1) ) {
            case 19:
                {
                alt137=1;
                }
                break;
            case 96:
                {
                alt137=2;
                }
                break;
            case 48:
                {
                alt137=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 137, 0, input);

                throw nvae;
            }

            switch (alt137) {
                case 1 :
                    // InternalSpellGrammar.g:6340:2: ( ( (lv_roundBracket_0_0= '(' ) ) ( (lv_arglist_1_0= rulearglist ) )? (otherlv_2= ',' )? otherlv_3= ')' )
                    {
                    // InternalSpellGrammar.g:6340:2: ( ( (lv_roundBracket_0_0= '(' ) ) ( (lv_arglist_1_0= rulearglist ) )? (otherlv_2= ',' )? otherlv_3= ')' )
                    // InternalSpellGrammar.g:6340:3: ( (lv_roundBracket_0_0= '(' ) ) ( (lv_arglist_1_0= rulearglist ) )? (otherlv_2= ',' )? otherlv_3= ')'
                    {
                    // InternalSpellGrammar.g:6340:3: ( (lv_roundBracket_0_0= '(' ) )
                    // InternalSpellGrammar.g:6341:1: (lv_roundBracket_0_0= '(' )
                    {
                    // InternalSpellGrammar.g:6341:1: (lv_roundBracket_0_0= '(' )
                    // InternalSpellGrammar.g:6342:3: lv_roundBracket_0_0= '('
                    {
                    lv_roundBracket_0_0=(Token)match(input,19,FollowSets000.FOLLOW_68); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_roundBracket_0_0, grammarAccess.getTrailerAccess().getRoundBracketLeftParenthesisKeyword_0_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getTrailerRule());
                      	        }
                             		setWithLastConsumed(current, "roundBracket", true, "(");
                      	    
                    }

                    }


                    }

                    // InternalSpellGrammar.g:6355:2: ( (lv_arglist_1_0= rulearglist ) )?
                    int alt135=2;
                    int LA135_0 = input.LA(1);

                    if ( (LA135_0==RULE_STRING||(LA135_0>=RULE_NAME_TERMINAL && LA135_0<=RULE_NUMBER)||LA135_0==19||(LA135_0>=25 && LA135_0<=26)||LA135_0==28||LA135_0==48||LA135_0==65||LA135_0==79||(LA135_0>=83 && LA135_0<=96)||LA135_0==98||(LA135_0>=100 && LA135_0<=101)) ) {
                        alt135=1;
                    }
                    switch (alt135) {
                        case 1 :
                            // InternalSpellGrammar.g:6356:1: (lv_arglist_1_0= rulearglist )
                            {
                            // InternalSpellGrammar.g:6356:1: (lv_arglist_1_0= rulearglist )
                            // InternalSpellGrammar.g:6357:3: lv_arglist_1_0= rulearglist
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getTrailerAccess().getArglistArglistParserRuleCall_0_1_0()); 
                              	    
                            }
                            pushFollow(FollowSets000.FOLLOW_14);
                            lv_arglist_1_0=rulearglist();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getTrailerRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"arglist",
                                      		lv_arglist_1_0, 
                                      		"lu.ses.engineering.spell.controlflow.SpellGrammar.arglist");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            break;

                    }

                    // InternalSpellGrammar.g:6373:3: (otherlv_2= ',' )?
                    int alt136=2;
                    int LA136_0 = input.LA(1);

                    if ( (LA136_0==23) ) {
                        alt136=1;
                    }
                    switch (alt136) {
                        case 1 :
                            // InternalSpellGrammar.g:6373:5: otherlv_2= ','
                            {
                            otherlv_2=(Token)match(input,23,FollowSets000.FOLLOW_7); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_2, grammarAccess.getTrailerAccess().getCommaKeyword_0_2());
                                  
                            }

                            }
                            break;

                    }

                    otherlv_3=(Token)match(input,20,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getTrailerAccess().getRightParenthesisKeyword_0_3());
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSpellGrammar.g:6382:6: ( ( (lv_squareBracket_4_0= '[' ) ) ( (lv_subscriptlist_5_0= rulesubscriptlist ) ) otherlv_6= ']' )
                    {
                    // InternalSpellGrammar.g:6382:6: ( ( (lv_squareBracket_4_0= '[' ) ) ( (lv_subscriptlist_5_0= rulesubscriptlist ) ) otherlv_6= ']' )
                    // InternalSpellGrammar.g:6382:7: ( (lv_squareBracket_4_0= '[' ) ) ( (lv_subscriptlist_5_0= rulesubscriptlist ) ) otherlv_6= ']'
                    {
                    // InternalSpellGrammar.g:6382:7: ( (lv_squareBracket_4_0= '[' ) )
                    // InternalSpellGrammar.g:6383:1: (lv_squareBracket_4_0= '[' )
                    {
                    // InternalSpellGrammar.g:6383:1: (lv_squareBracket_4_0= '[' )
                    // InternalSpellGrammar.g:6384:3: lv_squareBracket_4_0= '['
                    {
                    lv_squareBracket_4_0=(Token)match(input,96,FollowSets000.FOLLOW_81); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_squareBracket_4_0, grammarAccess.getTrailerAccess().getSquareBracketLeftSquareBracketKeyword_1_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getTrailerRule());
                      	        }
                             		setWithLastConsumed(current, "squareBracket", true, "[");
                      	    
                    }

                    }


                    }

                    // InternalSpellGrammar.g:6397:2: ( (lv_subscriptlist_5_0= rulesubscriptlist ) )
                    // InternalSpellGrammar.g:6398:1: (lv_subscriptlist_5_0= rulesubscriptlist )
                    {
                    // InternalSpellGrammar.g:6398:1: (lv_subscriptlist_5_0= rulesubscriptlist )
                    // InternalSpellGrammar.g:6399:3: lv_subscriptlist_5_0= rulesubscriptlist
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getTrailerAccess().getSubscriptlistSubscriptlistParserRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_73);
                    lv_subscriptlist_5_0=rulesubscriptlist();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTrailerRule());
                      	        }
                             		set(
                             			current, 
                             			"subscriptlist",
                              		lv_subscriptlist_5_0, 
                              		"lu.ses.engineering.spell.controlflow.SpellGrammar.subscriptlist");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_6=(Token)match(input,97,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_6, grammarAccess.getTrailerAccess().getRightSquareBracketKeyword_1_2());
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSpellGrammar.g:6420:6: (otherlv_7= '.' ( (lv_dotName_8_0= ruleNAME ) ) )
                    {
                    // InternalSpellGrammar.g:6420:6: (otherlv_7= '.' ( (lv_dotName_8_0= ruleNAME ) ) )
                    // InternalSpellGrammar.g:6420:8: otherlv_7= '.' ( (lv_dotName_8_0= ruleNAME ) )
                    {
                    otherlv_7=(Token)match(input,48,FollowSets000.FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_7, grammarAccess.getTrailerAccess().getFullStopKeyword_2_0());
                          
                    }
                    // InternalSpellGrammar.g:6424:1: ( (lv_dotName_8_0= ruleNAME ) )
                    // InternalSpellGrammar.g:6425:1: (lv_dotName_8_0= ruleNAME )
                    {
                    // InternalSpellGrammar.g:6425:1: (lv_dotName_8_0= ruleNAME )
                    // InternalSpellGrammar.g:6426:3: lv_dotName_8_0= ruleNAME
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getTrailerAccess().getDotNameNAMEParserRuleCall_2_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_dotName_8_0=ruleNAME();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTrailerRule());
                      	        }
                             		set(
                             			current, 
                             			"dotName",
                              		lv_dotName_8_0, 
                              		"lu.ses.engineering.spell.controlflow.SpellGrammar.NAME");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 136, ruletrailer_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruletrailer"


    // $ANTLR start "entryRulesubscriptlist"
    // InternalSpellGrammar.g:6450:1: entryRulesubscriptlist returns [EObject current=null] : iv_rulesubscriptlist= rulesubscriptlist EOF ;
    public final EObject entryRulesubscriptlist() throws RecognitionException {
        EObject current = null;
        int entryRulesubscriptlist_StartIndex = input.index();
        EObject iv_rulesubscriptlist = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 137) ) { return current; }
            // InternalSpellGrammar.g:6451:2: (iv_rulesubscriptlist= rulesubscriptlist EOF )
            // InternalSpellGrammar.g:6452:2: iv_rulesubscriptlist= rulesubscriptlist EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSubscriptlistRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulesubscriptlist=rulesubscriptlist();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulesubscriptlist; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 137, entryRulesubscriptlist_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRulesubscriptlist"


    // $ANTLR start "rulesubscriptlist"
    // InternalSpellGrammar.g:6459:1: rulesubscriptlist returns [EObject current=null] : ( ( (lv_subscript_0_0= rulesubscript ) ) (otherlv_1= ',' ( (lv_subscript_2_0= rulesubscript ) ) )* ( (lv_optionalComma_3_0= ',' ) )? ) ;
    public final EObject rulesubscriptlist() throws RecognitionException {
        EObject current = null;
        int rulesubscriptlist_StartIndex = input.index();
        Token otherlv_1=null;
        Token lv_optionalComma_3_0=null;
        EObject lv_subscript_0_0 = null;

        EObject lv_subscript_2_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 138) ) { return current; }
            // InternalSpellGrammar.g:6462:28: ( ( ( (lv_subscript_0_0= rulesubscript ) ) (otherlv_1= ',' ( (lv_subscript_2_0= rulesubscript ) ) )* ( (lv_optionalComma_3_0= ',' ) )? ) )
            // InternalSpellGrammar.g:6463:1: ( ( (lv_subscript_0_0= rulesubscript ) ) (otherlv_1= ',' ( (lv_subscript_2_0= rulesubscript ) ) )* ( (lv_optionalComma_3_0= ',' ) )? )
            {
            // InternalSpellGrammar.g:6463:1: ( ( (lv_subscript_0_0= rulesubscript ) ) (otherlv_1= ',' ( (lv_subscript_2_0= rulesubscript ) ) )* ( (lv_optionalComma_3_0= ',' ) )? )
            // InternalSpellGrammar.g:6463:2: ( (lv_subscript_0_0= rulesubscript ) ) (otherlv_1= ',' ( (lv_subscript_2_0= rulesubscript ) ) )* ( (lv_optionalComma_3_0= ',' ) )?
            {
            // InternalSpellGrammar.g:6463:2: ( (lv_subscript_0_0= rulesubscript ) )
            // InternalSpellGrammar.g:6464:1: (lv_subscript_0_0= rulesubscript )
            {
            // InternalSpellGrammar.g:6464:1: (lv_subscript_0_0= rulesubscript )
            // InternalSpellGrammar.g:6465:3: lv_subscript_0_0= rulesubscript
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getSubscriptlistAccess().getSubscriptSubscriptParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_19);
            lv_subscript_0_0=rulesubscript();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getSubscriptlistRule());
              	        }
                     		add(
                     			current, 
                     			"subscript",
                      		lv_subscript_0_0, 
                      		"lu.ses.engineering.spell.controlflow.SpellGrammar.subscript");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSpellGrammar.g:6481:2: (otherlv_1= ',' ( (lv_subscript_2_0= rulesubscript ) ) )*
            loop138:
            do {
                int alt138=2;
                int LA138_0 = input.LA(1);

                if ( (LA138_0==23) ) {
                    int LA138_1 = input.LA(2);

                    if ( (synpred198_InternalSpellGrammar()) ) {
                        alt138=1;
                    }


                }


                switch (alt138) {
            	case 1 :
            	    // InternalSpellGrammar.g:6481:4: otherlv_1= ',' ( (lv_subscript_2_0= rulesubscript ) )
            	    {
            	    otherlv_1=(Token)match(input,23,FollowSets000.FOLLOW_81); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_1, grammarAccess.getSubscriptlistAccess().getCommaKeyword_1_0());
            	          
            	    }
            	    // InternalSpellGrammar.g:6485:1: ( (lv_subscript_2_0= rulesubscript ) )
            	    // InternalSpellGrammar.g:6486:1: (lv_subscript_2_0= rulesubscript )
            	    {
            	    // InternalSpellGrammar.g:6486:1: (lv_subscript_2_0= rulesubscript )
            	    // InternalSpellGrammar.g:6487:3: lv_subscript_2_0= rulesubscript
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getSubscriptlistAccess().getSubscriptSubscriptParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_19);
            	    lv_subscript_2_0=rulesubscript();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getSubscriptlistRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"subscript",
            	              		lv_subscript_2_0, 
            	              		"lu.ses.engineering.spell.controlflow.SpellGrammar.subscript");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop138;
                }
            } while (true);

            // InternalSpellGrammar.g:6503:4: ( (lv_optionalComma_3_0= ',' ) )?
            int alt139=2;
            int LA139_0 = input.LA(1);

            if ( (LA139_0==23) ) {
                alt139=1;
            }
            switch (alt139) {
                case 1 :
                    // InternalSpellGrammar.g:6504:1: (lv_optionalComma_3_0= ',' )
                    {
                    // InternalSpellGrammar.g:6504:1: (lv_optionalComma_3_0= ',' )
                    // InternalSpellGrammar.g:6505:3: lv_optionalComma_3_0= ','
                    {
                    lv_optionalComma_3_0=(Token)match(input,23,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_optionalComma_3_0, grammarAccess.getSubscriptlistAccess().getOptionalCommaCommaKeyword_2_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getSubscriptlistRule());
                      	        }
                             		setWithLastConsumed(current, "optionalComma", true, ",");
                      	    
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 138, rulesubscriptlist_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "rulesubscriptlist"


    // $ANTLR start "entryRulesubscript"
    // InternalSpellGrammar.g:6526:1: entryRulesubscript returns [EObject current=null] : iv_rulesubscript= rulesubscript EOF ;
    public final EObject entryRulesubscript() throws RecognitionException {
        EObject current = null;
        int entryRulesubscript_StartIndex = input.index();
        EObject iv_rulesubscript = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 139) ) { return current; }
            // InternalSpellGrammar.g:6527:2: (iv_rulesubscript= rulesubscript EOF )
            // InternalSpellGrammar.g:6528:2: iv_rulesubscript= rulesubscript EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSubscriptRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulesubscript=rulesubscript();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulesubscript; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 139, entryRulesubscript_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRulesubscript"


    // $ANTLR start "rulesubscript"
    // InternalSpellGrammar.g:6535:1: rulesubscript returns [EObject current=null] : ( () ( (otherlv_1= '.' otherlv_2= '.' otherlv_3= '.' ) | ( ( (lv_subscript1_4_0= ruletest ) )? ( ( (lv_symbol_5_0= ':' ) ) ( (lv_subscript2_6_0= ruletest ) )? ( (lv_sliceop_7_0= rulesliceop ) )? )? ) ) ) ;
    public final EObject rulesubscript() throws RecognitionException {
        EObject current = null;
        int rulesubscript_StartIndex = input.index();
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token lv_symbol_5_0=null;
        EObject lv_subscript1_4_0 = null;

        EObject lv_subscript2_6_0 = null;

        EObject lv_sliceop_7_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 140) ) { return current; }
            // InternalSpellGrammar.g:6538:28: ( ( () ( (otherlv_1= '.' otherlv_2= '.' otherlv_3= '.' ) | ( ( (lv_subscript1_4_0= ruletest ) )? ( ( (lv_symbol_5_0= ':' ) ) ( (lv_subscript2_6_0= ruletest ) )? ( (lv_sliceop_7_0= rulesliceop ) )? )? ) ) ) )
            // InternalSpellGrammar.g:6539:1: ( () ( (otherlv_1= '.' otherlv_2= '.' otherlv_3= '.' ) | ( ( (lv_subscript1_4_0= ruletest ) )? ( ( (lv_symbol_5_0= ':' ) ) ( (lv_subscript2_6_0= ruletest ) )? ( (lv_sliceop_7_0= rulesliceop ) )? )? ) ) )
            {
            // InternalSpellGrammar.g:6539:1: ( () ( (otherlv_1= '.' otherlv_2= '.' otherlv_3= '.' ) | ( ( (lv_subscript1_4_0= ruletest ) )? ( ( (lv_symbol_5_0= ':' ) ) ( (lv_subscript2_6_0= ruletest ) )? ( (lv_sliceop_7_0= rulesliceop ) )? )? ) ) )
            // InternalSpellGrammar.g:6539:2: () ( (otherlv_1= '.' otherlv_2= '.' otherlv_3= '.' ) | ( ( (lv_subscript1_4_0= ruletest ) )? ( ( (lv_symbol_5_0= ':' ) ) ( (lv_subscript2_6_0= ruletest ) )? ( (lv_sliceop_7_0= rulesliceop ) )? )? ) )
            {
            // InternalSpellGrammar.g:6539:2: ()
            // InternalSpellGrammar.g:6540:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getSubscriptAccess().getSubscriptAction_0(),
                          current);
                  
            }

            }

            // InternalSpellGrammar.g:6548:2: ( (otherlv_1= '.' otherlv_2= '.' otherlv_3= '.' ) | ( ( (lv_subscript1_4_0= ruletest ) )? ( ( (lv_symbol_5_0= ':' ) ) ( (lv_subscript2_6_0= ruletest ) )? ( (lv_sliceop_7_0= rulesliceop ) )? )? ) )
            int alt144=2;
            int LA144_0 = input.LA(1);

            if ( (LA144_0==48) ) {
                int LA144_1 = input.LA(2);

                if ( (LA144_1==48) ) {
                    alt144=1;
                }
                else if ( (LA144_1==RULE_NUMBER) ) {
                    alt144=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 144, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA144_0==EOF||LA144_0==RULE_STRING||(LA144_0>=RULE_NAME_TERMINAL && LA144_0<=RULE_NUMBER)||LA144_0==19||(LA144_0>=22 && LA144_0<=23)||LA144_0==28||LA144_0==65||LA144_0==79||(LA144_0>=83 && LA144_0<=98)||(LA144_0>=100 && LA144_0<=101)) ) {
                alt144=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 144, 0, input);

                throw nvae;
            }
            switch (alt144) {
                case 1 :
                    // InternalSpellGrammar.g:6548:3: (otherlv_1= '.' otherlv_2= '.' otherlv_3= '.' )
                    {
                    // InternalSpellGrammar.g:6548:3: (otherlv_1= '.' otherlv_2= '.' otherlv_3= '.' )
                    // InternalSpellGrammar.g:6548:5: otherlv_1= '.' otherlv_2= '.' otherlv_3= '.'
                    {
                    otherlv_1=(Token)match(input,48,FollowSets000.FOLLOW_82); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getSubscriptAccess().getFullStopKeyword_1_0_0());
                          
                    }
                    otherlv_2=(Token)match(input,48,FollowSets000.FOLLOW_82); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getSubscriptAccess().getFullStopKeyword_1_0_1());
                          
                    }
                    otherlv_3=(Token)match(input,48,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getSubscriptAccess().getFullStopKeyword_1_0_2());
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSpellGrammar.g:6561:6: ( ( (lv_subscript1_4_0= ruletest ) )? ( ( (lv_symbol_5_0= ':' ) ) ( (lv_subscript2_6_0= ruletest ) )? ( (lv_sliceop_7_0= rulesliceop ) )? )? )
                    {
                    // InternalSpellGrammar.g:6561:6: ( ( (lv_subscript1_4_0= ruletest ) )? ( ( (lv_symbol_5_0= ':' ) ) ( (lv_subscript2_6_0= ruletest ) )? ( (lv_sliceop_7_0= rulesliceop ) )? )? )
                    // InternalSpellGrammar.g:6561:7: ( (lv_subscript1_4_0= ruletest ) )? ( ( (lv_symbol_5_0= ':' ) ) ( (lv_subscript2_6_0= ruletest ) )? ( (lv_sliceop_7_0= rulesliceop ) )? )?
                    {
                    // InternalSpellGrammar.g:6561:7: ( (lv_subscript1_4_0= ruletest ) )?
                    int alt140=2;
                    int LA140_0 = input.LA(1);

                    if ( (LA140_0==RULE_STRING||(LA140_0>=RULE_NAME_TERMINAL && LA140_0<=RULE_NUMBER)||LA140_0==19||LA140_0==28||LA140_0==48||LA140_0==65||LA140_0==79||(LA140_0>=83 && LA140_0<=96)||LA140_0==98||(LA140_0>=100 && LA140_0<=101)) ) {
                        alt140=1;
                    }
                    switch (alt140) {
                        case 1 :
                            // InternalSpellGrammar.g:6562:1: (lv_subscript1_4_0= ruletest )
                            {
                            // InternalSpellGrammar.g:6562:1: (lv_subscript1_4_0= ruletest )
                            // InternalSpellGrammar.g:6563:3: lv_subscript1_4_0= ruletest
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getSubscriptAccess().getSubscript1TestParserRuleCall_1_1_0_0()); 
                              	    
                            }
                            pushFollow(FollowSets000.FOLLOW_83);
                            lv_subscript1_4_0=ruletest();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getSubscriptRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"subscript1",
                                      		lv_subscript1_4_0, 
                                      		"lu.ses.engineering.spell.controlflow.SpellGrammar.test");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            break;

                    }

                    // InternalSpellGrammar.g:6579:3: ( ( (lv_symbol_5_0= ':' ) ) ( (lv_subscript2_6_0= ruletest ) )? ( (lv_sliceop_7_0= rulesliceop ) )? )?
                    int alt143=2;
                    int LA143_0 = input.LA(1);

                    if ( (LA143_0==22) ) {
                        alt143=1;
                    }
                    switch (alt143) {
                        case 1 :
                            // InternalSpellGrammar.g:6579:4: ( (lv_symbol_5_0= ':' ) ) ( (lv_subscript2_6_0= ruletest ) )? ( (lv_sliceop_7_0= rulesliceop ) )?
                            {
                            // InternalSpellGrammar.g:6579:4: ( (lv_symbol_5_0= ':' ) )
                            // InternalSpellGrammar.g:6580:1: (lv_symbol_5_0= ':' )
                            {
                            // InternalSpellGrammar.g:6580:1: (lv_symbol_5_0= ':' )
                            // InternalSpellGrammar.g:6581:3: lv_symbol_5_0= ':'
                            {
                            lv_symbol_5_0=(Token)match(input,22,FollowSets000.FOLLOW_84); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_symbol_5_0, grammarAccess.getSubscriptAccess().getSymbolColonKeyword_1_1_1_0_0());
                                  
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getSubscriptRule());
                              	        }
                                     		setWithLastConsumed(current, "symbol", lv_symbol_5_0, ":");
                              	    
                            }

                            }


                            }

                            // InternalSpellGrammar.g:6594:2: ( (lv_subscript2_6_0= ruletest ) )?
                            int alt141=2;
                            int LA141_0 = input.LA(1);

                            if ( (LA141_0==RULE_STRING||(LA141_0>=RULE_NAME_TERMINAL && LA141_0<=RULE_NUMBER)||LA141_0==19||LA141_0==28||LA141_0==48||LA141_0==65||LA141_0==79||(LA141_0>=83 && LA141_0<=96)||LA141_0==98||(LA141_0>=100 && LA141_0<=101)) ) {
                                alt141=1;
                            }
                            switch (alt141) {
                                case 1 :
                                    // InternalSpellGrammar.g:6595:1: (lv_subscript2_6_0= ruletest )
                                    {
                                    // InternalSpellGrammar.g:6595:1: (lv_subscript2_6_0= ruletest )
                                    // InternalSpellGrammar.g:6596:3: lv_subscript2_6_0= ruletest
                                    {
                                    if ( state.backtracking==0 ) {
                                       
                                      	        newCompositeNode(grammarAccess.getSubscriptAccess().getSubscript2TestParserRuleCall_1_1_1_1_0()); 
                                      	    
                                    }
                                    pushFollow(FollowSets000.FOLLOW_83);
                                    lv_subscript2_6_0=ruletest();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      	        if (current==null) {
                                      	            current = createModelElementForParent(grammarAccess.getSubscriptRule());
                                      	        }
                                             		set(
                                             			current, 
                                             			"subscript2",
                                              		lv_subscript2_6_0, 
                                              		"lu.ses.engineering.spell.controlflow.SpellGrammar.test");
                                      	        afterParserOrEnumRuleCall();
                                      	    
                                    }

                                    }


                                    }
                                    break;

                            }

                            // InternalSpellGrammar.g:6612:3: ( (lv_sliceop_7_0= rulesliceop ) )?
                            int alt142=2;
                            int LA142_0 = input.LA(1);

                            if ( (LA142_0==22) ) {
                                alt142=1;
                            }
                            switch (alt142) {
                                case 1 :
                                    // InternalSpellGrammar.g:6613:1: (lv_sliceop_7_0= rulesliceop )
                                    {
                                    // InternalSpellGrammar.g:6613:1: (lv_sliceop_7_0= rulesliceop )
                                    // InternalSpellGrammar.g:6614:3: lv_sliceop_7_0= rulesliceop
                                    {
                                    if ( state.backtracking==0 ) {
                                       
                                      	        newCompositeNode(grammarAccess.getSubscriptAccess().getSliceopSliceopParserRuleCall_1_1_1_2_0()); 
                                      	    
                                    }
                                    pushFollow(FollowSets000.FOLLOW_2);
                                    lv_sliceop_7_0=rulesliceop();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      	        if (current==null) {
                                      	            current = createModelElementForParent(grammarAccess.getSubscriptRule());
                                      	        }
                                             		set(
                                             			current, 
                                             			"sliceop",
                                              		lv_sliceop_7_0, 
                                              		"lu.ses.engineering.spell.controlflow.SpellGrammar.sliceop");
                                      	        afterParserOrEnumRuleCall();
                                      	    
                                    }

                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 140, rulesubscript_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "rulesubscript"


    // $ANTLR start "entryRulesliceop"
    // InternalSpellGrammar.g:6638:1: entryRulesliceop returns [EObject current=null] : iv_rulesliceop= rulesliceop EOF ;
    public final EObject entryRulesliceop() throws RecognitionException {
        EObject current = null;
        int entryRulesliceop_StartIndex = input.index();
        EObject iv_rulesliceop = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 141) ) { return current; }
            // InternalSpellGrammar.g:6639:2: (iv_rulesliceop= rulesliceop EOF )
            // InternalSpellGrammar.g:6640:2: iv_rulesliceop= rulesliceop EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSliceopRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulesliceop=rulesliceop();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulesliceop; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 141, entryRulesliceop_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRulesliceop"


    // $ANTLR start "rulesliceop"
    // InternalSpellGrammar.g:6647:1: rulesliceop returns [EObject current=null] : ( () otherlv_1= ':' ( (lv_test_2_0= ruletest ) )? ) ;
    public final EObject rulesliceop() throws RecognitionException {
        EObject current = null;
        int rulesliceop_StartIndex = input.index();
        Token otherlv_1=null;
        EObject lv_test_2_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 142) ) { return current; }
            // InternalSpellGrammar.g:6650:28: ( ( () otherlv_1= ':' ( (lv_test_2_0= ruletest ) )? ) )
            // InternalSpellGrammar.g:6651:1: ( () otherlv_1= ':' ( (lv_test_2_0= ruletest ) )? )
            {
            // InternalSpellGrammar.g:6651:1: ( () otherlv_1= ':' ( (lv_test_2_0= ruletest ) )? )
            // InternalSpellGrammar.g:6651:2: () otherlv_1= ':' ( (lv_test_2_0= ruletest ) )?
            {
            // InternalSpellGrammar.g:6651:2: ()
            // InternalSpellGrammar.g:6652:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getSliceopAccess().getSliceopAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,22,FollowSets000.FOLLOW_29); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getSliceopAccess().getColonKeyword_1());
                  
            }
            // InternalSpellGrammar.g:6664:1: ( (lv_test_2_0= ruletest ) )?
            int alt145=2;
            int LA145_0 = input.LA(1);

            if ( (LA145_0==RULE_STRING||(LA145_0>=RULE_NAME_TERMINAL && LA145_0<=RULE_NUMBER)||LA145_0==19||LA145_0==28||LA145_0==48||LA145_0==65||LA145_0==79||(LA145_0>=83 && LA145_0<=96)||LA145_0==98||(LA145_0>=100 && LA145_0<=101)) ) {
                alt145=1;
            }
            switch (alt145) {
                case 1 :
                    // InternalSpellGrammar.g:6665:1: (lv_test_2_0= ruletest )
                    {
                    // InternalSpellGrammar.g:6665:1: (lv_test_2_0= ruletest )
                    // InternalSpellGrammar.g:6666:3: lv_test_2_0= ruletest
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getSliceopAccess().getTestTestParserRuleCall_2_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_test_2_0=ruletest();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getSliceopRule());
                      	        }
                             		set(
                             			current, 
                             			"test",
                              		lv_test_2_0, 
                              		"lu.ses.engineering.spell.controlflow.SpellGrammar.test");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 142, rulesliceop_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "rulesliceop"


    // $ANTLR start "entryRuleexprlist"
    // InternalSpellGrammar.g:6690:1: entryRuleexprlist returns [EObject current=null] : iv_ruleexprlist= ruleexprlist EOF ;
    public final EObject entryRuleexprlist() throws RecognitionException {
        EObject current = null;
        int entryRuleexprlist_StartIndex = input.index();
        EObject iv_ruleexprlist = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 143) ) { return current; }
            // InternalSpellGrammar.g:6691:2: (iv_ruleexprlist= ruleexprlist EOF )
            // InternalSpellGrammar.g:6692:2: iv_ruleexprlist= ruleexprlist EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExprlistRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleexprlist=ruleexprlist();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleexprlist; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 143, entryRuleexprlist_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleexprlist"


    // $ANTLR start "ruleexprlist"
    // InternalSpellGrammar.g:6699:1: ruleexprlist returns [EObject current=null] : ( ( (lv_exprs_0_0= ruleexpr ) ) (otherlv_1= ',' ( (lv_exprs_2_0= ruleexpr ) ) )* ( (lv_optionalComma_3_0= ',' ) )? ) ;
    public final EObject ruleexprlist() throws RecognitionException {
        EObject current = null;
        int ruleexprlist_StartIndex = input.index();
        Token otherlv_1=null;
        Token lv_optionalComma_3_0=null;
        EObject lv_exprs_0_0 = null;

        EObject lv_exprs_2_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 144) ) { return current; }
            // InternalSpellGrammar.g:6702:28: ( ( ( (lv_exprs_0_0= ruleexpr ) ) (otherlv_1= ',' ( (lv_exprs_2_0= ruleexpr ) ) )* ( (lv_optionalComma_3_0= ',' ) )? ) )
            // InternalSpellGrammar.g:6703:1: ( ( (lv_exprs_0_0= ruleexpr ) ) (otherlv_1= ',' ( (lv_exprs_2_0= ruleexpr ) ) )* ( (lv_optionalComma_3_0= ',' ) )? )
            {
            // InternalSpellGrammar.g:6703:1: ( ( (lv_exprs_0_0= ruleexpr ) ) (otherlv_1= ',' ( (lv_exprs_2_0= ruleexpr ) ) )* ( (lv_optionalComma_3_0= ',' ) )? )
            // InternalSpellGrammar.g:6703:2: ( (lv_exprs_0_0= ruleexpr ) ) (otherlv_1= ',' ( (lv_exprs_2_0= ruleexpr ) ) )* ( (lv_optionalComma_3_0= ',' ) )?
            {
            // InternalSpellGrammar.g:6703:2: ( (lv_exprs_0_0= ruleexpr ) )
            // InternalSpellGrammar.g:6704:1: (lv_exprs_0_0= ruleexpr )
            {
            // InternalSpellGrammar.g:6704:1: (lv_exprs_0_0= ruleexpr )
            // InternalSpellGrammar.g:6705:3: lv_exprs_0_0= ruleexpr
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getExprlistAccess().getExprsExprParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_19);
            lv_exprs_0_0=ruleexpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getExprlistRule());
              	        }
                     		add(
                     			current, 
                     			"exprs",
                      		lv_exprs_0_0, 
                      		"lu.ses.engineering.spell.controlflow.SpellGrammar.expr");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSpellGrammar.g:6721:2: (otherlv_1= ',' ( (lv_exprs_2_0= ruleexpr ) ) )*
            loop146:
            do {
                int alt146=2;
                alt146 = dfa146.predict(input);
                switch (alt146) {
            	case 1 :
            	    // InternalSpellGrammar.g:6721:4: otherlv_1= ',' ( (lv_exprs_2_0= ruleexpr ) )
            	    {
            	    otherlv_1=(Token)match(input,23,FollowSets000.FOLLOW_28); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_1, grammarAccess.getExprlistAccess().getCommaKeyword_1_0());
            	          
            	    }
            	    // InternalSpellGrammar.g:6725:1: ( (lv_exprs_2_0= ruleexpr ) )
            	    // InternalSpellGrammar.g:6726:1: (lv_exprs_2_0= ruleexpr )
            	    {
            	    // InternalSpellGrammar.g:6726:1: (lv_exprs_2_0= ruleexpr )
            	    // InternalSpellGrammar.g:6727:3: lv_exprs_2_0= ruleexpr
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getExprlistAccess().getExprsExprParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_19);
            	    lv_exprs_2_0=ruleexpr();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getExprlistRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"exprs",
            	              		lv_exprs_2_0, 
            	              		"lu.ses.engineering.spell.controlflow.SpellGrammar.expr");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop146;
                }
            } while (true);

            // InternalSpellGrammar.g:6743:4: ( (lv_optionalComma_3_0= ',' ) )?
            int alt147=2;
            int LA147_0 = input.LA(1);

            if ( (LA147_0==23) ) {
                int LA147_1 = input.LA(2);

                if ( (synpred207_InternalSpellGrammar()) ) {
                    alt147=1;
                }
            }
            switch (alt147) {
                case 1 :
                    // InternalSpellGrammar.g:6744:1: (lv_optionalComma_3_0= ',' )
                    {
                    // InternalSpellGrammar.g:6744:1: (lv_optionalComma_3_0= ',' )
                    // InternalSpellGrammar.g:6745:3: lv_optionalComma_3_0= ','
                    {
                    lv_optionalComma_3_0=(Token)match(input,23,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_optionalComma_3_0, grammarAccess.getExprlistAccess().getOptionalCommaCommaKeyword_2_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getExprlistRule());
                      	        }
                             		setWithLastConsumed(current, "optionalComma", true, ",");
                      	    
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 144, ruleexprlist_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleexprlist"


    // $ANTLR start "entryRuletestlist"
    // InternalSpellGrammar.g:6766:1: entryRuletestlist returns [EObject current=null] : iv_ruletestlist= ruletestlist EOF ;
    public final EObject entryRuletestlist() throws RecognitionException {
        EObject current = null;
        int entryRuletestlist_StartIndex = input.index();
        EObject iv_ruletestlist = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 145) ) { return current; }
            // InternalSpellGrammar.g:6767:2: (iv_ruletestlist= ruletestlist EOF )
            // InternalSpellGrammar.g:6768:2: iv_ruletestlist= ruletestlist EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTestlistRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruletestlist=ruletestlist();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruletestlist; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 145, entryRuletestlist_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuletestlist"


    // $ANTLR start "ruletestlist"
    // InternalSpellGrammar.g:6775:1: ruletestlist returns [EObject current=null] : (this_test_0= ruletest ( () otherlv_2= ',' ( (lv_tests_3_0= ruletest ) ) )* ( (lv_optionalComma_4_0= ',' ) )? ) ;
    public final EObject ruletestlist() throws RecognitionException {
        EObject current = null;
        int ruletestlist_StartIndex = input.index();
        Token otherlv_2=null;
        Token lv_optionalComma_4_0=null;
        EObject this_test_0 = null;

        EObject lv_tests_3_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 146) ) { return current; }
            // InternalSpellGrammar.g:6778:28: ( (this_test_0= ruletest ( () otherlv_2= ',' ( (lv_tests_3_0= ruletest ) ) )* ( (lv_optionalComma_4_0= ',' ) )? ) )
            // InternalSpellGrammar.g:6779:1: (this_test_0= ruletest ( () otherlv_2= ',' ( (lv_tests_3_0= ruletest ) ) )* ( (lv_optionalComma_4_0= ',' ) )? )
            {
            // InternalSpellGrammar.g:6779:1: (this_test_0= ruletest ( () otherlv_2= ',' ( (lv_tests_3_0= ruletest ) ) )* ( (lv_optionalComma_4_0= ',' ) )? )
            // InternalSpellGrammar.g:6780:2: this_test_0= ruletest ( () otherlv_2= ',' ( (lv_tests_3_0= ruletest ) ) )* ( (lv_optionalComma_4_0= ',' ) )?
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getTestlistAccess().getTestParserRuleCall_0()); 
                  
            }
            pushFollow(FollowSets000.FOLLOW_19);
            this_test_0=ruletest();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                      current = this_test_0; 
                      afterParserOrEnumRuleCall();
                  
            }
            // InternalSpellGrammar.g:6791:1: ( () otherlv_2= ',' ( (lv_tests_3_0= ruletest ) ) )*
            loop148:
            do {
                int alt148=2;
                alt148 = dfa148.predict(input);
                switch (alt148) {
            	case 1 :
            	    // InternalSpellGrammar.g:6791:2: () otherlv_2= ',' ( (lv_tests_3_0= ruletest ) )
            	    {
            	    // InternalSpellGrammar.g:6791:2: ()
            	    // InternalSpellGrammar.g:6792:2: 
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	  /* */ 
            	      	
            	    }
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndAdd(
            	                  grammarAccess.getTestlistAccess().getTestlistTestsAction_1_0(),
            	                  current);
            	          
            	    }

            	    }

            	    otherlv_2=(Token)match(input,23,FollowSets000.FOLLOW_16); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_2, grammarAccess.getTestlistAccess().getCommaKeyword_1_1());
            	          
            	    }
            	    // InternalSpellGrammar.g:6804:1: ( (lv_tests_3_0= ruletest ) )
            	    // InternalSpellGrammar.g:6805:1: (lv_tests_3_0= ruletest )
            	    {
            	    // InternalSpellGrammar.g:6805:1: (lv_tests_3_0= ruletest )
            	    // InternalSpellGrammar.g:6806:3: lv_tests_3_0= ruletest
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getTestlistAccess().getTestsTestParserRuleCall_1_2_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_19);
            	    lv_tests_3_0=ruletest();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getTestlistRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"tests",
            	              		lv_tests_3_0, 
            	              		"lu.ses.engineering.spell.controlflow.SpellGrammar.test");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop148;
                }
            } while (true);

            // InternalSpellGrammar.g:6822:4: ( (lv_optionalComma_4_0= ',' ) )?
            int alt149=2;
            int LA149_0 = input.LA(1);

            if ( (LA149_0==23) ) {
                int LA149_1 = input.LA(2);

                if ( (synpred209_InternalSpellGrammar()) ) {
                    alt149=1;
                }
            }
            switch (alt149) {
                case 1 :
                    // InternalSpellGrammar.g:6823:1: (lv_optionalComma_4_0= ',' )
                    {
                    // InternalSpellGrammar.g:6823:1: (lv_optionalComma_4_0= ',' )
                    // InternalSpellGrammar.g:6824:3: lv_optionalComma_4_0= ','
                    {
                    lv_optionalComma_4_0=(Token)match(input,23,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_optionalComma_4_0, grammarAccess.getTestlistAccess().getOptionalCommaCommaKeyword_2_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getTestlistRule());
                      	        }
                             		setWithLastConsumed(current, "optionalComma", true, ",");
                      	    
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 146, ruletestlist_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruletestlist"


    // $ANTLR start "entryRuledictorset_entry"
    // InternalSpellGrammar.g:6845:1: entryRuledictorset_entry returns [EObject current=null] : iv_ruledictorset_entry= ruledictorset_entry EOF ;
    public final EObject entryRuledictorset_entry() throws RecognitionException {
        EObject current = null;
        int entryRuledictorset_entry_StartIndex = input.index();
        EObject iv_ruledictorset_entry = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 147) ) { return current; }
            // InternalSpellGrammar.g:6846:2: (iv_ruledictorset_entry= ruledictorset_entry EOF )
            // InternalSpellGrammar.g:6847:2: iv_ruledictorset_entry= ruledictorset_entry EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDictorset_entryRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruledictorset_entry=ruledictorset_entry();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruledictorset_entry; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 147, entryRuledictorset_entry_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuledictorset_entry"


    // $ANTLR start "ruledictorset_entry"
    // InternalSpellGrammar.g:6854:1: ruledictorset_entry returns [EObject current=null] : ( ( (lv_test1_0_0= ruletest ) ) otherlv_1= ':' ( (lv_test2_2_0= ruletest ) ) ) ;
    public final EObject ruledictorset_entry() throws RecognitionException {
        EObject current = null;
        int ruledictorset_entry_StartIndex = input.index();
        Token otherlv_1=null;
        EObject lv_test1_0_0 = null;

        EObject lv_test2_2_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 148) ) { return current; }
            // InternalSpellGrammar.g:6857:28: ( ( ( (lv_test1_0_0= ruletest ) ) otherlv_1= ':' ( (lv_test2_2_0= ruletest ) ) ) )
            // InternalSpellGrammar.g:6858:1: ( ( (lv_test1_0_0= ruletest ) ) otherlv_1= ':' ( (lv_test2_2_0= ruletest ) ) )
            {
            // InternalSpellGrammar.g:6858:1: ( ( (lv_test1_0_0= ruletest ) ) otherlv_1= ':' ( (lv_test2_2_0= ruletest ) ) )
            // InternalSpellGrammar.g:6858:2: ( (lv_test1_0_0= ruletest ) ) otherlv_1= ':' ( (lv_test2_2_0= ruletest ) )
            {
            // InternalSpellGrammar.g:6858:2: ( (lv_test1_0_0= ruletest ) )
            // InternalSpellGrammar.g:6859:1: (lv_test1_0_0= ruletest )
            {
            // InternalSpellGrammar.g:6859:1: (lv_test1_0_0= ruletest )
            // InternalSpellGrammar.g:6860:3: lv_test1_0_0= ruletest
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getDictorset_entryAccess().getTest1TestParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_10);
            lv_test1_0_0=ruletest();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getDictorset_entryRule());
              	        }
                     		set(
                     			current, 
                     			"test1",
                      		lv_test1_0_0, 
                      		"lu.ses.engineering.spell.controlflow.SpellGrammar.test");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_1=(Token)match(input,22,FollowSets000.FOLLOW_16); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getDictorset_entryAccess().getColonKeyword_1());
                  
            }
            // InternalSpellGrammar.g:6880:1: ( (lv_test2_2_0= ruletest ) )
            // InternalSpellGrammar.g:6881:1: (lv_test2_2_0= ruletest )
            {
            // InternalSpellGrammar.g:6881:1: (lv_test2_2_0= ruletest )
            // InternalSpellGrammar.g:6882:3: lv_test2_2_0= ruletest
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getDictorset_entryAccess().getTest2TestParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_test2_2_0=ruletest();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getDictorset_entryRule());
              	        }
                     		set(
                     			current, 
                     			"test2",
                      		lv_test2_2_0, 
                      		"lu.ses.engineering.spell.controlflow.SpellGrammar.test");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 148, ruledictorset_entry_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruledictorset_entry"


    // $ANTLR start "entryRuledictorsetmaker"
    // InternalSpellGrammar.g:6906:1: entryRuledictorsetmaker returns [EObject current=null] : iv_ruledictorsetmaker= ruledictorsetmaker EOF ;
    public final EObject entryRuledictorsetmaker() throws RecognitionException {
        EObject current = null;
        int entryRuledictorsetmaker_StartIndex = input.index();
        EObject iv_ruledictorsetmaker = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 149) ) { return current; }
            // InternalSpellGrammar.g:6907:2: (iv_ruledictorsetmaker= ruledictorsetmaker EOF )
            // InternalSpellGrammar.g:6908:2: iv_ruledictorsetmaker= ruledictorsetmaker EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDictorsetmakerRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruledictorsetmaker=ruledictorsetmaker();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruledictorsetmaker; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 149, entryRuledictorsetmaker_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuledictorsetmaker"


    // $ANTLR start "ruledictorsetmaker"
    // InternalSpellGrammar.g:6915:1: ruledictorsetmaker returns [EObject current=null] : ( ( (lv_entries_0_0= ruledictorset_entry ) ) ( ( (lv_comp_for_1_0= rulecomp_for ) ) | ( (otherlv_2= ',' ( (lv_entries_3_0= ruledictorset_entry ) ) )* ( (lv_optionalComma_4_0= ',' ) )? ) ) ) ;
    public final EObject ruledictorsetmaker() throws RecognitionException {
        EObject current = null;
        int ruledictorsetmaker_StartIndex = input.index();
        Token otherlv_2=null;
        Token lv_optionalComma_4_0=null;
        EObject lv_entries_0_0 = null;

        EObject lv_comp_for_1_0 = null;

        EObject lv_entries_3_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 150) ) { return current; }
            // InternalSpellGrammar.g:6918:28: ( ( ( (lv_entries_0_0= ruledictorset_entry ) ) ( ( (lv_comp_for_1_0= rulecomp_for ) ) | ( (otherlv_2= ',' ( (lv_entries_3_0= ruledictorset_entry ) ) )* ( (lv_optionalComma_4_0= ',' ) )? ) ) ) )
            // InternalSpellGrammar.g:6919:1: ( ( (lv_entries_0_0= ruledictorset_entry ) ) ( ( (lv_comp_for_1_0= rulecomp_for ) ) | ( (otherlv_2= ',' ( (lv_entries_3_0= ruledictorset_entry ) ) )* ( (lv_optionalComma_4_0= ',' ) )? ) ) )
            {
            // InternalSpellGrammar.g:6919:1: ( ( (lv_entries_0_0= ruledictorset_entry ) ) ( ( (lv_comp_for_1_0= rulecomp_for ) ) | ( (otherlv_2= ',' ( (lv_entries_3_0= ruledictorset_entry ) ) )* ( (lv_optionalComma_4_0= ',' ) )? ) ) )
            // InternalSpellGrammar.g:6919:2: ( (lv_entries_0_0= ruledictorset_entry ) ) ( ( (lv_comp_for_1_0= rulecomp_for ) ) | ( (otherlv_2= ',' ( (lv_entries_3_0= ruledictorset_entry ) ) )* ( (lv_optionalComma_4_0= ',' ) )? ) )
            {
            // InternalSpellGrammar.g:6919:2: ( (lv_entries_0_0= ruledictorset_entry ) )
            // InternalSpellGrammar.g:6920:1: (lv_entries_0_0= ruledictorset_entry )
            {
            // InternalSpellGrammar.g:6920:1: (lv_entries_0_0= ruledictorset_entry )
            // InternalSpellGrammar.g:6921:3: lv_entries_0_0= ruledictorset_entry
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getDictorsetmakerAccess().getEntriesDictorset_entryParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_79);
            lv_entries_0_0=ruledictorset_entry();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getDictorsetmakerRule());
              	        }
                     		add(
                     			current, 
                     			"entries",
                      		lv_entries_0_0, 
                      		"lu.ses.engineering.spell.controlflow.SpellGrammar.dictorset_entry");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSpellGrammar.g:6937:2: ( ( (lv_comp_for_1_0= rulecomp_for ) ) | ( (otherlv_2= ',' ( (lv_entries_3_0= ruledictorset_entry ) ) )* ( (lv_optionalComma_4_0= ',' ) )? ) )
            int alt152=2;
            int LA152_0 = input.LA(1);

            if ( (LA152_0==58) ) {
                alt152=1;
            }
            else if ( (LA152_0==EOF||LA152_0==23||LA152_0==99) ) {
                alt152=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 152, 0, input);

                throw nvae;
            }
            switch (alt152) {
                case 1 :
                    // InternalSpellGrammar.g:6937:3: ( (lv_comp_for_1_0= rulecomp_for ) )
                    {
                    // InternalSpellGrammar.g:6937:3: ( (lv_comp_for_1_0= rulecomp_for ) )
                    // InternalSpellGrammar.g:6938:1: (lv_comp_for_1_0= rulecomp_for )
                    {
                    // InternalSpellGrammar.g:6938:1: (lv_comp_for_1_0= rulecomp_for )
                    // InternalSpellGrammar.g:6939:3: lv_comp_for_1_0= rulecomp_for
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getDictorsetmakerAccess().getComp_forComp_forParserRuleCall_1_0_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_comp_for_1_0=rulecomp_for();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getDictorsetmakerRule());
                      	        }
                             		set(
                             			current, 
                             			"comp_for",
                              		lv_comp_for_1_0, 
                              		"lu.ses.engineering.spell.controlflow.SpellGrammar.comp_for");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSpellGrammar.g:6956:6: ( (otherlv_2= ',' ( (lv_entries_3_0= ruledictorset_entry ) ) )* ( (lv_optionalComma_4_0= ',' ) )? )
                    {
                    // InternalSpellGrammar.g:6956:6: ( (otherlv_2= ',' ( (lv_entries_3_0= ruledictorset_entry ) ) )* ( (lv_optionalComma_4_0= ',' ) )? )
                    // InternalSpellGrammar.g:6956:7: (otherlv_2= ',' ( (lv_entries_3_0= ruledictorset_entry ) ) )* ( (lv_optionalComma_4_0= ',' ) )?
                    {
                    // InternalSpellGrammar.g:6956:7: (otherlv_2= ',' ( (lv_entries_3_0= ruledictorset_entry ) ) )*
                    loop150:
                    do {
                        int alt150=2;
                        int LA150_0 = input.LA(1);

                        if ( (LA150_0==23) ) {
                            int LA150_1 = input.LA(2);

                            if ( (LA150_1==RULE_STRING||(LA150_1>=RULE_NAME_TERMINAL && LA150_1<=RULE_NUMBER)||LA150_1==19||LA150_1==28||LA150_1==48||LA150_1==65||LA150_1==79||(LA150_1>=83 && LA150_1<=96)||LA150_1==98||(LA150_1>=100 && LA150_1<=101)) ) {
                                alt150=1;
                            }


                        }


                        switch (alt150) {
                    	case 1 :
                    	    // InternalSpellGrammar.g:6956:9: otherlv_2= ',' ( (lv_entries_3_0= ruledictorset_entry ) )
                    	    {
                    	    otherlv_2=(Token)match(input,23,FollowSets000.FOLLOW_16); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_2, grammarAccess.getDictorsetmakerAccess().getCommaKeyword_1_1_0_0());
                    	          
                    	    }
                    	    // InternalSpellGrammar.g:6960:1: ( (lv_entries_3_0= ruledictorset_entry ) )
                    	    // InternalSpellGrammar.g:6961:1: (lv_entries_3_0= ruledictorset_entry )
                    	    {
                    	    // InternalSpellGrammar.g:6961:1: (lv_entries_3_0= ruledictorset_entry )
                    	    // InternalSpellGrammar.g:6962:3: lv_entries_3_0= ruledictorset_entry
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getDictorsetmakerAccess().getEntriesDictorset_entryParserRuleCall_1_1_0_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_19);
                    	    lv_entries_3_0=ruledictorset_entry();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getDictorsetmakerRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"entries",
                    	              		lv_entries_3_0, 
                    	              		"lu.ses.engineering.spell.controlflow.SpellGrammar.dictorset_entry");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop150;
                        }
                    } while (true);

                    // InternalSpellGrammar.g:6978:4: ( (lv_optionalComma_4_0= ',' ) )?
                    int alt151=2;
                    int LA151_0 = input.LA(1);

                    if ( (LA151_0==23) ) {
                        alt151=1;
                    }
                    switch (alt151) {
                        case 1 :
                            // InternalSpellGrammar.g:6979:1: (lv_optionalComma_4_0= ',' )
                            {
                            // InternalSpellGrammar.g:6979:1: (lv_optionalComma_4_0= ',' )
                            // InternalSpellGrammar.g:6980:3: lv_optionalComma_4_0= ','
                            {
                            lv_optionalComma_4_0=(Token)match(input,23,FollowSets000.FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_optionalComma_4_0, grammarAccess.getDictorsetmakerAccess().getOptionalCommaCommaKeyword_1_1_1_0());
                                  
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getDictorsetmakerRule());
                              	        }
                                     		setWithLastConsumed(current, "optionalComma", true, ",");
                              	    
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 150, ruledictorsetmaker_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruledictorsetmaker"


    // $ANTLR start "entryRuleclassdef"
    // InternalSpellGrammar.g:7001:1: entryRuleclassdef returns [EObject current=null] : iv_ruleclassdef= ruleclassdef EOF ;
    public final EObject entryRuleclassdef() throws RecognitionException {
        EObject current = null;
        int entryRuleclassdef_StartIndex = input.index();
        EObject iv_ruleclassdef = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 151) ) { return current; }
            // InternalSpellGrammar.g:7002:2: (iv_ruleclassdef= ruleclassdef EOF )
            // InternalSpellGrammar.g:7003:2: iv_ruleclassdef= ruleclassdef EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getClassdefRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleclassdef=ruleclassdef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleclassdef; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 151, entryRuleclassdef_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleclassdef"


    // $ANTLR start "ruleclassdef"
    // InternalSpellGrammar.g:7010:1: ruleclassdef returns [EObject current=null] : (otherlv_0= 'class' ( (lv_name_1_0= ruleNAME ) ) ( ( (lv_roundBrackets_2_0= '(' ) ) ( (lv_testlist_3_0= ruletestlist ) ) otherlv_4= ')' )? otherlv_5= ':' ( (lv_suite_6_0= rulesuite ) ) this_ENDCLASS_7= RULE_ENDCLASS ) ;
    public final EObject ruleclassdef() throws RecognitionException {
        EObject current = null;
        int ruleclassdef_StartIndex = input.index();
        Token otherlv_0=null;
        Token lv_roundBrackets_2_0=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token this_ENDCLASS_7=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_testlist_3_0 = null;

        EObject lv_suite_6_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 152) ) { return current; }
            // InternalSpellGrammar.g:7013:28: ( (otherlv_0= 'class' ( (lv_name_1_0= ruleNAME ) ) ( ( (lv_roundBrackets_2_0= '(' ) ) ( (lv_testlist_3_0= ruletestlist ) ) otherlv_4= ')' )? otherlv_5= ':' ( (lv_suite_6_0= rulesuite ) ) this_ENDCLASS_7= RULE_ENDCLASS ) )
            // InternalSpellGrammar.g:7014:1: (otherlv_0= 'class' ( (lv_name_1_0= ruleNAME ) ) ( ( (lv_roundBrackets_2_0= '(' ) ) ( (lv_testlist_3_0= ruletestlist ) ) otherlv_4= ')' )? otherlv_5= ':' ( (lv_suite_6_0= rulesuite ) ) this_ENDCLASS_7= RULE_ENDCLASS )
            {
            // InternalSpellGrammar.g:7014:1: (otherlv_0= 'class' ( (lv_name_1_0= ruleNAME ) ) ( ( (lv_roundBrackets_2_0= '(' ) ) ( (lv_testlist_3_0= ruletestlist ) ) otherlv_4= ')' )? otherlv_5= ':' ( (lv_suite_6_0= rulesuite ) ) this_ENDCLASS_7= RULE_ENDCLASS )
            // InternalSpellGrammar.g:7014:3: otherlv_0= 'class' ( (lv_name_1_0= ruleNAME ) ) ( ( (lv_roundBrackets_2_0= '(' ) ) ( (lv_testlist_3_0= ruletestlist ) ) otherlv_4= ')' )? otherlv_5= ':' ( (lv_suite_6_0= rulesuite ) ) this_ENDCLASS_7= RULE_ENDCLASS
            {
            otherlv_0=(Token)match(input,102,FollowSets000.FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getClassdefAccess().getClassKeyword_0());
                  
            }
            // InternalSpellGrammar.g:7018:1: ( (lv_name_1_0= ruleNAME ) )
            // InternalSpellGrammar.g:7019:1: (lv_name_1_0= ruleNAME )
            {
            // InternalSpellGrammar.g:7019:1: (lv_name_1_0= ruleNAME )
            // InternalSpellGrammar.g:7020:3: lv_name_1_0= ruleNAME
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getClassdefAccess().getNameNAMEParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_85);
            lv_name_1_0=ruleNAME();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getClassdefRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_1_0, 
                      		"lu.ses.engineering.spell.controlflow.SpellGrammar.NAME");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSpellGrammar.g:7036:2: ( ( (lv_roundBrackets_2_0= '(' ) ) ( (lv_testlist_3_0= ruletestlist ) ) otherlv_4= ')' )?
            int alt153=2;
            int LA153_0 = input.LA(1);

            if ( (LA153_0==19) ) {
                alt153=1;
            }
            switch (alt153) {
                case 1 :
                    // InternalSpellGrammar.g:7036:3: ( (lv_roundBrackets_2_0= '(' ) ) ( (lv_testlist_3_0= ruletestlist ) ) otherlv_4= ')'
                    {
                    // InternalSpellGrammar.g:7036:3: ( (lv_roundBrackets_2_0= '(' ) )
                    // InternalSpellGrammar.g:7037:1: (lv_roundBrackets_2_0= '(' )
                    {
                    // InternalSpellGrammar.g:7037:1: (lv_roundBrackets_2_0= '(' )
                    // InternalSpellGrammar.g:7038:3: lv_roundBrackets_2_0= '('
                    {
                    lv_roundBrackets_2_0=(Token)match(input,19,FollowSets000.FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_roundBrackets_2_0, grammarAccess.getClassdefAccess().getRoundBracketsLeftParenthesisKeyword_2_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getClassdefRule());
                      	        }
                             		setWithLastConsumed(current, "roundBrackets", true, "(");
                      	    
                    }

                    }


                    }

                    // InternalSpellGrammar.g:7051:2: ( (lv_testlist_3_0= ruletestlist ) )
                    // InternalSpellGrammar.g:7052:1: (lv_testlist_3_0= ruletestlist )
                    {
                    // InternalSpellGrammar.g:7052:1: (lv_testlist_3_0= ruletestlist )
                    // InternalSpellGrammar.g:7053:3: lv_testlist_3_0= ruletestlist
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getClassdefAccess().getTestlistTestlistParserRuleCall_2_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_7);
                    lv_testlist_3_0=ruletestlist();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getClassdefRule());
                      	        }
                             		set(
                             			current, 
                             			"testlist",
                              		lv_testlist_3_0, 
                              		"lu.ses.engineering.spell.controlflow.SpellGrammar.testlist");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_4=(Token)match(input,20,FollowSets000.FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getClassdefAccess().getRightParenthesisKeyword_2_2());
                          
                    }

                    }
                    break;

            }

            otherlv_5=(Token)match(input,22,FollowSets000.FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getClassdefAccess().getColonKeyword_3());
                  
            }
            // InternalSpellGrammar.g:7077:1: ( (lv_suite_6_0= rulesuite ) )
            // InternalSpellGrammar.g:7078:1: (lv_suite_6_0= rulesuite )
            {
            // InternalSpellGrammar.g:7078:1: (lv_suite_6_0= rulesuite )
            // InternalSpellGrammar.g:7079:3: lv_suite_6_0= rulesuite
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getClassdefAccess().getSuiteSuiteParserRuleCall_4_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_86);
            lv_suite_6_0=rulesuite();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getClassdefRule());
              	        }
                     		set(
                     			current, 
                     			"suite",
                      		lv_suite_6_0, 
                      		"lu.ses.engineering.spell.controlflow.SpellGrammar.suite");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            this_ENDCLASS_7=(Token)match(input,RULE_ENDCLASS,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_ENDCLASS_7, grammarAccess.getClassdefAccess().getENDCLASSTerminalRuleCall_5()); 
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 152, ruleclassdef_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleclassdef"


    // $ANTLR start "entryRulearglist"
    // InternalSpellGrammar.g:7107:1: entryRulearglist returns [EObject current=null] : iv_rulearglist= rulearglist EOF ;
    public final EObject entryRulearglist() throws RecognitionException {
        EObject current = null;
        int entryRulearglist_StartIndex = input.index();
        EObject iv_rulearglist = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 153) ) { return current; }
            // InternalSpellGrammar.g:7108:2: (iv_rulearglist= rulearglist EOF )
            // InternalSpellGrammar.g:7109:2: iv_rulearglist= rulearglist EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getArglistRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulearglist=rulearglist();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulearglist; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 153, entryRulearglist_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRulearglist"


    // $ANTLR start "rulearglist"
    // InternalSpellGrammar.g:7116:1: rulearglist returns [EObject current=null] : ( ( ( (lv_arguments_0_0= ruleargument ) ) otherlv_1= ',' )* ( ( ( (lv_arguments_2_0= ruleargument ) ) ( (lv_optionalComma_3_0= ',' ) )? ) | (otherlv_4= '*' ( (lv_dot1_test_5_0= ruletest ) ) (otherlv_6= ',' ( (lv_dot1_arguments_7_0= ruleargument ) ) )* (otherlv_8= ',' otherlv_9= '**' ( (lv_dot2_test_10_0= ruletest ) ) )? ) | (otherlv_11= '**' ( (lv_dot2_test_12_0= ruletest ) ) ) ) (otherlv_13= ',' )? ) ;
    public final EObject rulearglist() throws RecognitionException {
        EObject current = null;
        int rulearglist_StartIndex = input.index();
        Token otherlv_1=null;
        Token lv_optionalComma_3_0=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        EObject lv_arguments_0_0 = null;

        EObject lv_arguments_2_0 = null;

        EObject lv_dot1_test_5_0 = null;

        EObject lv_dot1_arguments_7_0 = null;

        EObject lv_dot2_test_10_0 = null;

        EObject lv_dot2_test_12_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 154) ) { return current; }
            // InternalSpellGrammar.g:7119:28: ( ( ( ( (lv_arguments_0_0= ruleargument ) ) otherlv_1= ',' )* ( ( ( (lv_arguments_2_0= ruleargument ) ) ( (lv_optionalComma_3_0= ',' ) )? ) | (otherlv_4= '*' ( (lv_dot1_test_5_0= ruletest ) ) (otherlv_6= ',' ( (lv_dot1_arguments_7_0= ruleargument ) ) )* (otherlv_8= ',' otherlv_9= '**' ( (lv_dot2_test_10_0= ruletest ) ) )? ) | (otherlv_11= '**' ( (lv_dot2_test_12_0= ruletest ) ) ) ) (otherlv_13= ',' )? ) )
            // InternalSpellGrammar.g:7120:1: ( ( ( (lv_arguments_0_0= ruleargument ) ) otherlv_1= ',' )* ( ( ( (lv_arguments_2_0= ruleargument ) ) ( (lv_optionalComma_3_0= ',' ) )? ) | (otherlv_4= '*' ( (lv_dot1_test_5_0= ruletest ) ) (otherlv_6= ',' ( (lv_dot1_arguments_7_0= ruleargument ) ) )* (otherlv_8= ',' otherlv_9= '**' ( (lv_dot2_test_10_0= ruletest ) ) )? ) | (otherlv_11= '**' ( (lv_dot2_test_12_0= ruletest ) ) ) ) (otherlv_13= ',' )? )
            {
            // InternalSpellGrammar.g:7120:1: ( ( ( (lv_arguments_0_0= ruleargument ) ) otherlv_1= ',' )* ( ( ( (lv_arguments_2_0= ruleargument ) ) ( (lv_optionalComma_3_0= ',' ) )? ) | (otherlv_4= '*' ( (lv_dot1_test_5_0= ruletest ) ) (otherlv_6= ',' ( (lv_dot1_arguments_7_0= ruleargument ) ) )* (otherlv_8= ',' otherlv_9= '**' ( (lv_dot2_test_10_0= ruletest ) ) )? ) | (otherlv_11= '**' ( (lv_dot2_test_12_0= ruletest ) ) ) ) (otherlv_13= ',' )? )
            // InternalSpellGrammar.g:7120:2: ( ( (lv_arguments_0_0= ruleargument ) ) otherlv_1= ',' )* ( ( ( (lv_arguments_2_0= ruleargument ) ) ( (lv_optionalComma_3_0= ',' ) )? ) | (otherlv_4= '*' ( (lv_dot1_test_5_0= ruletest ) ) (otherlv_6= ',' ( (lv_dot1_arguments_7_0= ruleargument ) ) )* (otherlv_8= ',' otherlv_9= '**' ( (lv_dot2_test_10_0= ruletest ) ) )? ) | (otherlv_11= '**' ( (lv_dot2_test_12_0= ruletest ) ) ) ) (otherlv_13= ',' )?
            {
            // InternalSpellGrammar.g:7120:2: ( ( (lv_arguments_0_0= ruleargument ) ) otherlv_1= ',' )*
            loop154:
            do {
                int alt154=2;
                alt154 = dfa154.predict(input);
                switch (alt154) {
            	case 1 :
            	    // InternalSpellGrammar.g:7120:3: ( (lv_arguments_0_0= ruleargument ) ) otherlv_1= ','
            	    {
            	    // InternalSpellGrammar.g:7120:3: ( (lv_arguments_0_0= ruleargument ) )
            	    // InternalSpellGrammar.g:7121:1: (lv_arguments_0_0= ruleargument )
            	    {
            	    // InternalSpellGrammar.g:7121:1: (lv_arguments_0_0= ruleargument )
            	    // InternalSpellGrammar.g:7122:3: lv_arguments_0_0= ruleargument
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getArglistAccess().getArgumentsArgumentParserRuleCall_0_0_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_17);
            	    lv_arguments_0_0=ruleargument();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getArglistRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"arguments",
            	              		lv_arguments_0_0, 
            	              		"lu.ses.engineering.spell.controlflow.SpellGrammar.argument");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }

            	    otherlv_1=(Token)match(input,23,FollowSets000.FOLLOW_66); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_1, grammarAccess.getArglistAccess().getCommaKeyword_0_1());
            	          
            	    }

            	    }
            	    break;

            	default :
            	    break loop154;
                }
            } while (true);

            // InternalSpellGrammar.g:7142:3: ( ( ( (lv_arguments_2_0= ruleargument ) ) ( (lv_optionalComma_3_0= ',' ) )? ) | (otherlv_4= '*' ( (lv_dot1_test_5_0= ruletest ) ) (otherlv_6= ',' ( (lv_dot1_arguments_7_0= ruleargument ) ) )* (otherlv_8= ',' otherlv_9= '**' ( (lv_dot2_test_10_0= ruletest ) ) )? ) | (otherlv_11= '**' ( (lv_dot2_test_12_0= ruletest ) ) ) )
            int alt158=3;
            switch ( input.LA(1) ) {
            case RULE_STRING:
            case RULE_NAME_TERMINAL:
            case RULE_NUMBER:
            case 19:
            case 28:
            case 48:
            case 65:
            case 79:
            case 83:
            case 84:
            case 85:
            case 86:
            case 87:
            case 88:
            case 89:
            case 90:
            case 91:
            case 92:
            case 93:
            case 94:
            case 95:
            case 96:
            case 98:
            case 100:
            case 101:
                {
                alt158=1;
                }
                break;
            case 25:
                {
                alt158=2;
                }
                break;
            case 26:
                {
                alt158=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 158, 0, input);

                throw nvae;
            }

            switch (alt158) {
                case 1 :
                    // InternalSpellGrammar.g:7142:4: ( ( (lv_arguments_2_0= ruleargument ) ) ( (lv_optionalComma_3_0= ',' ) )? )
                    {
                    // InternalSpellGrammar.g:7142:4: ( ( (lv_arguments_2_0= ruleargument ) ) ( (lv_optionalComma_3_0= ',' ) )? )
                    // InternalSpellGrammar.g:7142:5: ( (lv_arguments_2_0= ruleargument ) ) ( (lv_optionalComma_3_0= ',' ) )?
                    {
                    // InternalSpellGrammar.g:7142:5: ( (lv_arguments_2_0= ruleargument ) )
                    // InternalSpellGrammar.g:7143:1: (lv_arguments_2_0= ruleargument )
                    {
                    // InternalSpellGrammar.g:7143:1: (lv_arguments_2_0= ruleargument )
                    // InternalSpellGrammar.g:7144:3: lv_arguments_2_0= ruleargument
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getArglistAccess().getArgumentsArgumentParserRuleCall_1_0_0_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_19);
                    lv_arguments_2_0=ruleargument();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getArglistRule());
                      	        }
                             		add(
                             			current, 
                             			"arguments",
                              		lv_arguments_2_0, 
                              		"lu.ses.engineering.spell.controlflow.SpellGrammar.argument");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalSpellGrammar.g:7160:2: ( (lv_optionalComma_3_0= ',' ) )?
                    int alt155=2;
                    int LA155_0 = input.LA(1);

                    if ( (LA155_0==23) ) {
                        int LA155_1 = input.LA(2);

                        if ( (synpred215_InternalSpellGrammar()) ) {
                            alt155=1;
                        }
                    }
                    switch (alt155) {
                        case 1 :
                            // InternalSpellGrammar.g:7161:1: (lv_optionalComma_3_0= ',' )
                            {
                            // InternalSpellGrammar.g:7161:1: (lv_optionalComma_3_0= ',' )
                            // InternalSpellGrammar.g:7162:3: lv_optionalComma_3_0= ','
                            {
                            lv_optionalComma_3_0=(Token)match(input,23,FollowSets000.FOLLOW_19); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_optionalComma_3_0, grammarAccess.getArglistAccess().getOptionalCommaCommaKeyword_1_0_1_0());
                                  
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getArglistRule());
                              	        }
                                     		setWithLastConsumed(current, "optionalComma", true, ",");
                              	    
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSpellGrammar.g:7176:6: (otherlv_4= '*' ( (lv_dot1_test_5_0= ruletest ) ) (otherlv_6= ',' ( (lv_dot1_arguments_7_0= ruleargument ) ) )* (otherlv_8= ',' otherlv_9= '**' ( (lv_dot2_test_10_0= ruletest ) ) )? )
                    {
                    // InternalSpellGrammar.g:7176:6: (otherlv_4= '*' ( (lv_dot1_test_5_0= ruletest ) ) (otherlv_6= ',' ( (lv_dot1_arguments_7_0= ruleargument ) ) )* (otherlv_8= ',' otherlv_9= '**' ( (lv_dot2_test_10_0= ruletest ) ) )? )
                    // InternalSpellGrammar.g:7176:8: otherlv_4= '*' ( (lv_dot1_test_5_0= ruletest ) ) (otherlv_6= ',' ( (lv_dot1_arguments_7_0= ruleargument ) ) )* (otherlv_8= ',' otherlv_9= '**' ( (lv_dot2_test_10_0= ruletest ) ) )?
                    {
                    otherlv_4=(Token)match(input,25,FollowSets000.FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getArglistAccess().getAsteriskKeyword_1_1_0());
                          
                    }
                    // InternalSpellGrammar.g:7180:1: ( (lv_dot1_test_5_0= ruletest ) )
                    // InternalSpellGrammar.g:7181:1: (lv_dot1_test_5_0= ruletest )
                    {
                    // InternalSpellGrammar.g:7181:1: (lv_dot1_test_5_0= ruletest )
                    // InternalSpellGrammar.g:7182:3: lv_dot1_test_5_0= ruletest
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getArglistAccess().getDot1_testTestParserRuleCall_1_1_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_19);
                    lv_dot1_test_5_0=ruletest();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getArglistRule());
                      	        }
                             		set(
                             			current, 
                             			"dot1_test",
                              		lv_dot1_test_5_0, 
                              		"lu.ses.engineering.spell.controlflow.SpellGrammar.test");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalSpellGrammar.g:7198:2: (otherlv_6= ',' ( (lv_dot1_arguments_7_0= ruleargument ) ) )*
                    loop156:
                    do {
                        int alt156=2;
                        alt156 = dfa156.predict(input);
                        switch (alt156) {
                    	case 1 :
                    	    // InternalSpellGrammar.g:7198:4: otherlv_6= ',' ( (lv_dot1_arguments_7_0= ruleargument ) )
                    	    {
                    	    otherlv_6=(Token)match(input,23,FollowSets000.FOLLOW_16); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_6, grammarAccess.getArglistAccess().getCommaKeyword_1_1_2_0());
                    	          
                    	    }
                    	    // InternalSpellGrammar.g:7202:1: ( (lv_dot1_arguments_7_0= ruleargument ) )
                    	    // InternalSpellGrammar.g:7203:1: (lv_dot1_arguments_7_0= ruleargument )
                    	    {
                    	    // InternalSpellGrammar.g:7203:1: (lv_dot1_arguments_7_0= ruleargument )
                    	    // InternalSpellGrammar.g:7204:3: lv_dot1_arguments_7_0= ruleargument
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getArglistAccess().getDot1_argumentsArgumentParserRuleCall_1_1_2_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_19);
                    	    lv_dot1_arguments_7_0=ruleargument();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getArglistRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"dot1_arguments",
                    	              		lv_dot1_arguments_7_0, 
                    	              		"lu.ses.engineering.spell.controlflow.SpellGrammar.argument");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop156;
                        }
                    } while (true);

                    // InternalSpellGrammar.g:7220:4: (otherlv_8= ',' otherlv_9= '**' ( (lv_dot2_test_10_0= ruletest ) ) )?
                    int alt157=2;
                    alt157 = dfa157.predict(input);
                    switch (alt157) {
                        case 1 :
                            // InternalSpellGrammar.g:7220:6: otherlv_8= ',' otherlv_9= '**' ( (lv_dot2_test_10_0= ruletest ) )
                            {
                            otherlv_8=(Token)match(input,23,FollowSets000.FOLLOW_20); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_8, grammarAccess.getArglistAccess().getCommaKeyword_1_1_3_0());
                                  
                            }
                            otherlv_9=(Token)match(input,26,FollowSets000.FOLLOW_16); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_9, grammarAccess.getArglistAccess().getAsteriskAsteriskKeyword_1_1_3_1());
                                  
                            }
                            // InternalSpellGrammar.g:7228:1: ( (lv_dot2_test_10_0= ruletest ) )
                            // InternalSpellGrammar.g:7229:1: (lv_dot2_test_10_0= ruletest )
                            {
                            // InternalSpellGrammar.g:7229:1: (lv_dot2_test_10_0= ruletest )
                            // InternalSpellGrammar.g:7230:3: lv_dot2_test_10_0= ruletest
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getArglistAccess().getDot2_testTestParserRuleCall_1_1_3_2_0()); 
                              	    
                            }
                            pushFollow(FollowSets000.FOLLOW_19);
                            lv_dot2_test_10_0=ruletest();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getArglistRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"dot2_test",
                                      		lv_dot2_test_10_0, 
                                      		"lu.ses.engineering.spell.controlflow.SpellGrammar.test");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalSpellGrammar.g:7247:6: (otherlv_11= '**' ( (lv_dot2_test_12_0= ruletest ) ) )
                    {
                    // InternalSpellGrammar.g:7247:6: (otherlv_11= '**' ( (lv_dot2_test_12_0= ruletest ) ) )
                    // InternalSpellGrammar.g:7247:8: otherlv_11= '**' ( (lv_dot2_test_12_0= ruletest ) )
                    {
                    otherlv_11=(Token)match(input,26,FollowSets000.FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_11, grammarAccess.getArglistAccess().getAsteriskAsteriskKeyword_1_2_0());
                          
                    }
                    // InternalSpellGrammar.g:7251:1: ( (lv_dot2_test_12_0= ruletest ) )
                    // InternalSpellGrammar.g:7252:1: (lv_dot2_test_12_0= ruletest )
                    {
                    // InternalSpellGrammar.g:7252:1: (lv_dot2_test_12_0= ruletest )
                    // InternalSpellGrammar.g:7253:3: lv_dot2_test_12_0= ruletest
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getArglistAccess().getDot2_testTestParserRuleCall_1_2_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_19);
                    lv_dot2_test_12_0=ruletest();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getArglistRule());
                      	        }
                             		set(
                             			current, 
                             			"dot2_test",
                              		lv_dot2_test_12_0, 
                              		"lu.ses.engineering.spell.controlflow.SpellGrammar.test");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;

            }

            // InternalSpellGrammar.g:7269:4: (otherlv_13= ',' )?
            int alt159=2;
            int LA159_0 = input.LA(1);

            if ( (LA159_0==23) ) {
                int LA159_1 = input.LA(2);

                if ( (synpred220_InternalSpellGrammar()) ) {
                    alt159=1;
                }
            }
            switch (alt159) {
                case 1 :
                    // InternalSpellGrammar.g:7269:6: otherlv_13= ','
                    {
                    otherlv_13=(Token)match(input,23,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_13, grammarAccess.getArglistAccess().getCommaKeyword_2());
                          
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 154, rulearglist_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "rulearglist"


    // $ANTLR start "entryRuleargument"
    // InternalSpellGrammar.g:7281:1: entryRuleargument returns [EObject current=null] : iv_ruleargument= ruleargument EOF ;
    public final EObject entryRuleargument() throws RecognitionException {
        EObject current = null;
        int entryRuleargument_StartIndex = input.index();
        EObject iv_ruleargument = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 155) ) { return current; }
            // InternalSpellGrammar.g:7282:2: (iv_ruleargument= ruleargument EOF )
            // InternalSpellGrammar.g:7283:2: iv_ruleargument= ruleargument EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getArgumentRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleargument=ruleargument();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleargument; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 155, entryRuleargument_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleargument"


    // $ANTLR start "ruleargument"
    // InternalSpellGrammar.g:7290:1: ruleargument returns [EObject current=null] : (this_test_0= ruletest ( ( () ( (lv_comp_for_2_0= rulecomp_for ) ) ) | ( () otherlv_4= '=' ( (lv_test2_5_0= ruletest ) ) ) )? ) ;
    public final EObject ruleargument() throws RecognitionException {
        EObject current = null;
        int ruleargument_StartIndex = input.index();
        Token otherlv_4=null;
        EObject this_test_0 = null;

        EObject lv_comp_for_2_0 = null;

        EObject lv_test2_5_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 156) ) { return current; }
            // InternalSpellGrammar.g:7293:28: ( (this_test_0= ruletest ( ( () ( (lv_comp_for_2_0= rulecomp_for ) ) ) | ( () otherlv_4= '=' ( (lv_test2_5_0= ruletest ) ) ) )? ) )
            // InternalSpellGrammar.g:7294:1: (this_test_0= ruletest ( ( () ( (lv_comp_for_2_0= rulecomp_for ) ) ) | ( () otherlv_4= '=' ( (lv_test2_5_0= ruletest ) ) ) )? )
            {
            // InternalSpellGrammar.g:7294:1: (this_test_0= ruletest ( ( () ( (lv_comp_for_2_0= rulecomp_for ) ) ) | ( () otherlv_4= '=' ( (lv_test2_5_0= ruletest ) ) ) )? )
            // InternalSpellGrammar.g:7295:2: this_test_0= ruletest ( ( () ( (lv_comp_for_2_0= rulecomp_for ) ) ) | ( () otherlv_4= '=' ( (lv_test2_5_0= ruletest ) ) ) )?
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getArgumentAccess().getTestParserRuleCall_0()); 
                  
            }
            pushFollow(FollowSets000.FOLLOW_87);
            this_test_0=ruletest();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                      current = this_test_0; 
                      afterParserOrEnumRuleCall();
                  
            }
            // InternalSpellGrammar.g:7306:1: ( ( () ( (lv_comp_for_2_0= rulecomp_for ) ) ) | ( () otherlv_4= '=' ( (lv_test2_5_0= ruletest ) ) ) )?
            int alt160=3;
            int LA160_0 = input.LA(1);

            if ( (LA160_0==58) ) {
                alt160=1;
            }
            else if ( (LA160_0==24) ) {
                alt160=2;
            }
            switch (alt160) {
                case 1 :
                    // InternalSpellGrammar.g:7306:2: ( () ( (lv_comp_for_2_0= rulecomp_for ) ) )
                    {
                    // InternalSpellGrammar.g:7306:2: ( () ( (lv_comp_for_2_0= rulecomp_for ) ) )
                    // InternalSpellGrammar.g:7306:3: () ( (lv_comp_for_2_0= rulecomp_for ) )
                    {
                    // InternalSpellGrammar.g:7306:3: ()
                    // InternalSpellGrammar.g:7307:2: 
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getArgumentAccess().getArgumentTestAction_1_0_0(),
                                  current);
                          
                    }

                    }

                    // InternalSpellGrammar.g:7315:2: ( (lv_comp_for_2_0= rulecomp_for ) )
                    // InternalSpellGrammar.g:7316:1: (lv_comp_for_2_0= rulecomp_for )
                    {
                    // InternalSpellGrammar.g:7316:1: (lv_comp_for_2_0= rulecomp_for )
                    // InternalSpellGrammar.g:7317:3: lv_comp_for_2_0= rulecomp_for
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getArgumentAccess().getComp_forComp_forParserRuleCall_1_0_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_comp_for_2_0=rulecomp_for();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getArgumentRule());
                      	        }
                             		set(
                             			current, 
                             			"comp_for",
                              		lv_comp_for_2_0, 
                              		"lu.ses.engineering.spell.controlflow.SpellGrammar.comp_for");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSpellGrammar.g:7334:6: ( () otherlv_4= '=' ( (lv_test2_5_0= ruletest ) ) )
                    {
                    // InternalSpellGrammar.g:7334:6: ( () otherlv_4= '=' ( (lv_test2_5_0= ruletest ) ) )
                    // InternalSpellGrammar.g:7334:7: () otherlv_4= '=' ( (lv_test2_5_0= ruletest ) )
                    {
                    // InternalSpellGrammar.g:7334:7: ()
                    // InternalSpellGrammar.g:7335:2: 
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getArgumentAccess().getArgumentTestAction_1_1_0(),
                                  current);
                          
                    }

                    }

                    otherlv_4=(Token)match(input,24,FollowSets000.FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getArgumentAccess().getEqualsSignKeyword_1_1_1());
                          
                    }
                    // InternalSpellGrammar.g:7347:1: ( (lv_test2_5_0= ruletest ) )
                    // InternalSpellGrammar.g:7348:1: (lv_test2_5_0= ruletest )
                    {
                    // InternalSpellGrammar.g:7348:1: (lv_test2_5_0= ruletest )
                    // InternalSpellGrammar.g:7349:3: lv_test2_5_0= ruletest
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getArgumentAccess().getTest2TestParserRuleCall_1_1_2_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_test2_5_0=ruletest();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getArgumentRule());
                      	        }
                             		set(
                             			current, 
                             			"test2",
                              		lv_test2_5_0, 
                              		"lu.ses.engineering.spell.controlflow.SpellGrammar.test");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 156, ruleargument_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleargument"


    // $ANTLR start "entryRulelist_iter"
    // InternalSpellGrammar.g:7373:1: entryRulelist_iter returns [EObject current=null] : iv_rulelist_iter= rulelist_iter EOF ;
    public final EObject entryRulelist_iter() throws RecognitionException {
        EObject current = null;
        int entryRulelist_iter_StartIndex = input.index();
        EObject iv_rulelist_iter = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 157) ) { return current; }
            // InternalSpellGrammar.g:7374:2: (iv_rulelist_iter= rulelist_iter EOF )
            // InternalSpellGrammar.g:7375:2: iv_rulelist_iter= rulelist_iter EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getList_iterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulelist_iter=rulelist_iter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulelist_iter; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 157, entryRulelist_iter_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRulelist_iter"


    // $ANTLR start "rulelist_iter"
    // InternalSpellGrammar.g:7382:1: rulelist_iter returns [EObject current=null] : (this_list_for_0= rulelist_for | this_list_if_1= rulelist_if ) ;
    public final EObject rulelist_iter() throws RecognitionException {
        EObject current = null;
        int rulelist_iter_StartIndex = input.index();
        EObject this_list_for_0 = null;

        EObject this_list_if_1 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 158) ) { return current; }
            // InternalSpellGrammar.g:7385:28: ( (this_list_for_0= rulelist_for | this_list_if_1= rulelist_if ) )
            // InternalSpellGrammar.g:7386:1: (this_list_for_0= rulelist_for | this_list_if_1= rulelist_if )
            {
            // InternalSpellGrammar.g:7386:1: (this_list_for_0= rulelist_for | this_list_if_1= rulelist_if )
            int alt161=2;
            int LA161_0 = input.LA(1);

            if ( (LA161_0==58) ) {
                alt161=1;
            }
            else if ( (LA161_0==55) ) {
                alt161=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 161, 0, input);

                throw nvae;
            }
            switch (alt161) {
                case 1 :
                    // InternalSpellGrammar.g:7387:2: this_list_for_0= rulelist_for
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getList_iterAccess().getList_forParserRuleCall_0()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_list_for_0=rulelist_for();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_list_for_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalSpellGrammar.g:7400:2: this_list_if_1= rulelist_if
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getList_iterAccess().getList_ifParserRuleCall_1()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_list_if_1=rulelist_if();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_list_if_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 158, rulelist_iter_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "rulelist_iter"


    // $ANTLR start "entryRulelist_for"
    // InternalSpellGrammar.g:7419:1: entryRulelist_for returns [EObject current=null] : iv_rulelist_for= rulelist_for EOF ;
    public final EObject entryRulelist_for() throws RecognitionException {
        EObject current = null;
        int entryRulelist_for_StartIndex = input.index();
        EObject iv_rulelist_for = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 159) ) { return current; }
            // InternalSpellGrammar.g:7420:2: (iv_rulelist_for= rulelist_for EOF )
            // InternalSpellGrammar.g:7421:2: iv_rulelist_for= rulelist_for EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getList_forRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulelist_for=rulelist_for();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulelist_for; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 159, entryRulelist_for_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRulelist_for"


    // $ANTLR start "rulelist_for"
    // InternalSpellGrammar.g:7428:1: rulelist_for returns [EObject current=null] : (otherlv_0= 'for' ( (lv_exprlist_1_0= ruleexprlist ) ) otherlv_2= 'in' ( (lv_testlist_safe_3_0= ruletestlist_safe ) ) ( (lv_list_iter_4_0= rulelist_iter ) )? ) ;
    public final EObject rulelist_for() throws RecognitionException {
        EObject current = null;
        int rulelist_for_StartIndex = input.index();
        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject lv_exprlist_1_0 = null;

        EObject lv_testlist_safe_3_0 = null;

        EObject lv_list_iter_4_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 160) ) { return current; }
            // InternalSpellGrammar.g:7431:28: ( (otherlv_0= 'for' ( (lv_exprlist_1_0= ruleexprlist ) ) otherlv_2= 'in' ( (lv_testlist_safe_3_0= ruletestlist_safe ) ) ( (lv_list_iter_4_0= rulelist_iter ) )? ) )
            // InternalSpellGrammar.g:7432:1: (otherlv_0= 'for' ( (lv_exprlist_1_0= ruleexprlist ) ) otherlv_2= 'in' ( (lv_testlist_safe_3_0= ruletestlist_safe ) ) ( (lv_list_iter_4_0= rulelist_iter ) )? )
            {
            // InternalSpellGrammar.g:7432:1: (otherlv_0= 'for' ( (lv_exprlist_1_0= ruleexprlist ) ) otherlv_2= 'in' ( (lv_testlist_safe_3_0= ruletestlist_safe ) ) ( (lv_list_iter_4_0= rulelist_iter ) )? )
            // InternalSpellGrammar.g:7432:3: otherlv_0= 'for' ( (lv_exprlist_1_0= ruleexprlist ) ) otherlv_2= 'in' ( (lv_testlist_safe_3_0= ruletestlist_safe ) ) ( (lv_list_iter_4_0= rulelist_iter ) )?
            {
            otherlv_0=(Token)match(input,58,FollowSets000.FOLLOW_28); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getList_forAccess().getForKeyword_0());
                  
            }
            // InternalSpellGrammar.g:7436:1: ( (lv_exprlist_1_0= ruleexprlist ) )
            // InternalSpellGrammar.g:7437:1: (lv_exprlist_1_0= ruleexprlist )
            {
            // InternalSpellGrammar.g:7437:1: (lv_exprlist_1_0= ruleexprlist )
            // InternalSpellGrammar.g:7438:3: lv_exprlist_1_0= ruleexprlist
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getList_forAccess().getExprlistExprlistParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_41);
            lv_exprlist_1_0=ruleexprlist();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getList_forRule());
              	        }
                     		set(
                     			current, 
                     			"exprlist",
                      		lv_exprlist_1_0, 
                      		"lu.ses.engineering.spell.controlflow.SpellGrammar.exprlist");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_2=(Token)match(input,52,FollowSets000.FOLLOW_16); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getList_forAccess().getInKeyword_2());
                  
            }
            // InternalSpellGrammar.g:7458:1: ( (lv_testlist_safe_3_0= ruletestlist_safe ) )
            // InternalSpellGrammar.g:7459:1: (lv_testlist_safe_3_0= ruletestlist_safe )
            {
            // InternalSpellGrammar.g:7459:1: (lv_testlist_safe_3_0= ruletestlist_safe )
            // InternalSpellGrammar.g:7460:3: lv_testlist_safe_3_0= ruletestlist_safe
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getList_forAccess().getTestlist_safeTestlist_safeParserRuleCall_3_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_88);
            lv_testlist_safe_3_0=ruletestlist_safe();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getList_forRule());
              	        }
                     		set(
                     			current, 
                     			"testlist_safe",
                      		lv_testlist_safe_3_0, 
                      		"lu.ses.engineering.spell.controlflow.SpellGrammar.testlist_safe");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSpellGrammar.g:7476:2: ( (lv_list_iter_4_0= rulelist_iter ) )?
            int alt162=2;
            int LA162_0 = input.LA(1);

            if ( (LA162_0==55||LA162_0==58) ) {
                alt162=1;
            }
            switch (alt162) {
                case 1 :
                    // InternalSpellGrammar.g:7477:1: (lv_list_iter_4_0= rulelist_iter )
                    {
                    // InternalSpellGrammar.g:7477:1: (lv_list_iter_4_0= rulelist_iter )
                    // InternalSpellGrammar.g:7478:3: lv_list_iter_4_0= rulelist_iter
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getList_forAccess().getList_iterList_iterParserRuleCall_4_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_list_iter_4_0=rulelist_iter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getList_forRule());
                      	        }
                             		set(
                             			current, 
                             			"list_iter",
                              		lv_list_iter_4_0, 
                              		"lu.ses.engineering.spell.controlflow.SpellGrammar.list_iter");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 160, rulelist_for_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "rulelist_for"


    // $ANTLR start "entryRulelist_if"
    // InternalSpellGrammar.g:7502:1: entryRulelist_if returns [EObject current=null] : iv_rulelist_if= rulelist_if EOF ;
    public final EObject entryRulelist_if() throws RecognitionException {
        EObject current = null;
        int entryRulelist_if_StartIndex = input.index();
        EObject iv_rulelist_if = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 161) ) { return current; }
            // InternalSpellGrammar.g:7503:2: (iv_rulelist_if= rulelist_if EOF )
            // InternalSpellGrammar.g:7504:2: iv_rulelist_if= rulelist_if EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getList_ifRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulelist_if=rulelist_if();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulelist_if; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 161, entryRulelist_if_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRulelist_if"


    // $ANTLR start "rulelist_if"
    // InternalSpellGrammar.g:7511:1: rulelist_if returns [EObject current=null] : (otherlv_0= 'if' ( (lv_old_test_1_0= ruletest ) ) ( (lv_list_iter_2_0= rulelist_iter ) )? ) ;
    public final EObject rulelist_if() throws RecognitionException {
        EObject current = null;
        int rulelist_if_StartIndex = input.index();
        Token otherlv_0=null;
        EObject lv_old_test_1_0 = null;

        EObject lv_list_iter_2_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 162) ) { return current; }
            // InternalSpellGrammar.g:7514:28: ( (otherlv_0= 'if' ( (lv_old_test_1_0= ruletest ) ) ( (lv_list_iter_2_0= rulelist_iter ) )? ) )
            // InternalSpellGrammar.g:7515:1: (otherlv_0= 'if' ( (lv_old_test_1_0= ruletest ) ) ( (lv_list_iter_2_0= rulelist_iter ) )? )
            {
            // InternalSpellGrammar.g:7515:1: (otherlv_0= 'if' ( (lv_old_test_1_0= ruletest ) ) ( (lv_list_iter_2_0= rulelist_iter ) )? )
            // InternalSpellGrammar.g:7515:3: otherlv_0= 'if' ( (lv_old_test_1_0= ruletest ) ) ( (lv_list_iter_2_0= rulelist_iter ) )?
            {
            otherlv_0=(Token)match(input,55,FollowSets000.FOLLOW_16); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getList_ifAccess().getIfKeyword_0());
                  
            }
            // InternalSpellGrammar.g:7519:1: ( (lv_old_test_1_0= ruletest ) )
            // InternalSpellGrammar.g:7520:1: (lv_old_test_1_0= ruletest )
            {
            // InternalSpellGrammar.g:7520:1: (lv_old_test_1_0= ruletest )
            // InternalSpellGrammar.g:7521:3: lv_old_test_1_0= ruletest
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getList_ifAccess().getOld_testTestParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_88);
            lv_old_test_1_0=ruletest();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getList_ifRule());
              	        }
                     		set(
                     			current, 
                     			"old_test",
                      		lv_old_test_1_0, 
                      		"lu.ses.engineering.spell.controlflow.SpellGrammar.test");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSpellGrammar.g:7537:2: ( (lv_list_iter_2_0= rulelist_iter ) )?
            int alt163=2;
            int LA163_0 = input.LA(1);

            if ( (LA163_0==55||LA163_0==58) ) {
                alt163=1;
            }
            switch (alt163) {
                case 1 :
                    // InternalSpellGrammar.g:7538:1: (lv_list_iter_2_0= rulelist_iter )
                    {
                    // InternalSpellGrammar.g:7538:1: (lv_list_iter_2_0= rulelist_iter )
                    // InternalSpellGrammar.g:7539:3: lv_list_iter_2_0= rulelist_iter
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getList_ifAccess().getList_iterList_iterParserRuleCall_2_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_list_iter_2_0=rulelist_iter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getList_ifRule());
                      	        }
                             		set(
                             			current, 
                             			"list_iter",
                              		lv_list_iter_2_0, 
                              		"lu.ses.engineering.spell.controlflow.SpellGrammar.list_iter");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 162, rulelist_if_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "rulelist_if"


    // $ANTLR start "entryRulecomp_iter"
    // InternalSpellGrammar.g:7563:1: entryRulecomp_iter returns [EObject current=null] : iv_rulecomp_iter= rulecomp_iter EOF ;
    public final EObject entryRulecomp_iter() throws RecognitionException {
        EObject current = null;
        int entryRulecomp_iter_StartIndex = input.index();
        EObject iv_rulecomp_iter = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 163) ) { return current; }
            // InternalSpellGrammar.g:7564:2: (iv_rulecomp_iter= rulecomp_iter EOF )
            // InternalSpellGrammar.g:7565:2: iv_rulecomp_iter= rulecomp_iter EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getComp_iterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulecomp_iter=rulecomp_iter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulecomp_iter; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 163, entryRulecomp_iter_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRulecomp_iter"


    // $ANTLR start "rulecomp_iter"
    // InternalSpellGrammar.g:7572:1: rulecomp_iter returns [EObject current=null] : (this_comp_for_0= rulecomp_for | this_comp_if_1= rulecomp_if ) ;
    public final EObject rulecomp_iter() throws RecognitionException {
        EObject current = null;
        int rulecomp_iter_StartIndex = input.index();
        EObject this_comp_for_0 = null;

        EObject this_comp_if_1 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 164) ) { return current; }
            // InternalSpellGrammar.g:7575:28: ( (this_comp_for_0= rulecomp_for | this_comp_if_1= rulecomp_if ) )
            // InternalSpellGrammar.g:7576:1: (this_comp_for_0= rulecomp_for | this_comp_if_1= rulecomp_if )
            {
            // InternalSpellGrammar.g:7576:1: (this_comp_for_0= rulecomp_for | this_comp_if_1= rulecomp_if )
            int alt164=2;
            int LA164_0 = input.LA(1);

            if ( (LA164_0==58) ) {
                alt164=1;
            }
            else if ( (LA164_0==55) ) {
                alt164=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 164, 0, input);

                throw nvae;
            }
            switch (alt164) {
                case 1 :
                    // InternalSpellGrammar.g:7577:2: this_comp_for_0= rulecomp_for
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getComp_iterAccess().getComp_forParserRuleCall_0()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_comp_for_0=rulecomp_for();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_comp_for_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalSpellGrammar.g:7590:2: this_comp_if_1= rulecomp_if
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getComp_iterAccess().getComp_ifParserRuleCall_1()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_comp_if_1=rulecomp_if();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_comp_if_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 164, rulecomp_iter_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "rulecomp_iter"


    // $ANTLR start "entryRulecomp_for"
    // InternalSpellGrammar.g:7609:1: entryRulecomp_for returns [EObject current=null] : iv_rulecomp_for= rulecomp_for EOF ;
    public final EObject entryRulecomp_for() throws RecognitionException {
        EObject current = null;
        int entryRulecomp_for_StartIndex = input.index();
        EObject iv_rulecomp_for = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 165) ) { return current; }
            // InternalSpellGrammar.g:7610:2: (iv_rulecomp_for= rulecomp_for EOF )
            // InternalSpellGrammar.g:7611:2: iv_rulecomp_for= rulecomp_for EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getComp_forRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulecomp_for=rulecomp_for();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulecomp_for; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 165, entryRulecomp_for_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRulecomp_for"


    // $ANTLR start "rulecomp_for"
    // InternalSpellGrammar.g:7618:1: rulecomp_for returns [EObject current=null] : (otherlv_0= 'for' ( (lv_exprlist_1_0= ruleexprlist ) ) otherlv_2= 'in' ( (lv_or_test_3_0= ruleor_test ) ) ( (lv_comp_iter_4_0= rulecomp_iter ) )? ) ;
    public final EObject rulecomp_for() throws RecognitionException {
        EObject current = null;
        int rulecomp_for_StartIndex = input.index();
        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject lv_exprlist_1_0 = null;

        EObject lv_or_test_3_0 = null;

        EObject lv_comp_iter_4_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 166) ) { return current; }
            // InternalSpellGrammar.g:7621:28: ( (otherlv_0= 'for' ( (lv_exprlist_1_0= ruleexprlist ) ) otherlv_2= 'in' ( (lv_or_test_3_0= ruleor_test ) ) ( (lv_comp_iter_4_0= rulecomp_iter ) )? ) )
            // InternalSpellGrammar.g:7622:1: (otherlv_0= 'for' ( (lv_exprlist_1_0= ruleexprlist ) ) otherlv_2= 'in' ( (lv_or_test_3_0= ruleor_test ) ) ( (lv_comp_iter_4_0= rulecomp_iter ) )? )
            {
            // InternalSpellGrammar.g:7622:1: (otherlv_0= 'for' ( (lv_exprlist_1_0= ruleexprlist ) ) otherlv_2= 'in' ( (lv_or_test_3_0= ruleor_test ) ) ( (lv_comp_iter_4_0= rulecomp_iter ) )? )
            // InternalSpellGrammar.g:7622:3: otherlv_0= 'for' ( (lv_exprlist_1_0= ruleexprlist ) ) otherlv_2= 'in' ( (lv_or_test_3_0= ruleor_test ) ) ( (lv_comp_iter_4_0= rulecomp_iter ) )?
            {
            otherlv_0=(Token)match(input,58,FollowSets000.FOLLOW_28); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getComp_forAccess().getForKeyword_0());
                  
            }
            // InternalSpellGrammar.g:7626:1: ( (lv_exprlist_1_0= ruleexprlist ) )
            // InternalSpellGrammar.g:7627:1: (lv_exprlist_1_0= ruleexprlist )
            {
            // InternalSpellGrammar.g:7627:1: (lv_exprlist_1_0= ruleexprlist )
            // InternalSpellGrammar.g:7628:3: lv_exprlist_1_0= ruleexprlist
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getComp_forAccess().getExprlistExprlistParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_41);
            lv_exprlist_1_0=ruleexprlist();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getComp_forRule());
              	        }
                     		set(
                     			current, 
                     			"exprlist",
                      		lv_exprlist_1_0, 
                      		"lu.ses.engineering.spell.controlflow.SpellGrammar.exprlist");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_2=(Token)match(input,52,FollowSets000.FOLLOW_28); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getComp_forAccess().getInKeyword_2());
                  
            }
            // InternalSpellGrammar.g:7648:1: ( (lv_or_test_3_0= ruleor_test ) )
            // InternalSpellGrammar.g:7649:1: (lv_or_test_3_0= ruleor_test )
            {
            // InternalSpellGrammar.g:7649:1: (lv_or_test_3_0= ruleor_test )
            // InternalSpellGrammar.g:7650:3: lv_or_test_3_0= ruleor_test
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getComp_forAccess().getOr_testOr_testParserRuleCall_3_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_88);
            lv_or_test_3_0=ruleor_test();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getComp_forRule());
              	        }
                     		set(
                     			current, 
                     			"or_test",
                      		lv_or_test_3_0, 
                      		"lu.ses.engineering.spell.controlflow.SpellGrammar.or_test");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSpellGrammar.g:7666:2: ( (lv_comp_iter_4_0= rulecomp_iter ) )?
            int alt165=2;
            int LA165_0 = input.LA(1);

            if ( (LA165_0==55||LA165_0==58) ) {
                alt165=1;
            }
            switch (alt165) {
                case 1 :
                    // InternalSpellGrammar.g:7667:1: (lv_comp_iter_4_0= rulecomp_iter )
                    {
                    // InternalSpellGrammar.g:7667:1: (lv_comp_iter_4_0= rulecomp_iter )
                    // InternalSpellGrammar.g:7668:3: lv_comp_iter_4_0= rulecomp_iter
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getComp_forAccess().getComp_iterComp_iterParserRuleCall_4_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_comp_iter_4_0=rulecomp_iter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getComp_forRule());
                      	        }
                             		set(
                             			current, 
                             			"comp_iter",
                              		lv_comp_iter_4_0, 
                              		"lu.ses.engineering.spell.controlflow.SpellGrammar.comp_iter");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 166, rulecomp_for_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "rulecomp_for"


    // $ANTLR start "entryRulecomp_if"
    // InternalSpellGrammar.g:7692:1: entryRulecomp_if returns [EObject current=null] : iv_rulecomp_if= rulecomp_if EOF ;
    public final EObject entryRulecomp_if() throws RecognitionException {
        EObject current = null;
        int entryRulecomp_if_StartIndex = input.index();
        EObject iv_rulecomp_if = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 167) ) { return current; }
            // InternalSpellGrammar.g:7693:2: (iv_rulecomp_if= rulecomp_if EOF )
            // InternalSpellGrammar.g:7694:2: iv_rulecomp_if= rulecomp_if EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getComp_ifRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulecomp_if=rulecomp_if();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulecomp_if; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 167, entryRulecomp_if_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRulecomp_if"


    // $ANTLR start "rulecomp_if"
    // InternalSpellGrammar.g:7701:1: rulecomp_if returns [EObject current=null] : (otherlv_0= 'if' ( (lv_test_1_0= ruletest ) ) ( (lv_comp_iter_2_0= rulecomp_iter ) )? ) ;
    public final EObject rulecomp_if() throws RecognitionException {
        EObject current = null;
        int rulecomp_if_StartIndex = input.index();
        Token otherlv_0=null;
        EObject lv_test_1_0 = null;

        EObject lv_comp_iter_2_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 168) ) { return current; }
            // InternalSpellGrammar.g:7704:28: ( (otherlv_0= 'if' ( (lv_test_1_0= ruletest ) ) ( (lv_comp_iter_2_0= rulecomp_iter ) )? ) )
            // InternalSpellGrammar.g:7705:1: (otherlv_0= 'if' ( (lv_test_1_0= ruletest ) ) ( (lv_comp_iter_2_0= rulecomp_iter ) )? )
            {
            // InternalSpellGrammar.g:7705:1: (otherlv_0= 'if' ( (lv_test_1_0= ruletest ) ) ( (lv_comp_iter_2_0= rulecomp_iter ) )? )
            // InternalSpellGrammar.g:7705:3: otherlv_0= 'if' ( (lv_test_1_0= ruletest ) ) ( (lv_comp_iter_2_0= rulecomp_iter ) )?
            {
            otherlv_0=(Token)match(input,55,FollowSets000.FOLLOW_16); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getComp_ifAccess().getIfKeyword_0());
                  
            }
            // InternalSpellGrammar.g:7709:1: ( (lv_test_1_0= ruletest ) )
            // InternalSpellGrammar.g:7710:1: (lv_test_1_0= ruletest )
            {
            // InternalSpellGrammar.g:7710:1: (lv_test_1_0= ruletest )
            // InternalSpellGrammar.g:7711:3: lv_test_1_0= ruletest
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getComp_ifAccess().getTestTestParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_88);
            lv_test_1_0=ruletest();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getComp_ifRule());
              	        }
                     		set(
                     			current, 
                     			"test",
                      		lv_test_1_0, 
                      		"lu.ses.engineering.spell.controlflow.SpellGrammar.test");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSpellGrammar.g:7727:2: ( (lv_comp_iter_2_0= rulecomp_iter ) )?
            int alt166=2;
            int LA166_0 = input.LA(1);

            if ( (LA166_0==55||LA166_0==58) ) {
                alt166=1;
            }
            switch (alt166) {
                case 1 :
                    // InternalSpellGrammar.g:7728:1: (lv_comp_iter_2_0= rulecomp_iter )
                    {
                    // InternalSpellGrammar.g:7728:1: (lv_comp_iter_2_0= rulecomp_iter )
                    // InternalSpellGrammar.g:7729:3: lv_comp_iter_2_0= rulecomp_iter
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getComp_ifAccess().getComp_iterComp_iterParserRuleCall_2_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_comp_iter_2_0=rulecomp_iter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getComp_ifRule());
                      	        }
                             		set(
                             			current, 
                             			"comp_iter",
                              		lv_comp_iter_2_0, 
                              		"lu.ses.engineering.spell.controlflow.SpellGrammar.comp_iter");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 168, rulecomp_if_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "rulecomp_if"


    // $ANTLR start "entryRuletestlist1"
    // InternalSpellGrammar.g:7753:1: entryRuletestlist1 returns [EObject current=null] : iv_ruletestlist1= ruletestlist1 EOF ;
    public final EObject entryRuletestlist1() throws RecognitionException {
        EObject current = null;
        int entryRuletestlist1_StartIndex = input.index();
        EObject iv_ruletestlist1 = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 169) ) { return current; }
            // InternalSpellGrammar.g:7754:2: (iv_ruletestlist1= ruletestlist1 EOF )
            // InternalSpellGrammar.g:7755:2: iv_ruletestlist1= ruletestlist1 EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTestlist1Rule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruletestlist1=ruletestlist1();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruletestlist1; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 169, entryRuletestlist1_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuletestlist1"


    // $ANTLR start "ruletestlist1"
    // InternalSpellGrammar.g:7762:1: ruletestlist1 returns [EObject current=null] : ( () ( (lv_tests_1_0= ruletest ) ) (otherlv_2= ',' ( (lv_tests_3_0= ruletest ) ) )* ) ;
    public final EObject ruletestlist1() throws RecognitionException {
        EObject current = null;
        int ruletestlist1_StartIndex = input.index();
        Token otherlv_2=null;
        EObject lv_tests_1_0 = null;

        EObject lv_tests_3_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 170) ) { return current; }
            // InternalSpellGrammar.g:7765:28: ( ( () ( (lv_tests_1_0= ruletest ) ) (otherlv_2= ',' ( (lv_tests_3_0= ruletest ) ) )* ) )
            // InternalSpellGrammar.g:7766:1: ( () ( (lv_tests_1_0= ruletest ) ) (otherlv_2= ',' ( (lv_tests_3_0= ruletest ) ) )* )
            {
            // InternalSpellGrammar.g:7766:1: ( () ( (lv_tests_1_0= ruletest ) ) (otherlv_2= ',' ( (lv_tests_3_0= ruletest ) ) )* )
            // InternalSpellGrammar.g:7766:2: () ( (lv_tests_1_0= ruletest ) ) (otherlv_2= ',' ( (lv_tests_3_0= ruletest ) ) )*
            {
            // InternalSpellGrammar.g:7766:2: ()
            // InternalSpellGrammar.g:7767:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getTestlist1Access().getTestlist1Action_0(),
                          current);
                  
            }

            }

            // InternalSpellGrammar.g:7775:2: ( (lv_tests_1_0= ruletest ) )
            // InternalSpellGrammar.g:7776:1: (lv_tests_1_0= ruletest )
            {
            // InternalSpellGrammar.g:7776:1: (lv_tests_1_0= ruletest )
            // InternalSpellGrammar.g:7777:3: lv_tests_1_0= ruletest
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getTestlist1Access().getTestsTestParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_19);
            lv_tests_1_0=ruletest();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTestlist1Rule());
              	        }
                     		add(
                     			current, 
                     			"tests",
                      		lv_tests_1_0, 
                      		"lu.ses.engineering.spell.controlflow.SpellGrammar.test");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalSpellGrammar.g:7793:2: (otherlv_2= ',' ( (lv_tests_3_0= ruletest ) ) )*
            loop167:
            do {
                int alt167=2;
                int LA167_0 = input.LA(1);

                if ( (LA167_0==23) ) {
                    alt167=1;
                }


                switch (alt167) {
            	case 1 :
            	    // InternalSpellGrammar.g:7793:4: otherlv_2= ',' ( (lv_tests_3_0= ruletest ) )
            	    {
            	    otherlv_2=(Token)match(input,23,FollowSets000.FOLLOW_16); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_2, grammarAccess.getTestlist1Access().getCommaKeyword_2_0());
            	          
            	    }
            	    // InternalSpellGrammar.g:7797:1: ( (lv_tests_3_0= ruletest ) )
            	    // InternalSpellGrammar.g:7798:1: (lv_tests_3_0= ruletest )
            	    {
            	    // InternalSpellGrammar.g:7798:1: (lv_tests_3_0= ruletest )
            	    // InternalSpellGrammar.g:7799:3: lv_tests_3_0= ruletest
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getTestlist1Access().getTestsTestParserRuleCall_2_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_19);
            	    lv_tests_3_0=ruletest();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getTestlist1Rule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"tests",
            	              		lv_tests_3_0, 
            	              		"lu.ses.engineering.spell.controlflow.SpellGrammar.test");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop167;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 170, ruletestlist1_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruletestlist1"


    // $ANTLR start "entryRuleyield_expr"
    // InternalSpellGrammar.g:7823:1: entryRuleyield_expr returns [EObject current=null] : iv_ruleyield_expr= ruleyield_expr EOF ;
    public final EObject entryRuleyield_expr() throws RecognitionException {
        EObject current = null;
        int entryRuleyield_expr_StartIndex = input.index();
        EObject iv_ruleyield_expr = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 171) ) { return current; }
            // InternalSpellGrammar.g:7824:2: (iv_ruleyield_expr= ruleyield_expr EOF )
            // InternalSpellGrammar.g:7825:2: iv_ruleyield_expr= ruleyield_expr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getYield_exprRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleyield_expr=ruleyield_expr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleyield_expr; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 171, entryRuleyield_expr_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleyield_expr"


    // $ANTLR start "ruleyield_expr"
    // InternalSpellGrammar.g:7832:1: ruleyield_expr returns [EObject current=null] : ( () otherlv_1= 'yield' ( (lv_testlist_2_0= ruletestlist ) )? ) ;
    public final EObject ruleyield_expr() throws RecognitionException {
        EObject current = null;
        int ruleyield_expr_StartIndex = input.index();
        Token otherlv_1=null;
        EObject lv_testlist_2_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 172) ) { return current; }
            // InternalSpellGrammar.g:7835:28: ( ( () otherlv_1= 'yield' ( (lv_testlist_2_0= ruletestlist ) )? ) )
            // InternalSpellGrammar.g:7836:1: ( () otherlv_1= 'yield' ( (lv_testlist_2_0= ruletestlist ) )? )
            {
            // InternalSpellGrammar.g:7836:1: ( () otherlv_1= 'yield' ( (lv_testlist_2_0= ruletestlist ) )? )
            // InternalSpellGrammar.g:7836:2: () otherlv_1= 'yield' ( (lv_testlist_2_0= ruletestlist ) )?
            {
            // InternalSpellGrammar.g:7836:2: ()
            // InternalSpellGrammar.g:7837:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getYield_exprAccess().getYield_exprAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,103,FollowSets000.FOLLOW_29); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getYield_exprAccess().getYieldKeyword_1());
                  
            }
            // InternalSpellGrammar.g:7849:1: ( (lv_testlist_2_0= ruletestlist ) )?
            int alt168=2;
            alt168 = dfa168.predict(input);
            switch (alt168) {
                case 1 :
                    // InternalSpellGrammar.g:7850:1: (lv_testlist_2_0= ruletestlist )
                    {
                    // InternalSpellGrammar.g:7850:1: (lv_testlist_2_0= ruletestlist )
                    // InternalSpellGrammar.g:7851:3: lv_testlist_2_0= ruletestlist
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getYield_exprAccess().getTestlistTestlistParserRuleCall_2_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_testlist_2_0=ruletestlist();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getYield_exprRule());
                      	        }
                             		set(
                             			current, 
                             			"testlist",
                              		lv_testlist_2_0, 
                              		"lu.ses.engineering.spell.controlflow.SpellGrammar.testlist");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 172, ruleyield_expr_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleyield_expr"


    // $ANTLR start "entryRulePython_Statement"
    // InternalSpellGrammar.g:7875:1: entryRulePython_Statement returns [String current=null] : iv_rulePython_Statement= rulePython_Statement EOF ;
    public final String entryRulePython_Statement() throws RecognitionException {
        String current = null;
        int entryRulePython_Statement_StartIndex = input.index();
        AntlrDatatypeRuleToken iv_rulePython_Statement = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 173) ) { return current; }
            // InternalSpellGrammar.g:7876:2: (iv_rulePython_Statement= rulePython_Statement EOF )
            // InternalSpellGrammar.g:7877:2: iv_rulePython_Statement= rulePython_Statement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPython_StatementRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePython_Statement=rulePython_Statement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePython_Statement.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 173, entryRulePython_Statement_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRulePython_Statement"


    // $ANTLR start "rulePython_Statement"
    // InternalSpellGrammar.g:7884:1: rulePython_Statement returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'Step' | kw= 'ShowTM' | kw= 'Verify' | kw= 'Send' | kw= 'GetTM' | kw= 'Goto' | kw= 'SetLimits' | kw= 'GetLimits' | kw= 'BuildTC' | kw= 'DisplayStep' | kw= 'WaitFor' | this_NAME_TERMINAL_11= RULE_NAME_TERMINAL ) ;
    public final AntlrDatatypeRuleToken rulePython_Statement() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();
        int rulePython_Statement_StartIndex = input.index();
        Token kw=null;
        Token this_NAME_TERMINAL_11=null;

         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 174) ) { return current; }
            // InternalSpellGrammar.g:7887:28: ( (kw= 'Step' | kw= 'ShowTM' | kw= 'Verify' | kw= 'Send' | kw= 'GetTM' | kw= 'Goto' | kw= 'SetLimits' | kw= 'GetLimits' | kw= 'BuildTC' | kw= 'DisplayStep' | kw= 'WaitFor' | this_NAME_TERMINAL_11= RULE_NAME_TERMINAL ) )
            // InternalSpellGrammar.g:7888:1: (kw= 'Step' | kw= 'ShowTM' | kw= 'Verify' | kw= 'Send' | kw= 'GetTM' | kw= 'Goto' | kw= 'SetLimits' | kw= 'GetLimits' | kw= 'BuildTC' | kw= 'DisplayStep' | kw= 'WaitFor' | this_NAME_TERMINAL_11= RULE_NAME_TERMINAL )
            {
            // InternalSpellGrammar.g:7888:1: (kw= 'Step' | kw= 'ShowTM' | kw= 'Verify' | kw= 'Send' | kw= 'GetTM' | kw= 'Goto' | kw= 'SetLimits' | kw= 'GetLimits' | kw= 'BuildTC' | kw= 'DisplayStep' | kw= 'WaitFor' | this_NAME_TERMINAL_11= RULE_NAME_TERMINAL )
            int alt169=12;
            switch ( input.LA(1) ) {
            case 84:
                {
                alt169=1;
                }
                break;
            case 86:
                {
                alt169=2;
                }
                break;
            case 93:
                {
                alt169=3;
                }
                break;
            case 87:
                {
                alt169=4;
                }
                break;
            case 91:
                {
                alt169=5;
                }
                break;
            case 92:
                {
                alt169=6;
                }
                break;
            case 89:
                {
                alt169=7;
                }
                break;
            case 90:
                {
                alt169=8;
                }
                break;
            case 88:
                {
                alt169=9;
                }
                break;
            case 85:
                {
                alt169=10;
                }
                break;
            case 94:
                {
                alt169=11;
                }
                break;
            case RULE_NAME_TERMINAL:
                {
                alt169=12;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 169, 0, input);

                throw nvae;
            }

            switch (alt169) {
                case 1 :
                    // InternalSpellGrammar.g:7889:2: kw= 'Step'
                    {
                    kw=(Token)match(input,84,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getPython_StatementAccess().getStepKeyword_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalSpellGrammar.g:7896:2: kw= 'ShowTM'
                    {
                    kw=(Token)match(input,86,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getPython_StatementAccess().getShowTMKeyword_1()); 
                          
                    }

                    }
                    break;
                case 3 :
                    // InternalSpellGrammar.g:7903:2: kw= 'Verify'
                    {
                    kw=(Token)match(input,93,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getPython_StatementAccess().getVerifyKeyword_2()); 
                          
                    }

                    }
                    break;
                case 4 :
                    // InternalSpellGrammar.g:7910:2: kw= 'Send'
                    {
                    kw=(Token)match(input,87,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getPython_StatementAccess().getSendKeyword_3()); 
                          
                    }

                    }
                    break;
                case 5 :
                    // InternalSpellGrammar.g:7917:2: kw= 'GetTM'
                    {
                    kw=(Token)match(input,91,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getPython_StatementAccess().getGetTMKeyword_4()); 
                          
                    }

                    }
                    break;
                case 6 :
                    // InternalSpellGrammar.g:7924:2: kw= 'Goto'
                    {
                    kw=(Token)match(input,92,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getPython_StatementAccess().getGotoKeyword_5()); 
                          
                    }

                    }
                    break;
                case 7 :
                    // InternalSpellGrammar.g:7931:2: kw= 'SetLimits'
                    {
                    kw=(Token)match(input,89,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getPython_StatementAccess().getSetLimitsKeyword_6()); 
                          
                    }

                    }
                    break;
                case 8 :
                    // InternalSpellGrammar.g:7938:2: kw= 'GetLimits'
                    {
                    kw=(Token)match(input,90,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getPython_StatementAccess().getGetLimitsKeyword_7()); 
                          
                    }

                    }
                    break;
                case 9 :
                    // InternalSpellGrammar.g:7945:2: kw= 'BuildTC'
                    {
                    kw=(Token)match(input,88,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getPython_StatementAccess().getBuildTCKeyword_8()); 
                          
                    }

                    }
                    break;
                case 10 :
                    // InternalSpellGrammar.g:7952:2: kw= 'DisplayStep'
                    {
                    kw=(Token)match(input,85,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getPython_StatementAccess().getDisplayStepKeyword_9()); 
                          
                    }

                    }
                    break;
                case 11 :
                    // InternalSpellGrammar.g:7959:2: kw= 'WaitFor'
                    {
                    kw=(Token)match(input,94,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getPython_StatementAccess().getWaitForKeyword_10()); 
                          
                    }

                    }
                    break;
                case 12 :
                    // InternalSpellGrammar.g:7965:10: this_NAME_TERMINAL_11= RULE_NAME_TERMINAL
                    {
                    this_NAME_TERMINAL_11=(Token)match(input,RULE_NAME_TERMINAL,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_NAME_TERMINAL_11);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_NAME_TERMINAL_11, grammarAccess.getPython_StatementAccess().getNAME_TERMINALTerminalRuleCall_11()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 174, rulePython_Statement_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "rulePython_Statement"


    // $ANTLR start "entryRuleNumberWithPlusOrMinus"
    // InternalSpellGrammar.g:7980:1: entryRuleNumberWithPlusOrMinus returns [String current=null] : iv_ruleNumberWithPlusOrMinus= ruleNumberWithPlusOrMinus EOF ;
    public final String entryRuleNumberWithPlusOrMinus() throws RecognitionException {
        String current = null;
        int entryRuleNumberWithPlusOrMinus_StartIndex = input.index();
        AntlrDatatypeRuleToken iv_ruleNumberWithPlusOrMinus = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 175) ) { return current; }
            // InternalSpellGrammar.g:7981:2: (iv_ruleNumberWithPlusOrMinus= ruleNumberWithPlusOrMinus EOF )
            // InternalSpellGrammar.g:7982:2: iv_ruleNumberWithPlusOrMinus= ruleNumberWithPlusOrMinus EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNumberWithPlusOrMinusRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNumberWithPlusOrMinus=ruleNumberWithPlusOrMinus();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNumberWithPlusOrMinus.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 175, entryRuleNumberWithPlusOrMinus_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleNumberWithPlusOrMinus"


    // $ANTLR start "ruleNumberWithPlusOrMinus"
    // InternalSpellGrammar.g:7989:1: ruleNumberWithPlusOrMinus returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (kw= '+' | kw= '-' )? (kw= '.' )? this_NUMBER_3= RULE_NUMBER ) ;
    public final AntlrDatatypeRuleToken ruleNumberWithPlusOrMinus() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();
        int ruleNumberWithPlusOrMinus_StartIndex = input.index();
        Token kw=null;
        Token this_NUMBER_3=null;

         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 176) ) { return current; }
            // InternalSpellGrammar.g:7992:28: ( ( (kw= '+' | kw= '-' )? (kw= '.' )? this_NUMBER_3= RULE_NUMBER ) )
            // InternalSpellGrammar.g:7993:1: ( (kw= '+' | kw= '-' )? (kw= '.' )? this_NUMBER_3= RULE_NUMBER )
            {
            // InternalSpellGrammar.g:7993:1: ( (kw= '+' | kw= '-' )? (kw= '.' )? this_NUMBER_3= RULE_NUMBER )
            // InternalSpellGrammar.g:7993:2: (kw= '+' | kw= '-' )? (kw= '.' )? this_NUMBER_3= RULE_NUMBER
            {
            // InternalSpellGrammar.g:7993:2: (kw= '+' | kw= '-' )?
            int alt170=3;
            int LA170_0 = input.LA(1);

            if ( (LA170_0==28) ) {
                alt170=1;
            }
            else if ( (LA170_0==79) ) {
                alt170=2;
            }
            switch (alt170) {
                case 1 :
                    // InternalSpellGrammar.g:7994:2: kw= '+'
                    {
                    kw=(Token)match(input,28,FollowSets000.FOLLOW_89); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getNumberWithPlusOrMinusAccess().getPlusSignKeyword_0_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalSpellGrammar.g:8001:2: kw= '-'
                    {
                    kw=(Token)match(input,79,FollowSets000.FOLLOW_89); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getNumberWithPlusOrMinusAccess().getHyphenMinusKeyword_0_1()); 
                          
                    }

                    }
                    break;

            }

            // InternalSpellGrammar.g:8006:3: (kw= '.' )?
            int alt171=2;
            int LA171_0 = input.LA(1);

            if ( (LA171_0==48) ) {
                alt171=1;
            }
            switch (alt171) {
                case 1 :
                    // InternalSpellGrammar.g:8007:2: kw= '.'
                    {
                    kw=(Token)match(input,48,FollowSets000.FOLLOW_90); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getNumberWithPlusOrMinusAccess().getFullStopKeyword_1()); 
                          
                    }

                    }
                    break;

            }

            this_NUMBER_3=(Token)match(input,RULE_NUMBER,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_NUMBER_3);
                  
            }
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_NUMBER_3, grammarAccess.getNumberWithPlusOrMinusAccess().getNUMBERTerminalRuleCall_2()); 
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 176, ruleNumberWithPlusOrMinus_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleNumberWithPlusOrMinus"


    // $ANTLR start "entryRuleNAME"
    // InternalSpellGrammar.g:8027:1: entryRuleNAME returns [String current=null] : iv_ruleNAME= ruleNAME EOF ;
    public final String entryRuleNAME() throws RecognitionException {
        String current = null;
        int entryRuleNAME_StartIndex = input.index();
        AntlrDatatypeRuleToken iv_ruleNAME = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 177) ) { return current; }
            // InternalSpellGrammar.g:8028:2: (iv_ruleNAME= ruleNAME EOF )
            // InternalSpellGrammar.g:8029:2: iv_ruleNAME= ruleNAME EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNAMERule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNAME=ruleNAME();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNAME.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 177, entryRuleNAME_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleNAME"


    // $ANTLR start "ruleNAME"
    // InternalSpellGrammar.g:8036:1: ruleNAME returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_Python_Statement_0= rulePython_Statement ;
    public final AntlrDatatypeRuleToken ruleNAME() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();
        int ruleNAME_StartIndex = input.index();
        AntlrDatatypeRuleToken this_Python_Statement_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 178) ) { return current; }
            // InternalSpellGrammar.g:8039:28: (this_Python_Statement_0= rulePython_Statement )
            // InternalSpellGrammar.g:8041:5: this_Python_Statement_0= rulePython_Statement
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getNAMEAccess().getPython_StatementParserRuleCall()); 
                  
            }
            pushFollow(FollowSets000.FOLLOW_2);
            this_Python_Statement_0=rulePython_Statement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_Python_Statement_0);
                  
            }
            if ( state.backtracking==0 ) {
               
                      afterParserOrEnumRuleCall();
                  
            }

            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 178, ruleNAME_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleNAME"


    // $ANTLR start "entryRuleNL"
    // InternalSpellGrammar.g:8059:1: entryRuleNL returns [String current=null] : iv_ruleNL= ruleNL EOF ;
    public final String entryRuleNL() throws RecognitionException {
        String current = null;
        int entryRuleNL_StartIndex = input.index();
        AntlrDatatypeRuleToken iv_ruleNL = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 179) ) { return current; }
            // InternalSpellGrammar.g:8060:2: (iv_ruleNL= ruleNL EOF )
            // InternalSpellGrammar.g:8061:2: iv_ruleNL= ruleNL EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNLRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNL=ruleNL();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNL.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 179, entryRuleNL_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleNL"


    // $ANTLR start "ruleNL"
    // InternalSpellGrammar.g:8068:1: ruleNL returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '\\\\' this_WS_1= RULE_WS ) ;
    public final AntlrDatatypeRuleToken ruleNL() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();
        int ruleNL_StartIndex = input.index();
        Token kw=null;
        Token this_WS_1=null;

         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 180) ) { return current; }
            // InternalSpellGrammar.g:8071:28: ( (kw= '\\\\' this_WS_1= RULE_WS ) )
            // InternalSpellGrammar.g:8072:1: (kw= '\\\\' this_WS_1= RULE_WS )
            {
            // InternalSpellGrammar.g:8072:1: (kw= '\\\\' this_WS_1= RULE_WS )
            // InternalSpellGrammar.g:8073:2: kw= '\\\\' this_WS_1= RULE_WS
            {
            kw=(Token)match(input,104,FollowSets000.FOLLOW_91); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current.merge(kw);
                      newLeafNode(kw, grammarAccess.getNLAccess().getReverseSolidusKeyword_0()); 
                  
            }
            this_WS_1=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_WS_1);
                  
            }
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_WS_1, grammarAccess.getNLAccess().getWSTerminalRuleCall_1()); 
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 180, ruleNL_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleNL"

    // $ANTLR start synpred13_InternalSpellGrammar
    public final void synpred13_InternalSpellGrammar_fragment() throws RecognitionException {   
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        EObject lv_varargs1_0_0 = null;

        AntlrDatatypeRuleToken lv_dot1Name_3_0 = null;

        AntlrDatatypeRuleToken lv_dot2Name_6_0 = null;

        AntlrDatatypeRuleToken lv_dot2Name_8_0 = null;


        // InternalSpellGrammar.g:655:2: ( ( ( ( (lv_varargs1_0_0= rulevarargslist_element ) ) otherlv_1= ',' )* ( (otherlv_2= '*' ( (lv_dot1Name_3_0= ruleNAME ) ) (otherlv_4= ',' otherlv_5= '**' ( (lv_dot2Name_6_0= ruleNAME ) ) )? ) | (otherlv_7= '**' ( (lv_dot2Name_8_0= ruleNAME ) ) ) ) ) )
        // InternalSpellGrammar.g:655:2: ( ( ( (lv_varargs1_0_0= rulevarargslist_element ) ) otherlv_1= ',' )* ( (otherlv_2= '*' ( (lv_dot1Name_3_0= ruleNAME ) ) (otherlv_4= ',' otherlv_5= '**' ( (lv_dot2Name_6_0= ruleNAME ) ) )? ) | (otherlv_7= '**' ( (lv_dot2Name_8_0= ruleNAME ) ) ) ) )
        {
        // InternalSpellGrammar.g:655:2: ( ( ( (lv_varargs1_0_0= rulevarargslist_element ) ) otherlv_1= ',' )* ( (otherlv_2= '*' ( (lv_dot1Name_3_0= ruleNAME ) ) (otherlv_4= ',' otherlv_5= '**' ( (lv_dot2Name_6_0= ruleNAME ) ) )? ) | (otherlv_7= '**' ( (lv_dot2Name_8_0= ruleNAME ) ) ) ) )
        // InternalSpellGrammar.g:655:3: ( ( (lv_varargs1_0_0= rulevarargslist_element ) ) otherlv_1= ',' )* ( (otherlv_2= '*' ( (lv_dot1Name_3_0= ruleNAME ) ) (otherlv_4= ',' otherlv_5= '**' ( (lv_dot2Name_6_0= ruleNAME ) ) )? ) | (otherlv_7= '**' ( (lv_dot2Name_8_0= ruleNAME ) ) ) )
        {
        // InternalSpellGrammar.g:655:3: ( ( (lv_varargs1_0_0= rulevarargslist_element ) ) otherlv_1= ',' )*
        loop174:
        do {
            int alt174=2;
            int LA174_0 = input.LA(1);

            if ( (LA174_0==RULE_NAME_TERMINAL||LA174_0==19||(LA174_0>=84 && LA174_0<=94)) ) {
                alt174=1;
            }


            switch (alt174) {
        	case 1 :
        	    // InternalSpellGrammar.g:655:4: ( (lv_varargs1_0_0= rulevarargslist_element ) ) otherlv_1= ','
        	    {
        	    // InternalSpellGrammar.g:655:4: ( (lv_varargs1_0_0= rulevarargslist_element ) )
        	    // InternalSpellGrammar.g:656:1: (lv_varargs1_0_0= rulevarargslist_element )
        	    {
        	    // InternalSpellGrammar.g:656:1: (lv_varargs1_0_0= rulevarargslist_element )
        	    // InternalSpellGrammar.g:657:3: lv_varargs1_0_0= rulevarargslist_element
        	    {
        	    if ( state.backtracking==0 ) {
        	       
        	      	        newCompositeNode(grammarAccess.getVarargslistAccess().getVarargs1Varargslist_elementParserRuleCall_0_0_0_0()); 
        	      	    
        	    }
        	    pushFollow(FollowSets000.FOLLOW_17);
        	    lv_varargs1_0_0=rulevarargslist_element();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }

        	    otherlv_1=(Token)match(input,23,FollowSets000.FOLLOW_18); if (state.failed) return ;

        	    }
        	    break;

        	default :
        	    break loop174;
            }
        } while (true);

        // InternalSpellGrammar.g:677:3: ( (otherlv_2= '*' ( (lv_dot1Name_3_0= ruleNAME ) ) (otherlv_4= ',' otherlv_5= '**' ( (lv_dot2Name_6_0= ruleNAME ) ) )? ) | (otherlv_7= '**' ( (lv_dot2Name_8_0= ruleNAME ) ) ) )
        int alt176=2;
        int LA176_0 = input.LA(1);

        if ( (LA176_0==25) ) {
            alt176=1;
        }
        else if ( (LA176_0==26) ) {
            alt176=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 176, 0, input);

            throw nvae;
        }
        switch (alt176) {
            case 1 :
                // InternalSpellGrammar.g:677:4: (otherlv_2= '*' ( (lv_dot1Name_3_0= ruleNAME ) ) (otherlv_4= ',' otherlv_5= '**' ( (lv_dot2Name_6_0= ruleNAME ) ) )? )
                {
                // InternalSpellGrammar.g:677:4: (otherlv_2= '*' ( (lv_dot1Name_3_0= ruleNAME ) ) (otherlv_4= ',' otherlv_5= '**' ( (lv_dot2Name_6_0= ruleNAME ) ) )? )
                // InternalSpellGrammar.g:677:6: otherlv_2= '*' ( (lv_dot1Name_3_0= ruleNAME ) ) (otherlv_4= ',' otherlv_5= '**' ( (lv_dot2Name_6_0= ruleNAME ) ) )?
                {
                otherlv_2=(Token)match(input,25,FollowSets000.FOLLOW_4); if (state.failed) return ;
                // InternalSpellGrammar.g:681:1: ( (lv_dot1Name_3_0= ruleNAME ) )
                // InternalSpellGrammar.g:682:1: (lv_dot1Name_3_0= ruleNAME )
                {
                // InternalSpellGrammar.g:682:1: (lv_dot1Name_3_0= ruleNAME )
                // InternalSpellGrammar.g:683:3: lv_dot1Name_3_0= ruleNAME
                {
                if ( state.backtracking==0 ) {
                   
                  	        newCompositeNode(grammarAccess.getVarargslistAccess().getDot1NameNAMEParserRuleCall_0_1_0_1_0()); 
                  	    
                }
                pushFollow(FollowSets000.FOLLOW_19);
                lv_dot1Name_3_0=ruleNAME();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalSpellGrammar.g:699:2: (otherlv_4= ',' otherlv_5= '**' ( (lv_dot2Name_6_0= ruleNAME ) ) )?
                int alt175=2;
                int LA175_0 = input.LA(1);

                if ( (LA175_0==23) ) {
                    alt175=1;
                }
                switch (alt175) {
                    case 1 :
                        // InternalSpellGrammar.g:699:4: otherlv_4= ',' otherlv_5= '**' ( (lv_dot2Name_6_0= ruleNAME ) )
                        {
                        otherlv_4=(Token)match(input,23,FollowSets000.FOLLOW_20); if (state.failed) return ;
                        otherlv_5=(Token)match(input,26,FollowSets000.FOLLOW_4); if (state.failed) return ;
                        // InternalSpellGrammar.g:707:1: ( (lv_dot2Name_6_0= ruleNAME ) )
                        // InternalSpellGrammar.g:708:1: (lv_dot2Name_6_0= ruleNAME )
                        {
                        // InternalSpellGrammar.g:708:1: (lv_dot2Name_6_0= ruleNAME )
                        // InternalSpellGrammar.g:709:3: lv_dot2Name_6_0= ruleNAME
                        {
                        if ( state.backtracking==0 ) {
                           
                          	        newCompositeNode(grammarAccess.getVarargslistAccess().getDot2NameNAMEParserRuleCall_0_1_0_2_2_0()); 
                          	    
                        }
                        pushFollow(FollowSets000.FOLLOW_2);
                        lv_dot2Name_6_0=ruleNAME();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }


                        }
                        break;

                }


                }


                }
                break;
            case 2 :
                // InternalSpellGrammar.g:726:6: (otherlv_7= '**' ( (lv_dot2Name_8_0= ruleNAME ) ) )
                {
                // InternalSpellGrammar.g:726:6: (otherlv_7= '**' ( (lv_dot2Name_8_0= ruleNAME ) ) )
                // InternalSpellGrammar.g:726:8: otherlv_7= '**' ( (lv_dot2Name_8_0= ruleNAME ) )
                {
                otherlv_7=(Token)match(input,26,FollowSets000.FOLLOW_4); if (state.failed) return ;
                // InternalSpellGrammar.g:730:1: ( (lv_dot2Name_8_0= ruleNAME ) )
                // InternalSpellGrammar.g:731:1: (lv_dot2Name_8_0= ruleNAME )
                {
                // InternalSpellGrammar.g:731:1: (lv_dot2Name_8_0= ruleNAME )
                // InternalSpellGrammar.g:732:3: lv_dot2Name_8_0= ruleNAME
                {
                if ( state.backtracking==0 ) {
                   
                  	        newCompositeNode(grammarAccess.getVarargslistAccess().getDot2NameNAMEParserRuleCall_0_1_1_1_0()); 
                  	    
                }
                pushFollow(FollowSets000.FOLLOW_2);
                lv_dot2Name_8_0=ruleNAME();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }


                }
                break;

        }


        }


        }
    }
    // $ANTLR end synpred13_InternalSpellGrammar

    // $ANTLR start synpred15_InternalSpellGrammar
    public final void synpred15_InternalSpellGrammar_fragment() throws RecognitionException {   
        Token lv_additionalComma_12_0=null;

        // InternalSpellGrammar.g:790:1: ( (lv_additionalComma_12_0= ',' ) )
        // InternalSpellGrammar.g:790:1: (lv_additionalComma_12_0= ',' )
        {
        // InternalSpellGrammar.g:790:1: (lv_additionalComma_12_0= ',' )
        // InternalSpellGrammar.g:791:3: lv_additionalComma_12_0= ','
        {
        lv_additionalComma_12_0=(Token)match(input,23,FollowSets000.FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred15_InternalSpellGrammar

    // $ANTLR start synpred20_InternalSpellGrammar
    public final void synpred20_InternalSpellGrammar_fragment() throws RecognitionException {   
        Token otherlv_2=null;
        EObject lv_stmt_3_0 = null;


        // InternalSpellGrammar.g:1034:4: (otherlv_2= ';' ( (lv_stmt_3_0= rulesmall_stmt ) ) )
        // InternalSpellGrammar.g:1034:4: otherlv_2= ';' ( (lv_stmt_3_0= rulesmall_stmt ) )
        {
        otherlv_2=(Token)match(input,27,FollowSets000.FOLLOW_24); if (state.failed) return ;
        // InternalSpellGrammar.g:1038:1: ( (lv_stmt_3_0= rulesmall_stmt ) )
        // InternalSpellGrammar.g:1039:1: (lv_stmt_3_0= rulesmall_stmt )
        {
        // InternalSpellGrammar.g:1039:1: (lv_stmt_3_0= rulesmall_stmt )
        // InternalSpellGrammar.g:1040:3: lv_stmt_3_0= rulesmall_stmt
        {
        if ( state.backtracking==0 ) {
           
          	        newCompositeNode(grammarAccess.getSimple_stmtAccess().getStmtSmall_stmtParserRuleCall_1_1_1_0()); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_stmt_3_0=rulesmall_stmt();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred20_InternalSpellGrammar

    // $ANTLR start synpred22_InternalSpellGrammar
    public final void synpred22_InternalSpellGrammar_fragment() throws RecognitionException {   
        Token otherlv_2=null;
        Token lv_additionalComma_4_0=null;
        EObject lv_stmt_3_0 = null;


        // InternalSpellGrammar.g:1025:2: ( () (otherlv_2= ';' ( (lv_stmt_3_0= rulesmall_stmt ) ) )+ ( (lv_additionalComma_4_0= ',' ) )? )
        // InternalSpellGrammar.g:1025:2: () (otherlv_2= ';' ( (lv_stmt_3_0= rulesmall_stmt ) ) )+ ( (lv_additionalComma_4_0= ',' ) )?
        {
        // InternalSpellGrammar.g:1025:2: ()
        // InternalSpellGrammar.g:1026:2: 
        {
        if ( state.backtracking==0 ) {
           
          	  /* */ 
          	
        }

        }

        // InternalSpellGrammar.g:1034:2: (otherlv_2= ';' ( (lv_stmt_3_0= rulesmall_stmt ) ) )+
        int cnt177=0;
        loop177:
        do {
            int alt177=2;
            int LA177_0 = input.LA(1);

            if ( (LA177_0==27) ) {
                alt177=1;
            }


            switch (alt177) {
        	case 1 :
        	    // InternalSpellGrammar.g:1034:4: otherlv_2= ';' ( (lv_stmt_3_0= rulesmall_stmt ) )
        	    {
        	    otherlv_2=(Token)match(input,27,FollowSets000.FOLLOW_24); if (state.failed) return ;
        	    // InternalSpellGrammar.g:1038:1: ( (lv_stmt_3_0= rulesmall_stmt ) )
        	    // InternalSpellGrammar.g:1039:1: (lv_stmt_3_0= rulesmall_stmt )
        	    {
        	    // InternalSpellGrammar.g:1039:1: (lv_stmt_3_0= rulesmall_stmt )
        	    // InternalSpellGrammar.g:1040:3: lv_stmt_3_0= rulesmall_stmt
        	    {
        	    if ( state.backtracking==0 ) {
        	       
        	      	        newCompositeNode(grammarAccess.getSimple_stmtAccess().getStmtSmall_stmtParserRuleCall_1_1_1_0()); 
        	      	    
        	    }
        	    pushFollow(FollowSets000.FOLLOW_22);
        	    lv_stmt_3_0=rulesmall_stmt();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    if ( cnt177 >= 1 ) break loop177;
        	    if (state.backtracking>0) {state.failed=true; return ;}
                    EarlyExitException eee =
                        new EarlyExitException(177, input);
                    throw eee;
            }
            cnt177++;
        } while (true);

        // InternalSpellGrammar.g:1056:4: ( (lv_additionalComma_4_0= ',' ) )?
        int alt178=2;
        int LA178_0 = input.LA(1);

        if ( (LA178_0==23) ) {
            alt178=1;
        }
        switch (alt178) {
            case 1 :
                // InternalSpellGrammar.g:1057:1: (lv_additionalComma_4_0= ',' )
                {
                // InternalSpellGrammar.g:1057:1: (lv_additionalComma_4_0= ',' )
                // InternalSpellGrammar.g:1058:3: lv_additionalComma_4_0= ','
                {
                lv_additionalComma_4_0=(Token)match(input,23,FollowSets000.FOLLOW_2); if (state.failed) return ;

                }


                }
                break;

        }


        }
    }
    // $ANTLR end synpred22_InternalSpellGrammar

    // $ANTLR start synpred50_InternalSpellGrammar
    public final void synpred50_InternalSpellGrammar_fragment() throws RecognitionException {   
        EObject lv_testlist_2_0 = null;


        // InternalSpellGrammar.g:1741:1: ( (lv_testlist_2_0= ruletestlist ) )
        // InternalSpellGrammar.g:1741:1: (lv_testlist_2_0= ruletestlist )
        {
        // InternalSpellGrammar.g:1741:1: (lv_testlist_2_0= ruletestlist )
        // InternalSpellGrammar.g:1742:3: lv_testlist_2_0= ruletestlist
        {
        if ( state.backtracking==0 ) {
           
          	        newCompositeNode(grammarAccess.getReturn_stmtAccess().getTestlistTestlistParserRuleCall_2_0()); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_testlist_2_0=ruletestlist();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred50_InternalSpellGrammar

    // $ANTLR start synpred51_InternalSpellGrammar
    public final void synpred51_InternalSpellGrammar_fragment() throws RecognitionException {   
        Token otherlv_5=null;
        EObject lv_tests_6_0 = null;


        // InternalSpellGrammar.g:1871:4: (otherlv_5= ',' ( (lv_tests_6_0= ruletest ) ) )
        // InternalSpellGrammar.g:1871:4: otherlv_5= ',' ( (lv_tests_6_0= ruletest ) )
        {
        otherlv_5=(Token)match(input,23,FollowSets000.FOLLOW_16); if (state.failed) return ;
        // InternalSpellGrammar.g:1875:1: ( (lv_tests_6_0= ruletest ) )
        // InternalSpellGrammar.g:1876:1: (lv_tests_6_0= ruletest )
        {
        // InternalSpellGrammar.g:1876:1: (lv_tests_6_0= ruletest )
        // InternalSpellGrammar.g:1877:3: lv_tests_6_0= ruletest
        {
        if ( state.backtracking==0 ) {
           
          	        newCompositeNode(grammarAccess.getRaise_stmtAccess().getTestsTestParserRuleCall_2_1_2_1_0()); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_tests_6_0=ruletest();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred51_InternalSpellGrammar

    // $ANTLR start synpred52_InternalSpellGrammar
    public final void synpred52_InternalSpellGrammar_fragment() throws RecognitionException {   
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_tests_4_0 = null;

        EObject lv_tests_6_0 = null;


        // InternalSpellGrammar.g:1849:4: (otherlv_3= ',' ( (lv_tests_4_0= ruletest ) ) (otherlv_5= ',' ( (lv_tests_6_0= ruletest ) ) )? )
        // InternalSpellGrammar.g:1849:4: otherlv_3= ',' ( (lv_tests_4_0= ruletest ) ) (otherlv_5= ',' ( (lv_tests_6_0= ruletest ) ) )?
        {
        otherlv_3=(Token)match(input,23,FollowSets000.FOLLOW_16); if (state.failed) return ;
        // InternalSpellGrammar.g:1853:1: ( (lv_tests_4_0= ruletest ) )
        // InternalSpellGrammar.g:1854:1: (lv_tests_4_0= ruletest )
        {
        // InternalSpellGrammar.g:1854:1: (lv_tests_4_0= ruletest )
        // InternalSpellGrammar.g:1855:3: lv_tests_4_0= ruletest
        {
        if ( state.backtracking==0 ) {
           
          	        newCompositeNode(grammarAccess.getRaise_stmtAccess().getTestsTestParserRuleCall_2_1_1_0()); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_19);
        lv_tests_4_0=ruletest();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSpellGrammar.g:1871:2: (otherlv_5= ',' ( (lv_tests_6_0= ruletest ) ) )?
        int alt180=2;
        int LA180_0 = input.LA(1);

        if ( (LA180_0==23) ) {
            alt180=1;
        }
        switch (alt180) {
            case 1 :
                // InternalSpellGrammar.g:1871:4: otherlv_5= ',' ( (lv_tests_6_0= ruletest ) )
                {
                otherlv_5=(Token)match(input,23,FollowSets000.FOLLOW_16); if (state.failed) return ;
                // InternalSpellGrammar.g:1875:1: ( (lv_tests_6_0= ruletest ) )
                // InternalSpellGrammar.g:1876:1: (lv_tests_6_0= ruletest )
                {
                // InternalSpellGrammar.g:1876:1: (lv_tests_6_0= ruletest )
                // InternalSpellGrammar.g:1877:3: lv_tests_6_0= ruletest
                {
                if ( state.backtracking==0 ) {
                   
                  	        newCompositeNode(grammarAccess.getRaise_stmtAccess().getTestsTestParserRuleCall_2_1_2_1_0()); 
                  	    
                }
                pushFollow(FollowSets000.FOLLOW_2);
                lv_tests_6_0=ruletest();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;

        }


        }
    }
    // $ANTLR end synpred52_InternalSpellGrammar

    // $ANTLR start synpred53_InternalSpellGrammar
    public final void synpred53_InternalSpellGrammar_fragment() throws RecognitionException {   
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_tests_2_0 = null;

        EObject lv_tests_4_0 = null;

        EObject lv_tests_6_0 = null;


        // InternalSpellGrammar.g:1831:2: ( ( (lv_tests_2_0= ruletest ) ) (otherlv_3= ',' ( (lv_tests_4_0= ruletest ) ) (otherlv_5= ',' ( (lv_tests_6_0= ruletest ) ) )? )? )
        // InternalSpellGrammar.g:1831:2: ( (lv_tests_2_0= ruletest ) ) (otherlv_3= ',' ( (lv_tests_4_0= ruletest ) ) (otherlv_5= ',' ( (lv_tests_6_0= ruletest ) ) )? )?
        {
        // InternalSpellGrammar.g:1831:2: ( (lv_tests_2_0= ruletest ) )
        // InternalSpellGrammar.g:1832:1: (lv_tests_2_0= ruletest )
        {
        // InternalSpellGrammar.g:1832:1: (lv_tests_2_0= ruletest )
        // InternalSpellGrammar.g:1833:3: lv_tests_2_0= ruletest
        {
        if ( state.backtracking==0 ) {
           
          	        newCompositeNode(grammarAccess.getRaise_stmtAccess().getTestsTestParserRuleCall_2_0_0()); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_19);
        lv_tests_2_0=ruletest();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSpellGrammar.g:1849:2: (otherlv_3= ',' ( (lv_tests_4_0= ruletest ) ) (otherlv_5= ',' ( (lv_tests_6_0= ruletest ) ) )? )?
        int alt182=2;
        int LA182_0 = input.LA(1);

        if ( (LA182_0==23) ) {
            alt182=1;
        }
        switch (alt182) {
            case 1 :
                // InternalSpellGrammar.g:1849:4: otherlv_3= ',' ( (lv_tests_4_0= ruletest ) ) (otherlv_5= ',' ( (lv_tests_6_0= ruletest ) ) )?
                {
                otherlv_3=(Token)match(input,23,FollowSets000.FOLLOW_16); if (state.failed) return ;
                // InternalSpellGrammar.g:1853:1: ( (lv_tests_4_0= ruletest ) )
                // InternalSpellGrammar.g:1854:1: (lv_tests_4_0= ruletest )
                {
                // InternalSpellGrammar.g:1854:1: (lv_tests_4_0= ruletest )
                // InternalSpellGrammar.g:1855:3: lv_tests_4_0= ruletest
                {
                if ( state.backtracking==0 ) {
                   
                  	        newCompositeNode(grammarAccess.getRaise_stmtAccess().getTestsTestParserRuleCall_2_1_1_0()); 
                  	    
                }
                pushFollow(FollowSets000.FOLLOW_19);
                lv_tests_4_0=ruletest();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalSpellGrammar.g:1871:2: (otherlv_5= ',' ( (lv_tests_6_0= ruletest ) ) )?
                int alt181=2;
                int LA181_0 = input.LA(1);

                if ( (LA181_0==23) ) {
                    alt181=1;
                }
                switch (alt181) {
                    case 1 :
                        // InternalSpellGrammar.g:1871:4: otherlv_5= ',' ( (lv_tests_6_0= ruletest ) )
                        {
                        otherlv_5=(Token)match(input,23,FollowSets000.FOLLOW_16); if (state.failed) return ;
                        // InternalSpellGrammar.g:1875:1: ( (lv_tests_6_0= ruletest ) )
                        // InternalSpellGrammar.g:1876:1: (lv_tests_6_0= ruletest )
                        {
                        // InternalSpellGrammar.g:1876:1: (lv_tests_6_0= ruletest )
                        // InternalSpellGrammar.g:1877:3: lv_tests_6_0= ruletest
                        {
                        if ( state.backtracking==0 ) {
                           
                          	        newCompositeNode(grammarAccess.getRaise_stmtAccess().getTestsTestParserRuleCall_2_1_2_1_0()); 
                          	    
                        }
                        pushFollow(FollowSets000.FOLLOW_2);
                        lv_tests_6_0=ruletest();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }


                        }
                        break;

                }


                }
                break;

        }


        }
    }
    // $ANTLR end synpred53_InternalSpellGrammar

    // $ANTLR start synpred62_InternalSpellGrammar
    public final void synpred62_InternalSpellGrammar_fragment() throws RecognitionException {   
        Token otherlv_1=null;
        EObject lv_imports_2_0 = null;


        // InternalSpellGrammar.g:2282:4: (otherlv_1= ',' ( (lv_imports_2_0= ruleimport_as_name ) ) )
        // InternalSpellGrammar.g:2282:4: otherlv_1= ',' ( (lv_imports_2_0= ruleimport_as_name ) )
        {
        otherlv_1=(Token)match(input,23,FollowSets000.FOLLOW_33); if (state.failed) return ;
        // InternalSpellGrammar.g:2286:1: ( (lv_imports_2_0= ruleimport_as_name ) )
        // InternalSpellGrammar.g:2287:1: (lv_imports_2_0= ruleimport_as_name )
        {
        // InternalSpellGrammar.g:2287:1: (lv_imports_2_0= ruleimport_as_name )
        // InternalSpellGrammar.g:2288:3: lv_imports_2_0= ruleimport_as_name
        {
        if ( state.backtracking==0 ) {
           
          	        newCompositeNode(grammarAccess.getImport_as_namesAccess().getImportsImport_as_nameParserRuleCall_1_1_0()); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_imports_2_0=ruleimport_as_name();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred62_InternalSpellGrammar

    // $ANTLR start synpred63_InternalSpellGrammar
    public final void synpred63_InternalSpellGrammar_fragment() throws RecognitionException {   
        Token lv_optionalComma_3_0=null;

        // InternalSpellGrammar.g:2305:1: ( (lv_optionalComma_3_0= ',' ) )
        // InternalSpellGrammar.g:2305:1: (lv_optionalComma_3_0= ',' )
        {
        // InternalSpellGrammar.g:2305:1: (lv_optionalComma_3_0= ',' )
        // InternalSpellGrammar.g:2306:3: lv_optionalComma_3_0= ','
        {
        lv_optionalComma_3_0=(Token)match(input,23,FollowSets000.FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred63_InternalSpellGrammar

    // $ANTLR start synpred64_InternalSpellGrammar
    public final void synpred64_InternalSpellGrammar_fragment() throws RecognitionException {   
        Token otherlv_1=null;
        EObject lv_dotted_names_2_0 = null;


        // InternalSpellGrammar.g:2358:4: (otherlv_1= ',' ( (lv_dotted_names_2_0= ruledotted_as_name ) ) )
        // InternalSpellGrammar.g:2358:4: otherlv_1= ',' ( (lv_dotted_names_2_0= ruledotted_as_name ) )
        {
        otherlv_1=(Token)match(input,23,FollowSets000.FOLLOW_4); if (state.failed) return ;
        // InternalSpellGrammar.g:2362:1: ( (lv_dotted_names_2_0= ruledotted_as_name ) )
        // InternalSpellGrammar.g:2363:1: (lv_dotted_names_2_0= ruledotted_as_name )
        {
        // InternalSpellGrammar.g:2363:1: (lv_dotted_names_2_0= ruledotted_as_name )
        // InternalSpellGrammar.g:2364:3: lv_dotted_names_2_0= ruledotted_as_name
        {
        if ( state.backtracking==0 ) {
           
          	        newCompositeNode(grammarAccess.getDotted_as_namesAccess().getDotted_namesDotted_as_nameParserRuleCall_1_1_0()); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_dotted_names_2_0=ruledotted_as_name();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred64_InternalSpellGrammar

    // $ANTLR start synpred66_InternalSpellGrammar
    public final void synpred66_InternalSpellGrammar_fragment() throws RecognitionException {   
        Token otherlv_2=null;
        AntlrDatatypeRuleToken lv_globals_3_0 = null;


        // InternalSpellGrammar.g:2472:4: (otherlv_2= ',' ( (lv_globals_3_0= ruleNAME ) ) )
        // InternalSpellGrammar.g:2472:4: otherlv_2= ',' ( (lv_globals_3_0= ruleNAME ) )
        {
        otherlv_2=(Token)match(input,23,FollowSets000.FOLLOW_4); if (state.failed) return ;
        // InternalSpellGrammar.g:2476:1: ( (lv_globals_3_0= ruleNAME ) )
        // InternalSpellGrammar.g:2477:1: (lv_globals_3_0= ruleNAME )
        {
        // InternalSpellGrammar.g:2477:1: (lv_globals_3_0= ruleNAME )
        // InternalSpellGrammar.g:2478:3: lv_globals_3_0= ruleNAME
        {
        if ( state.backtracking==0 ) {
           
          	        newCompositeNode(grammarAccess.getGlobal_stmtAccess().getGlobalsNAMEParserRuleCall_2_1_0()); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_globals_3_0=ruleNAME();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred66_InternalSpellGrammar

    // $ANTLR start synpred67_InternalSpellGrammar
    public final void synpred67_InternalSpellGrammar_fragment() throws RecognitionException {   
        Token otherlv_4=null;
        EObject lv_tests_5_0 = null;


        // InternalSpellGrammar.g:2559:4: (otherlv_4= ',' ( (lv_tests_5_0= ruletest ) ) )
        // InternalSpellGrammar.g:2559:4: otherlv_4= ',' ( (lv_tests_5_0= ruletest ) )
        {
        otherlv_4=(Token)match(input,23,FollowSets000.FOLLOW_16); if (state.failed) return ;
        // InternalSpellGrammar.g:2563:1: ( (lv_tests_5_0= ruletest ) )
        // InternalSpellGrammar.g:2564:1: (lv_tests_5_0= ruletest )
        {
        // InternalSpellGrammar.g:2564:1: (lv_tests_5_0= ruletest )
        // InternalSpellGrammar.g:2565:3: lv_tests_5_0= ruletest
        {
        if ( state.backtracking==0 ) {
           
          	        newCompositeNode(grammarAccess.getExec_stmtAccess().getTestsTestParserRuleCall_2_2_1_0()); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_tests_5_0=ruletest();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred67_InternalSpellGrammar

    // $ANTLR start synpred69_InternalSpellGrammar
    public final void synpred69_InternalSpellGrammar_fragment() throws RecognitionException {   
        Token otherlv_2=null;
        EObject lv_assers_3_0 = null;


        // InternalSpellGrammar.g:2624:4: (otherlv_2= ',' ( (lv_assers_3_0= ruletest ) ) )
        // InternalSpellGrammar.g:2624:4: otherlv_2= ',' ( (lv_assers_3_0= ruletest ) )
        {
        otherlv_2=(Token)match(input,23,FollowSets000.FOLLOW_16); if (state.failed) return ;
        // InternalSpellGrammar.g:2628:1: ( (lv_assers_3_0= ruletest ) )
        // InternalSpellGrammar.g:2629:1: (lv_assers_3_0= ruletest )
        {
        // InternalSpellGrammar.g:2629:1: (lv_assers_3_0= ruletest )
        // InternalSpellGrammar.g:2630:3: lv_assers_3_0= ruletest
        {
        if ( state.backtracking==0 ) {
           
          	        newCompositeNode(grammarAccess.getAssert_stmtAccess().getAssersTestParserRuleCall_2_1_0()); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_assers_3_0=ruletest();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred69_InternalSpellGrammar

    // $ANTLR start synpred92_InternalSpellGrammar
    public final void synpred92_InternalSpellGrammar_fragment() throws RecognitionException {   
        // InternalSpellGrammar.g:3603:2: ( ( rulestmt ) )
        // InternalSpellGrammar.g:3604:1: ( rulestmt )
        {
        // InternalSpellGrammar.g:3604:1: ( rulestmt )
        // InternalSpellGrammar.g:3605:1: rulestmt
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rulestmt();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred92_InternalSpellGrammar

    // $ANTLR start synpred96_InternalSpellGrammar
    public final void synpred96_InternalSpellGrammar_fragment() throws RecognitionException {   
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_if_test_3_0 = null;

        EObject lv_if_else_test_5_0 = null;


        // InternalSpellGrammar.g:3734:2: ( () otherlv_2= 'if' ( (lv_if_test_3_0= ruleor_test ) ) otherlv_4= 'else' ( (lv_if_else_test_5_0= ruletest ) ) )
        // InternalSpellGrammar.g:3734:2: () otherlv_2= 'if' ( (lv_if_test_3_0= ruleor_test ) ) otherlv_4= 'else' ( (lv_if_else_test_5_0= ruletest ) )
        {
        // InternalSpellGrammar.g:3734:2: ()
        // InternalSpellGrammar.g:3735:2: 
        {
        if ( state.backtracking==0 ) {
           
          	  /* */ 
          	
        }

        }

        otherlv_2=(Token)match(input,55,FollowSets000.FOLLOW_28); if (state.failed) return ;
        // InternalSpellGrammar.g:3747:1: ( (lv_if_test_3_0= ruleor_test ) )
        // InternalSpellGrammar.g:3748:1: (lv_if_test_3_0= ruleor_test )
        {
        // InternalSpellGrammar.g:3748:1: (lv_if_test_3_0= ruleor_test )
        // InternalSpellGrammar.g:3749:3: lv_if_test_3_0= ruleor_test
        {
        if ( state.backtracking==0 ) {
           
          	        newCompositeNode(grammarAccess.getTestAccess().getIf_testOr_testParserRuleCall_0_1_2_0()); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_54);
        lv_if_test_3_0=ruleor_test();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_4=(Token)match(input,56,FollowSets000.FOLLOW_16); if (state.failed) return ;
        // InternalSpellGrammar.g:3769:1: ( (lv_if_else_test_5_0= ruletest ) )
        // InternalSpellGrammar.g:3770:1: (lv_if_else_test_5_0= ruletest )
        {
        // InternalSpellGrammar.g:3770:1: (lv_if_else_test_5_0= ruletest )
        // InternalSpellGrammar.g:3771:3: lv_if_else_test_5_0= ruletest
        {
        if ( state.backtracking==0 ) {
           
          	        newCompositeNode(grammarAccess.getTestAccess().getIf_else_testTestParserRuleCall_0_1_4_0()); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_if_else_test_5_0=ruletest();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred96_InternalSpellGrammar

    // $ANTLR start synpred121_InternalSpellGrammar
    public final void synpred121_InternalSpellGrammar_fragment() throws RecognitionException {   
        Token lv_sign_2_1=null;
        Token lv_sign_2_2=null;
        EObject lv_right_3_0 = null;


        // InternalSpellGrammar.g:4574:2: ( () ( ( (lv_sign_2_1= '+' | lv_sign_2_2= '-' ) ) ) ( (lv_right_3_0= ruleterm ) ) )
        // InternalSpellGrammar.g:4574:2: () ( ( (lv_sign_2_1= '+' | lv_sign_2_2= '-' ) ) ) ( (lv_right_3_0= ruleterm ) )
        {
        // InternalSpellGrammar.g:4574:2: ()
        // InternalSpellGrammar.g:4575:2: 
        {
        if ( state.backtracking==0 ) {
           
          	  /* */ 
          	
        }

        }

        // InternalSpellGrammar.g:4583:2: ( ( (lv_sign_2_1= '+' | lv_sign_2_2= '-' ) ) )
        // InternalSpellGrammar.g:4584:1: ( (lv_sign_2_1= '+' | lv_sign_2_2= '-' ) )
        {
        // InternalSpellGrammar.g:4584:1: ( (lv_sign_2_1= '+' | lv_sign_2_2= '-' ) )
        // InternalSpellGrammar.g:4585:1: (lv_sign_2_1= '+' | lv_sign_2_2= '-' )
        {
        // InternalSpellGrammar.g:4585:1: (lv_sign_2_1= '+' | lv_sign_2_2= '-' )
        int alt198=2;
        int LA198_0 = input.LA(1);

        if ( (LA198_0==28) ) {
            alt198=1;
        }
        else if ( (LA198_0==79) ) {
            alt198=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 198, 0, input);

            throw nvae;
        }
        switch (alt198) {
            case 1 :
                // InternalSpellGrammar.g:4586:3: lv_sign_2_1= '+'
                {
                lv_sign_2_1=(Token)match(input,28,FollowSets000.FOLLOW_28); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalSpellGrammar.g:4598:8: lv_sign_2_2= '-'
                {
                lv_sign_2_2=(Token)match(input,79,FollowSets000.FOLLOW_28); if (state.failed) return ;

                }
                break;

        }


        }


        }

        // InternalSpellGrammar.g:4613:2: ( (lv_right_3_0= ruleterm ) )
        // InternalSpellGrammar.g:4614:1: (lv_right_3_0= ruleterm )
        {
        // InternalSpellGrammar.g:4614:1: (lv_right_3_0= ruleterm )
        // InternalSpellGrammar.g:4615:3: lv_right_3_0= ruleterm
        {
        if ( state.backtracking==0 ) {
           
          	        newCompositeNode(grammarAccess.getArith_exprAccess().getRightTermParserRuleCall_1_2_0()); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_right_3_0=ruleterm();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred121_InternalSpellGrammar

    // $ANTLR start synpred126_InternalSpellGrammar
    public final void synpred126_InternalSpellGrammar_fragment() throws RecognitionException {   
        Token lv_sign_2_1=null;
        Token lv_sign_2_2=null;
        Token lv_sign_2_3=null;
        Token lv_sign_2_4=null;
        Token lv_sign_2_5=null;
        EObject lv_right_3_0 = null;


        // InternalSpellGrammar.g:4664:2: ( () ( ( (lv_sign_2_1= '*' | lv_sign_2_2= '/' | lv_sign_2_3= '%' | lv_sign_2_4= '//' | lv_sign_2_5= '**' ) ) ) ( (lv_right_3_0= rulefactor ) ) )
        // InternalSpellGrammar.g:4664:2: () ( ( (lv_sign_2_1= '*' | lv_sign_2_2= '/' | lv_sign_2_3= '%' | lv_sign_2_4= '//' | lv_sign_2_5= '**' ) ) ) ( (lv_right_3_0= rulefactor ) )
        {
        // InternalSpellGrammar.g:4664:2: ()
        // InternalSpellGrammar.g:4665:2: 
        {
        if ( state.backtracking==0 ) {
           
          	  /* */ 
          	
        }

        }

        // InternalSpellGrammar.g:4673:2: ( ( (lv_sign_2_1= '*' | lv_sign_2_2= '/' | lv_sign_2_3= '%' | lv_sign_2_4= '//' | lv_sign_2_5= '**' ) ) )
        // InternalSpellGrammar.g:4674:1: ( (lv_sign_2_1= '*' | lv_sign_2_2= '/' | lv_sign_2_3= '%' | lv_sign_2_4= '//' | lv_sign_2_5= '**' ) )
        {
        // InternalSpellGrammar.g:4674:1: ( (lv_sign_2_1= '*' | lv_sign_2_2= '/' | lv_sign_2_3= '%' | lv_sign_2_4= '//' | lv_sign_2_5= '**' ) )
        // InternalSpellGrammar.g:4675:1: (lv_sign_2_1= '*' | lv_sign_2_2= '/' | lv_sign_2_3= '%' | lv_sign_2_4= '//' | lv_sign_2_5= '**' )
        {
        // InternalSpellGrammar.g:4675:1: (lv_sign_2_1= '*' | lv_sign_2_2= '/' | lv_sign_2_3= '%' | lv_sign_2_4= '//' | lv_sign_2_5= '**' )
        int alt199=5;
        switch ( input.LA(1) ) {
        case 25:
            {
            alt199=1;
            }
            break;
        case 80:
            {
            alt199=2;
            }
            break;
        case 81:
            {
            alt199=3;
            }
            break;
        case 82:
            {
            alt199=4;
            }
            break;
        case 26:
            {
            alt199=5;
            }
            break;
        default:
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 199, 0, input);

            throw nvae;
        }

        switch (alt199) {
            case 1 :
                // InternalSpellGrammar.g:4676:3: lv_sign_2_1= '*'
                {
                lv_sign_2_1=(Token)match(input,25,FollowSets000.FOLLOW_28); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalSpellGrammar.g:4688:8: lv_sign_2_2= '/'
                {
                lv_sign_2_2=(Token)match(input,80,FollowSets000.FOLLOW_28); if (state.failed) return ;

                }
                break;
            case 3 :
                // InternalSpellGrammar.g:4700:8: lv_sign_2_3= '%'
                {
                lv_sign_2_3=(Token)match(input,81,FollowSets000.FOLLOW_28); if (state.failed) return ;

                }
                break;
            case 4 :
                // InternalSpellGrammar.g:4712:8: lv_sign_2_4= '//'
                {
                lv_sign_2_4=(Token)match(input,82,FollowSets000.FOLLOW_28); if (state.failed) return ;

                }
                break;
            case 5 :
                // InternalSpellGrammar.g:4724:8: lv_sign_2_5= '**'
                {
                lv_sign_2_5=(Token)match(input,26,FollowSets000.FOLLOW_28); if (state.failed) return ;

                }
                break;

        }


        }


        }

        // InternalSpellGrammar.g:4739:2: ( (lv_right_3_0= rulefactor ) )
        // InternalSpellGrammar.g:4740:1: (lv_right_3_0= rulefactor )
        {
        // InternalSpellGrammar.g:4740:1: (lv_right_3_0= rulefactor )
        // InternalSpellGrammar.g:4741:3: lv_right_3_0= rulefactor
        {
        if ( state.backtracking==0 ) {
           
          	        newCompositeNode(grammarAccess.getTermAccess().getRightFactorParserRuleCall_1_2_0()); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_right_3_0=rulefactor();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred126_InternalSpellGrammar

    // $ANTLR start synpred129_InternalSpellGrammar
    public final void synpred129_InternalSpellGrammar_fragment() throws RecognitionException {   
        Token lv_sign_0_1=null;
        Token lv_sign_0_2=null;
        Token lv_sign_0_3=null;
        EObject lv_factor_1_0 = null;


        // InternalSpellGrammar.g:4778:2: ( ( ( ( (lv_sign_0_1= '+' | lv_sign_0_2= '-' | lv_sign_0_3= '~' ) ) ) ( (lv_factor_1_0= rulefactor ) ) ) )
        // InternalSpellGrammar.g:4778:2: ( ( ( (lv_sign_0_1= '+' | lv_sign_0_2= '-' | lv_sign_0_3= '~' ) ) ) ( (lv_factor_1_0= rulefactor ) ) )
        {
        // InternalSpellGrammar.g:4778:2: ( ( ( (lv_sign_0_1= '+' | lv_sign_0_2= '-' | lv_sign_0_3= '~' ) ) ) ( (lv_factor_1_0= rulefactor ) ) )
        // InternalSpellGrammar.g:4778:3: ( ( (lv_sign_0_1= '+' | lv_sign_0_2= '-' | lv_sign_0_3= '~' ) ) ) ( (lv_factor_1_0= rulefactor ) )
        {
        // InternalSpellGrammar.g:4778:3: ( ( (lv_sign_0_1= '+' | lv_sign_0_2= '-' | lv_sign_0_3= '~' ) ) )
        // InternalSpellGrammar.g:4779:1: ( (lv_sign_0_1= '+' | lv_sign_0_2= '-' | lv_sign_0_3= '~' ) )
        {
        // InternalSpellGrammar.g:4779:1: ( (lv_sign_0_1= '+' | lv_sign_0_2= '-' | lv_sign_0_3= '~' ) )
        // InternalSpellGrammar.g:4780:1: (lv_sign_0_1= '+' | lv_sign_0_2= '-' | lv_sign_0_3= '~' )
        {
        // InternalSpellGrammar.g:4780:1: (lv_sign_0_1= '+' | lv_sign_0_2= '-' | lv_sign_0_3= '~' )
        int alt200=3;
        switch ( input.LA(1) ) {
        case 28:
            {
            alt200=1;
            }
            break;
        case 79:
            {
            alt200=2;
            }
            break;
        case 83:
            {
            alt200=3;
            }
            break;
        default:
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 200, 0, input);

            throw nvae;
        }

        switch (alt200) {
            case 1 :
                // InternalSpellGrammar.g:4781:3: lv_sign_0_1= '+'
                {
                lv_sign_0_1=(Token)match(input,28,FollowSets000.FOLLOW_28); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalSpellGrammar.g:4793:8: lv_sign_0_2= '-'
                {
                lv_sign_0_2=(Token)match(input,79,FollowSets000.FOLLOW_28); if (state.failed) return ;

                }
                break;
            case 3 :
                // InternalSpellGrammar.g:4805:8: lv_sign_0_3= '~'
                {
                lv_sign_0_3=(Token)match(input,83,FollowSets000.FOLLOW_28); if (state.failed) return ;

                }
                break;

        }


        }


        }

        // InternalSpellGrammar.g:4820:2: ( (lv_factor_1_0= rulefactor ) )
        // InternalSpellGrammar.g:4821:1: (lv_factor_1_0= rulefactor )
        {
        // InternalSpellGrammar.g:4821:1: (lv_factor_1_0= rulefactor )
        // InternalSpellGrammar.g:4822:3: lv_factor_1_0= rulefactor
        {
        if ( state.backtracking==0 ) {
           
          	        newCompositeNode(grammarAccess.getFactorAccess().getFactorFactorParserRuleCall_0_1_0()); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_factor_1_0=rulefactor();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred129_InternalSpellGrammar

    // $ANTLR start synpred132_InternalSpellGrammar
    public final void synpred132_InternalSpellGrammar_fragment() throws RecognitionException {   
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        EObject lv_id_3_0 = null;

        EObject lv_description_5_0 = null;


        // InternalSpellGrammar.g:4872:2: ( ( () otherlv_1= 'Step' otherlv_2= '(' ( (lv_id_3_0= ruleatom ) ) (otherlv_4= ',' ( (lv_description_5_0= rulearith_expr ) ) )? (otherlv_6= ',' )? otherlv_7= ')' ) )
        // InternalSpellGrammar.g:4872:2: ( () otherlv_1= 'Step' otherlv_2= '(' ( (lv_id_3_0= ruleatom ) ) (otherlv_4= ',' ( (lv_description_5_0= rulearith_expr ) ) )? (otherlv_6= ',' )? otherlv_7= ')' )
        {
        // InternalSpellGrammar.g:4872:2: ( () otherlv_1= 'Step' otherlv_2= '(' ( (lv_id_3_0= ruleatom ) ) (otherlv_4= ',' ( (lv_description_5_0= rulearith_expr ) ) )? (otherlv_6= ',' )? otherlv_7= ')' )
        // InternalSpellGrammar.g:4872:3: () otherlv_1= 'Step' otherlv_2= '(' ( (lv_id_3_0= ruleatom ) ) (otherlv_4= ',' ( (lv_description_5_0= rulearith_expr ) ) )? (otherlv_6= ',' )? otherlv_7= ')'
        {
        // InternalSpellGrammar.g:4872:3: ()
        // InternalSpellGrammar.g:4873:2: 
        {
        if ( state.backtracking==0 ) {
           
          	  /* */ 
          	
        }

        }

        otherlv_1=(Token)match(input,84,FollowSets000.FOLLOW_9); if (state.failed) return ;
        otherlv_2=(Token)match(input,19,FollowSets000.FOLLOW_28); if (state.failed) return ;
        // InternalSpellGrammar.g:4889:1: ( (lv_id_3_0= ruleatom ) )
        // InternalSpellGrammar.g:4890:1: (lv_id_3_0= ruleatom )
        {
        // InternalSpellGrammar.g:4890:1: (lv_id_3_0= ruleatom )
        // InternalSpellGrammar.g:4891:3: lv_id_3_0= ruleatom
        {
        if ( state.backtracking==0 ) {
           
          	        newCompositeNode(grammarAccess.getPowerAccess().getIdAtomParserRuleCall_0_3_0()); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_14);
        lv_id_3_0=ruleatom();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSpellGrammar.g:4907:2: (otherlv_4= ',' ( (lv_description_5_0= rulearith_expr ) ) )?
        int alt201=2;
        int LA201_0 = input.LA(1);

        if ( (LA201_0==23) ) {
            int LA201_1 = input.LA(2);

            if ( (LA201_1==RULE_STRING||(LA201_1>=RULE_NAME_TERMINAL && LA201_1<=RULE_NUMBER)||LA201_1==19||LA201_1==28||LA201_1==48||LA201_1==79||(LA201_1>=83 && LA201_1<=96)||LA201_1==98||LA201_1==100) ) {
                alt201=1;
            }
        }
        switch (alt201) {
            case 1 :
                // InternalSpellGrammar.g:4907:4: otherlv_4= ',' ( (lv_description_5_0= rulearith_expr ) )
                {
                otherlv_4=(Token)match(input,23,FollowSets000.FOLLOW_28); if (state.failed) return ;
                // InternalSpellGrammar.g:4911:1: ( (lv_description_5_0= rulearith_expr ) )
                // InternalSpellGrammar.g:4912:1: (lv_description_5_0= rulearith_expr )
                {
                // InternalSpellGrammar.g:4912:1: (lv_description_5_0= rulearith_expr )
                // InternalSpellGrammar.g:4913:3: lv_description_5_0= rulearith_expr
                {
                if ( state.backtracking==0 ) {
                   
                  	        newCompositeNode(grammarAccess.getPowerAccess().getDescriptionArith_exprParserRuleCall_0_4_1_0()); 
                  	    
                }
                pushFollow(FollowSets000.FOLLOW_14);
                lv_description_5_0=rulearith_expr();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;

        }

        // InternalSpellGrammar.g:4929:4: (otherlv_6= ',' )?
        int alt202=2;
        int LA202_0 = input.LA(1);

        if ( (LA202_0==23) ) {
            alt202=1;
        }
        switch (alt202) {
            case 1 :
                // InternalSpellGrammar.g:4929:6: otherlv_6= ','
                {
                otherlv_6=(Token)match(input,23,FollowSets000.FOLLOW_7); if (state.failed) return ;

                }
                break;

        }

        otherlv_7=(Token)match(input,20,FollowSets000.FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred132_InternalSpellGrammar

    // $ANTLR start synpred135_InternalSpellGrammar
    public final void synpred135_InternalSpellGrammar_fragment() throws RecognitionException {   
        Token otherlv_9=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_15=null;
        EObject lv_id_11_0 = null;

        EObject lv_description_13_0 = null;


        // InternalSpellGrammar.g:4938:6: ( ( () otherlv_9= 'DisplayStep' otherlv_10= '(' ( (lv_id_11_0= rulearith_expr ) ) (otherlv_12= ',' ( (lv_description_13_0= rulearith_expr ) ) )? (otherlv_14= ',' )? otherlv_15= ')' ) )
        // InternalSpellGrammar.g:4938:6: ( () otherlv_9= 'DisplayStep' otherlv_10= '(' ( (lv_id_11_0= rulearith_expr ) ) (otherlv_12= ',' ( (lv_description_13_0= rulearith_expr ) ) )? (otherlv_14= ',' )? otherlv_15= ')' )
        {
        // InternalSpellGrammar.g:4938:6: ( () otherlv_9= 'DisplayStep' otherlv_10= '(' ( (lv_id_11_0= rulearith_expr ) ) (otherlv_12= ',' ( (lv_description_13_0= rulearith_expr ) ) )? (otherlv_14= ',' )? otherlv_15= ')' )
        // InternalSpellGrammar.g:4938:7: () otherlv_9= 'DisplayStep' otherlv_10= '(' ( (lv_id_11_0= rulearith_expr ) ) (otherlv_12= ',' ( (lv_description_13_0= rulearith_expr ) ) )? (otherlv_14= ',' )? otherlv_15= ')'
        {
        // InternalSpellGrammar.g:4938:7: ()
        // InternalSpellGrammar.g:4939:2: 
        {
        if ( state.backtracking==0 ) {
           
          	  /* */ 
          	
        }

        }

        otherlv_9=(Token)match(input,85,FollowSets000.FOLLOW_9); if (state.failed) return ;
        otherlv_10=(Token)match(input,19,FollowSets000.FOLLOW_28); if (state.failed) return ;
        // InternalSpellGrammar.g:4955:1: ( (lv_id_11_0= rulearith_expr ) )
        // InternalSpellGrammar.g:4956:1: (lv_id_11_0= rulearith_expr )
        {
        // InternalSpellGrammar.g:4956:1: (lv_id_11_0= rulearith_expr )
        // InternalSpellGrammar.g:4957:3: lv_id_11_0= rulearith_expr
        {
        if ( state.backtracking==0 ) {
           
          	        newCompositeNode(grammarAccess.getPowerAccess().getIdArith_exprParserRuleCall_1_3_0()); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_14);
        lv_id_11_0=rulearith_expr();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSpellGrammar.g:4973:2: (otherlv_12= ',' ( (lv_description_13_0= rulearith_expr ) ) )?
        int alt203=2;
        int LA203_0 = input.LA(1);

        if ( (LA203_0==23) ) {
            int LA203_1 = input.LA(2);

            if ( (LA203_1==RULE_STRING||(LA203_1>=RULE_NAME_TERMINAL && LA203_1<=RULE_NUMBER)||LA203_1==19||LA203_1==28||LA203_1==48||LA203_1==79||(LA203_1>=83 && LA203_1<=96)||LA203_1==98||LA203_1==100) ) {
                alt203=1;
            }
        }
        switch (alt203) {
            case 1 :
                // InternalSpellGrammar.g:4973:4: otherlv_12= ',' ( (lv_description_13_0= rulearith_expr ) )
                {
                otherlv_12=(Token)match(input,23,FollowSets000.FOLLOW_28); if (state.failed) return ;
                // InternalSpellGrammar.g:4977:1: ( (lv_description_13_0= rulearith_expr ) )
                // InternalSpellGrammar.g:4978:1: (lv_description_13_0= rulearith_expr )
                {
                // InternalSpellGrammar.g:4978:1: (lv_description_13_0= rulearith_expr )
                // InternalSpellGrammar.g:4979:3: lv_description_13_0= rulearith_expr
                {
                if ( state.backtracking==0 ) {
                   
                  	        newCompositeNode(grammarAccess.getPowerAccess().getDescriptionArith_exprParserRuleCall_1_4_1_0()); 
                  	    
                }
                pushFollow(FollowSets000.FOLLOW_14);
                lv_description_13_0=rulearith_expr();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;

        }

        // InternalSpellGrammar.g:4995:4: (otherlv_14= ',' )?
        int alt204=2;
        int LA204_0 = input.LA(1);

        if ( (LA204_0==23) ) {
            alt204=1;
        }
        switch (alt204) {
            case 1 :
                // InternalSpellGrammar.g:4995:6: otherlv_14= ','
                {
                otherlv_14=(Token)match(input,23,FollowSets000.FOLLOW_7); if (state.failed) return ;

                }
                break;

        }

        otherlv_15=(Token)match(input,20,FollowSets000.FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred135_InternalSpellGrammar

    // $ANTLR start synpred137_InternalSpellGrammar
    public final void synpred137_InternalSpellGrammar_fragment() throws RecognitionException {   
        Token otherlv_17=null;
        Token otherlv_18=null;
        Token otherlv_20=null;
        Token otherlv_21=null;
        EObject lv_args_19_0 = null;


        // InternalSpellGrammar.g:5004:6: ( ( () otherlv_17= 'ShowTM' otherlv_18= '(' ( (lv_args_19_0= rulearglist ) ) (otherlv_20= ',' )? otherlv_21= ')' ) )
        // InternalSpellGrammar.g:5004:6: ( () otherlv_17= 'ShowTM' otherlv_18= '(' ( (lv_args_19_0= rulearglist ) ) (otherlv_20= ',' )? otherlv_21= ')' )
        {
        // InternalSpellGrammar.g:5004:6: ( () otherlv_17= 'ShowTM' otherlv_18= '(' ( (lv_args_19_0= rulearglist ) ) (otherlv_20= ',' )? otherlv_21= ')' )
        // InternalSpellGrammar.g:5004:7: () otherlv_17= 'ShowTM' otherlv_18= '(' ( (lv_args_19_0= rulearglist ) ) (otherlv_20= ',' )? otherlv_21= ')'
        {
        // InternalSpellGrammar.g:5004:7: ()
        // InternalSpellGrammar.g:5005:2: 
        {
        if ( state.backtracking==0 ) {
           
          	  /* */ 
          	
        }

        }

        otherlv_17=(Token)match(input,86,FollowSets000.FOLLOW_9); if (state.failed) return ;
        otherlv_18=(Token)match(input,19,FollowSets000.FOLLOW_66); if (state.failed) return ;
        // InternalSpellGrammar.g:5021:1: ( (lv_args_19_0= rulearglist ) )
        // InternalSpellGrammar.g:5022:1: (lv_args_19_0= rulearglist )
        {
        // InternalSpellGrammar.g:5022:1: (lv_args_19_0= rulearglist )
        // InternalSpellGrammar.g:5023:3: lv_args_19_0= rulearglist
        {
        if ( state.backtracking==0 ) {
           
          	        newCompositeNode(grammarAccess.getPowerAccess().getArgsArglistParserRuleCall_2_3_0()); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_14);
        lv_args_19_0=rulearglist();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSpellGrammar.g:5039:2: (otherlv_20= ',' )?
        int alt205=2;
        int LA205_0 = input.LA(1);

        if ( (LA205_0==23) ) {
            alt205=1;
        }
        switch (alt205) {
            case 1 :
                // InternalSpellGrammar.g:5039:4: otherlv_20= ','
                {
                otherlv_20=(Token)match(input,23,FollowSets000.FOLLOW_7); if (state.failed) return ;

                }
                break;

        }

        otherlv_21=(Token)match(input,20,FollowSets000.FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred137_InternalSpellGrammar

    // $ANTLR start synpred139_InternalSpellGrammar
    public final void synpred139_InternalSpellGrammar_fragment() throws RecognitionException {   
        EObject lv_trailer_28_0 = null;


        // InternalSpellGrammar.g:5092:1: ( (lv_trailer_28_0= ruletrailer ) )
        // InternalSpellGrammar.g:5092:1: (lv_trailer_28_0= ruletrailer )
        {
        // InternalSpellGrammar.g:5092:1: (lv_trailer_28_0= ruletrailer )
        // InternalSpellGrammar.g:5093:3: lv_trailer_28_0= ruletrailer
        {
        if ( state.backtracking==0 ) {
           
          	        newCompositeNode(grammarAccess.getPowerAccess().getTrailerTrailerParserRuleCall_3_6_0()); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_trailer_28_0=ruletrailer();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred139_InternalSpellGrammar

    // $ANTLR start synpred140_InternalSpellGrammar
    public final void synpred140_InternalSpellGrammar_fragment() throws RecognitionException {   
        Token otherlv_23=null;
        Token otherlv_24=null;
        Token otherlv_26=null;
        Token otherlv_27=null;
        EObject lv_args_25_0 = null;

        EObject lv_trailer_28_0 = null;


        // InternalSpellGrammar.g:5048:6: ( ( () otherlv_23= 'Send' otherlv_24= '(' ( (lv_args_25_0= rulearglist ) ) (otherlv_26= ',' )? otherlv_27= ')' ( (lv_trailer_28_0= ruletrailer ) )* ) )
        // InternalSpellGrammar.g:5048:6: ( () otherlv_23= 'Send' otherlv_24= '(' ( (lv_args_25_0= rulearglist ) ) (otherlv_26= ',' )? otherlv_27= ')' ( (lv_trailer_28_0= ruletrailer ) )* )
        {
        // InternalSpellGrammar.g:5048:6: ( () otherlv_23= 'Send' otherlv_24= '(' ( (lv_args_25_0= rulearglist ) ) (otherlv_26= ',' )? otherlv_27= ')' ( (lv_trailer_28_0= ruletrailer ) )* )
        // InternalSpellGrammar.g:5048:7: () otherlv_23= 'Send' otherlv_24= '(' ( (lv_args_25_0= rulearglist ) ) (otherlv_26= ',' )? otherlv_27= ')' ( (lv_trailer_28_0= ruletrailer ) )*
        {
        // InternalSpellGrammar.g:5048:7: ()
        // InternalSpellGrammar.g:5049:2: 
        {
        if ( state.backtracking==0 ) {
           
          	  /* */ 
          	
        }

        }

        otherlv_23=(Token)match(input,87,FollowSets000.FOLLOW_9); if (state.failed) return ;
        otherlv_24=(Token)match(input,19,FollowSets000.FOLLOW_66); if (state.failed) return ;
        // InternalSpellGrammar.g:5065:1: ( (lv_args_25_0= rulearglist ) )
        // InternalSpellGrammar.g:5066:1: (lv_args_25_0= rulearglist )
        {
        // InternalSpellGrammar.g:5066:1: (lv_args_25_0= rulearglist )
        // InternalSpellGrammar.g:5067:3: lv_args_25_0= rulearglist
        {
        if ( state.backtracking==0 ) {
           
          	        newCompositeNode(grammarAccess.getPowerAccess().getArgsArglistParserRuleCall_3_3_0()); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_14);
        lv_args_25_0=rulearglist();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSpellGrammar.g:5083:2: (otherlv_26= ',' )?
        int alt206=2;
        int LA206_0 = input.LA(1);

        if ( (LA206_0==23) ) {
            alt206=1;
        }
        switch (alt206) {
            case 1 :
                // InternalSpellGrammar.g:5083:4: otherlv_26= ','
                {
                otherlv_26=(Token)match(input,23,FollowSets000.FOLLOW_7); if (state.failed) return ;

                }
                break;

        }

        otherlv_27=(Token)match(input,20,FollowSets000.FOLLOW_67); if (state.failed) return ;
        // InternalSpellGrammar.g:5091:1: ( (lv_trailer_28_0= ruletrailer ) )*
        loop207:
        do {
            int alt207=2;
            int LA207_0 = input.LA(1);

            if ( (LA207_0==19||LA207_0==48||LA207_0==96) ) {
                alt207=1;
            }


            switch (alt207) {
        	case 1 :
        	    // InternalSpellGrammar.g:5092:1: (lv_trailer_28_0= ruletrailer )
        	    {
        	    // InternalSpellGrammar.g:5092:1: (lv_trailer_28_0= ruletrailer )
        	    // InternalSpellGrammar.g:5093:3: lv_trailer_28_0= ruletrailer
        	    {
        	    if ( state.backtracking==0 ) {
        	       
        	      	        newCompositeNode(grammarAccess.getPowerAccess().getTrailerTrailerParserRuleCall_3_6_0()); 
        	      	    
        	    }
        	    pushFollow(FollowSets000.FOLLOW_67);
        	    lv_trailer_28_0=ruletrailer();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop207;
            }
        } while (true);


        }


        }
    }
    // $ANTLR end synpred140_InternalSpellGrammar

    // $ANTLR start synpred142_InternalSpellGrammar
    public final void synpred142_InternalSpellGrammar_fragment() throws RecognitionException {   
        EObject lv_trailer_35_0 = null;


        // InternalSpellGrammar.g:5154:1: ( (lv_trailer_35_0= ruletrailer ) )
        // InternalSpellGrammar.g:5154:1: (lv_trailer_35_0= ruletrailer )
        {
        // InternalSpellGrammar.g:5154:1: (lv_trailer_35_0= ruletrailer )
        // InternalSpellGrammar.g:5155:3: lv_trailer_35_0= ruletrailer
        {
        if ( state.backtracking==0 ) {
           
          	        newCompositeNode(grammarAccess.getPowerAccess().getTrailerTrailerParserRuleCall_4_6_0()); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_trailer_35_0=ruletrailer();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred142_InternalSpellGrammar

    // $ANTLR start synpred143_InternalSpellGrammar
    public final void synpred143_InternalSpellGrammar_fragment() throws RecognitionException {   
        Token otherlv_30=null;
        Token otherlv_31=null;
        Token otherlv_33=null;
        Token otherlv_34=null;
        EObject lv_args_32_0 = null;

        EObject lv_trailer_35_0 = null;


        // InternalSpellGrammar.g:5110:6: ( ( () otherlv_30= 'BuildTC' otherlv_31= '(' ( (lv_args_32_0= rulearglist ) ) (otherlv_33= ',' )? otherlv_34= ')' ( (lv_trailer_35_0= ruletrailer ) )* ) )
        // InternalSpellGrammar.g:5110:6: ( () otherlv_30= 'BuildTC' otherlv_31= '(' ( (lv_args_32_0= rulearglist ) ) (otherlv_33= ',' )? otherlv_34= ')' ( (lv_trailer_35_0= ruletrailer ) )* )
        {
        // InternalSpellGrammar.g:5110:6: ( () otherlv_30= 'BuildTC' otherlv_31= '(' ( (lv_args_32_0= rulearglist ) ) (otherlv_33= ',' )? otherlv_34= ')' ( (lv_trailer_35_0= ruletrailer ) )* )
        // InternalSpellGrammar.g:5110:7: () otherlv_30= 'BuildTC' otherlv_31= '(' ( (lv_args_32_0= rulearglist ) ) (otherlv_33= ',' )? otherlv_34= ')' ( (lv_trailer_35_0= ruletrailer ) )*
        {
        // InternalSpellGrammar.g:5110:7: ()
        // InternalSpellGrammar.g:5111:2: 
        {
        if ( state.backtracking==0 ) {
           
          	  /* */ 
          	
        }

        }

        otherlv_30=(Token)match(input,88,FollowSets000.FOLLOW_9); if (state.failed) return ;
        otherlv_31=(Token)match(input,19,FollowSets000.FOLLOW_66); if (state.failed) return ;
        // InternalSpellGrammar.g:5127:1: ( (lv_args_32_0= rulearglist ) )
        // InternalSpellGrammar.g:5128:1: (lv_args_32_0= rulearglist )
        {
        // InternalSpellGrammar.g:5128:1: (lv_args_32_0= rulearglist )
        // InternalSpellGrammar.g:5129:3: lv_args_32_0= rulearglist
        {
        if ( state.backtracking==0 ) {
           
          	        newCompositeNode(grammarAccess.getPowerAccess().getArgsArglistParserRuleCall_4_3_0()); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_14);
        lv_args_32_0=rulearglist();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSpellGrammar.g:5145:2: (otherlv_33= ',' )?
        int alt208=2;
        int LA208_0 = input.LA(1);

        if ( (LA208_0==23) ) {
            alt208=1;
        }
        switch (alt208) {
            case 1 :
                // InternalSpellGrammar.g:5145:4: otherlv_33= ','
                {
                otherlv_33=(Token)match(input,23,FollowSets000.FOLLOW_7); if (state.failed) return ;

                }
                break;

        }

        otherlv_34=(Token)match(input,20,FollowSets000.FOLLOW_67); if (state.failed) return ;
        // InternalSpellGrammar.g:5153:1: ( (lv_trailer_35_0= ruletrailer ) )*
        loop209:
        do {
            int alt209=2;
            int LA209_0 = input.LA(1);

            if ( (LA209_0==19||LA209_0==48||LA209_0==96) ) {
                alt209=1;
            }


            switch (alt209) {
        	case 1 :
        	    // InternalSpellGrammar.g:5154:1: (lv_trailer_35_0= ruletrailer )
        	    {
        	    // InternalSpellGrammar.g:5154:1: (lv_trailer_35_0= ruletrailer )
        	    // InternalSpellGrammar.g:5155:3: lv_trailer_35_0= ruletrailer
        	    {
        	    if ( state.backtracking==0 ) {
        	       
        	      	        newCompositeNode(grammarAccess.getPowerAccess().getTrailerTrailerParserRuleCall_4_6_0()); 
        	      	    
        	    }
        	    pushFollow(FollowSets000.FOLLOW_67);
        	    lv_trailer_35_0=ruletrailer();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop209;
            }
        } while (true);


        }


        }
    }
    // $ANTLR end synpred143_InternalSpellGrammar

    // $ANTLR start synpred147_InternalSpellGrammar
    public final void synpred147_InternalSpellGrammar_fragment() throws RecognitionException {   
        EObject lv_trailer_44_0 = null;


        // InternalSpellGrammar.g:5238:1: ( (lv_trailer_44_0= ruletrailer ) )
        // InternalSpellGrammar.g:5238:1: (lv_trailer_44_0= ruletrailer )
        {
        // InternalSpellGrammar.g:5238:1: (lv_trailer_44_0= ruletrailer )
        // InternalSpellGrammar.g:5239:3: lv_trailer_44_0= ruletrailer
        {
        if ( state.backtracking==0 ) {
           
          	        newCompositeNode(grammarAccess.getPowerAccess().getTrailerTrailerParserRuleCall_5_7_0()); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_trailer_44_0=ruletrailer();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred147_InternalSpellGrammar

    // $ANTLR start synpred148_InternalSpellGrammar
    public final void synpred148_InternalSpellGrammar_fragment() throws RecognitionException {   
        Token otherlv_37=null;
        Token otherlv_38=null;
        Token otherlv_40=null;
        Token otherlv_42=null;
        Token otherlv_43=null;
        EObject lv_tm_39_0 = null;

        EObject lv_args_41_0 = null;

        EObject lv_trailer_44_0 = null;


        // InternalSpellGrammar.g:5172:6: ( ( () otherlv_37= 'SetLimits' otherlv_38= '(' ( (lv_tm_39_0= ruletest ) ) ( (otherlv_40= ',' )? ( (lv_args_41_0= rulearglist ) ) )* (otherlv_42= ',' )? otherlv_43= ')' ( (lv_trailer_44_0= ruletrailer ) )* ) )
        // InternalSpellGrammar.g:5172:6: ( () otherlv_37= 'SetLimits' otherlv_38= '(' ( (lv_tm_39_0= ruletest ) ) ( (otherlv_40= ',' )? ( (lv_args_41_0= rulearglist ) ) )* (otherlv_42= ',' )? otherlv_43= ')' ( (lv_trailer_44_0= ruletrailer ) )* )
        {
        // InternalSpellGrammar.g:5172:6: ( () otherlv_37= 'SetLimits' otherlv_38= '(' ( (lv_tm_39_0= ruletest ) ) ( (otherlv_40= ',' )? ( (lv_args_41_0= rulearglist ) ) )* (otherlv_42= ',' )? otherlv_43= ')' ( (lv_trailer_44_0= ruletrailer ) )* )
        // InternalSpellGrammar.g:5172:7: () otherlv_37= 'SetLimits' otherlv_38= '(' ( (lv_tm_39_0= ruletest ) ) ( (otherlv_40= ',' )? ( (lv_args_41_0= rulearglist ) ) )* (otherlv_42= ',' )? otherlv_43= ')' ( (lv_trailer_44_0= ruletrailer ) )*
        {
        // InternalSpellGrammar.g:5172:7: ()
        // InternalSpellGrammar.g:5173:2: 
        {
        if ( state.backtracking==0 ) {
           
          	  /* */ 
          	
        }

        }

        otherlv_37=(Token)match(input,89,FollowSets000.FOLLOW_9); if (state.failed) return ;
        otherlv_38=(Token)match(input,19,FollowSets000.FOLLOW_16); if (state.failed) return ;
        // InternalSpellGrammar.g:5189:1: ( (lv_tm_39_0= ruletest ) )
        // InternalSpellGrammar.g:5190:1: (lv_tm_39_0= ruletest )
        {
        // InternalSpellGrammar.g:5190:1: (lv_tm_39_0= ruletest )
        // InternalSpellGrammar.g:5191:3: lv_tm_39_0= ruletest
        {
        if ( state.backtracking==0 ) {
           
          	        newCompositeNode(grammarAccess.getPowerAccess().getTmTestParserRuleCall_5_3_0()); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_68);
        lv_tm_39_0=ruletest();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSpellGrammar.g:5207:2: ( (otherlv_40= ',' )? ( (lv_args_41_0= rulearglist ) ) )*
        loop212:
        do {
            int alt212=2;
            int LA212_0 = input.LA(1);

            if ( (LA212_0==23) ) {
                int LA212_1 = input.LA(2);

                if ( (LA212_1==RULE_STRING||(LA212_1>=RULE_NAME_TERMINAL && LA212_1<=RULE_NUMBER)||LA212_1==19||(LA212_1>=25 && LA212_1<=26)||LA212_1==28||LA212_1==48||LA212_1==65||LA212_1==79||(LA212_1>=83 && LA212_1<=96)||LA212_1==98||(LA212_1>=100 && LA212_1<=101)) ) {
                    alt212=1;
                }


            }
            else if ( (LA212_0==RULE_STRING||(LA212_0>=RULE_NAME_TERMINAL && LA212_0<=RULE_NUMBER)||LA212_0==19||(LA212_0>=25 && LA212_0<=26)||LA212_0==28||LA212_0==48||LA212_0==65||LA212_0==79||(LA212_0>=83 && LA212_0<=96)||LA212_0==98||(LA212_0>=100 && LA212_0<=101)) ) {
                alt212=1;
            }


            switch (alt212) {
        	case 1 :
        	    // InternalSpellGrammar.g:5207:3: (otherlv_40= ',' )? ( (lv_args_41_0= rulearglist ) )
        	    {
        	    // InternalSpellGrammar.g:5207:3: (otherlv_40= ',' )?
        	    int alt211=2;
        	    int LA211_0 = input.LA(1);

        	    if ( (LA211_0==23) ) {
        	        alt211=1;
        	    }
        	    switch (alt211) {
        	        case 1 :
        	            // InternalSpellGrammar.g:5207:5: otherlv_40= ','
        	            {
        	            otherlv_40=(Token)match(input,23,FollowSets000.FOLLOW_66); if (state.failed) return ;

        	            }
        	            break;

        	    }

        	    // InternalSpellGrammar.g:5211:3: ( (lv_args_41_0= rulearglist ) )
        	    // InternalSpellGrammar.g:5212:1: (lv_args_41_0= rulearglist )
        	    {
        	    // InternalSpellGrammar.g:5212:1: (lv_args_41_0= rulearglist )
        	    // InternalSpellGrammar.g:5213:3: lv_args_41_0= rulearglist
        	    {
        	    if ( state.backtracking==0 ) {
        	       
        	      	        newCompositeNode(grammarAccess.getPowerAccess().getArgsArglistParserRuleCall_5_4_1_0()); 
        	      	    
        	    }
        	    pushFollow(FollowSets000.FOLLOW_68);
        	    lv_args_41_0=rulearglist();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop212;
            }
        } while (true);

        // InternalSpellGrammar.g:5229:4: (otherlv_42= ',' )?
        int alt213=2;
        int LA213_0 = input.LA(1);

        if ( (LA213_0==23) ) {
            alt213=1;
        }
        switch (alt213) {
            case 1 :
                // InternalSpellGrammar.g:5229:6: otherlv_42= ','
                {
                otherlv_42=(Token)match(input,23,FollowSets000.FOLLOW_7); if (state.failed) return ;

                }
                break;

        }

        otherlv_43=(Token)match(input,20,FollowSets000.FOLLOW_67); if (state.failed) return ;
        // InternalSpellGrammar.g:5237:1: ( (lv_trailer_44_0= ruletrailer ) )*
        loop214:
        do {
            int alt214=2;
            int LA214_0 = input.LA(1);

            if ( (LA214_0==19||LA214_0==48||LA214_0==96) ) {
                alt214=1;
            }


            switch (alt214) {
        	case 1 :
        	    // InternalSpellGrammar.g:5238:1: (lv_trailer_44_0= ruletrailer )
        	    {
        	    // InternalSpellGrammar.g:5238:1: (lv_trailer_44_0= ruletrailer )
        	    // InternalSpellGrammar.g:5239:3: lv_trailer_44_0= ruletrailer
        	    {
        	    if ( state.backtracking==0 ) {
        	       
        	      	        newCompositeNode(grammarAccess.getPowerAccess().getTrailerTrailerParserRuleCall_5_7_0()); 
        	      	    
        	    }
        	    pushFollow(FollowSets000.FOLLOW_67);
        	    lv_trailer_44_0=ruletrailer();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop214;
            }
        } while (true);


        }


        }
    }
    // $ANTLR end synpred148_InternalSpellGrammar

    // $ANTLR start synpred152_InternalSpellGrammar
    public final void synpred152_InternalSpellGrammar_fragment() throws RecognitionException {   
        EObject lv_trailer_53_0 = null;


        // InternalSpellGrammar.g:5322:1: ( (lv_trailer_53_0= ruletrailer ) )
        // InternalSpellGrammar.g:5322:1: (lv_trailer_53_0= ruletrailer )
        {
        // InternalSpellGrammar.g:5322:1: (lv_trailer_53_0= ruletrailer )
        // InternalSpellGrammar.g:5323:3: lv_trailer_53_0= ruletrailer
        {
        if ( state.backtracking==0 ) {
           
          	        newCompositeNode(grammarAccess.getPowerAccess().getTrailerTrailerParserRuleCall_6_7_0()); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_trailer_53_0=ruletrailer();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred152_InternalSpellGrammar

    // $ANTLR start synpred153_InternalSpellGrammar
    public final void synpred153_InternalSpellGrammar_fragment() throws RecognitionException {   
        Token otherlv_46=null;
        Token otherlv_47=null;
        Token otherlv_49=null;
        Token otherlv_51=null;
        Token otherlv_52=null;
        EObject lv_tm_48_0 = null;

        EObject lv_args_50_0 = null;

        EObject lv_trailer_53_0 = null;


        // InternalSpellGrammar.g:5256:6: ( ( () otherlv_46= 'GetLimits' otherlv_47= '(' ( (lv_tm_48_0= ruletest ) ) ( (otherlv_49= ',' )? ( (lv_args_50_0= rulearglist ) ) )* (otherlv_51= ',' )? otherlv_52= ')' ( (lv_trailer_53_0= ruletrailer ) )* ) )
        // InternalSpellGrammar.g:5256:6: ( () otherlv_46= 'GetLimits' otherlv_47= '(' ( (lv_tm_48_0= ruletest ) ) ( (otherlv_49= ',' )? ( (lv_args_50_0= rulearglist ) ) )* (otherlv_51= ',' )? otherlv_52= ')' ( (lv_trailer_53_0= ruletrailer ) )* )
        {
        // InternalSpellGrammar.g:5256:6: ( () otherlv_46= 'GetLimits' otherlv_47= '(' ( (lv_tm_48_0= ruletest ) ) ( (otherlv_49= ',' )? ( (lv_args_50_0= rulearglist ) ) )* (otherlv_51= ',' )? otherlv_52= ')' ( (lv_trailer_53_0= ruletrailer ) )* )
        // InternalSpellGrammar.g:5256:7: () otherlv_46= 'GetLimits' otherlv_47= '(' ( (lv_tm_48_0= ruletest ) ) ( (otherlv_49= ',' )? ( (lv_args_50_0= rulearglist ) ) )* (otherlv_51= ',' )? otherlv_52= ')' ( (lv_trailer_53_0= ruletrailer ) )*
        {
        // InternalSpellGrammar.g:5256:7: ()
        // InternalSpellGrammar.g:5257:2: 
        {
        if ( state.backtracking==0 ) {
           
          	  /* */ 
          	
        }

        }

        otherlv_46=(Token)match(input,90,FollowSets000.FOLLOW_9); if (state.failed) return ;
        otherlv_47=(Token)match(input,19,FollowSets000.FOLLOW_16); if (state.failed) return ;
        // InternalSpellGrammar.g:5273:1: ( (lv_tm_48_0= ruletest ) )
        // InternalSpellGrammar.g:5274:1: (lv_tm_48_0= ruletest )
        {
        // InternalSpellGrammar.g:5274:1: (lv_tm_48_0= ruletest )
        // InternalSpellGrammar.g:5275:3: lv_tm_48_0= ruletest
        {
        if ( state.backtracking==0 ) {
           
          	        newCompositeNode(grammarAccess.getPowerAccess().getTmTestParserRuleCall_6_3_0()); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_68);
        lv_tm_48_0=ruletest();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSpellGrammar.g:5291:2: ( (otherlv_49= ',' )? ( (lv_args_50_0= rulearglist ) ) )*
        loop217:
        do {
            int alt217=2;
            int LA217_0 = input.LA(1);

            if ( (LA217_0==23) ) {
                int LA217_1 = input.LA(2);

                if ( (LA217_1==RULE_STRING||(LA217_1>=RULE_NAME_TERMINAL && LA217_1<=RULE_NUMBER)||LA217_1==19||(LA217_1>=25 && LA217_1<=26)||LA217_1==28||LA217_1==48||LA217_1==65||LA217_1==79||(LA217_1>=83 && LA217_1<=96)||LA217_1==98||(LA217_1>=100 && LA217_1<=101)) ) {
                    alt217=1;
                }


            }
            else if ( (LA217_0==RULE_STRING||(LA217_0>=RULE_NAME_TERMINAL && LA217_0<=RULE_NUMBER)||LA217_0==19||(LA217_0>=25 && LA217_0<=26)||LA217_0==28||LA217_0==48||LA217_0==65||LA217_0==79||(LA217_0>=83 && LA217_0<=96)||LA217_0==98||(LA217_0>=100 && LA217_0<=101)) ) {
                alt217=1;
            }


            switch (alt217) {
        	case 1 :
        	    // InternalSpellGrammar.g:5291:3: (otherlv_49= ',' )? ( (lv_args_50_0= rulearglist ) )
        	    {
        	    // InternalSpellGrammar.g:5291:3: (otherlv_49= ',' )?
        	    int alt216=2;
        	    int LA216_0 = input.LA(1);

        	    if ( (LA216_0==23) ) {
        	        alt216=1;
        	    }
        	    switch (alt216) {
        	        case 1 :
        	            // InternalSpellGrammar.g:5291:5: otherlv_49= ','
        	            {
        	            otherlv_49=(Token)match(input,23,FollowSets000.FOLLOW_66); if (state.failed) return ;

        	            }
        	            break;

        	    }

        	    // InternalSpellGrammar.g:5295:3: ( (lv_args_50_0= rulearglist ) )
        	    // InternalSpellGrammar.g:5296:1: (lv_args_50_0= rulearglist )
        	    {
        	    // InternalSpellGrammar.g:5296:1: (lv_args_50_0= rulearglist )
        	    // InternalSpellGrammar.g:5297:3: lv_args_50_0= rulearglist
        	    {
        	    if ( state.backtracking==0 ) {
        	       
        	      	        newCompositeNode(grammarAccess.getPowerAccess().getArgsArglistParserRuleCall_6_4_1_0()); 
        	      	    
        	    }
        	    pushFollow(FollowSets000.FOLLOW_68);
        	    lv_args_50_0=rulearglist();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop217;
            }
        } while (true);

        // InternalSpellGrammar.g:5313:4: (otherlv_51= ',' )?
        int alt218=2;
        int LA218_0 = input.LA(1);

        if ( (LA218_0==23) ) {
            alt218=1;
        }
        switch (alt218) {
            case 1 :
                // InternalSpellGrammar.g:5313:6: otherlv_51= ','
                {
                otherlv_51=(Token)match(input,23,FollowSets000.FOLLOW_7); if (state.failed) return ;

                }
                break;

        }

        otherlv_52=(Token)match(input,20,FollowSets000.FOLLOW_67); if (state.failed) return ;
        // InternalSpellGrammar.g:5321:1: ( (lv_trailer_53_0= ruletrailer ) )*
        loop219:
        do {
            int alt219=2;
            int LA219_0 = input.LA(1);

            if ( (LA219_0==19||LA219_0==48||LA219_0==96) ) {
                alt219=1;
            }


            switch (alt219) {
        	case 1 :
        	    // InternalSpellGrammar.g:5322:1: (lv_trailer_53_0= ruletrailer )
        	    {
        	    // InternalSpellGrammar.g:5322:1: (lv_trailer_53_0= ruletrailer )
        	    // InternalSpellGrammar.g:5323:3: lv_trailer_53_0= ruletrailer
        	    {
        	    if ( state.backtracking==0 ) {
        	       
        	      	        newCompositeNode(grammarAccess.getPowerAccess().getTrailerTrailerParserRuleCall_6_7_0()); 
        	      	    
        	    }
        	    pushFollow(FollowSets000.FOLLOW_67);
        	    lv_trailer_53_0=ruletrailer();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop219;
            }
        } while (true);


        }


        }
    }
    // $ANTLR end synpred153_InternalSpellGrammar

    // $ANTLR start synpred157_InternalSpellGrammar
    public final void synpred157_InternalSpellGrammar_fragment() throws RecognitionException {   
        EObject lv_trailer_62_0 = null;


        // InternalSpellGrammar.g:5406:1: ( (lv_trailer_62_0= ruletrailer ) )
        // InternalSpellGrammar.g:5406:1: (lv_trailer_62_0= ruletrailer )
        {
        // InternalSpellGrammar.g:5406:1: (lv_trailer_62_0= ruletrailer )
        // InternalSpellGrammar.g:5407:3: lv_trailer_62_0= ruletrailer
        {
        if ( state.backtracking==0 ) {
           
          	        newCompositeNode(grammarAccess.getPowerAccess().getTrailerTrailerParserRuleCall_7_7_0()); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_trailer_62_0=ruletrailer();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred157_InternalSpellGrammar

    // $ANTLR start synpred158_InternalSpellGrammar
    public final void synpred158_InternalSpellGrammar_fragment() throws RecognitionException {   
        Token otherlv_55=null;
        Token otherlv_56=null;
        Token otherlv_58=null;
        Token otherlv_60=null;
        Token otherlv_61=null;
        EObject lv_tm_57_0 = null;

        EObject lv_args_59_0 = null;

        EObject lv_trailer_62_0 = null;


        // InternalSpellGrammar.g:5340:6: ( ( () otherlv_55= 'GetTM' otherlv_56= '(' ( (lv_tm_57_0= ruletest ) ) ( (otherlv_58= ',' )? ( (lv_args_59_0= rulearglist ) ) )* (otherlv_60= ',' )? otherlv_61= ')' ( (lv_trailer_62_0= ruletrailer ) )* ) )
        // InternalSpellGrammar.g:5340:6: ( () otherlv_55= 'GetTM' otherlv_56= '(' ( (lv_tm_57_0= ruletest ) ) ( (otherlv_58= ',' )? ( (lv_args_59_0= rulearglist ) ) )* (otherlv_60= ',' )? otherlv_61= ')' ( (lv_trailer_62_0= ruletrailer ) )* )
        {
        // InternalSpellGrammar.g:5340:6: ( () otherlv_55= 'GetTM' otherlv_56= '(' ( (lv_tm_57_0= ruletest ) ) ( (otherlv_58= ',' )? ( (lv_args_59_0= rulearglist ) ) )* (otherlv_60= ',' )? otherlv_61= ')' ( (lv_trailer_62_0= ruletrailer ) )* )
        // InternalSpellGrammar.g:5340:7: () otherlv_55= 'GetTM' otherlv_56= '(' ( (lv_tm_57_0= ruletest ) ) ( (otherlv_58= ',' )? ( (lv_args_59_0= rulearglist ) ) )* (otherlv_60= ',' )? otherlv_61= ')' ( (lv_trailer_62_0= ruletrailer ) )*
        {
        // InternalSpellGrammar.g:5340:7: ()
        // InternalSpellGrammar.g:5341:2: 
        {
        if ( state.backtracking==0 ) {
           
          	  /* */ 
          	
        }

        }

        otherlv_55=(Token)match(input,91,FollowSets000.FOLLOW_9); if (state.failed) return ;
        otherlv_56=(Token)match(input,19,FollowSets000.FOLLOW_16); if (state.failed) return ;
        // InternalSpellGrammar.g:5357:1: ( (lv_tm_57_0= ruletest ) )
        // InternalSpellGrammar.g:5358:1: (lv_tm_57_0= ruletest )
        {
        // InternalSpellGrammar.g:5358:1: (lv_tm_57_0= ruletest )
        // InternalSpellGrammar.g:5359:3: lv_tm_57_0= ruletest
        {
        if ( state.backtracking==0 ) {
           
          	        newCompositeNode(grammarAccess.getPowerAccess().getTmTestParserRuleCall_7_3_0()); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_68);
        lv_tm_57_0=ruletest();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSpellGrammar.g:5375:2: ( (otherlv_58= ',' )? ( (lv_args_59_0= rulearglist ) ) )*
        loop222:
        do {
            int alt222=2;
            int LA222_0 = input.LA(1);

            if ( (LA222_0==23) ) {
                int LA222_1 = input.LA(2);

                if ( (LA222_1==RULE_STRING||(LA222_1>=RULE_NAME_TERMINAL && LA222_1<=RULE_NUMBER)||LA222_1==19||(LA222_1>=25 && LA222_1<=26)||LA222_1==28||LA222_1==48||LA222_1==65||LA222_1==79||(LA222_1>=83 && LA222_1<=96)||LA222_1==98||(LA222_1>=100 && LA222_1<=101)) ) {
                    alt222=1;
                }


            }
            else if ( (LA222_0==RULE_STRING||(LA222_0>=RULE_NAME_TERMINAL && LA222_0<=RULE_NUMBER)||LA222_0==19||(LA222_0>=25 && LA222_0<=26)||LA222_0==28||LA222_0==48||LA222_0==65||LA222_0==79||(LA222_0>=83 && LA222_0<=96)||LA222_0==98||(LA222_0>=100 && LA222_0<=101)) ) {
                alt222=1;
            }


            switch (alt222) {
        	case 1 :
        	    // InternalSpellGrammar.g:5375:3: (otherlv_58= ',' )? ( (lv_args_59_0= rulearglist ) )
        	    {
        	    // InternalSpellGrammar.g:5375:3: (otherlv_58= ',' )?
        	    int alt221=2;
        	    int LA221_0 = input.LA(1);

        	    if ( (LA221_0==23) ) {
        	        alt221=1;
        	    }
        	    switch (alt221) {
        	        case 1 :
        	            // InternalSpellGrammar.g:5375:5: otherlv_58= ','
        	            {
        	            otherlv_58=(Token)match(input,23,FollowSets000.FOLLOW_66); if (state.failed) return ;

        	            }
        	            break;

        	    }

        	    // InternalSpellGrammar.g:5379:3: ( (lv_args_59_0= rulearglist ) )
        	    // InternalSpellGrammar.g:5380:1: (lv_args_59_0= rulearglist )
        	    {
        	    // InternalSpellGrammar.g:5380:1: (lv_args_59_0= rulearglist )
        	    // InternalSpellGrammar.g:5381:3: lv_args_59_0= rulearglist
        	    {
        	    if ( state.backtracking==0 ) {
        	       
        	      	        newCompositeNode(grammarAccess.getPowerAccess().getArgsArglistParserRuleCall_7_4_1_0()); 
        	      	    
        	    }
        	    pushFollow(FollowSets000.FOLLOW_68);
        	    lv_args_59_0=rulearglist();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop222;
            }
        } while (true);

        // InternalSpellGrammar.g:5397:4: (otherlv_60= ',' )?
        int alt223=2;
        int LA223_0 = input.LA(1);

        if ( (LA223_0==23) ) {
            alt223=1;
        }
        switch (alt223) {
            case 1 :
                // InternalSpellGrammar.g:5397:6: otherlv_60= ','
                {
                otherlv_60=(Token)match(input,23,FollowSets000.FOLLOW_7); if (state.failed) return ;

                }
                break;

        }

        otherlv_61=(Token)match(input,20,FollowSets000.FOLLOW_67); if (state.failed) return ;
        // InternalSpellGrammar.g:5405:1: ( (lv_trailer_62_0= ruletrailer ) )*
        loop224:
        do {
            int alt224=2;
            int LA224_0 = input.LA(1);

            if ( (LA224_0==19||LA224_0==48||LA224_0==96) ) {
                alt224=1;
            }


            switch (alt224) {
        	case 1 :
        	    // InternalSpellGrammar.g:5406:1: (lv_trailer_62_0= ruletrailer )
        	    {
        	    // InternalSpellGrammar.g:5406:1: (lv_trailer_62_0= ruletrailer )
        	    // InternalSpellGrammar.g:5407:3: lv_trailer_62_0= ruletrailer
        	    {
        	    if ( state.backtracking==0 ) {
        	       
        	      	        newCompositeNode(grammarAccess.getPowerAccess().getTrailerTrailerParserRuleCall_7_7_0()); 
        	      	    
        	    }
        	    pushFollow(FollowSets000.FOLLOW_67);
        	    lv_trailer_62_0=ruletrailer();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop224;
            }
        } while (true);


        }


        }
    }
    // $ANTLR end synpred158_InternalSpellGrammar

    // $ANTLR start synpred159_InternalSpellGrammar
    public final void synpred159_InternalSpellGrammar_fragment() throws RecognitionException {   
        EObject lv_trailer_68_0 = null;


        // InternalSpellGrammar.g:5464:1: ( (lv_trailer_68_0= ruletrailer ) )
        // InternalSpellGrammar.g:5464:1: (lv_trailer_68_0= ruletrailer )
        {
        // InternalSpellGrammar.g:5464:1: (lv_trailer_68_0= ruletrailer )
        // InternalSpellGrammar.g:5465:3: lv_trailer_68_0= ruletrailer
        {
        if ( state.backtracking==0 ) {
           
          	        newCompositeNode(grammarAccess.getPowerAccess().getTrailerTrailerParserRuleCall_8_5_0()); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_trailer_68_0=ruletrailer();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred159_InternalSpellGrammar

    // $ANTLR start synpred160_InternalSpellGrammar
    public final void synpred160_InternalSpellGrammar_fragment() throws RecognitionException {   
        Token otherlv_64=null;
        Token otherlv_65=null;
        Token lv_target_66_0=null;
        Token otherlv_67=null;
        EObject lv_trailer_68_0 = null;


        // InternalSpellGrammar.g:5424:6: ( ( () otherlv_64= 'Goto' otherlv_65= '(' ( (lv_target_66_0= RULE_STRING ) ) otherlv_67= ')' ( (lv_trailer_68_0= ruletrailer ) )* ) )
        // InternalSpellGrammar.g:5424:6: ( () otherlv_64= 'Goto' otherlv_65= '(' ( (lv_target_66_0= RULE_STRING ) ) otherlv_67= ')' ( (lv_trailer_68_0= ruletrailer ) )* )
        {
        // InternalSpellGrammar.g:5424:6: ( () otherlv_64= 'Goto' otherlv_65= '(' ( (lv_target_66_0= RULE_STRING ) ) otherlv_67= ')' ( (lv_trailer_68_0= ruletrailer ) )* )
        // InternalSpellGrammar.g:5424:7: () otherlv_64= 'Goto' otherlv_65= '(' ( (lv_target_66_0= RULE_STRING ) ) otherlv_67= ')' ( (lv_trailer_68_0= ruletrailer ) )*
        {
        // InternalSpellGrammar.g:5424:7: ()
        // InternalSpellGrammar.g:5425:2: 
        {
        if ( state.backtracking==0 ) {
           
          	  /* */ 
          	
        }

        }

        otherlv_64=(Token)match(input,92,FollowSets000.FOLLOW_9); if (state.failed) return ;
        otherlv_65=(Token)match(input,19,FollowSets000.FOLLOW_69); if (state.failed) return ;
        // InternalSpellGrammar.g:5441:1: ( (lv_target_66_0= RULE_STRING ) )
        // InternalSpellGrammar.g:5442:1: (lv_target_66_0= RULE_STRING )
        {
        // InternalSpellGrammar.g:5442:1: (lv_target_66_0= RULE_STRING )
        // InternalSpellGrammar.g:5443:3: lv_target_66_0= RULE_STRING
        {
        lv_target_66_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_7); if (state.failed) return ;

        }


        }

        otherlv_67=(Token)match(input,20,FollowSets000.FOLLOW_67); if (state.failed) return ;
        // InternalSpellGrammar.g:5463:1: ( (lv_trailer_68_0= ruletrailer ) )*
        loop225:
        do {
            int alt225=2;
            int LA225_0 = input.LA(1);

            if ( (LA225_0==19||LA225_0==48||LA225_0==96) ) {
                alt225=1;
            }


            switch (alt225) {
        	case 1 :
        	    // InternalSpellGrammar.g:5464:1: (lv_trailer_68_0= ruletrailer )
        	    {
        	    // InternalSpellGrammar.g:5464:1: (lv_trailer_68_0= ruletrailer )
        	    // InternalSpellGrammar.g:5465:3: lv_trailer_68_0= ruletrailer
        	    {
        	    if ( state.backtracking==0 ) {
        	       
        	      	        newCompositeNode(grammarAccess.getPowerAccess().getTrailerTrailerParserRuleCall_8_5_0()); 
        	      	    
        	    }
        	    pushFollow(FollowSets000.FOLLOW_67);
        	    lv_trailer_68_0=ruletrailer();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop225;
            }
        } while (true);


        }


        }
    }
    // $ANTLR end synpred160_InternalSpellGrammar

    // $ANTLR start synpred161_InternalSpellGrammar
    public final void synpred161_InternalSpellGrammar_fragment() throws RecognitionException {   
        EObject lv_trailer_74_0 = null;


        // InternalSpellGrammar.g:5522:1: ( (lv_trailer_74_0= ruletrailer ) )
        // InternalSpellGrammar.g:5522:1: (lv_trailer_74_0= ruletrailer )
        {
        // InternalSpellGrammar.g:5522:1: (lv_trailer_74_0= ruletrailer )
        // InternalSpellGrammar.g:5523:3: lv_trailer_74_0= ruletrailer
        {
        if ( state.backtracking==0 ) {
           
          	        newCompositeNode(grammarAccess.getPowerAccess().getTrailerTrailerParserRuleCall_9_5_0()); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_trailer_74_0=ruletrailer();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred161_InternalSpellGrammar

    // $ANTLR start synpred162_InternalSpellGrammar
    public final void synpred162_InternalSpellGrammar_fragment() throws RecognitionException {   
        Token otherlv_70=null;
        Token otherlv_71=null;
        Token otherlv_73=null;
        EObject lv_expr_72_0 = null;

        EObject lv_trailer_74_0 = null;


        // InternalSpellGrammar.g:5482:6: ( ( () otherlv_70= 'Goto' otherlv_71= '(' ( (lv_expr_72_0= ruletest ) ) otherlv_73= ')' ( (lv_trailer_74_0= ruletrailer ) )* ) )
        // InternalSpellGrammar.g:5482:6: ( () otherlv_70= 'Goto' otherlv_71= '(' ( (lv_expr_72_0= ruletest ) ) otherlv_73= ')' ( (lv_trailer_74_0= ruletrailer ) )* )
        {
        // InternalSpellGrammar.g:5482:6: ( () otherlv_70= 'Goto' otherlv_71= '(' ( (lv_expr_72_0= ruletest ) ) otherlv_73= ')' ( (lv_trailer_74_0= ruletrailer ) )* )
        // InternalSpellGrammar.g:5482:7: () otherlv_70= 'Goto' otherlv_71= '(' ( (lv_expr_72_0= ruletest ) ) otherlv_73= ')' ( (lv_trailer_74_0= ruletrailer ) )*
        {
        // InternalSpellGrammar.g:5482:7: ()
        // InternalSpellGrammar.g:5483:2: 
        {
        if ( state.backtracking==0 ) {
           
          	  /* */ 
          	
        }

        }

        otherlv_70=(Token)match(input,92,FollowSets000.FOLLOW_9); if (state.failed) return ;
        otherlv_71=(Token)match(input,19,FollowSets000.FOLLOW_16); if (state.failed) return ;
        // InternalSpellGrammar.g:5499:1: ( (lv_expr_72_0= ruletest ) )
        // InternalSpellGrammar.g:5500:1: (lv_expr_72_0= ruletest )
        {
        // InternalSpellGrammar.g:5500:1: (lv_expr_72_0= ruletest )
        // InternalSpellGrammar.g:5501:3: lv_expr_72_0= ruletest
        {
        if ( state.backtracking==0 ) {
           
          	        newCompositeNode(grammarAccess.getPowerAccess().getExprTestParserRuleCall_9_3_0()); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_7);
        lv_expr_72_0=ruletest();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_73=(Token)match(input,20,FollowSets000.FOLLOW_67); if (state.failed) return ;
        // InternalSpellGrammar.g:5521:1: ( (lv_trailer_74_0= ruletrailer ) )*
        loop226:
        do {
            int alt226=2;
            int LA226_0 = input.LA(1);

            if ( (LA226_0==19||LA226_0==48||LA226_0==96) ) {
                alt226=1;
            }


            switch (alt226) {
        	case 1 :
        	    // InternalSpellGrammar.g:5522:1: (lv_trailer_74_0= ruletrailer )
        	    {
        	    // InternalSpellGrammar.g:5522:1: (lv_trailer_74_0= ruletrailer )
        	    // InternalSpellGrammar.g:5523:3: lv_trailer_74_0= ruletrailer
        	    {
        	    if ( state.backtracking==0 ) {
        	       
        	      	        newCompositeNode(grammarAccess.getPowerAccess().getTrailerTrailerParserRuleCall_9_5_0()); 
        	      	    
        	    }
        	    pushFollow(FollowSets000.FOLLOW_67);
        	    lv_trailer_74_0=ruletrailer();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop226;
            }
        } while (true);


        }


        }
    }
    // $ANTLR end synpred162_InternalSpellGrammar

    // $ANTLR start synpred164_InternalSpellGrammar
    public final void synpred164_InternalSpellGrammar_fragment() throws RecognitionException {   
        EObject lv_trailer_81_0 = null;


        // InternalSpellGrammar.g:5584:1: ( (lv_trailer_81_0= ruletrailer ) )
        // InternalSpellGrammar.g:5584:1: (lv_trailer_81_0= ruletrailer )
        {
        // InternalSpellGrammar.g:5584:1: (lv_trailer_81_0= ruletrailer )
        // InternalSpellGrammar.g:5585:3: lv_trailer_81_0= ruletrailer
        {
        if ( state.backtracking==0 ) {
           
          	        newCompositeNode(grammarAccess.getPowerAccess().getTrailerTrailerParserRuleCall_10_6_0()); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_trailer_81_0=ruletrailer();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred164_InternalSpellGrammar

    // $ANTLR start synpred165_InternalSpellGrammar
    public final void synpred165_InternalSpellGrammar_fragment() throws RecognitionException {   
        Token otherlv_76=null;
        Token otherlv_77=null;
        Token otherlv_79=null;
        Token otherlv_80=null;
        EObject lv_args_78_0 = null;

        EObject lv_trailer_81_0 = null;


        // InternalSpellGrammar.g:5540:6: ( ( () otherlv_76= 'Verify' otherlv_77= '(' ( (lv_args_78_0= rulearglist ) ) (otherlv_79= ',' )? otherlv_80= ')' ( (lv_trailer_81_0= ruletrailer ) )* ) )
        // InternalSpellGrammar.g:5540:6: ( () otherlv_76= 'Verify' otherlv_77= '(' ( (lv_args_78_0= rulearglist ) ) (otherlv_79= ',' )? otherlv_80= ')' ( (lv_trailer_81_0= ruletrailer ) )* )
        {
        // InternalSpellGrammar.g:5540:6: ( () otherlv_76= 'Verify' otherlv_77= '(' ( (lv_args_78_0= rulearglist ) ) (otherlv_79= ',' )? otherlv_80= ')' ( (lv_trailer_81_0= ruletrailer ) )* )
        // InternalSpellGrammar.g:5540:7: () otherlv_76= 'Verify' otherlv_77= '(' ( (lv_args_78_0= rulearglist ) ) (otherlv_79= ',' )? otherlv_80= ')' ( (lv_trailer_81_0= ruletrailer ) )*
        {
        // InternalSpellGrammar.g:5540:7: ()
        // InternalSpellGrammar.g:5541:2: 
        {
        if ( state.backtracking==0 ) {
           
          	  /* */ 
          	
        }

        }

        otherlv_76=(Token)match(input,93,FollowSets000.FOLLOW_9); if (state.failed) return ;
        otherlv_77=(Token)match(input,19,FollowSets000.FOLLOW_66); if (state.failed) return ;
        // InternalSpellGrammar.g:5557:1: ( (lv_args_78_0= rulearglist ) )
        // InternalSpellGrammar.g:5558:1: (lv_args_78_0= rulearglist )
        {
        // InternalSpellGrammar.g:5558:1: (lv_args_78_0= rulearglist )
        // InternalSpellGrammar.g:5559:3: lv_args_78_0= rulearglist
        {
        if ( state.backtracking==0 ) {
           
          	        newCompositeNode(grammarAccess.getPowerAccess().getArgsArglistParserRuleCall_10_3_0()); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_14);
        lv_args_78_0=rulearglist();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSpellGrammar.g:5575:2: (otherlv_79= ',' )?
        int alt227=2;
        int LA227_0 = input.LA(1);

        if ( (LA227_0==23) ) {
            alt227=1;
        }
        switch (alt227) {
            case 1 :
                // InternalSpellGrammar.g:5575:4: otherlv_79= ','
                {
                otherlv_79=(Token)match(input,23,FollowSets000.FOLLOW_7); if (state.failed) return ;

                }
                break;

        }

        otherlv_80=(Token)match(input,20,FollowSets000.FOLLOW_67); if (state.failed) return ;
        // InternalSpellGrammar.g:5583:1: ( (lv_trailer_81_0= ruletrailer ) )*
        loop228:
        do {
            int alt228=2;
            int LA228_0 = input.LA(1);

            if ( (LA228_0==19||LA228_0==48||LA228_0==96) ) {
                alt228=1;
            }


            switch (alt228) {
        	case 1 :
        	    // InternalSpellGrammar.g:5584:1: (lv_trailer_81_0= ruletrailer )
        	    {
        	    // InternalSpellGrammar.g:5584:1: (lv_trailer_81_0= ruletrailer )
        	    // InternalSpellGrammar.g:5585:3: lv_trailer_81_0= ruletrailer
        	    {
        	    if ( state.backtracking==0 ) {
        	       
        	      	        newCompositeNode(grammarAccess.getPowerAccess().getTrailerTrailerParserRuleCall_10_6_0()); 
        	      	    
        	    }
        	    pushFollow(FollowSets000.FOLLOW_67);
        	    lv_trailer_81_0=ruletrailer();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop228;
            }
        } while (true);


        }


        }
    }
    // $ANTLR end synpred165_InternalSpellGrammar

    // $ANTLR start synpred167_InternalSpellGrammar
    public final void synpred167_InternalSpellGrammar_fragment() throws RecognitionException {   
        EObject lv_trailer_88_0 = null;


        // InternalSpellGrammar.g:5646:1: ( (lv_trailer_88_0= ruletrailer ) )
        // InternalSpellGrammar.g:5646:1: (lv_trailer_88_0= ruletrailer )
        {
        // InternalSpellGrammar.g:5646:1: (lv_trailer_88_0= ruletrailer )
        // InternalSpellGrammar.g:5647:3: lv_trailer_88_0= ruletrailer
        {
        if ( state.backtracking==0 ) {
           
          	        newCompositeNode(grammarAccess.getPowerAccess().getTrailerTrailerParserRuleCall_11_6_0()); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_trailer_88_0=ruletrailer();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred167_InternalSpellGrammar

    // $ANTLR start synpred168_InternalSpellGrammar
    public final void synpred168_InternalSpellGrammar_fragment() throws RecognitionException {   
        Token otherlv_83=null;
        Token otherlv_84=null;
        Token otherlv_86=null;
        Token otherlv_87=null;
        EObject lv_args_85_0 = null;

        EObject lv_trailer_88_0 = null;


        // InternalSpellGrammar.g:5602:6: ( ( () otherlv_83= 'WaitFor' otherlv_84= '(' ( (lv_args_85_0= rulearglist ) ) (otherlv_86= ',' )? otherlv_87= ')' ( (lv_trailer_88_0= ruletrailer ) )* ) )
        // InternalSpellGrammar.g:5602:6: ( () otherlv_83= 'WaitFor' otherlv_84= '(' ( (lv_args_85_0= rulearglist ) ) (otherlv_86= ',' )? otherlv_87= ')' ( (lv_trailer_88_0= ruletrailer ) )* )
        {
        // InternalSpellGrammar.g:5602:6: ( () otherlv_83= 'WaitFor' otherlv_84= '(' ( (lv_args_85_0= rulearglist ) ) (otherlv_86= ',' )? otherlv_87= ')' ( (lv_trailer_88_0= ruletrailer ) )* )
        // InternalSpellGrammar.g:5602:7: () otherlv_83= 'WaitFor' otherlv_84= '(' ( (lv_args_85_0= rulearglist ) ) (otherlv_86= ',' )? otherlv_87= ')' ( (lv_trailer_88_0= ruletrailer ) )*
        {
        // InternalSpellGrammar.g:5602:7: ()
        // InternalSpellGrammar.g:5603:2: 
        {
        if ( state.backtracking==0 ) {
           
          	  /* */ 
          	
        }

        }

        otherlv_83=(Token)match(input,94,FollowSets000.FOLLOW_9); if (state.failed) return ;
        otherlv_84=(Token)match(input,19,FollowSets000.FOLLOW_66); if (state.failed) return ;
        // InternalSpellGrammar.g:5619:1: ( (lv_args_85_0= rulearglist ) )
        // InternalSpellGrammar.g:5620:1: (lv_args_85_0= rulearglist )
        {
        // InternalSpellGrammar.g:5620:1: (lv_args_85_0= rulearglist )
        // InternalSpellGrammar.g:5621:3: lv_args_85_0= rulearglist
        {
        if ( state.backtracking==0 ) {
           
          	        newCompositeNode(grammarAccess.getPowerAccess().getArgsArglistParserRuleCall_11_3_0()); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_14);
        lv_args_85_0=rulearglist();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSpellGrammar.g:5637:2: (otherlv_86= ',' )?
        int alt229=2;
        int LA229_0 = input.LA(1);

        if ( (LA229_0==23) ) {
            alt229=1;
        }
        switch (alt229) {
            case 1 :
                // InternalSpellGrammar.g:5637:4: otherlv_86= ','
                {
                otherlv_86=(Token)match(input,23,FollowSets000.FOLLOW_7); if (state.failed) return ;

                }
                break;

        }

        otherlv_87=(Token)match(input,20,FollowSets000.FOLLOW_67); if (state.failed) return ;
        // InternalSpellGrammar.g:5645:1: ( (lv_trailer_88_0= ruletrailer ) )*
        loop230:
        do {
            int alt230=2;
            int LA230_0 = input.LA(1);

            if ( (LA230_0==19||LA230_0==48||LA230_0==96) ) {
                alt230=1;
            }


            switch (alt230) {
        	case 1 :
        	    // InternalSpellGrammar.g:5646:1: (lv_trailer_88_0= ruletrailer )
        	    {
        	    // InternalSpellGrammar.g:5646:1: (lv_trailer_88_0= ruletrailer )
        	    // InternalSpellGrammar.g:5647:3: lv_trailer_88_0= ruletrailer
        	    {
        	    if ( state.backtracking==0 ) {
        	       
        	      	        newCompositeNode(grammarAccess.getPowerAccess().getTrailerTrailerParserRuleCall_11_6_0()); 
        	      	    
        	    }
        	    pushFollow(FollowSets000.FOLLOW_67);
        	    lv_trailer_88_0=ruletrailer();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop230;
            }
        } while (true);


        }


        }
    }
    // $ANTLR end synpred168_InternalSpellGrammar

    // $ANTLR start synpred170_InternalSpellGrammar
    public final void synpred170_InternalSpellGrammar_fragment() throws RecognitionException {   
        EObject lv_trailer_98_0 = null;


        // InternalSpellGrammar.g:5748:1: ( (lv_trailer_98_0= ruletrailer ) )
        // InternalSpellGrammar.g:5748:1: (lv_trailer_98_0= ruletrailer )
        {
        // InternalSpellGrammar.g:5748:1: (lv_trailer_98_0= ruletrailer )
        // InternalSpellGrammar.g:5749:3: lv_trailer_98_0= ruletrailer
        {
        if ( state.backtracking==0 ) {
           
          	        newCompositeNode(grammarAccess.getPowerAccess().getTrailerTrailerParserRuleCall_13_1_1_0()); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_trailer_98_0=ruletrailer();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred170_InternalSpellGrammar

    // $ANTLR start synpred171_InternalSpellGrammar
    public final void synpred171_InternalSpellGrammar_fragment() throws RecognitionException {   
        Token otherlv_99=null;
        EObject lv_factor_100_0 = null;


        // InternalSpellGrammar.g:5765:5: (otherlv_99= '**' ( (lv_factor_100_0= rulefactor ) ) )
        // InternalSpellGrammar.g:5765:5: otherlv_99= '**' ( (lv_factor_100_0= rulefactor ) )
        {
        otherlv_99=(Token)match(input,26,FollowSets000.FOLLOW_28); if (state.failed) return ;
        // InternalSpellGrammar.g:5769:1: ( (lv_factor_100_0= rulefactor ) )
        // InternalSpellGrammar.g:5770:1: (lv_factor_100_0= rulefactor )
        {
        // InternalSpellGrammar.g:5770:1: (lv_factor_100_0= rulefactor )
        // InternalSpellGrammar.g:5771:3: lv_factor_100_0= rulefactor
        {
        if ( state.backtracking==0 ) {
           
          	        newCompositeNode(grammarAccess.getPowerAccess().getFactorFactorParserRuleCall_13_1_2_1_0()); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_factor_100_0=rulefactor();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred171_InternalSpellGrammar

    // $ANTLR start synpred172_InternalSpellGrammar
    public final void synpred172_InternalSpellGrammar_fragment() throws RecognitionException {   
        Token otherlv_99=null;
        EObject lv_trailer_98_0 = null;

        EObject lv_factor_100_0 = null;


        // InternalSpellGrammar.g:5738:2: ( () ( (lv_trailer_98_0= ruletrailer ) )+ (otherlv_99= '**' ( (lv_factor_100_0= rulefactor ) ) )? )
        // InternalSpellGrammar.g:5738:2: () ( (lv_trailer_98_0= ruletrailer ) )+ (otherlv_99= '**' ( (lv_factor_100_0= rulefactor ) ) )?
        {
        // InternalSpellGrammar.g:5738:2: ()
        // InternalSpellGrammar.g:5739:2: 
        {
        if ( state.backtracking==0 ) {
           
          	  /* */ 
          	
        }

        }

        // InternalSpellGrammar.g:5747:2: ( (lv_trailer_98_0= ruletrailer ) )+
        int cnt231=0;
        loop231:
        do {
            int alt231=2;
            int LA231_0 = input.LA(1);

            if ( (LA231_0==19||LA231_0==48||LA231_0==96) ) {
                alt231=1;
            }


            switch (alt231) {
        	case 1 :
        	    // InternalSpellGrammar.g:5748:1: (lv_trailer_98_0= ruletrailer )
        	    {
        	    // InternalSpellGrammar.g:5748:1: (lv_trailer_98_0= ruletrailer )
        	    // InternalSpellGrammar.g:5749:3: lv_trailer_98_0= ruletrailer
        	    {
        	    if ( state.backtracking==0 ) {
        	       
        	      	        newCompositeNode(grammarAccess.getPowerAccess().getTrailerTrailerParserRuleCall_13_1_1_0()); 
        	      	    
        	    }
        	    pushFollow(FollowSets000.FOLLOW_70);
        	    lv_trailer_98_0=ruletrailer();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    if ( cnt231 >= 1 ) break loop231;
        	    if (state.backtracking>0) {state.failed=true; return ;}
                    EarlyExitException eee =
                        new EarlyExitException(231, input);
                    throw eee;
            }
            cnt231++;
        } while (true);

        // InternalSpellGrammar.g:5765:3: (otherlv_99= '**' ( (lv_factor_100_0= rulefactor ) ) )?
        int alt232=2;
        int LA232_0 = input.LA(1);

        if ( (LA232_0==26) ) {
            alt232=1;
        }
        switch (alt232) {
            case 1 :
                // InternalSpellGrammar.g:5765:5: otherlv_99= '**' ( (lv_factor_100_0= rulefactor ) )
                {
                otherlv_99=(Token)match(input,26,FollowSets000.FOLLOW_28); if (state.failed) return ;
                // InternalSpellGrammar.g:5769:1: ( (lv_factor_100_0= rulefactor ) )
                // InternalSpellGrammar.g:5770:1: (lv_factor_100_0= rulefactor )
                {
                // InternalSpellGrammar.g:5770:1: (lv_factor_100_0= rulefactor )
                // InternalSpellGrammar.g:5771:3: lv_factor_100_0= rulefactor
                {
                if ( state.backtracking==0 ) {
                   
                  	        newCompositeNode(grammarAccess.getPowerAccess().getFactorFactorParserRuleCall_13_1_2_1_0()); 
                  	    
                }
                pushFollow(FollowSets000.FOLLOW_2);
                lv_factor_100_0=rulefactor();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;

        }


        }
    }
    // $ANTLR end synpred172_InternalSpellGrammar

    // $ANTLR start synpred184_InternalSpellGrammar
    public final void synpred184_InternalSpellGrammar_fragment() throws RecognitionException {   
        Token lv_strings_14_0=null;
        Token this_WS_15=null;

        // InternalSpellGrammar.g:6033:7: ( ( (lv_strings_14_0= RULE_STRING ) ) (this_WS_15= RULE_WS )? )
        // InternalSpellGrammar.g:6033:7: ( (lv_strings_14_0= RULE_STRING ) ) (this_WS_15= RULE_WS )?
        {
        // InternalSpellGrammar.g:6033:7: ( (lv_strings_14_0= RULE_STRING ) )
        // InternalSpellGrammar.g:6034:1: (lv_strings_14_0= RULE_STRING )
        {
        // InternalSpellGrammar.g:6034:1: (lv_strings_14_0= RULE_STRING )
        // InternalSpellGrammar.g:6035:3: lv_strings_14_0= RULE_STRING
        {
        lv_strings_14_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_92); if (state.failed) return ;

        }


        }

        // InternalSpellGrammar.g:6051:2: (this_WS_15= RULE_WS )?
        int alt236=2;
        int LA236_0 = input.LA(1);

        if ( (LA236_0==RULE_WS) ) {
            alt236=1;
        }
        switch (alt236) {
            case 1 :
                // InternalSpellGrammar.g:6051:3: this_WS_15= RULE_WS
                {
                this_WS_15=(Token)match(input,RULE_WS,FollowSets000.FOLLOW_2); if (state.failed) return ;

                }
                break;

        }


        }
    }
    // $ANTLR end synpred184_InternalSpellGrammar

    // $ANTLR start synpred188_InternalSpellGrammar
    public final void synpred188_InternalSpellGrammar_fragment() throws RecognitionException {   
        Token otherlv_2=null;
        Token lv_optionalComma_4_0=null;
        EObject lv_additionalTests_3_0 = null;


        // InternalSpellGrammar.g:6113:6: ( ( (otherlv_2= ',' ( (lv_additionalTests_3_0= ruletest ) ) )* ( (lv_optionalComma_4_0= ',' ) )? ) )
        // InternalSpellGrammar.g:6113:6: ( (otherlv_2= ',' ( (lv_additionalTests_3_0= ruletest ) ) )* ( (lv_optionalComma_4_0= ',' ) )? )
        {
        // InternalSpellGrammar.g:6113:6: ( (otherlv_2= ',' ( (lv_additionalTests_3_0= ruletest ) ) )* ( (lv_optionalComma_4_0= ',' ) )? )
        // InternalSpellGrammar.g:6113:7: (otherlv_2= ',' ( (lv_additionalTests_3_0= ruletest ) ) )* ( (lv_optionalComma_4_0= ',' ) )?
        {
        // InternalSpellGrammar.g:6113:7: (otherlv_2= ',' ( (lv_additionalTests_3_0= ruletest ) ) )*
        loop237:
        do {
            int alt237=2;
            int LA237_0 = input.LA(1);

            if ( (LA237_0==23) ) {
                int LA237_1 = input.LA(2);

                if ( (LA237_1==RULE_STRING||(LA237_1>=RULE_NAME_TERMINAL && LA237_1<=RULE_NUMBER)||LA237_1==19||LA237_1==28||LA237_1==48||LA237_1==65||LA237_1==79||(LA237_1>=83 && LA237_1<=96)||LA237_1==98||(LA237_1>=100 && LA237_1<=101)) ) {
                    alt237=1;
                }


            }


            switch (alt237) {
        	case 1 :
        	    // InternalSpellGrammar.g:6113:9: otherlv_2= ',' ( (lv_additionalTests_3_0= ruletest ) )
        	    {
        	    otherlv_2=(Token)match(input,23,FollowSets000.FOLLOW_16); if (state.failed) return ;
        	    // InternalSpellGrammar.g:6117:1: ( (lv_additionalTests_3_0= ruletest ) )
        	    // InternalSpellGrammar.g:6118:1: (lv_additionalTests_3_0= ruletest )
        	    {
        	    // InternalSpellGrammar.g:6118:1: (lv_additionalTests_3_0= ruletest )
        	    // InternalSpellGrammar.g:6119:3: lv_additionalTests_3_0= ruletest
        	    {
        	    if ( state.backtracking==0 ) {
        	       
        	      	        newCompositeNode(grammarAccess.getListmakerAccess().getAdditionalTestsTestParserRuleCall_1_1_0_1_0()); 
        	      	    
        	    }
        	    pushFollow(FollowSets000.FOLLOW_19);
        	    lv_additionalTests_3_0=ruletest();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop237;
            }
        } while (true);

        // InternalSpellGrammar.g:6135:4: ( (lv_optionalComma_4_0= ',' ) )?
        int alt238=2;
        int LA238_0 = input.LA(1);

        if ( (LA238_0==23) ) {
            alt238=1;
        }
        switch (alt238) {
            case 1 :
                // InternalSpellGrammar.g:6136:1: (lv_optionalComma_4_0= ',' )
                {
                // InternalSpellGrammar.g:6136:1: (lv_optionalComma_4_0= ',' )
                // InternalSpellGrammar.g:6137:3: lv_optionalComma_4_0= ','
                {
                lv_optionalComma_4_0=(Token)match(input,23,FollowSets000.FOLLOW_2); if (state.failed) return ;

                }


                }
                break;

        }


        }


        }
    }
    // $ANTLR end synpred188_InternalSpellGrammar

    // $ANTLR start synpred192_InternalSpellGrammar
    public final void synpred192_InternalSpellGrammar_fragment() throws RecognitionException {   
        Token otherlv_2=null;
        Token lv_optionalComma_4_0=null;
        EObject lv_additionalTests_3_0 = null;


        // InternalSpellGrammar.g:6208:6: ( ( (otherlv_2= ',' ( (lv_additionalTests_3_0= ruletest ) ) )* ( (lv_optionalComma_4_0= ',' ) )? ) )
        // InternalSpellGrammar.g:6208:6: ( (otherlv_2= ',' ( (lv_additionalTests_3_0= ruletest ) ) )* ( (lv_optionalComma_4_0= ',' ) )? )
        {
        // InternalSpellGrammar.g:6208:6: ( (otherlv_2= ',' ( (lv_additionalTests_3_0= ruletest ) ) )* ( (lv_optionalComma_4_0= ',' ) )? )
        // InternalSpellGrammar.g:6208:7: (otherlv_2= ',' ( (lv_additionalTests_3_0= ruletest ) ) )* ( (lv_optionalComma_4_0= ',' ) )?
        {
        // InternalSpellGrammar.g:6208:7: (otherlv_2= ',' ( (lv_additionalTests_3_0= ruletest ) ) )*
        loop239:
        do {
            int alt239=2;
            int LA239_0 = input.LA(1);

            if ( (LA239_0==23) ) {
                int LA239_1 = input.LA(2);

                if ( (LA239_1==RULE_STRING||(LA239_1>=RULE_NAME_TERMINAL && LA239_1<=RULE_NUMBER)||LA239_1==19||LA239_1==28||LA239_1==48||LA239_1==65||LA239_1==79||(LA239_1>=83 && LA239_1<=96)||LA239_1==98||(LA239_1>=100 && LA239_1<=101)) ) {
                    alt239=1;
                }


            }


            switch (alt239) {
        	case 1 :
        	    // InternalSpellGrammar.g:6208:9: otherlv_2= ',' ( (lv_additionalTests_3_0= ruletest ) )
        	    {
        	    otherlv_2=(Token)match(input,23,FollowSets000.FOLLOW_16); if (state.failed) return ;
        	    // InternalSpellGrammar.g:6212:1: ( (lv_additionalTests_3_0= ruletest ) )
        	    // InternalSpellGrammar.g:6213:1: (lv_additionalTests_3_0= ruletest )
        	    {
        	    // InternalSpellGrammar.g:6213:1: (lv_additionalTests_3_0= ruletest )
        	    // InternalSpellGrammar.g:6214:3: lv_additionalTests_3_0= ruletest
        	    {
        	    if ( state.backtracking==0 ) {
        	       
        	      	        newCompositeNode(grammarAccess.getTestlist_compAccess().getAdditionalTestsTestParserRuleCall_1_1_0_1_0()); 
        	      	    
        	    }
        	    pushFollow(FollowSets000.FOLLOW_19);
        	    lv_additionalTests_3_0=ruletest();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop239;
            }
        } while (true);

        // InternalSpellGrammar.g:6230:4: ( (lv_optionalComma_4_0= ',' ) )?
        int alt240=2;
        int LA240_0 = input.LA(1);

        if ( (LA240_0==23) ) {
            alt240=1;
        }
        switch (alt240) {
            case 1 :
                // InternalSpellGrammar.g:6231:1: (lv_optionalComma_4_0= ',' )
                {
                // InternalSpellGrammar.g:6231:1: (lv_optionalComma_4_0= ',' )
                // InternalSpellGrammar.g:6232:3: lv_optionalComma_4_0= ','
                {
                lv_optionalComma_4_0=(Token)match(input,23,FollowSets000.FOLLOW_2); if (state.failed) return ;

                }


                }
                break;

        }


        }


        }
    }
    // $ANTLR end synpred192_InternalSpellGrammar

    // $ANTLR start synpred198_InternalSpellGrammar
    public final void synpred198_InternalSpellGrammar_fragment() throws RecognitionException {   
        Token otherlv_1=null;
        EObject lv_subscript_2_0 = null;


        // InternalSpellGrammar.g:6481:4: (otherlv_1= ',' ( (lv_subscript_2_0= rulesubscript ) ) )
        // InternalSpellGrammar.g:6481:4: otherlv_1= ',' ( (lv_subscript_2_0= rulesubscript ) )
        {
        otherlv_1=(Token)match(input,23,FollowSets000.FOLLOW_51); if (state.failed) return ;
        // InternalSpellGrammar.g:6485:1: ( (lv_subscript_2_0= rulesubscript ) )
        // InternalSpellGrammar.g:6486:1: (lv_subscript_2_0= rulesubscript )
        {
        // InternalSpellGrammar.g:6486:1: (lv_subscript_2_0= rulesubscript )
        // InternalSpellGrammar.g:6487:3: lv_subscript_2_0= rulesubscript
        {
        if ( state.backtracking==0 ) {
           
          	        newCompositeNode(grammarAccess.getSubscriptlistAccess().getSubscriptSubscriptParserRuleCall_1_1_0()); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_subscript_2_0=rulesubscript();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred198_InternalSpellGrammar

    // $ANTLR start synpred206_InternalSpellGrammar
    public final void synpred206_InternalSpellGrammar_fragment() throws RecognitionException {   
        Token otherlv_1=null;
        EObject lv_exprs_2_0 = null;


        // InternalSpellGrammar.g:6721:4: (otherlv_1= ',' ( (lv_exprs_2_0= ruleexpr ) ) )
        // InternalSpellGrammar.g:6721:4: otherlv_1= ',' ( (lv_exprs_2_0= ruleexpr ) )
        {
        otherlv_1=(Token)match(input,23,FollowSets000.FOLLOW_28); if (state.failed) return ;
        // InternalSpellGrammar.g:6725:1: ( (lv_exprs_2_0= ruleexpr ) )
        // InternalSpellGrammar.g:6726:1: (lv_exprs_2_0= ruleexpr )
        {
        // InternalSpellGrammar.g:6726:1: (lv_exprs_2_0= ruleexpr )
        // InternalSpellGrammar.g:6727:3: lv_exprs_2_0= ruleexpr
        {
        if ( state.backtracking==0 ) {
           
          	        newCompositeNode(grammarAccess.getExprlistAccess().getExprsExprParserRuleCall_1_1_0()); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_exprs_2_0=ruleexpr();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred206_InternalSpellGrammar

    // $ANTLR start synpred207_InternalSpellGrammar
    public final void synpred207_InternalSpellGrammar_fragment() throws RecognitionException {   
        Token lv_optionalComma_3_0=null;

        // InternalSpellGrammar.g:6744:1: ( (lv_optionalComma_3_0= ',' ) )
        // InternalSpellGrammar.g:6744:1: (lv_optionalComma_3_0= ',' )
        {
        // InternalSpellGrammar.g:6744:1: (lv_optionalComma_3_0= ',' )
        // InternalSpellGrammar.g:6745:3: lv_optionalComma_3_0= ','
        {
        lv_optionalComma_3_0=(Token)match(input,23,FollowSets000.FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred207_InternalSpellGrammar

    // $ANTLR start synpred208_InternalSpellGrammar
    public final void synpred208_InternalSpellGrammar_fragment() throws RecognitionException {   
        Token otherlv_2=null;
        EObject lv_tests_3_0 = null;


        // InternalSpellGrammar.g:6791:2: ( () otherlv_2= ',' ( (lv_tests_3_0= ruletest ) ) )
        // InternalSpellGrammar.g:6791:2: () otherlv_2= ',' ( (lv_tests_3_0= ruletest ) )
        {
        // InternalSpellGrammar.g:6791:2: ()
        // InternalSpellGrammar.g:6792:2: 
        {
        if ( state.backtracking==0 ) {
           
          	  /* */ 
          	
        }

        }

        otherlv_2=(Token)match(input,23,FollowSets000.FOLLOW_16); if (state.failed) return ;
        // InternalSpellGrammar.g:6804:1: ( (lv_tests_3_0= ruletest ) )
        // InternalSpellGrammar.g:6805:1: (lv_tests_3_0= ruletest )
        {
        // InternalSpellGrammar.g:6805:1: (lv_tests_3_0= ruletest )
        // InternalSpellGrammar.g:6806:3: lv_tests_3_0= ruletest
        {
        if ( state.backtracking==0 ) {
           
          	        newCompositeNode(grammarAccess.getTestlistAccess().getTestsTestParserRuleCall_1_2_0()); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_tests_3_0=ruletest();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred208_InternalSpellGrammar

    // $ANTLR start synpred209_InternalSpellGrammar
    public final void synpred209_InternalSpellGrammar_fragment() throws RecognitionException {   
        Token lv_optionalComma_4_0=null;

        // InternalSpellGrammar.g:6823:1: ( (lv_optionalComma_4_0= ',' ) )
        // InternalSpellGrammar.g:6823:1: (lv_optionalComma_4_0= ',' )
        {
        // InternalSpellGrammar.g:6823:1: (lv_optionalComma_4_0= ',' )
        // InternalSpellGrammar.g:6824:3: lv_optionalComma_4_0= ','
        {
        lv_optionalComma_4_0=(Token)match(input,23,FollowSets000.FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred209_InternalSpellGrammar

    // $ANTLR start synpred214_InternalSpellGrammar
    public final void synpred214_InternalSpellGrammar_fragment() throws RecognitionException {   
        Token otherlv_1=null;
        EObject lv_arguments_0_0 = null;


        // InternalSpellGrammar.g:7120:3: ( ( (lv_arguments_0_0= ruleargument ) ) otherlv_1= ',' )
        // InternalSpellGrammar.g:7120:3: ( (lv_arguments_0_0= ruleargument ) ) otherlv_1= ','
        {
        // InternalSpellGrammar.g:7120:3: ( (lv_arguments_0_0= ruleargument ) )
        // InternalSpellGrammar.g:7121:1: (lv_arguments_0_0= ruleargument )
        {
        // InternalSpellGrammar.g:7121:1: (lv_arguments_0_0= ruleargument )
        // InternalSpellGrammar.g:7122:3: lv_arguments_0_0= ruleargument
        {
        if ( state.backtracking==0 ) {
           
          	        newCompositeNode(grammarAccess.getArglistAccess().getArgumentsArgumentParserRuleCall_0_0_0()); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_17);
        lv_arguments_0_0=ruleargument();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_1=(Token)match(input,23,FollowSets000.FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred214_InternalSpellGrammar

    // $ANTLR start synpred215_InternalSpellGrammar
    public final void synpred215_InternalSpellGrammar_fragment() throws RecognitionException {   
        Token lv_optionalComma_3_0=null;

        // InternalSpellGrammar.g:7161:1: ( (lv_optionalComma_3_0= ',' ) )
        // InternalSpellGrammar.g:7161:1: (lv_optionalComma_3_0= ',' )
        {
        // InternalSpellGrammar.g:7161:1: (lv_optionalComma_3_0= ',' )
        // InternalSpellGrammar.g:7162:3: lv_optionalComma_3_0= ','
        {
        lv_optionalComma_3_0=(Token)match(input,23,FollowSets000.FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred215_InternalSpellGrammar

    // $ANTLR start synpred217_InternalSpellGrammar
    public final void synpred217_InternalSpellGrammar_fragment() throws RecognitionException {   
        Token otherlv_6=null;
        EObject lv_dot1_arguments_7_0 = null;


        // InternalSpellGrammar.g:7198:4: (otherlv_6= ',' ( (lv_dot1_arguments_7_0= ruleargument ) ) )
        // InternalSpellGrammar.g:7198:4: otherlv_6= ',' ( (lv_dot1_arguments_7_0= ruleargument ) )
        {
        otherlv_6=(Token)match(input,23,FollowSets000.FOLLOW_16); if (state.failed) return ;
        // InternalSpellGrammar.g:7202:1: ( (lv_dot1_arguments_7_0= ruleargument ) )
        // InternalSpellGrammar.g:7203:1: (lv_dot1_arguments_7_0= ruleargument )
        {
        // InternalSpellGrammar.g:7203:1: (lv_dot1_arguments_7_0= ruleargument )
        // InternalSpellGrammar.g:7204:3: lv_dot1_arguments_7_0= ruleargument
        {
        if ( state.backtracking==0 ) {
           
          	        newCompositeNode(grammarAccess.getArglistAccess().getDot1_argumentsArgumentParserRuleCall_1_1_2_1_0()); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_dot1_arguments_7_0=ruleargument();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred217_InternalSpellGrammar

    // $ANTLR start synpred218_InternalSpellGrammar
    public final void synpred218_InternalSpellGrammar_fragment() throws RecognitionException {   
        Token otherlv_8=null;
        Token otherlv_9=null;
        EObject lv_dot2_test_10_0 = null;


        // InternalSpellGrammar.g:7220:6: (otherlv_8= ',' otherlv_9= '**' ( (lv_dot2_test_10_0= ruletest ) ) )
        // InternalSpellGrammar.g:7220:6: otherlv_8= ',' otherlv_9= '**' ( (lv_dot2_test_10_0= ruletest ) )
        {
        otherlv_8=(Token)match(input,23,FollowSets000.FOLLOW_20); if (state.failed) return ;
        otherlv_9=(Token)match(input,26,FollowSets000.FOLLOW_16); if (state.failed) return ;
        // InternalSpellGrammar.g:7228:1: ( (lv_dot2_test_10_0= ruletest ) )
        // InternalSpellGrammar.g:7229:1: (lv_dot2_test_10_0= ruletest )
        {
        // InternalSpellGrammar.g:7229:1: (lv_dot2_test_10_0= ruletest )
        // InternalSpellGrammar.g:7230:3: lv_dot2_test_10_0= ruletest
        {
        if ( state.backtracking==0 ) {
           
          	        newCompositeNode(grammarAccess.getArglistAccess().getDot2_testTestParserRuleCall_1_1_3_2_0()); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_dot2_test_10_0=ruletest();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred218_InternalSpellGrammar

    // $ANTLR start synpred220_InternalSpellGrammar
    public final void synpred220_InternalSpellGrammar_fragment() throws RecognitionException {   
        Token otherlv_13=null;

        // InternalSpellGrammar.g:7269:6: (otherlv_13= ',' )
        // InternalSpellGrammar.g:7269:6: otherlv_13= ','
        {
        otherlv_13=(Token)match(input,23,FollowSets000.FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred220_InternalSpellGrammar

    // $ANTLR start synpred230_InternalSpellGrammar
    public final void synpred230_InternalSpellGrammar_fragment() throws RecognitionException {   
        EObject lv_testlist_2_0 = null;


        // InternalSpellGrammar.g:7850:1: ( (lv_testlist_2_0= ruletestlist ) )
        // InternalSpellGrammar.g:7850:1: (lv_testlist_2_0= ruletestlist )
        {
        // InternalSpellGrammar.g:7850:1: (lv_testlist_2_0= ruletestlist )
        // InternalSpellGrammar.g:7851:3: lv_testlist_2_0= ruletestlist
        {
        if ( state.backtracking==0 ) {
           
          	        newCompositeNode(grammarAccess.getYield_exprAccess().getTestlistTestlistParserRuleCall_2_0()); 
          	    
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_testlist_2_0=ruletestlist();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred230_InternalSpellGrammar

    // Delegated rules

    public final boolean synpred121_InternalSpellGrammar() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred121_InternalSpellGrammar_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred140_InternalSpellGrammar() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred140_InternalSpellGrammar_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred218_InternalSpellGrammar() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred218_InternalSpellGrammar_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred209_InternalSpellGrammar() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred209_InternalSpellGrammar_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred192_InternalSpellGrammar() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred192_InternalSpellGrammar_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred135_InternalSpellGrammar() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred135_InternalSpellGrammar_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred52_InternalSpellGrammar() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred52_InternalSpellGrammar_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred159_InternalSpellGrammar() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred159_InternalSpellGrammar_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred208_InternalSpellGrammar() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred208_InternalSpellGrammar_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred164_InternalSpellGrammar() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred164_InternalSpellGrammar_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred188_InternalSpellGrammar() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred188_InternalSpellGrammar_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred126_InternalSpellGrammar() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred126_InternalSpellGrammar_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred66_InternalSpellGrammar() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred66_InternalSpellGrammar_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred165_InternalSpellGrammar() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred165_InternalSpellGrammar_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred158_InternalSpellGrammar() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred158_InternalSpellGrammar_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred137_InternalSpellGrammar() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred137_InternalSpellGrammar_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred217_InternalSpellGrammar() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred217_InternalSpellGrammar_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred172_InternalSpellGrammar() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred172_InternalSpellGrammar_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred62_InternalSpellGrammar() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred62_InternalSpellGrammar_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred96_InternalSpellGrammar() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred96_InternalSpellGrammar_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred20_InternalSpellGrammar() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred20_InternalSpellGrammar_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred168_InternalSpellGrammar() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred168_InternalSpellGrammar_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred13_InternalSpellGrammar() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred13_InternalSpellGrammar_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred51_InternalSpellGrammar() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred51_InternalSpellGrammar_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred214_InternalSpellGrammar() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred214_InternalSpellGrammar_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred207_InternalSpellGrammar() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred207_InternalSpellGrammar_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred161_InternalSpellGrammar() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred161_InternalSpellGrammar_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred220_InternalSpellGrammar() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred220_InternalSpellGrammar_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred152_InternalSpellGrammar() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred152_InternalSpellGrammar_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred129_InternalSpellGrammar() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred129_InternalSpellGrammar_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred142_InternalSpellGrammar() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred142_InternalSpellGrammar_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred63_InternalSpellGrammar() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred63_InternalSpellGrammar_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred147_InternalSpellGrammar() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred147_InternalSpellGrammar_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred148_InternalSpellGrammar() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred148_InternalSpellGrammar_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred69_InternalSpellGrammar() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred69_InternalSpellGrammar_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred64_InternalSpellGrammar() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred64_InternalSpellGrammar_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred143_InternalSpellGrammar() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred143_InternalSpellGrammar_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred230_InternalSpellGrammar() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred230_InternalSpellGrammar_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred215_InternalSpellGrammar() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred215_InternalSpellGrammar_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred92_InternalSpellGrammar() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred92_InternalSpellGrammar_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred162_InternalSpellGrammar() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred162_InternalSpellGrammar_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred171_InternalSpellGrammar() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred171_InternalSpellGrammar_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred206_InternalSpellGrammar() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred206_InternalSpellGrammar_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred157_InternalSpellGrammar() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred157_InternalSpellGrammar_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred22_InternalSpellGrammar() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred22_InternalSpellGrammar_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred153_InternalSpellGrammar() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred153_InternalSpellGrammar_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred67_InternalSpellGrammar() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred67_InternalSpellGrammar_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred184_InternalSpellGrammar() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred184_InternalSpellGrammar_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred50_InternalSpellGrammar() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred50_InternalSpellGrammar_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred167_InternalSpellGrammar() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred167_InternalSpellGrammar_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred160_InternalSpellGrammar() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred160_InternalSpellGrammar_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred198_InternalSpellGrammar() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred198_InternalSpellGrammar_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred170_InternalSpellGrammar() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred170_InternalSpellGrammar_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred53_InternalSpellGrammar() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred53_InternalSpellGrammar_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred132_InternalSpellGrammar() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred132_InternalSpellGrammar_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred139_InternalSpellGrammar() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred139_InternalSpellGrammar_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred15_InternalSpellGrammar() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred15_InternalSpellGrammar_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA15 dfa15 = new DFA15(this);
    protected DFA22 dfa22 = new DFA22(this);
    protected DFA20 dfa20 = new DFA20(this);
    protected DFA30 dfa30 = new DFA30(this);
    protected DFA33 dfa33 = new DFA33(this);
    protected DFA32 dfa32 = new DFA32(this);
    protected DFA31 dfa31 = new DFA31(this);
    protected DFA37 dfa37 = new DFA37(this);
    protected DFA41 dfa41 = new DFA41(this);
    protected DFA43 dfa43 = new DFA43(this);
    protected DFA45 dfa45 = new DFA45(this);
    protected DFA46 dfa46 = new DFA46(this);
    protected DFA48 dfa48 = new DFA48(this);
    protected DFA65 dfa65 = new DFA65(this);
    protected DFA69 dfa69 = new DFA69(this);
    protected DFA78 dfa78 = new DFA78(this);
    protected DFA85 dfa85 = new DFA85(this);
    protected DFA87 dfa87 = new DFA87(this);
    protected DFA120 dfa120 = new DFA120(this);
    protected DFA96 dfa96 = new DFA96(this);
    protected DFA98 dfa98 = new DFA98(this);
    protected DFA102 dfa102 = new DFA102(this);
    protected DFA106 dfa106 = new DFA106(this);
    protected DFA110 dfa110 = new DFA110(this);
    protected DFA111 dfa111 = new DFA111(this);
    protected DFA112 dfa112 = new DFA112(this);
    protected DFA114 dfa114 = new DFA114(this);
    protected DFA116 dfa116 = new DFA116(this);
    protected DFA119 dfa119 = new DFA119(this);
    protected DFA117 dfa117 = new DFA117(this);
    protected DFA118 dfa118 = new DFA118(this);
    protected DFA146 dfa146 = new DFA146(this);
    protected DFA148 dfa148 = new DFA148(this);
    protected DFA154 dfa154 = new DFA154(this);
    protected DFA156 dfa156 = new DFA156(this);
    protected DFA157 dfa157 = new DFA157(this);
    protected DFA168 dfa168 = new DFA168(this);
    static final String dfa_1s = "\21\uffff";
    static final String dfa_2s = "\1\15\15\0\3\uffff";
    static final String dfa_3s = "\1\136\15\0\3\uffff";
    static final String dfa_4s = "\16\uffff\1\1\1\uffff\1\2";
    static final String dfa_5s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\3\uffff}>";
    static final String[] dfa_6s = {
            "\1\14\5\uffff\1\15\5\uffff\2\16\71\uffff\1\1\1\12\1\2\1\4\1\11\1\7\1\10\1\5\1\6\1\3\1\13",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            ""
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final char[] dfa_2 = DFA.unpackEncodedStringToUnsignedChars(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final short[] dfa_4 = DFA.unpackEncodedString(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[][] dfa_6 = unpackEncodedStringArray(dfa_6s);

    class DFA15 extends DFA {

        public DFA15(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 15;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_2;
            this.max = dfa_3;
            this.accept = dfa_4;
            this.special = dfa_5;
            this.transition = dfa_6;
        }
        public String getDescription() {
            return "655:1: ( ( ( ( (lv_varargs1_0_0= rulevarargslist_element ) ) otherlv_1= ',' )* ( (otherlv_2= '*' ( (lv_dot1Name_3_0= ruleNAME ) ) (otherlv_4= ',' otherlv_5= '**' ( (lv_dot2Name_6_0= ruleNAME ) ) )? ) | (otherlv_7= '**' ( (lv_dot2Name_8_0= ruleNAME ) ) ) ) ) | ( ( (lv_vararg2_9_0= rulevarargslist_element ) ) (otherlv_10= ',' ( (lv_varargs3_11_0= rulevarargslist_element ) ) )* ( (lv_additionalComma_12_0= ',' ) )? ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA15_1 = input.LA(1);

                         
                        int index15_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred13_InternalSpellGrammar()) ) {s = 14;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index15_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA15_2 = input.LA(1);

                         
                        int index15_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred13_InternalSpellGrammar()) ) {s = 14;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index15_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA15_3 = input.LA(1);

                         
                        int index15_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred13_InternalSpellGrammar()) ) {s = 14;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index15_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA15_4 = input.LA(1);

                         
                        int index15_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred13_InternalSpellGrammar()) ) {s = 14;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index15_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA15_5 = input.LA(1);

                         
                        int index15_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred13_InternalSpellGrammar()) ) {s = 14;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index15_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA15_6 = input.LA(1);

                         
                        int index15_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred13_InternalSpellGrammar()) ) {s = 14;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index15_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA15_7 = input.LA(1);

                         
                        int index15_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred13_InternalSpellGrammar()) ) {s = 14;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index15_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA15_8 = input.LA(1);

                         
                        int index15_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred13_InternalSpellGrammar()) ) {s = 14;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index15_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA15_9 = input.LA(1);

                         
                        int index15_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred13_InternalSpellGrammar()) ) {s = 14;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index15_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA15_10 = input.LA(1);

                         
                        int index15_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred13_InternalSpellGrammar()) ) {s = 14;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index15_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA15_11 = input.LA(1);

                         
                        int index15_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred13_InternalSpellGrammar()) ) {s = 14;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index15_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA15_12 = input.LA(1);

                         
                        int index15_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred13_InternalSpellGrammar()) ) {s = 14;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index15_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA15_13 = input.LA(1);

                         
                        int index15_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred13_InternalSpellGrammar()) ) {s = 14;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index15_13);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 15, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_7s = "\74\uffff";
    static final String dfa_8s = "\1\2\73\uffff";
    static final String dfa_9s = "\1\4\1\0\72\uffff";
    static final String dfa_10s = "\1\147\1\0\72\uffff";
    static final String dfa_11s = "\2\uffff\1\2\70\uffff\1\1";
    static final String dfa_12s = "\1\uffff\1\0\72\uffff}>";
    static final String[] dfa_13s = {
            "\7\2\1\uffff\3\2\3\uffff\2\2\1\uffff\1\2\5\uffff\1\1\1\2\13\uffff\11\2\1\uffff\2\2\1\uffff\12\2\2\uffff\1\2\15\uffff\1\2\3\uffff\16\2\1\uffff\1\2\1\uffff\4\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_7 = DFA.unpackEncodedString(dfa_7s);
    static final short[] dfa_8 = DFA.unpackEncodedString(dfa_8s);
    static final char[] dfa_9 = DFA.unpackEncodedStringToUnsignedChars(dfa_9s);
    static final char[] dfa_10 = DFA.unpackEncodedStringToUnsignedChars(dfa_10s);
    static final short[] dfa_11 = DFA.unpackEncodedString(dfa_11s);
    static final short[] dfa_12 = DFA.unpackEncodedString(dfa_12s);
    static final short[][] dfa_13 = unpackEncodedStringArray(dfa_13s);

    class DFA22 extends DFA {

        public DFA22(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 22;
            this.eot = dfa_7;
            this.eof = dfa_8;
            this.min = dfa_9;
            this.max = dfa_10;
            this.accept = dfa_11;
            this.special = dfa_12;
            this.transition = dfa_13;
        }
        public String getDescription() {
            return "1025:1: ( () (otherlv_2= ';' ( (lv_stmt_3_0= rulesmall_stmt ) ) )+ ( (lv_additionalComma_4_0= ',' ) )? )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA22_1 = input.LA(1);

                         
                        int index22_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred22_InternalSpellGrammar()) ) {s = 59;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index22_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 22, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_14s = "\75\uffff";
    static final String dfa_15s = "\1\1\74\uffff";
    static final String dfa_16s = "\1\4\1\uffff\1\0\72\uffff";
    static final String dfa_17s = "\1\147\1\uffff\1\0\72\uffff";
    static final String dfa_18s = "\1\uffff\1\2\72\uffff\1\1";
    static final String dfa_19s = "\2\uffff\1\0\72\uffff}>";
    static final String[] dfa_20s = {
            "\7\1\1\uffff\3\1\3\uffff\2\1\1\uffff\1\1\1\uffff\1\1\3\uffff\1\2\1\1\13\uffff\11\1\1\uffff\2\1\1\uffff\12\1\2\uffff\1\1\15\uffff\1\1\3\uffff\16\1\1\uffff\1\1\1\uffff\4\1",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_14 = DFA.unpackEncodedString(dfa_14s);
    static final short[] dfa_15 = DFA.unpackEncodedString(dfa_15s);
    static final char[] dfa_16 = DFA.unpackEncodedStringToUnsignedChars(dfa_16s);
    static final char[] dfa_17 = DFA.unpackEncodedStringToUnsignedChars(dfa_17s);
    static final short[] dfa_18 = DFA.unpackEncodedString(dfa_18s);
    static final short[] dfa_19 = DFA.unpackEncodedString(dfa_19s);
    static final short[][] dfa_20 = unpackEncodedStringArray(dfa_20s);

    class DFA20 extends DFA {

        public DFA20(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 20;
            this.eot = dfa_14;
            this.eof = dfa_15;
            this.min = dfa_16;
            this.max = dfa_17;
            this.accept = dfa_18;
            this.special = dfa_19;
            this.transition = dfa_20;
        }
        public String getDescription() {
            return "()+ loopback of 1034:2: (otherlv_2= ';' ( (lv_stmt_3_0= rulesmall_stmt ) ) )+";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA20_2 = input.LA(1);

                         
                        int index20_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred20_InternalSpellGrammar()) ) {s = 60;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index20_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 20, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_21s = "\1\32\74\uffff";
    static final String dfa_22s = "\1\4\31\0\43\uffff";
    static final String dfa_23s = "\1\147\31\0\43\uffff";
    static final String dfa_24s = "\32\uffff\1\2\41\uffff\1\1";
    static final String dfa_25s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\43\uffff}>";
    static final String[] dfa_26s = {
            "\6\32\1\30\1\uffff\1\32\1\25\1\27\3\uffff\1\32\1\21\1\uffff\1\32\1\uffff\1\32\3\uffff\1\32\1\2\13\uffff\10\32\1\26\1\uffff\2\32\1\uffff\12\32\2\uffff\1\1\15\uffff\1\3\3\uffff\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\22\1\uffff\1\23\1\uffff\1\24\1\31\2\32",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[] dfa_21 = DFA.unpackEncodedString(dfa_21s);
    static final char[] dfa_22 = DFA.unpackEncodedStringToUnsignedChars(dfa_22s);
    static final char[] dfa_23 = DFA.unpackEncodedStringToUnsignedChars(dfa_23s);
    static final short[] dfa_24 = DFA.unpackEncodedString(dfa_24s);
    static final short[] dfa_25 = DFA.unpackEncodedString(dfa_25s);
    static final short[][] dfa_26 = unpackEncodedStringArray(dfa_26s);

    class DFA30 extends DFA {

        public DFA30(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 30;
            this.eot = dfa_14;
            this.eof = dfa_21;
            this.min = dfa_22;
            this.max = dfa_23;
            this.accept = dfa_24;
            this.special = dfa_25;
            this.transition = dfa_26;
        }
        public String getDescription() {
            return "1740:1: ( (lv_testlist_2_0= ruletestlist ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA30_1 = input.LA(1);

                         
                        int index30_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred50_InternalSpellGrammar()) ) {s = 60;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index30_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA30_2 = input.LA(1);

                         
                        int index30_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred50_InternalSpellGrammar()) ) {s = 60;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index30_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA30_3 = input.LA(1);

                         
                        int index30_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred50_InternalSpellGrammar()) ) {s = 60;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index30_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA30_4 = input.LA(1);

                         
                        int index30_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred50_InternalSpellGrammar()) ) {s = 60;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index30_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA30_5 = input.LA(1);

                         
                        int index30_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred50_InternalSpellGrammar()) ) {s = 60;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index30_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA30_6 = input.LA(1);

                         
                        int index30_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred50_InternalSpellGrammar()) ) {s = 60;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index30_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA30_7 = input.LA(1);

                         
                        int index30_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred50_InternalSpellGrammar()) ) {s = 60;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index30_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA30_8 = input.LA(1);

                         
                        int index30_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred50_InternalSpellGrammar()) ) {s = 60;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index30_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA30_9 = input.LA(1);

                         
                        int index30_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred50_InternalSpellGrammar()) ) {s = 60;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index30_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA30_10 = input.LA(1);

                         
                        int index30_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred50_InternalSpellGrammar()) ) {s = 60;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index30_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA30_11 = input.LA(1);

                         
                        int index30_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred50_InternalSpellGrammar()) ) {s = 60;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index30_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA30_12 = input.LA(1);

                         
                        int index30_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred50_InternalSpellGrammar()) ) {s = 60;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index30_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA30_13 = input.LA(1);

                         
                        int index30_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred50_InternalSpellGrammar()) ) {s = 60;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index30_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA30_14 = input.LA(1);

                         
                        int index30_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred50_InternalSpellGrammar()) ) {s = 60;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index30_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA30_15 = input.LA(1);

                         
                        int index30_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred50_InternalSpellGrammar()) ) {s = 60;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index30_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA30_16 = input.LA(1);

                         
                        int index30_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred50_InternalSpellGrammar()) ) {s = 60;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index30_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA30_17 = input.LA(1);

                         
                        int index30_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred50_InternalSpellGrammar()) ) {s = 60;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index30_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA30_18 = input.LA(1);

                         
                        int index30_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred50_InternalSpellGrammar()) ) {s = 60;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index30_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA30_19 = input.LA(1);

                         
                        int index30_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred50_InternalSpellGrammar()) ) {s = 60;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index30_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA30_20 = input.LA(1);

                         
                        int index30_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred50_InternalSpellGrammar()) ) {s = 60;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index30_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA30_21 = input.LA(1);

                         
                        int index30_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred50_InternalSpellGrammar()) ) {s = 60;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index30_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA30_22 = input.LA(1);

                         
                        int index30_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred50_InternalSpellGrammar()) ) {s = 60;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index30_22);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA30_23 = input.LA(1);

                         
                        int index30_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred50_InternalSpellGrammar()) ) {s = 60;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index30_23);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA30_24 = input.LA(1);

                         
                        int index30_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred50_InternalSpellGrammar()) ) {s = 60;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index30_24);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA30_25 = input.LA(1);

                         
                        int index30_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred50_InternalSpellGrammar()) ) {s = 60;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index30_25);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 30, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA33 extends DFA {

        public DFA33(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 33;
            this.eot = dfa_14;
            this.eof = dfa_21;
            this.min = dfa_22;
            this.max = dfa_23;
            this.accept = dfa_24;
            this.special = dfa_25;
            this.transition = dfa_26;
        }
        public String getDescription() {
            return "1831:1: ( ( (lv_tests_2_0= ruletest ) ) (otherlv_3= ',' ( (lv_tests_4_0= ruletest ) ) (otherlv_5= ',' ( (lv_tests_6_0= ruletest ) ) )? )? )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA33_1 = input.LA(1);

                         
                        int index33_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred53_InternalSpellGrammar()) ) {s = 60;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index33_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA33_2 = input.LA(1);

                         
                        int index33_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred53_InternalSpellGrammar()) ) {s = 60;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index33_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA33_3 = input.LA(1);

                         
                        int index33_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred53_InternalSpellGrammar()) ) {s = 60;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index33_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA33_4 = input.LA(1);

                         
                        int index33_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred53_InternalSpellGrammar()) ) {s = 60;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index33_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA33_5 = input.LA(1);

                         
                        int index33_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred53_InternalSpellGrammar()) ) {s = 60;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index33_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA33_6 = input.LA(1);

                         
                        int index33_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred53_InternalSpellGrammar()) ) {s = 60;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index33_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA33_7 = input.LA(1);

                         
                        int index33_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred53_InternalSpellGrammar()) ) {s = 60;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index33_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA33_8 = input.LA(1);

                         
                        int index33_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred53_InternalSpellGrammar()) ) {s = 60;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index33_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA33_9 = input.LA(1);

                         
                        int index33_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred53_InternalSpellGrammar()) ) {s = 60;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index33_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA33_10 = input.LA(1);

                         
                        int index33_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred53_InternalSpellGrammar()) ) {s = 60;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index33_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA33_11 = input.LA(1);

                         
                        int index33_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred53_InternalSpellGrammar()) ) {s = 60;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index33_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA33_12 = input.LA(1);

                         
                        int index33_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred53_InternalSpellGrammar()) ) {s = 60;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index33_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA33_13 = input.LA(1);

                         
                        int index33_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred53_InternalSpellGrammar()) ) {s = 60;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index33_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA33_14 = input.LA(1);

                         
                        int index33_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred53_InternalSpellGrammar()) ) {s = 60;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index33_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA33_15 = input.LA(1);

                         
                        int index33_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred53_InternalSpellGrammar()) ) {s = 60;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index33_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA33_16 = input.LA(1);

                         
                        int index33_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred53_InternalSpellGrammar()) ) {s = 60;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index33_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA33_17 = input.LA(1);

                         
                        int index33_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred53_InternalSpellGrammar()) ) {s = 60;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index33_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA33_18 = input.LA(1);

                         
                        int index33_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred53_InternalSpellGrammar()) ) {s = 60;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index33_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA33_19 = input.LA(1);

                         
                        int index33_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred53_InternalSpellGrammar()) ) {s = 60;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index33_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA33_20 = input.LA(1);

                         
                        int index33_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred53_InternalSpellGrammar()) ) {s = 60;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index33_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA33_21 = input.LA(1);

                         
                        int index33_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred53_InternalSpellGrammar()) ) {s = 60;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index33_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA33_22 = input.LA(1);

                         
                        int index33_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred53_InternalSpellGrammar()) ) {s = 60;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index33_22);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA33_23 = input.LA(1);

                         
                        int index33_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred53_InternalSpellGrammar()) ) {s = 60;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index33_23);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA33_24 = input.LA(1);

                         
                        int index33_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred53_InternalSpellGrammar()) ) {s = 60;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index33_24);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA33_25 = input.LA(1);

                         
                        int index33_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred53_InternalSpellGrammar()) ) {s = 60;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index33_25);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 33, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_27s = "\1\2\74\uffff";
    static final String dfa_28s = "\1\4\1\0\73\uffff";
    static final String dfa_29s = "\1\147\1\0\73\uffff";
    static final String dfa_30s = "\2\uffff\1\2\71\uffff\1\1";
    static final String dfa_31s = "\1\uffff\1\0\73\uffff}>";
    static final String[] dfa_32s = {
            "\7\2\1\uffff\3\2\3\uffff\2\2\1\uffff\1\2\1\uffff\1\1\3\uffff\2\2\13\uffff\11\2\1\uffff\2\2\1\uffff\12\2\2\uffff\1\2\15\uffff\1\2\3\uffff\16\2\1\uffff\1\2\1\uffff\4\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[] dfa_27 = DFA.unpackEncodedString(dfa_27s);
    static final char[] dfa_28 = DFA.unpackEncodedStringToUnsignedChars(dfa_28s);
    static final char[] dfa_29 = DFA.unpackEncodedStringToUnsignedChars(dfa_29s);
    static final short[] dfa_30 = DFA.unpackEncodedString(dfa_30s);
    static final short[] dfa_31 = DFA.unpackEncodedString(dfa_31s);
    static final short[][] dfa_32 = unpackEncodedStringArray(dfa_32s);

    class DFA32 extends DFA {

        public DFA32(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 32;
            this.eot = dfa_14;
            this.eof = dfa_27;
            this.min = dfa_28;
            this.max = dfa_29;
            this.accept = dfa_30;
            this.special = dfa_31;
            this.transition = dfa_32;
        }
        public String getDescription() {
            return "1849:2: (otherlv_3= ',' ( (lv_tests_4_0= ruletest ) ) (otherlv_5= ',' ( (lv_tests_6_0= ruletest ) ) )? )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA32_1 = input.LA(1);

                         
                        int index32_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred52_InternalSpellGrammar()) ) {s = 60;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index32_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 32, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA31 extends DFA {

        public DFA31(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 31;
            this.eot = dfa_14;
            this.eof = dfa_27;
            this.min = dfa_28;
            this.max = dfa_29;
            this.accept = dfa_30;
            this.special = dfa_31;
            this.transition = dfa_32;
        }
        public String getDescription() {
            return "1871:2: (otherlv_5= ',' ( (lv_tests_6_0= ruletest ) ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA31_1 = input.LA(1);

                         
                        int index31_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred51_InternalSpellGrammar()) ) {s = 60;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index31_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 31, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_33s = "\4\uffff";
    static final String dfa_34s = "\2\15\2\uffff";
    static final String dfa_35s = "\2\136\2\uffff";
    static final String dfa_36s = "\2\uffff\1\1\1\2";
    static final String dfa_37s = "\4\uffff}>";
    static final String[] dfa_38s = {
            "\1\2\42\uffff\1\1\43\uffff\13\2",
            "\1\2\40\uffff\1\3\1\uffff\1\1\43\uffff\13\2",
            "",
            ""
    };

    static final short[] dfa_33 = DFA.unpackEncodedString(dfa_33s);
    static final char[] dfa_34 = DFA.unpackEncodedStringToUnsignedChars(dfa_34s);
    static final char[] dfa_35 = DFA.unpackEncodedStringToUnsignedChars(dfa_35s);
    static final short[] dfa_36 = DFA.unpackEncodedString(dfa_36s);
    static final short[] dfa_37 = DFA.unpackEncodedString(dfa_37s);
    static final short[][] dfa_38 = unpackEncodedStringArray(dfa_38s);

    class DFA37 extends DFA {

        public DFA37(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 37;
            this.eot = dfa_33;
            this.eof = dfa_33;
            this.min = dfa_34;
            this.max = dfa_35;
            this.accept = dfa_36;
            this.special = dfa_37;
            this.transition = dfa_38;
        }
        public String getDescription() {
            return "2007:1: ( ( ( (lv_dots_1_0= '.' ) )* ( (lv_dotted_name_2_0= ruledotted_name ) ) ) | ( (lv_dots2_3_0= '.' ) )+ )";
        }
    }
    static final String dfa_39s = "\20\uffff";
    static final String dfa_40s = "\2\2\16\uffff";
    static final String dfa_41s = "\2\4\1\uffff\14\0\1\uffff";
    static final String dfa_42s = "\2\147\1\uffff\14\0\1\uffff";
    static final String dfa_43s = "\2\uffff\1\2\14\uffff\1\1";
    static final String dfa_44s = "\3\uffff\1\2\1\3\1\4\1\5\1\6\1\11\1\0\1\7\1\10\1\1\1\12\1\13\1\uffff}>";
    static final String[] dfa_45s = {
            "\7\2\1\uffff\3\2\3\uffff\4\2\1\uffff\1\1\3\uffff\2\2\13\uffff\11\2\1\uffff\2\2\1\uffff\12\2\2\uffff\1\2\15\uffff\1\2\3\uffff\16\2\1\uffff\1\2\1\uffff\4\2",
            "\7\2\1\uffff\1\2\1\16\1\2\3\uffff\4\2\1\uffff\1\2\3\uffff\2\2\13\uffff\11\2\1\uffff\2\2\1\uffff\12\2\2\uffff\1\2\15\uffff\1\2\3\uffff\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\2\1\uffff\1\2\1\uffff\4\2",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            ""
    };

    static final short[] dfa_39 = DFA.unpackEncodedString(dfa_39s);
    static final short[] dfa_40 = DFA.unpackEncodedString(dfa_40s);
    static final char[] dfa_41 = DFA.unpackEncodedStringToUnsignedChars(dfa_41s);
    static final char[] dfa_42 = DFA.unpackEncodedStringToUnsignedChars(dfa_42s);
    static final short[] dfa_43 = DFA.unpackEncodedString(dfa_43s);
    static final short[] dfa_44 = DFA.unpackEncodedString(dfa_44s);
    static final short[][] dfa_45 = unpackEncodedStringArray(dfa_45s);

    class DFA41 extends DFA {

        public DFA41(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 41;
            this.eot = dfa_39;
            this.eof = dfa_40;
            this.min = dfa_41;
            this.max = dfa_42;
            this.accept = dfa_43;
            this.special = dfa_44;
            this.transition = dfa_45;
        }
        public String getDescription() {
            return "()* loopback of 2282:2: (otherlv_1= ',' ( (lv_imports_2_0= ruleimport_as_name ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA41_9 = input.LA(1);

                         
                        int index41_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred62_InternalSpellGrammar()) ) {s = 15;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index41_9);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA41_12 = input.LA(1);

                         
                        int index41_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred62_InternalSpellGrammar()) ) {s = 15;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index41_12);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA41_3 = input.LA(1);

                         
                        int index41_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred62_InternalSpellGrammar()) ) {s = 15;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index41_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA41_4 = input.LA(1);

                         
                        int index41_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred62_InternalSpellGrammar()) ) {s = 15;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index41_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA41_5 = input.LA(1);

                         
                        int index41_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred62_InternalSpellGrammar()) ) {s = 15;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index41_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA41_6 = input.LA(1);

                         
                        int index41_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred62_InternalSpellGrammar()) ) {s = 15;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index41_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA41_7 = input.LA(1);

                         
                        int index41_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred62_InternalSpellGrammar()) ) {s = 15;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index41_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA41_10 = input.LA(1);

                         
                        int index41_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred62_InternalSpellGrammar()) ) {s = 15;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index41_10);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA41_11 = input.LA(1);

                         
                        int index41_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred62_InternalSpellGrammar()) ) {s = 15;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index41_11);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA41_8 = input.LA(1);

                         
                        int index41_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred62_InternalSpellGrammar()) ) {s = 15;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index41_8);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA41_13 = input.LA(1);

                         
                        int index41_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred62_InternalSpellGrammar()) ) {s = 15;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index41_13);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA41_14 = input.LA(1);

                         
                        int index41_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred62_InternalSpellGrammar()) ) {s = 15;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index41_14);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 41, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_46s = "\1\1\1\uffff\1\1\15\uffff";
    static final String dfa_47s = "\1\4\1\uffff\1\4\14\0\1\uffff";
    static final String dfa_48s = "\1\147\1\uffff\1\147\14\0\1\uffff";
    static final String dfa_49s = "\1\uffff\1\2\15\uffff\1\1";
    static final String dfa_50s = "\3\uffff\1\2\1\3\1\4\1\5\1\6\1\11\1\0\1\7\1\10\1\1\1\13\1\12\1\uffff}>";
    static final String[] dfa_51s = {
            "\7\1\1\uffff\3\1\3\uffff\2\1\1\uffff\1\1\1\uffff\1\2\3\uffff\2\1\13\uffff\11\1\1\uffff\2\1\1\uffff\12\1\2\uffff\1\1\15\uffff\1\1\3\uffff\16\1\1\uffff\1\1\1\uffff\4\1",
            "",
            "\7\1\1\uffff\1\1\1\16\1\1\3\uffff\2\1\1\uffff\1\1\5\uffff\2\1\13\uffff\11\1\1\uffff\2\1\1\uffff\12\1\2\uffff\1\1\15\uffff\1\1\3\uffff\1\1\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\1\1\uffff\1\1\1\uffff\4\1",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            ""
    };
    static final short[] dfa_46 = DFA.unpackEncodedString(dfa_46s);
    static final char[] dfa_47 = DFA.unpackEncodedStringToUnsignedChars(dfa_47s);
    static final char[] dfa_48 = DFA.unpackEncodedStringToUnsignedChars(dfa_48s);
    static final short[] dfa_49 = DFA.unpackEncodedString(dfa_49s);
    static final short[] dfa_50 = DFA.unpackEncodedString(dfa_50s);
    static final short[][] dfa_51 = unpackEncodedStringArray(dfa_51s);

    class DFA43 extends DFA {

        public DFA43(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 43;
            this.eot = dfa_39;
            this.eof = dfa_46;
            this.min = dfa_47;
            this.max = dfa_48;
            this.accept = dfa_49;
            this.special = dfa_50;
            this.transition = dfa_51;
        }
        public String getDescription() {
            return "()* loopback of 2358:2: (otherlv_1= ',' ( (lv_dotted_names_2_0= ruledotted_as_name ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA43_9 = input.LA(1);

                         
                        int index43_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred64_InternalSpellGrammar()) ) {s = 15;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index43_9);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA43_12 = input.LA(1);

                         
                        int index43_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred64_InternalSpellGrammar()) ) {s = 15;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index43_12);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA43_3 = input.LA(1);

                         
                        int index43_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred64_InternalSpellGrammar()) ) {s = 15;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index43_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA43_4 = input.LA(1);

                         
                        int index43_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred64_InternalSpellGrammar()) ) {s = 15;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index43_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA43_5 = input.LA(1);

                         
                        int index43_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred64_InternalSpellGrammar()) ) {s = 15;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index43_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA43_6 = input.LA(1);

                         
                        int index43_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred64_InternalSpellGrammar()) ) {s = 15;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index43_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA43_7 = input.LA(1);

                         
                        int index43_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred64_InternalSpellGrammar()) ) {s = 15;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index43_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA43_10 = input.LA(1);

                         
                        int index43_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred64_InternalSpellGrammar()) ) {s = 15;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index43_10);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA43_11 = input.LA(1);

                         
                        int index43_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred64_InternalSpellGrammar()) ) {s = 15;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index43_11);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA43_8 = input.LA(1);

                         
                        int index43_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred64_InternalSpellGrammar()) ) {s = 15;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index43_8);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA43_14 = input.LA(1);

                         
                        int index43_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred64_InternalSpellGrammar()) ) {s = 15;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index43_14);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA43_13 = input.LA(1);

                         
                        int index43_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred64_InternalSpellGrammar()) ) {s = 15;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index43_13);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 43, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_52s = "\3\uffff\1\0\1\1\1\2\1\3\1\4\1\7\1\12\1\5\1\6\1\13\1\11\1\10\1\uffff}>";
    static final short[] dfa_52 = DFA.unpackEncodedString(dfa_52s);

    class DFA45 extends DFA {

        public DFA45(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 45;
            this.eot = dfa_39;
            this.eof = dfa_46;
            this.min = dfa_47;
            this.max = dfa_48;
            this.accept = dfa_49;
            this.special = dfa_52;
            this.transition = dfa_51;
        }
        public String getDescription() {
            return "()* loopback of 2472:2: (otherlv_2= ',' ( (lv_globals_3_0= ruleNAME ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA45_3 = input.LA(1);

                         
                        int index45_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred66_InternalSpellGrammar()) ) {s = 15;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index45_3);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA45_4 = input.LA(1);

                         
                        int index45_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred66_InternalSpellGrammar()) ) {s = 15;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index45_4);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA45_5 = input.LA(1);

                         
                        int index45_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred66_InternalSpellGrammar()) ) {s = 15;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index45_5);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA45_6 = input.LA(1);

                         
                        int index45_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred66_InternalSpellGrammar()) ) {s = 15;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index45_6);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA45_7 = input.LA(1);

                         
                        int index45_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred66_InternalSpellGrammar()) ) {s = 15;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index45_7);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA45_10 = input.LA(1);

                         
                        int index45_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred66_InternalSpellGrammar()) ) {s = 15;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index45_10);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA45_11 = input.LA(1);

                         
                        int index45_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred66_InternalSpellGrammar()) ) {s = 15;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index45_11);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA45_8 = input.LA(1);

                         
                        int index45_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred66_InternalSpellGrammar()) ) {s = 15;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index45_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA45_14 = input.LA(1);

                         
                        int index45_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred66_InternalSpellGrammar()) ) {s = 15;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index45_14);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA45_13 = input.LA(1);

                         
                        int index45_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred66_InternalSpellGrammar()) ) {s = 15;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index45_13);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA45_9 = input.LA(1);

                         
                        int index45_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred66_InternalSpellGrammar()) ) {s = 15;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index45_9);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA45_12 = input.LA(1);

                         
                        int index45_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred66_InternalSpellGrammar()) ) {s = 15;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index45_12);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 45, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA46 extends DFA {

        public DFA46(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 46;
            this.eot = dfa_14;
            this.eof = dfa_27;
            this.min = dfa_28;
            this.max = dfa_29;
            this.accept = dfa_30;
            this.special = dfa_31;
            this.transition = dfa_32;
        }
        public String getDescription() {
            return "2559:2: (otherlv_4= ',' ( (lv_tests_5_0= ruletest ) ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA46_1 = input.LA(1);

                         
                        int index46_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred67_InternalSpellGrammar()) ) {s = 60;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index46_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 46, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA48 extends DFA {

        public DFA48(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 48;
            this.eot = dfa_14;
            this.eof = dfa_27;
            this.min = dfa_28;
            this.max = dfa_29;
            this.accept = dfa_30;
            this.special = dfa_31;
            this.transition = dfa_32;
        }
        public String getDescription() {
            return "2624:2: (otherlv_2= ',' ( (lv_assers_3_0= ruletest ) ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA48_1 = input.LA(1);

                         
                        int index48_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred69_InternalSpellGrammar()) ) {s = 60;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index48_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 48, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_53s = "\57\uffff";
    static final String dfa_54s = "\1\1\56\uffff";
    static final String dfa_55s = "\1\4\56\uffff";
    static final String dfa_56s = "\1\147\56\uffff";
    static final String dfa_57s = "\1\uffff\1\2\55\1";
    static final String dfa_58s = "\1\0\56\uffff}>";
    static final String[] dfa_59s = {
            "\6\1\1\31\1\uffff\1\1\1\26\1\30\3\uffff\1\56\1\22\1\uffff\1\54\6\uffff\1\3\13\uffff\1\33\1\34\1\35\1\36\1\37\1\40\1\42\1\43\1\27\1\uffff\1\44\1\45\1\uffff\1\46\1\1\1\47\1\1\1\50\1\51\1\52\1\1\1\53\1\1\2\uffff\1\2\15\uffff\1\4\3\uffff\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\23\1\uffff\1\24\1\uffff\1\25\1\32\1\55\1\41",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_53 = DFA.unpackEncodedString(dfa_53s);
    static final short[] dfa_54 = DFA.unpackEncodedString(dfa_54s);
    static final char[] dfa_55 = DFA.unpackEncodedStringToUnsignedChars(dfa_55s);
    static final char[] dfa_56 = DFA.unpackEncodedStringToUnsignedChars(dfa_56s);
    static final short[] dfa_57 = DFA.unpackEncodedString(dfa_57s);
    static final short[] dfa_58 = DFA.unpackEncodedString(dfa_58s);
    static final short[][] dfa_59 = unpackEncodedStringArray(dfa_59s);

    class DFA65 extends DFA {

        public DFA65(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 65;
            this.eot = dfa_53;
            this.eof = dfa_54;
            this.min = dfa_55;
            this.max = dfa_56;
            this.accept = dfa_57;
            this.special = dfa_58;
            this.transition = dfa_59;
        }
        public String getDescription() {
            return "()+ loopback of 3603:1: ( ( ( rulestmt ) )=> (lv_stmts_0_0= rulestmt ) )+";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA65_0 = input.LA(1);

                         
                        int index65_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA65_0==EOF||(LA65_0>=RULE_ENDDEF && LA65_0<=RULE_ENDWITH)||LA65_0==RULE_ENDCLASS||LA65_0==54||LA65_0==56||LA65_0==60||LA65_0==62) ) {s = 1;}

                        else if ( (LA65_0==65) && (synpred92_InternalSpellGrammar())) {s = 2;}

                        else if ( (LA65_0==28) && (synpred92_InternalSpellGrammar())) {s = 3;}

                        else if ( (LA65_0==79) && (synpred92_InternalSpellGrammar())) {s = 4;}

                        else if ( (LA65_0==83) && (synpred92_InternalSpellGrammar())) {s = 5;}

                        else if ( (LA65_0==84) && (synpred92_InternalSpellGrammar())) {s = 6;}

                        else if ( (LA65_0==85) && (synpred92_InternalSpellGrammar())) {s = 7;}

                        else if ( (LA65_0==86) && (synpred92_InternalSpellGrammar())) {s = 8;}

                        else if ( (LA65_0==87) && (synpred92_InternalSpellGrammar())) {s = 9;}

                        else if ( (LA65_0==88) && (synpred92_InternalSpellGrammar())) {s = 10;}

                        else if ( (LA65_0==89) && (synpred92_InternalSpellGrammar())) {s = 11;}

                        else if ( (LA65_0==90) && (synpred92_InternalSpellGrammar())) {s = 12;}

                        else if ( (LA65_0==91) && (synpred92_InternalSpellGrammar())) {s = 13;}

                        else if ( (LA65_0==92) && (synpred92_InternalSpellGrammar())) {s = 14;}

                        else if ( (LA65_0==93) && (synpred92_InternalSpellGrammar())) {s = 15;}

                        else if ( (LA65_0==94) && (synpred92_InternalSpellGrammar())) {s = 16;}

                        else if ( (LA65_0==95) && (synpred92_InternalSpellGrammar())) {s = 17;}

                        else if ( (LA65_0==19) && (synpred92_InternalSpellGrammar())) {s = 18;}

                        else if ( (LA65_0==96) && (synpred92_InternalSpellGrammar())) {s = 19;}

                        else if ( (LA65_0==98) && (synpred92_InternalSpellGrammar())) {s = 20;}

                        else if ( (LA65_0==100) && (synpred92_InternalSpellGrammar())) {s = 21;}

                        else if ( (LA65_0==RULE_NAME_TERMINAL) && (synpred92_InternalSpellGrammar())) {s = 22;}

                        else if ( (LA65_0==48) && (synpred92_InternalSpellGrammar())) {s = 23;}

                        else if ( (LA65_0==RULE_NUMBER) && (synpred92_InternalSpellGrammar())) {s = 24;}

                        else if ( (LA65_0==RULE_STRING) && (synpred92_InternalSpellGrammar())) {s = 25;}

                        else if ( (LA65_0==101) && (synpred92_InternalSpellGrammar())) {s = 26;}

                        else if ( (LA65_0==40) && (synpred92_InternalSpellGrammar())) {s = 27;}

                        else if ( (LA65_0==41) && (synpred92_InternalSpellGrammar())) {s = 28;}

                        else if ( (LA65_0==42) && (synpred92_InternalSpellGrammar())) {s = 29;}

                        else if ( (LA65_0==43) && (synpred92_InternalSpellGrammar())) {s = 30;}

                        else if ( (LA65_0==44) && (synpred92_InternalSpellGrammar())) {s = 31;}

                        else if ( (LA65_0==45) && (synpred92_InternalSpellGrammar())) {s = 32;}

                        else if ( (LA65_0==103) && (synpred92_InternalSpellGrammar())) {s = 33;}

                        else if ( (LA65_0==46) && (synpred92_InternalSpellGrammar())) {s = 34;}

                        else if ( (LA65_0==47) && (synpred92_InternalSpellGrammar())) {s = 35;}

                        else if ( (LA65_0==50) && (synpred92_InternalSpellGrammar())) {s = 36;}

                        else if ( (LA65_0==51) && (synpred92_InternalSpellGrammar())) {s = 37;}

                        else if ( (LA65_0==53) && (synpred92_InternalSpellGrammar())) {s = 38;}

                        else if ( (LA65_0==55) && (synpred92_InternalSpellGrammar())) {s = 39;}

                        else if ( (LA65_0==57) && (synpred92_InternalSpellGrammar())) {s = 40;}

                        else if ( (LA65_0==58) && (synpred92_InternalSpellGrammar())) {s = 41;}

                        else if ( (LA65_0==59) && (synpred92_InternalSpellGrammar())) {s = 42;}

                        else if ( (LA65_0==61) && (synpred92_InternalSpellGrammar())) {s = 43;}

                        else if ( (LA65_0==21) && (synpred92_InternalSpellGrammar())) {s = 44;}

                        else if ( (LA65_0==102) && (synpred92_InternalSpellGrammar())) {s = 45;}

                        else if ( (LA65_0==18) && (synpred92_InternalSpellGrammar())) {s = 46;}

                         
                        input.seek(index65_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 65, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_60s = "\120\uffff";
    static final String dfa_61s = "\1\2\117\uffff";
    static final String dfa_62s = "\1\4\1\0\116\uffff";
    static final String dfa_63s = "\1\147\1\0\116\uffff";
    static final String dfa_64s = "\2\uffff\1\2\114\uffff\1\1";
    static final String dfa_65s = "\1\uffff\1\0\116\uffff}>";
    static final String[] dfa_66s = {
            "\7\2\1\uffff\3\2\3\uffff\42\2\1\uffff\2\2\1\1\7\2\2\uffff\1\2\15\uffff\1\2\3\uffff\25\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_60 = DFA.unpackEncodedString(dfa_60s);
    static final short[] dfa_61 = DFA.unpackEncodedString(dfa_61s);
    static final char[] dfa_62 = DFA.unpackEncodedStringToUnsignedChars(dfa_62s);
    static final char[] dfa_63 = DFA.unpackEncodedStringToUnsignedChars(dfa_63s);
    static final short[] dfa_64 = DFA.unpackEncodedString(dfa_64s);
    static final short[] dfa_65 = DFA.unpackEncodedString(dfa_65s);
    static final short[][] dfa_66 = unpackEncodedStringArray(dfa_66s);

    class DFA69 extends DFA {

        public DFA69(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 69;
            this.eot = dfa_60;
            this.eof = dfa_61;
            this.min = dfa_62;
            this.max = dfa_63;
            this.accept = dfa_64;
            this.special = dfa_65;
            this.transition = dfa_66;
        }
        public String getDescription() {
            return "3734:1: ( () otherlv_2= 'if' ( (lv_if_test_3_0= ruleor_test ) ) otherlv_4= 'else' ( (lv_if_else_test_5_0= ruletest ) ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA69_1 = input.LA(1);

                         
                        int index69_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred96_InternalSpellGrammar()) ) {s = 79;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index69_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 69, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_67s = "\15\uffff";
    static final String dfa_68s = "\12\uffff\1\14\2\uffff";
    static final String dfa_69s = "\1\64\11\uffff\1\12\2\uffff";
    static final String dfa_70s = "\1\111\11\uffff\1\144\2\uffff";
    static final String dfa_71s = "\1\uffff\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\uffff\1\13\1\12";
    static final String dfa_72s = "\15\uffff}>";
    static final String[] dfa_73s = {
            "\1\10\14\uffff\1\11\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\12",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\14\2\uffff\2\14\4\uffff\1\14\10\uffff\1\14\23\uffff\1\14\20\uffff\1\13\15\uffff\1\14\3\uffff\16\14\1\uffff\1\14\1\uffff\1\14",
            "",
            ""
    };

    static final short[] dfa_67 = DFA.unpackEncodedString(dfa_67s);
    static final short[] dfa_68 = DFA.unpackEncodedString(dfa_68s);
    static final char[] dfa_69 = DFA.unpackEncodedStringToUnsignedChars(dfa_69s);
    static final char[] dfa_70 = DFA.unpackEncodedStringToUnsignedChars(dfa_70s);
    static final short[] dfa_71 = DFA.unpackEncodedString(dfa_71s);
    static final short[] dfa_72 = DFA.unpackEncodedString(dfa_72s);
    static final short[][] dfa_73 = unpackEncodedStringArray(dfa_73s);

    class DFA78 extends DFA {

        public DFA78(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 78;
            this.eot = dfa_67;
            this.eof = dfa_68;
            this.min = dfa_69;
            this.max = dfa_70;
            this.accept = dfa_71;
            this.special = dfa_72;
            this.transition = dfa_73;
        }
        public String getDescription() {
            return "4138:1: (kw= '<' | kw= '>' | kw= '==' | kw= '>=' | kw= '<=' | kw= '<>' | kw= '!=' | kw= 'in' | (kw= 'not' kw= 'in' ) | kw= 'is' | (kw= 'is' kw= 'not' ) )";
        }
    }
    static final String dfa_74s = "\140\uffff";
    static final String dfa_75s = "\1\1\137\uffff";
    static final String dfa_76s = "\1\4\11\uffff\2\0\124\uffff";
    static final String dfa_77s = "\1\147\11\uffff\2\0\124\uffff";
    static final String dfa_78s = "\1\uffff\1\2\135\uffff\1\1";
    static final String dfa_79s = "\12\uffff\1\0\1\1\124\uffff}>";
    static final String[] dfa_80s = {
            "\7\1\1\uffff\3\1\3\uffff\12\1\1\12\62\1\1\13\3\uffff\25\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_74 = DFA.unpackEncodedString(dfa_74s);
    static final short[] dfa_75 = DFA.unpackEncodedString(dfa_75s);
    static final char[] dfa_76 = DFA.unpackEncodedStringToUnsignedChars(dfa_76s);
    static final char[] dfa_77 = DFA.unpackEncodedStringToUnsignedChars(dfa_77s);
    static final short[] dfa_78 = DFA.unpackEncodedString(dfa_78s);
    static final short[] dfa_79 = DFA.unpackEncodedString(dfa_79s);
    static final short[][] dfa_80 = unpackEncodedStringArray(dfa_80s);

    class DFA85 extends DFA {

        public DFA85(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 85;
            this.eot = dfa_74;
            this.eof = dfa_75;
            this.min = dfa_76;
            this.max = dfa_77;
            this.accept = dfa_78;
            this.special = dfa_79;
            this.transition = dfa_80;
        }
        public String getDescription() {
            return "()* loopback of 4574:1: ( () ( ( (lv_sign_2_1= '+' | lv_sign_2_2= '-' ) ) ) ( (lv_right_3_0= ruleterm ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA85_10 = input.LA(1);

                         
                        int index85_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred121_InternalSpellGrammar()) ) {s = 95;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index85_10);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA85_11 = input.LA(1);

                         
                        int index85_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred121_InternalSpellGrammar()) ) {s = 95;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index85_11);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 85, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_81s = "\142\uffff";
    static final String dfa_82s = "\1\1\141\uffff";
    static final String dfa_83s = "\1\4\117\uffff\2\0\20\uffff";
    static final String dfa_84s = "\1\147\117\uffff\2\0\20\uffff";
    static final String dfa_85s = "\1\uffff\1\2\135\uffff\1\1\2\uffff";
    static final String dfa_86s = "\120\uffff\1\0\1\1\20\uffff}>";
    static final String[] dfa_87s = {
            "\7\1\1\uffff\3\1\3\uffff\7\1\1\120\1\121\65\1\3\137\25\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_81 = DFA.unpackEncodedString(dfa_81s);
    static final short[] dfa_82 = DFA.unpackEncodedString(dfa_82s);
    static final char[] dfa_83 = DFA.unpackEncodedStringToUnsignedChars(dfa_83s);
    static final char[] dfa_84 = DFA.unpackEncodedStringToUnsignedChars(dfa_84s);
    static final short[] dfa_85 = DFA.unpackEncodedString(dfa_85s);
    static final short[] dfa_86 = DFA.unpackEncodedString(dfa_86s);
    static final short[][] dfa_87 = unpackEncodedStringArray(dfa_87s);

    class DFA87 extends DFA {

        public DFA87(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 87;
            this.eot = dfa_81;
            this.eof = dfa_82;
            this.min = dfa_83;
            this.max = dfa_84;
            this.accept = dfa_85;
            this.special = dfa_86;
            this.transition = dfa_87;
        }
        public String getDescription() {
            return "()* loopback of 4664:1: ( () ( ( (lv_sign_2_1= '*' | lv_sign_2_2= '/' | lv_sign_2_3= '%' | lv_sign_2_4= '//' | lv_sign_2_5= '**' ) ) ) ( (lv_right_3_0= rulefactor ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA87_80 = input.LA(1);

                         
                        int index87_80 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred126_InternalSpellGrammar()) ) {s = 95;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index87_80);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA87_81 = input.LA(1);

                         
                        int index87_81 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred126_InternalSpellGrammar()) ) {s = 95;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index87_81);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 87, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_88s = "\43\uffff";
    static final String dfa_89s = "\1\12\13\0\27\uffff";
    static final String dfa_90s = "\1\144\13\0\27\uffff";
    static final String dfa_91s = "\14\uffff\1\15\1\16\11\uffff\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14";
    static final String dfa_92s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\27\uffff}>";
    static final String[] dfa_93s = {
            "\1\15\2\uffff\2\15\4\uffff\1\15\10\uffff\1\15\23\uffff\1\15\36\uffff\1\15\4\uffff\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\uffff\1\15\1\uffff\1\15",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_88 = DFA.unpackEncodedString(dfa_88s);
    static final char[] dfa_89 = DFA.unpackEncodedStringToUnsignedChars(dfa_89s);
    static final char[] dfa_90 = DFA.unpackEncodedStringToUnsignedChars(dfa_90s);
    static final short[] dfa_91 = DFA.unpackEncodedString(dfa_91s);
    static final short[] dfa_92 = DFA.unpackEncodedString(dfa_92s);
    static final short[][] dfa_93 = unpackEncodedStringArray(dfa_93s);

    class DFA120 extends DFA {

        public DFA120(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 120;
            this.eot = dfa_88;
            this.eof = dfa_88;
            this.min = dfa_89;
            this.max = dfa_90;
            this.accept = dfa_91;
            this.special = dfa_92;
            this.transition = dfa_93;
        }
        public String getDescription() {
            return "4872:1: ( ( () otherlv_1= 'Step' otherlv_2= '(' ( (lv_id_3_0= ruleatom ) ) (otherlv_4= ',' ( (lv_description_5_0= rulearith_expr ) ) )? (otherlv_6= ',' )? otherlv_7= ')' ) | ( () otherlv_9= 'DisplayStep' otherlv_10= '(' ( (lv_id_11_0= rulearith_expr ) ) (otherlv_12= ',' ( (lv_description_13_0= rulearith_expr ) ) )? (otherlv_14= ',' )? otherlv_15= ')' ) | ( () otherlv_17= 'ShowTM' otherlv_18= '(' ( (lv_args_19_0= rulearglist ) ) (otherlv_20= ',' )? otherlv_21= ')' ) | ( () otherlv_23= 'Send' otherlv_24= '(' ( (lv_args_25_0= rulearglist ) ) (otherlv_26= ',' )? otherlv_27= ')' ( (lv_trailer_28_0= ruletrailer ) )* ) | ( () otherlv_30= 'BuildTC' otherlv_31= '(' ( (lv_args_32_0= rulearglist ) ) (otherlv_33= ',' )? otherlv_34= ')' ( (lv_trailer_35_0= ruletrailer ) )* ) | ( () otherlv_37= 'SetLimits' otherlv_38= '(' ( (lv_tm_39_0= ruletest ) ) ( (otherlv_40= ',' )? ( (lv_args_41_0= rulearglist ) ) )* (otherlv_42= ',' )? otherlv_43= ')' ( (lv_trailer_44_0= ruletrailer ) )* ) | ( () otherlv_46= 'GetLimits' otherlv_47= '(' ( (lv_tm_48_0= ruletest ) ) ( (otherlv_49= ',' )? ( (lv_args_50_0= rulearglist ) ) )* (otherlv_51= ',' )? otherlv_52= ')' ( (lv_trailer_53_0= ruletrailer ) )* ) | ( () otherlv_55= 'GetTM' otherlv_56= '(' ( (lv_tm_57_0= ruletest ) ) ( (otherlv_58= ',' )? ( (lv_args_59_0= rulearglist ) ) )* (otherlv_60= ',' )? otherlv_61= ')' ( (lv_trailer_62_0= ruletrailer ) )* ) | ( () otherlv_64= 'Goto' otherlv_65= '(' ( (lv_target_66_0= RULE_STRING ) ) otherlv_67= ')' ( (lv_trailer_68_0= ruletrailer ) )* ) | ( () otherlv_70= 'Goto' otherlv_71= '(' ( (lv_expr_72_0= ruletest ) ) otherlv_73= ')' ( (lv_trailer_74_0= ruletrailer ) )* ) | ( () otherlv_76= 'Verify' otherlv_77= '(' ( (lv_args_78_0= rulearglist ) ) (otherlv_79= ',' )? otherlv_80= ')' ( (lv_trailer_81_0= ruletrailer ) )* ) | ( () otherlv_83= 'WaitFor' otherlv_84= '(' ( (lv_args_85_0= rulearglist ) ) (otherlv_86= ',' )? otherlv_87= ')' ( (lv_trailer_88_0= ruletrailer ) )* ) | ( () otherlv_90= 'ChangeLanguageConfig' otherlv_91= '(' ( (lv_statement_92_0= rulePython_Statement ) ) otherlv_93= ',' ( (lv_args_94_0= rulearglist ) ) otherlv_95= ')' ) | (this_atom_96= ruleatom ( () ( (lv_trailer_98_0= ruletrailer ) )+ (otherlv_99= '**' ( (lv_factor_100_0= rulefactor ) ) )? )? ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA120_1 = input.LA(1);

                         
                        int index120_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred132_InternalSpellGrammar()) ) {s = 23;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index120_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA120_2 = input.LA(1);

                         
                        int index120_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalSpellGrammar()) ) {s = 24;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index120_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA120_3 = input.LA(1);

                         
                        int index120_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred137_InternalSpellGrammar()) ) {s = 25;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index120_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA120_4 = input.LA(1);

                         
                        int index120_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred140_InternalSpellGrammar()) ) {s = 26;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index120_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA120_5 = input.LA(1);

                         
                        int index120_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalSpellGrammar()) ) {s = 27;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index120_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA120_6 = input.LA(1);

                         
                        int index120_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred148_InternalSpellGrammar()) ) {s = 28;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index120_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA120_7 = input.LA(1);

                         
                        int index120_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred153_InternalSpellGrammar()) ) {s = 29;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index120_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA120_8 = input.LA(1);

                         
                        int index120_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred158_InternalSpellGrammar()) ) {s = 30;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index120_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA120_9 = input.LA(1);

                         
                        int index120_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred160_InternalSpellGrammar()) ) {s = 31;}

                        else if ( (synpred162_InternalSpellGrammar()) ) {s = 32;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index120_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA120_10 = input.LA(1);

                         
                        int index120_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred165_InternalSpellGrammar()) ) {s = 33;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index120_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA120_11 = input.LA(1);

                         
                        int index120_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_InternalSpellGrammar()) ) {s = 34;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index120_11);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 120, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_94s = "\143\uffff";
    static final String dfa_95s = "\1\1\142\uffff";
    static final String dfa_96s = "\1\4\35\uffff\2\0\3\uffff\1\0\77\uffff";
    static final String dfa_97s = "\1\147\35\uffff\2\0\3\uffff\1\0\77\uffff";
    static final String dfa_98s = "\1\uffff\1\2\140\uffff\1\1";
    static final String dfa_99s = "\36\uffff\1\0\1\1\3\uffff\1\2\77\uffff}>";
    static final String[] dfa_100s = {
            "\7\1\1\uffff\3\1\3\uffff\1\1\1\36\34\1\1\43\57\1\1\37\7\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_94 = DFA.unpackEncodedString(dfa_94s);
    static final short[] dfa_95 = DFA.unpackEncodedString(dfa_95s);
    static final char[] dfa_96 = DFA.unpackEncodedStringToUnsignedChars(dfa_96s);
    static final char[] dfa_97 = DFA.unpackEncodedStringToUnsignedChars(dfa_97s);
    static final short[] dfa_98 = DFA.unpackEncodedString(dfa_98s);
    static final short[] dfa_99 = DFA.unpackEncodedString(dfa_99s);
    static final short[][] dfa_100 = unpackEncodedStringArray(dfa_100s);

    class DFA96 extends DFA {

        public DFA96(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 96;
            this.eot = dfa_94;
            this.eof = dfa_95;
            this.min = dfa_96;
            this.max = dfa_97;
            this.accept = dfa_98;
            this.special = dfa_99;
            this.transition = dfa_100;
        }
        public String getDescription() {
            return "()* loopback of 5091:1: ( (lv_trailer_28_0= ruletrailer ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA96_30 = input.LA(1);

                         
                        int index96_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalSpellGrammar()) ) {s = 98;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index96_30);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA96_31 = input.LA(1);

                         
                        int index96_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalSpellGrammar()) ) {s = 98;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index96_31);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA96_35 = input.LA(1);

                         
                        int index96_35 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalSpellGrammar()) ) {s = 98;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index96_35);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 96, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA98 extends DFA {

        public DFA98(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 98;
            this.eot = dfa_94;
            this.eof = dfa_95;
            this.min = dfa_96;
            this.max = dfa_97;
            this.accept = dfa_98;
            this.special = dfa_99;
            this.transition = dfa_100;
        }
        public String getDescription() {
            return "()* loopback of 5153:1: ( (lv_trailer_35_0= ruletrailer ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA98_30 = input.LA(1);

                         
                        int index98_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred142_InternalSpellGrammar()) ) {s = 98;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index98_30);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA98_31 = input.LA(1);

                         
                        int index98_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred142_InternalSpellGrammar()) ) {s = 98;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index98_31);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA98_35 = input.LA(1);

                         
                        int index98_35 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred142_InternalSpellGrammar()) ) {s = 98;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index98_35);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 98, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA102 extends DFA {

        public DFA102(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 102;
            this.eot = dfa_94;
            this.eof = dfa_95;
            this.min = dfa_96;
            this.max = dfa_97;
            this.accept = dfa_98;
            this.special = dfa_99;
            this.transition = dfa_100;
        }
        public String getDescription() {
            return "()* loopback of 5237:1: ( (lv_trailer_44_0= ruletrailer ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA102_30 = input.LA(1);

                         
                        int index102_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred147_InternalSpellGrammar()) ) {s = 98;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index102_30);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA102_31 = input.LA(1);

                         
                        int index102_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred147_InternalSpellGrammar()) ) {s = 98;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index102_31);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA102_35 = input.LA(1);

                         
                        int index102_35 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred147_InternalSpellGrammar()) ) {s = 98;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index102_35);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 102, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA106 extends DFA {

        public DFA106(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 106;
            this.eot = dfa_94;
            this.eof = dfa_95;
            this.min = dfa_96;
            this.max = dfa_97;
            this.accept = dfa_98;
            this.special = dfa_99;
            this.transition = dfa_100;
        }
        public String getDescription() {
            return "()* loopback of 5321:1: ( (lv_trailer_53_0= ruletrailer ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA106_30 = input.LA(1);

                         
                        int index106_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalSpellGrammar()) ) {s = 98;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index106_30);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA106_31 = input.LA(1);

                         
                        int index106_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalSpellGrammar()) ) {s = 98;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index106_31);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA106_35 = input.LA(1);

                         
                        int index106_35 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalSpellGrammar()) ) {s = 98;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index106_35);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 106, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA110 extends DFA {

        public DFA110(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 110;
            this.eot = dfa_94;
            this.eof = dfa_95;
            this.min = dfa_96;
            this.max = dfa_97;
            this.accept = dfa_98;
            this.special = dfa_99;
            this.transition = dfa_100;
        }
        public String getDescription() {
            return "()* loopback of 5405:1: ( (lv_trailer_62_0= ruletrailer ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA110_30 = input.LA(1);

                         
                        int index110_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred157_InternalSpellGrammar()) ) {s = 98;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index110_30);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA110_31 = input.LA(1);

                         
                        int index110_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred157_InternalSpellGrammar()) ) {s = 98;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index110_31);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA110_35 = input.LA(1);

                         
                        int index110_35 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred157_InternalSpellGrammar()) ) {s = 98;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index110_35);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 110, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA111 extends DFA {

        public DFA111(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 111;
            this.eot = dfa_94;
            this.eof = dfa_95;
            this.min = dfa_96;
            this.max = dfa_97;
            this.accept = dfa_98;
            this.special = dfa_99;
            this.transition = dfa_100;
        }
        public String getDescription() {
            return "()* loopback of 5463:1: ( (lv_trailer_68_0= ruletrailer ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA111_30 = input.LA(1);

                         
                        int index111_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred159_InternalSpellGrammar()) ) {s = 98;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index111_30);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA111_31 = input.LA(1);

                         
                        int index111_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred159_InternalSpellGrammar()) ) {s = 98;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index111_31);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA111_35 = input.LA(1);

                         
                        int index111_35 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred159_InternalSpellGrammar()) ) {s = 98;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index111_35);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 111, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA112 extends DFA {

        public DFA112(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 112;
            this.eot = dfa_94;
            this.eof = dfa_95;
            this.min = dfa_96;
            this.max = dfa_97;
            this.accept = dfa_98;
            this.special = dfa_99;
            this.transition = dfa_100;
        }
        public String getDescription() {
            return "()* loopback of 5521:1: ( (lv_trailer_74_0= ruletrailer ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA112_30 = input.LA(1);

                         
                        int index112_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred161_InternalSpellGrammar()) ) {s = 98;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index112_30);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA112_31 = input.LA(1);

                         
                        int index112_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred161_InternalSpellGrammar()) ) {s = 98;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index112_31);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA112_35 = input.LA(1);

                         
                        int index112_35 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred161_InternalSpellGrammar()) ) {s = 98;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index112_35);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 112, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA114 extends DFA {

        public DFA114(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 114;
            this.eot = dfa_94;
            this.eof = dfa_95;
            this.min = dfa_96;
            this.max = dfa_97;
            this.accept = dfa_98;
            this.special = dfa_99;
            this.transition = dfa_100;
        }
        public String getDescription() {
            return "()* loopback of 5583:1: ( (lv_trailer_81_0= ruletrailer ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA114_30 = input.LA(1);

                         
                        int index114_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred164_InternalSpellGrammar()) ) {s = 98;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index114_30);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA114_31 = input.LA(1);

                         
                        int index114_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred164_InternalSpellGrammar()) ) {s = 98;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index114_31);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA114_35 = input.LA(1);

                         
                        int index114_35 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred164_InternalSpellGrammar()) ) {s = 98;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index114_35);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 114, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA116 extends DFA {

        public DFA116(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 116;
            this.eot = dfa_94;
            this.eof = dfa_95;
            this.min = dfa_96;
            this.max = dfa_97;
            this.accept = dfa_98;
            this.special = dfa_99;
            this.transition = dfa_100;
        }
        public String getDescription() {
            return "()* loopback of 5645:1: ( (lv_trailer_88_0= ruletrailer ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA116_30 = input.LA(1);

                         
                        int index116_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred167_InternalSpellGrammar()) ) {s = 98;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index116_30);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA116_31 = input.LA(1);

                         
                        int index116_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred167_InternalSpellGrammar()) ) {s = 98;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index116_31);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA116_35 = input.LA(1);

                         
                        int index116_35 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred167_InternalSpellGrammar()) ) {s = 98;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index116_35);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 116, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_101s = "\1\4\142\uffff";
    static final String dfa_102s = "\1\4\3\0\137\uffff";
    static final String dfa_103s = "\1\147\3\0\137\uffff";
    static final String dfa_104s = "\4\uffff\1\2\135\uffff\1\1";
    static final String dfa_105s = "\1\uffff\1\0\1\1\1\2\137\uffff}>";
    static final String[] dfa_106s = {
            "\7\4\1\uffff\3\4\3\uffff\1\4\1\1\34\4\1\3\57\4\1\2\7\4",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[] dfa_101 = DFA.unpackEncodedString(dfa_101s);
    static final char[] dfa_102 = DFA.unpackEncodedStringToUnsignedChars(dfa_102s);
    static final char[] dfa_103 = DFA.unpackEncodedStringToUnsignedChars(dfa_103s);
    static final short[] dfa_104 = DFA.unpackEncodedString(dfa_104s);
    static final short[] dfa_105 = DFA.unpackEncodedString(dfa_105s);
    static final short[][] dfa_106 = unpackEncodedStringArray(dfa_106s);

    class DFA119 extends DFA {

        public DFA119(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 119;
            this.eot = dfa_94;
            this.eof = dfa_101;
            this.min = dfa_102;
            this.max = dfa_103;
            this.accept = dfa_104;
            this.special = dfa_105;
            this.transition = dfa_106;
        }
        public String getDescription() {
            return "5738:1: ( () ( (lv_trailer_98_0= ruletrailer ) )+ (otherlv_99= '**' ( (lv_factor_100_0= rulefactor ) ) )? )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA119_1 = input.LA(1);

                         
                        int index119_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred172_InternalSpellGrammar()) ) {s = 98;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index119_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA119_2 = input.LA(1);

                         
                        int index119_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred172_InternalSpellGrammar()) ) {s = 98;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index119_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA119_3 = input.LA(1);

                         
                        int index119_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred172_InternalSpellGrammar()) ) {s = 98;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index119_3);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 119, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA117 extends DFA {

        public DFA117(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 117;
            this.eot = dfa_94;
            this.eof = dfa_95;
            this.min = dfa_96;
            this.max = dfa_97;
            this.accept = dfa_98;
            this.special = dfa_99;
            this.transition = dfa_100;
        }
        public String getDescription() {
            return "()+ loopback of 5747:2: ( (lv_trailer_98_0= ruletrailer ) )+";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA117_30 = input.LA(1);

                         
                        int index117_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred170_InternalSpellGrammar()) ) {s = 98;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index117_30);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA117_31 = input.LA(1);

                         
                        int index117_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred170_InternalSpellGrammar()) ) {s = 98;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index117_31);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA117_35 = input.LA(1);

                         
                        int index117_35 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred170_InternalSpellGrammar()) ) {s = 98;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index117_35);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 117, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_107s = "\1\2\142\uffff";
    static final String dfa_108s = "\1\4\1\0\141\uffff";
    static final String dfa_109s = "\1\147\1\0\141\uffff";
    static final String dfa_110s = "\2\uffff\1\2\137\uffff\1\1";
    static final String dfa_111s = "\1\uffff\1\0\141\uffff}>";
    static final String[] dfa_112s = {
            "\7\2\1\uffff\3\2\3\uffff\10\2\1\1\115\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[] dfa_107 = DFA.unpackEncodedString(dfa_107s);
    static final char[] dfa_108 = DFA.unpackEncodedStringToUnsignedChars(dfa_108s);
    static final char[] dfa_109 = DFA.unpackEncodedStringToUnsignedChars(dfa_109s);
    static final short[] dfa_110 = DFA.unpackEncodedString(dfa_110s);
    static final short[] dfa_111 = DFA.unpackEncodedString(dfa_111s);
    static final short[][] dfa_112 = unpackEncodedStringArray(dfa_112s);

    class DFA118 extends DFA {

        public DFA118(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 118;
            this.eot = dfa_94;
            this.eof = dfa_107;
            this.min = dfa_108;
            this.max = dfa_109;
            this.accept = dfa_110;
            this.special = dfa_111;
            this.transition = dfa_112;
        }
        public String getDescription() {
            return "5765:3: (otherlv_99= '**' ( (lv_factor_100_0= rulefactor ) ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA118_1 = input.LA(1);

                         
                        int index118_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred171_InternalSpellGrammar()) ) {s = 98;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index118_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 118, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_113s = "\76\uffff";
    static final String dfa_114s = "\1\2\75\uffff";
    static final String dfa_115s = "\1\4\1\0\74\uffff";
    static final String dfa_116s = "\1\147\1\0\74\uffff";
    static final String dfa_117s = "\2\uffff\1\2\72\uffff\1\1";
    static final String dfa_118s = "\1\uffff\1\0\74\uffff}>";
    static final String[] dfa_119s = {
            "\7\2\1\uffff\3\2\3\uffff\2\2\1\uffff\1\2\1\uffff\1\1\3\uffff\2\2\13\uffff\11\2\1\uffff\15\2\2\uffff\1\2\15\uffff\1\2\3\uffff\16\2\1\uffff\1\2\1\uffff\4\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_113 = DFA.unpackEncodedString(dfa_113s);
    static final short[] dfa_114 = DFA.unpackEncodedString(dfa_114s);
    static final char[] dfa_115 = DFA.unpackEncodedStringToUnsignedChars(dfa_115s);
    static final char[] dfa_116 = DFA.unpackEncodedStringToUnsignedChars(dfa_116s);
    static final short[] dfa_117 = DFA.unpackEncodedString(dfa_117s);
    static final short[] dfa_118 = DFA.unpackEncodedString(dfa_118s);
    static final short[][] dfa_119 = unpackEncodedStringArray(dfa_119s);

    class DFA146 extends DFA {

        public DFA146(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 146;
            this.eot = dfa_113;
            this.eof = dfa_114;
            this.min = dfa_115;
            this.max = dfa_116;
            this.accept = dfa_117;
            this.special = dfa_118;
            this.transition = dfa_119;
        }
        public String getDescription() {
            return "()* loopback of 6721:2: (otherlv_1= ',' ( (lv_exprs_2_0= ruleexpr ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA146_1 = input.LA(1);

                         
                        int index146_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred206_InternalSpellGrammar()) ) {s = 61;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index146_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 146, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_120s = "\113\uffff";
    static final String dfa_121s = "\1\2\112\uffff";
    static final String dfa_122s = "\1\4\1\0\111\uffff";
    static final String dfa_123s = "\1\147\1\0\111\uffff";
    static final String dfa_124s = "\2\uffff\1\2\107\uffff\1\1";
    static final String dfa_125s = "\1\uffff\1\0\111\uffff}>";
    static final String[] dfa_126s = {
            "\7\2\1\uffff\3\2\3\uffff\5\2\1\1\1\2\2\uffff\26\2\1\uffff\2\2\1\uffff\12\2\2\uffff\1\2\15\uffff\1\2\3\uffff\16\2\1\uffff\1\2\1\uffff\4\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_120 = DFA.unpackEncodedString(dfa_120s);
    static final short[] dfa_121 = DFA.unpackEncodedString(dfa_121s);
    static final char[] dfa_122 = DFA.unpackEncodedStringToUnsignedChars(dfa_122s);
    static final char[] dfa_123 = DFA.unpackEncodedStringToUnsignedChars(dfa_123s);
    static final short[] dfa_124 = DFA.unpackEncodedString(dfa_124s);
    static final short[] dfa_125 = DFA.unpackEncodedString(dfa_125s);
    static final short[][] dfa_126 = unpackEncodedStringArray(dfa_126s);

    class DFA148 extends DFA {

        public DFA148(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 148;
            this.eot = dfa_120;
            this.eof = dfa_121;
            this.min = dfa_122;
            this.max = dfa_123;
            this.accept = dfa_124;
            this.special = dfa_125;
            this.transition = dfa_126;
        }
        public String getDescription() {
            return "()* loopback of 6791:1: ( () otherlv_2= ',' ( (lv_tests_3_0= ruletest ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA148_1 = input.LA(1);

                         
                        int index148_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred208_InternalSpellGrammar()) ) {s = 74;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index148_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 148, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_127s = "\35\uffff";
    static final String dfa_128s = "\1\12\31\0\3\uffff";
    static final String dfa_129s = "\1\145\31\0\3\uffff";
    static final String dfa_130s = "\32\uffff\1\2\1\uffff\1\1";
    static final String dfa_131s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\3\uffff}>";
    static final String[] dfa_132s = {
            "\1\30\2\uffff\1\25\1\27\4\uffff\1\21\5\uffff\2\32\1\uffff\1\2\23\uffff\1\26\20\uffff\1\1\15\uffff\1\3\3\uffff\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\22\1\uffff\1\23\1\uffff\1\24\1\31",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            ""
    };

    static final short[] dfa_127 = DFA.unpackEncodedString(dfa_127s);
    static final char[] dfa_128 = DFA.unpackEncodedStringToUnsignedChars(dfa_128s);
    static final char[] dfa_129 = DFA.unpackEncodedStringToUnsignedChars(dfa_129s);
    static final short[] dfa_130 = DFA.unpackEncodedString(dfa_130s);
    static final short[] dfa_131 = DFA.unpackEncodedString(dfa_131s);
    static final short[][] dfa_132 = unpackEncodedStringArray(dfa_132s);

    class DFA154 extends DFA {

        public DFA154(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 154;
            this.eot = dfa_127;
            this.eof = dfa_127;
            this.min = dfa_128;
            this.max = dfa_129;
            this.accept = dfa_130;
            this.special = dfa_131;
            this.transition = dfa_132;
        }
        public String getDescription() {
            return "()* loopback of 7120:2: ( ( (lv_arguments_0_0= ruleargument ) ) otherlv_1= ',' )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA154_1 = input.LA(1);

                         
                        int index154_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred214_InternalSpellGrammar()) ) {s = 28;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index154_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA154_2 = input.LA(1);

                         
                        int index154_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred214_InternalSpellGrammar()) ) {s = 28;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index154_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA154_3 = input.LA(1);

                         
                        int index154_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred214_InternalSpellGrammar()) ) {s = 28;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index154_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA154_4 = input.LA(1);

                         
                        int index154_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred214_InternalSpellGrammar()) ) {s = 28;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index154_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA154_5 = input.LA(1);

                         
                        int index154_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred214_InternalSpellGrammar()) ) {s = 28;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index154_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA154_6 = input.LA(1);

                         
                        int index154_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred214_InternalSpellGrammar()) ) {s = 28;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index154_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA154_7 = input.LA(1);

                         
                        int index154_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred214_InternalSpellGrammar()) ) {s = 28;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index154_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA154_8 = input.LA(1);

                         
                        int index154_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred214_InternalSpellGrammar()) ) {s = 28;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index154_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA154_9 = input.LA(1);

                         
                        int index154_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred214_InternalSpellGrammar()) ) {s = 28;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index154_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA154_10 = input.LA(1);

                         
                        int index154_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred214_InternalSpellGrammar()) ) {s = 28;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index154_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA154_11 = input.LA(1);

                         
                        int index154_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred214_InternalSpellGrammar()) ) {s = 28;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index154_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA154_12 = input.LA(1);

                         
                        int index154_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred214_InternalSpellGrammar()) ) {s = 28;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index154_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA154_13 = input.LA(1);

                         
                        int index154_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred214_InternalSpellGrammar()) ) {s = 28;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index154_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA154_14 = input.LA(1);

                         
                        int index154_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred214_InternalSpellGrammar()) ) {s = 28;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index154_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA154_15 = input.LA(1);

                         
                        int index154_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred214_InternalSpellGrammar()) ) {s = 28;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index154_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA154_16 = input.LA(1);

                         
                        int index154_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred214_InternalSpellGrammar()) ) {s = 28;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index154_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA154_17 = input.LA(1);

                         
                        int index154_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred214_InternalSpellGrammar()) ) {s = 28;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index154_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA154_18 = input.LA(1);

                         
                        int index154_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred214_InternalSpellGrammar()) ) {s = 28;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index154_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA154_19 = input.LA(1);

                         
                        int index154_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred214_InternalSpellGrammar()) ) {s = 28;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index154_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA154_20 = input.LA(1);

                         
                        int index154_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred214_InternalSpellGrammar()) ) {s = 28;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index154_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA154_21 = input.LA(1);

                         
                        int index154_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred214_InternalSpellGrammar()) ) {s = 28;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index154_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA154_22 = input.LA(1);

                         
                        int index154_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred214_InternalSpellGrammar()) ) {s = 28;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index154_22);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA154_23 = input.LA(1);

                         
                        int index154_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred214_InternalSpellGrammar()) ) {s = 28;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index154_23);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA154_24 = input.LA(1);

                         
                        int index154_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred214_InternalSpellGrammar()) ) {s = 28;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index154_24);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA154_25 = input.LA(1);

                         
                        int index154_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred214_InternalSpellGrammar()) ) {s = 28;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index154_25);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 154, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_133s = "\40\uffff";
    static final String dfa_134s = "\1\2\37\uffff";
    static final String dfa_135s = "\1\12\1\0\36\uffff";
    static final String dfa_136s = "\1\145\1\0\36\uffff";
    static final String dfa_137s = "\2\uffff\1\2\34\uffff\1\1";
    static final String dfa_138s = "\1\uffff\1\0\36\uffff}>";
    static final String[] dfa_139s = {
            "\1\2\2\uffff\2\2\4\uffff\2\2\2\uffff\1\1\1\uffff\2\2\1\uffff\1\2\23\uffff\1\2\20\uffff\1\2\15\uffff\1\2\3\uffff\16\2\1\uffff\1\2\1\uffff\2\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_133 = DFA.unpackEncodedString(dfa_133s);
    static final short[] dfa_134 = DFA.unpackEncodedString(dfa_134s);
    static final char[] dfa_135 = DFA.unpackEncodedStringToUnsignedChars(dfa_135s);
    static final char[] dfa_136 = DFA.unpackEncodedStringToUnsignedChars(dfa_136s);
    static final short[] dfa_137 = DFA.unpackEncodedString(dfa_137s);
    static final short[] dfa_138 = DFA.unpackEncodedString(dfa_138s);
    static final short[][] dfa_139 = unpackEncodedStringArray(dfa_139s);

    class DFA156 extends DFA {

        public DFA156(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 156;
            this.eot = dfa_133;
            this.eof = dfa_134;
            this.min = dfa_135;
            this.max = dfa_136;
            this.accept = dfa_137;
            this.special = dfa_138;
            this.transition = dfa_139;
        }
        public String getDescription() {
            return "()* loopback of 7198:2: (otherlv_6= ',' ( (lv_dot1_arguments_7_0= ruleargument ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA156_1 = input.LA(1);

                         
                        int index156_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred217_InternalSpellGrammar()) ) {s = 31;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index156_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 156, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA157 extends DFA {

        public DFA157(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 157;
            this.eot = dfa_133;
            this.eof = dfa_134;
            this.min = dfa_135;
            this.max = dfa_136;
            this.accept = dfa_137;
            this.special = dfa_138;
            this.transition = dfa_139;
        }
        public String getDescription() {
            return "7220:4: (otherlv_8= ',' otherlv_9= '**' ( (lv_dot2_test_10_0= ruletest ) ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA157_1 = input.LA(1);

                         
                        int index157_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred218_InternalSpellGrammar()) ) {s = 31;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index157_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 157, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_140s = "\77\uffff";
    static final String dfa_141s = "\1\32\76\uffff";
    static final String dfa_142s = "\1\4\31\0\45\uffff";
    static final String dfa_143s = "\1\147\31\0\45\uffff";
    static final String dfa_144s = "\32\uffff\1\2\43\uffff\1\1";
    static final String dfa_145s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\45\uffff}>";
    static final String[] dfa_146s = {
            "\6\32\1\30\1\uffff\1\32\1\25\1\27\3\uffff\1\32\1\21\2\32\1\uffff\2\32\2\uffff\1\32\1\2\13\uffff\10\32\1\26\1\uffff\2\32\1\uffff\12\32\2\uffff\1\1\15\uffff\1\3\3\uffff\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\22\1\uffff\1\23\1\uffff\1\24\1\31\2\32",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_140 = DFA.unpackEncodedString(dfa_140s);
    static final short[] dfa_141 = DFA.unpackEncodedString(dfa_141s);
    static final char[] dfa_142 = DFA.unpackEncodedStringToUnsignedChars(dfa_142s);
    static final char[] dfa_143 = DFA.unpackEncodedStringToUnsignedChars(dfa_143s);
    static final short[] dfa_144 = DFA.unpackEncodedString(dfa_144s);
    static final short[] dfa_145 = DFA.unpackEncodedString(dfa_145s);
    static final short[][] dfa_146 = unpackEncodedStringArray(dfa_146s);

    class DFA168 extends DFA {

        public DFA168(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 168;
            this.eot = dfa_140;
            this.eof = dfa_141;
            this.min = dfa_142;
            this.max = dfa_143;
            this.accept = dfa_144;
            this.special = dfa_145;
            this.transition = dfa_146;
        }
        public String getDescription() {
            return "7849:1: ( (lv_testlist_2_0= ruletestlist ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA168_1 = input.LA(1);

                         
                        int index168_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred230_InternalSpellGrammar()) ) {s = 62;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index168_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA168_2 = input.LA(1);

                         
                        int index168_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred230_InternalSpellGrammar()) ) {s = 62;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index168_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA168_3 = input.LA(1);

                         
                        int index168_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred230_InternalSpellGrammar()) ) {s = 62;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index168_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA168_4 = input.LA(1);

                         
                        int index168_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred230_InternalSpellGrammar()) ) {s = 62;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index168_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA168_5 = input.LA(1);

                         
                        int index168_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred230_InternalSpellGrammar()) ) {s = 62;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index168_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA168_6 = input.LA(1);

                         
                        int index168_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred230_InternalSpellGrammar()) ) {s = 62;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index168_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA168_7 = input.LA(1);

                         
                        int index168_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred230_InternalSpellGrammar()) ) {s = 62;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index168_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA168_8 = input.LA(1);

                         
                        int index168_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred230_InternalSpellGrammar()) ) {s = 62;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index168_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA168_9 = input.LA(1);

                         
                        int index168_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred230_InternalSpellGrammar()) ) {s = 62;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index168_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA168_10 = input.LA(1);

                         
                        int index168_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred230_InternalSpellGrammar()) ) {s = 62;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index168_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA168_11 = input.LA(1);

                         
                        int index168_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred230_InternalSpellGrammar()) ) {s = 62;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index168_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA168_12 = input.LA(1);

                         
                        int index168_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred230_InternalSpellGrammar()) ) {s = 62;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index168_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA168_13 = input.LA(1);

                         
                        int index168_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred230_InternalSpellGrammar()) ) {s = 62;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index168_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA168_14 = input.LA(1);

                         
                        int index168_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred230_InternalSpellGrammar()) ) {s = 62;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index168_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA168_15 = input.LA(1);

                         
                        int index168_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred230_InternalSpellGrammar()) ) {s = 62;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index168_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA168_16 = input.LA(1);

                         
                        int index168_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred230_InternalSpellGrammar()) ) {s = 62;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index168_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA168_17 = input.LA(1);

                         
                        int index168_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred230_InternalSpellGrammar()) ) {s = 62;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index168_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA168_18 = input.LA(1);

                         
                        int index168_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred230_InternalSpellGrammar()) ) {s = 62;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index168_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA168_19 = input.LA(1);

                         
                        int index168_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred230_InternalSpellGrammar()) ) {s = 62;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index168_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA168_20 = input.LA(1);

                         
                        int index168_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred230_InternalSpellGrammar()) ) {s = 62;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index168_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA168_21 = input.LA(1);

                         
                        int index168_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred230_InternalSpellGrammar()) ) {s = 62;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index168_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA168_22 = input.LA(1);

                         
                        int index168_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred230_InternalSpellGrammar()) ) {s = 62;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index168_22);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA168_23 = input.LA(1);

                         
                        int index168_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred230_InternalSpellGrammar()) ) {s = 62;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index168_23);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA168_24 = input.LA(1);

                         
                        int index168_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred230_InternalSpellGrammar()) ) {s = 62;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index168_24);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA168_25 = input.LA(1);

                         
                        int index168_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred230_InternalSpellGrammar()) ) {s = 62;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index168_25);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 168, _s, input);
            error(nvae);
            throw nvae;
        }
    }
 

    
    private static class FollowSets000 {
        public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x2EADFF00102C6402L,0x000000F5FFF88002L});
        public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x0000000000002000L,0x000000007FF00000L});
        public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x0000000000080002L});
        public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x0001000016186400L,0x00000035FFF88002L});
        public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0000000000100000L});
        public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x0000000000200000L,0x0000004000000000L});
        public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x0000000000080000L});
        public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x0000000000400000L});
        public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x2EADFF00102C6400L,0x000000F5FFF88002L});
        public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x0000000006982000L,0x000000007FF00000L});
        public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x0000000000900000L});
        public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x0000000001000002L});
        public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x0001000010086400L,0x00000035FFF88002L});
        public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x0000000000800000L});
        public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x0000000006082000L,0x000000007FF00000L});
        public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x0000000000800002L});
        public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x0000000004000000L});
        public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x0000000000082000L,0x000000007FF00000L});
        public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x0000000008800002L});
        public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x0000000008000002L});
        public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x002DFF0010086400L,0x000000B5FFF88002L});
        public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x000000FFF1000002L});
        public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x00013C0010086400L,0x000000B5FFF88002L});
        public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x0000000001000000L});
        public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x0001000010086400L,0x00000015FFF88002L});
        public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x0001000010086402L,0x00000035FFF88002L});
        public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x0001000000002000L,0x000000007FF00000L});
        public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x0000400000000000L});
        public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x0001400000000000L});
        public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x0000000002082000L,0x000000007FF00000L});
        public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x0002000000000002L});
        public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x0001000000000002L});
        public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x0010000000000002L});
        public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x0140000000000020L});
        public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x0000000000000020L});
        public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x0100000000000040L});
        public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x0000000000000040L});
        public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x0010000000000000L});
        public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x01000000000000A0L});
        public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x00000000000000A0L});
        public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x5000000000000100L});
        public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x5000000000000000L});
        public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x5100000000000100L});
        public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x1000000000000100L});
        public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x0000000000000100L});
        public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x0000000000C00000L});
        public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x0000000000000200L});
        public static final BitSet FOLLOW_51 = new BitSet(new long[]{0x0001000010486400L,0x00000035FFF88002L});
        public static final BitSet FOLLOW_52 = new BitSet(new long[]{0x0002000000C00000L});
        public static final BitSet FOLLOW_53 = new BitSet(new long[]{0x0080000000000002L});
        public static final BitSet FOLLOW_54 = new BitSet(new long[]{0x0100000000000000L});
        public static final BitSet FOLLOW_55 = new BitSet(new long[]{0x8000000000000002L});
        public static final BitSet FOLLOW_56 = new BitSet(new long[]{0x0001000010086400L,0x00000115FFF88002L});
        public static final BitSet FOLLOW_57 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000001L});
        public static final BitSet FOLLOW_58 = new BitSet(new long[]{0x0010000000000002L,0x00000000000003FEL});
        public static final BitSet FOLLOW_59 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000002L});
        public static final BitSet FOLLOW_60 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
        public static final BitSet FOLLOW_61 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000800L});
        public static final BitSet FOLLOW_62 = new BitSet(new long[]{0x0000000000000002L,0x0000000000001000L});
        public static final BitSet FOLLOW_63 = new BitSet(new long[]{0x0000000000000002L,0x0000000000006000L});
        public static final BitSet FOLLOW_64 = new BitSet(new long[]{0x0000000010000002L,0x0000000000008000L});
        public static final BitSet FOLLOW_65 = new BitSet(new long[]{0x0000000006000002L,0x0000000000070000L});
        public static final BitSet FOLLOW_66 = new BitSet(new long[]{0x0001000016086400L,0x00000035FFF88002L});
        public static final BitSet FOLLOW_67 = new BitSet(new long[]{0x0001000000080002L,0x0000000100000000L});
        public static final BitSet FOLLOW_68 = new BitSet(new long[]{0x0001000016986400L,0x00000035FFF88002L});
        public static final BitSet FOLLOW_69 = new BitSet(new long[]{0x0000000000000400L});
        public static final BitSet FOLLOW_70 = new BitSet(new long[]{0x0001000004080002L,0x0000000100000000L});
        public static final BitSet FOLLOW_71 = new BitSet(new long[]{0x00013C0010186400L,0x000000B5FFF88002L});
        public static final BitSet FOLLOW_72 = new BitSet(new long[]{0x0001000010086400L,0x00000037FFF88002L});
        public static final BitSet FOLLOW_73 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
        public static final BitSet FOLLOW_74 = new BitSet(new long[]{0x0001000010086400L,0x0000003DFFF88002L});
        public static final BitSet FOLLOW_75 = new BitSet(new long[]{0x0000000000000000L,0x0000000800000000L});
        public static final BitSet FOLLOW_76 = new BitSet(new long[]{0x0000000000000000L,0x0000001000000000L});
        public static final BitSet FOLLOW_77 = new BitSet(new long[]{0x0000000000000C02L});
        public static final BitSet FOLLOW_78 = new BitSet(new long[]{0x0000000000000402L});
        public static final BitSet FOLLOW_79 = new BitSet(new long[]{0x0400000000800002L});
        public static final BitSet FOLLOW_80 = new BitSet(new long[]{0x0000000006482000L,0x000000007FF00000L});
        public static final BitSet FOLLOW_81 = new BitSet(new long[]{0x0001000010C86400L,0x00000035FFF88002L});
        public static final BitSet FOLLOW_82 = new BitSet(new long[]{0x0001000000000000L});
        public static final BitSet FOLLOW_83 = new BitSet(new long[]{0x0000000000400002L});
        public static final BitSet FOLLOW_84 = new BitSet(new long[]{0x0001000010486402L,0x00000035FFF88002L});
        public static final BitSet FOLLOW_85 = new BitSet(new long[]{0x0000000000480000L});
        public static final BitSet FOLLOW_86 = new BitSet(new long[]{0x0000000000001000L});
        public static final BitSet FOLLOW_87 = new BitSet(new long[]{0x0400000001000002L});
        public static final BitSet FOLLOW_88 = new BitSet(new long[]{0x0480000000000002L});
        public static final BitSet FOLLOW_89 = new BitSet(new long[]{0x0001000000004000L});
        public static final BitSet FOLLOW_90 = new BitSet(new long[]{0x0000000000004000L});
        public static final BitSet FOLLOW_91 = new BitSet(new long[]{0x0000000000000800L});
        public static final BitSet FOLLOW_92 = new BitSet(new long[]{0x0000000000000802L});
    }


}