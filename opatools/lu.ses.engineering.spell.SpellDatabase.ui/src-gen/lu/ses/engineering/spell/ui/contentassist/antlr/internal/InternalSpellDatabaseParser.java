package lu.ses.engineering.spell.ui.contentassist.antlr.internal; 

import java.util.Map;
import java.util.HashMap;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import lu.ses.engineering.spell.services.SpellDatabaseGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
@SuppressWarnings("all")
public class InternalSpellDatabaseParser extends AbstractInternalContentAssistParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "END_FILE_HEADER", "FILE_HEADER", "LeftParenthesis", "RightParenthesis", "Asterisk", "Comma", "FullStop", "Solidus", "EqualsSign", "LeftSquareBracket", "Backslash", "RightSquareBracket", "LeftCurlyBracket", "RightCurlyBracket", "RULE_ASTRIUM_COMMENT", "RULE_PLUS", "RULE_MINUS", "RULE_WS", "RULE_COLON", "RULE_LAMBDA", "RULE_TM", "RULE_BOOL_EXPR", "RULE_TIME_EXPR", "RULE_SPELL", "RULE_WAIT", "RULE_PAUSE", "RULE_CMD", "RULE_STATE_EXPR", "RULE_INT", "RULE_FLOAT", "RULE_ID", "RULE_DOLLAR", "RULE_BIN_HEX_OCT", "RULE_STRING", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_NL", "RULE_ANY_OTHER"
    };
    public static final int RULE_BOOL_EXPR=25;
    public static final int RULE_STATE_EXPR=31;
    public static final int RULE_DOLLAR=35;
    public static final int FILE_HEADER=5;
    public static final int RULE_TM=24;
    public static final int END_FILE_HEADER=4;
    public static final int RULE_STRING=37;
    public static final int Backslash=14;
    public static final int RULE_SL_COMMENT=39;
    public static final int Comma=9;
    public static final int EqualsSign=12;
    public static final int LeftParenthesis=6;
    public static final int RULE_LAMBDA=23;
    public static final int RULE_TIME_EXPR=26;
    public static final int RULE_PLUS=19;
    public static final int Solidus=11;
    public static final int RightCurlyBracket=17;
    public static final int RULE_PAUSE=29;
    public static final int EOF=-1;
    public static final int Asterisk=8;
    public static final int RULE_BIN_HEX_OCT=36;
    public static final int RightSquareBracket=15;
    public static final int FullStop=10;
    public static final int RULE_ID=34;
    public static final int RULE_WS=21;
    public static final int RightParenthesis=7;
    public static final int LeftCurlyBracket=16;
    public static final int RULE_COLON=22;
    public static final int RULE_ANY_OTHER=41;
    public static final int RULE_CMD=30;
    public static final int RULE_MINUS=20;
    public static final int RULE_WAIT=28;
    public static final int RULE_INT=32;
    public static final int RULE_ML_COMMENT=38;
    public static final int RULE_FLOAT=33;
    public static final int LeftSquareBracket=13;
    public static final int RULE_ASTRIUM_COMMENT=18;
    public static final int RULE_NL=40;
    public static final int RULE_SPELL=27;

    // delegates
    // delegators


        public InternalSpellDatabaseParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalSpellDatabaseParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalSpellDatabaseParser.tokenNames; }
    public String getGrammarFileName() { return "InternalSpellDatabaseParser.g"; }


     
     	private SpellDatabaseGrammarAccess grammarAccess;
     	
     	private final Map<String, String> tokenNameToValue = new HashMap<String, String>();
     	
     	{
    		tokenNameToValue.put("LeftParenthesis", "'('");
    		tokenNameToValue.put("RightParenthesis", "')'");
    		tokenNameToValue.put("Asterisk", "'*'");
    		tokenNameToValue.put("Comma", "','");
    		tokenNameToValue.put("FullStop", "'.'");
    		tokenNameToValue.put("Solidus", "'/'");
    		tokenNameToValue.put("EqualsSign", "'='");
    		tokenNameToValue.put("LeftSquareBracket", "'['");
    		tokenNameToValue.put("Backslash", "'\\'");
    		tokenNameToValue.put("RightSquareBracket", "']'");
    		tokenNameToValue.put("LeftCurlyBracket", "'{'");
    		tokenNameToValue.put("RightCurlyBracket", "'}'");
    		tokenNameToValue.put("FILE_HEADER", "'FILE_HEADER'");
    		tokenNameToValue.put("END_FILE_HEADER", "'END_FILE_HEADER'");
     	}
     	
        public void setGrammarAccess(SpellDatabaseGrammarAccess grammarAccess) {
        	this.grammarAccess = grammarAccess;
        }
        
        @Override
        protected Grammar getGrammar() {
        	return grammarAccess.getGrammar();
        }

    	@Override
        protected String getValueForTokenName(String tokenName) {
        	String result = tokenNameToValue.get(tokenName);
        	if (result == null)
        		result = tokenName;
        	return result;
        }



    // $ANTLR start "entryRuleSpellDatabase"
    // InternalSpellDatabaseParser.g:80:1: entryRuleSpellDatabase : ruleSpellDatabase EOF ;
    public final void entryRuleSpellDatabase() throws RecognitionException {

        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ANY_OTHER", "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT");

        try {
            // InternalSpellDatabaseParser.g:84:1: ( ruleSpellDatabase EOF )
            // InternalSpellDatabaseParser.g:85:1: ruleSpellDatabase EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpellDatabaseRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSpellDatabase();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpellDatabaseRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleSpellDatabase"


    // $ANTLR start "ruleSpellDatabase"
    // InternalSpellDatabaseParser.g:95:1: ruleSpellDatabase : ( ( rule__SpellDatabase__Group__0 ) ) ;
    public final void ruleSpellDatabase() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ANY_OTHER", "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT");
        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:100:5: ( ( ( rule__SpellDatabase__Group__0 ) ) )
            // InternalSpellDatabaseParser.g:101:1: ( ( rule__SpellDatabase__Group__0 ) )
            {
            // InternalSpellDatabaseParser.g:101:1: ( ( rule__SpellDatabase__Group__0 ) )
            // InternalSpellDatabaseParser.g:102:1: ( rule__SpellDatabase__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpellDatabaseAccess().getGroup()); 
            }
            // InternalSpellDatabaseParser.g:103:1: ( rule__SpellDatabase__Group__0 )
            // InternalSpellDatabaseParser.g:103:2: rule__SpellDatabase__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__SpellDatabase__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpellDatabaseAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleSpellDatabase"


    // $ANTLR start "entryRuleAstriumDatabase"
    // InternalSpellDatabaseParser.g:116:1: entryRuleAstriumDatabase : ruleAstriumDatabase EOF ;
    public final void entryRuleAstriumDatabase() throws RecognitionException {

        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT");

        try {
            // InternalSpellDatabaseParser.g:120:1: ( ruleAstriumDatabase EOF )
            // InternalSpellDatabaseParser.g:121:1: ruleAstriumDatabase EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAstriumDatabaseRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleAstriumDatabase();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAstriumDatabaseRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleAstriumDatabase"


    // $ANTLR start "ruleAstriumDatabase"
    // InternalSpellDatabaseParser.g:131:1: ruleAstriumDatabase : ( ( rule__AstriumDatabase__Group__0 ) ) ;
    public final void ruleAstriumDatabase() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT");
        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:136:5: ( ( ( rule__AstriumDatabase__Group__0 ) ) )
            // InternalSpellDatabaseParser.g:137:1: ( ( rule__AstriumDatabase__Group__0 ) )
            {
            // InternalSpellDatabaseParser.g:137:1: ( ( rule__AstriumDatabase__Group__0 ) )
            // InternalSpellDatabaseParser.g:138:1: ( rule__AstriumDatabase__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAstriumDatabaseAccess().getGroup()); 
            }
            // InternalSpellDatabaseParser.g:139:1: ( rule__AstriumDatabase__Group__0 )
            // InternalSpellDatabaseParser.g:139:2: rule__AstriumDatabase__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__AstriumDatabase__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAstriumDatabaseAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleAstriumDatabase"


    // $ANTLR start "entryRuleAstriumVariableEntry"
    // InternalSpellDatabaseParser.g:152:1: entryRuleAstriumVariableEntry : ruleAstriumVariableEntry EOF ;
    public final void entryRuleAstriumVariableEntry() throws RecognitionException {

        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT");

        try {
            // InternalSpellDatabaseParser.g:156:1: ( ruleAstriumVariableEntry EOF )
            // InternalSpellDatabaseParser.g:157:1: ruleAstriumVariableEntry EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAstriumVariableEntryRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleAstriumVariableEntry();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAstriumVariableEntryRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleAstriumVariableEntry"


    // $ANTLR start "ruleAstriumVariableEntry"
    // InternalSpellDatabaseParser.g:167:1: ruleAstriumVariableEntry : ( ( rule__AstriumVariableEntry__Alternatives ) ) ;
    public final void ruleAstriumVariableEntry() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT");
        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:172:5: ( ( ( rule__AstriumVariableEntry__Alternatives ) ) )
            // InternalSpellDatabaseParser.g:173:1: ( ( rule__AstriumVariableEntry__Alternatives ) )
            {
            // InternalSpellDatabaseParser.g:173:1: ( ( rule__AstriumVariableEntry__Alternatives ) )
            // InternalSpellDatabaseParser.g:174:1: ( rule__AstriumVariableEntry__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAstriumVariableEntryAccess().getAlternatives()); 
            }
            // InternalSpellDatabaseParser.g:175:1: ( rule__AstriumVariableEntry__Alternatives )
            // InternalSpellDatabaseParser.g:175:2: rule__AstriumVariableEntry__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__AstriumVariableEntry__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAstriumVariableEntryAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleAstriumVariableEntry"


    // $ANTLR start "entryRuleAstriumHeaderEntry"
    // InternalSpellDatabaseParser.g:188:1: entryRuleAstriumHeaderEntry : ruleAstriumHeaderEntry EOF ;
    public final void entryRuleAstriumHeaderEntry() throws RecognitionException {

        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT");

        try {
            // InternalSpellDatabaseParser.g:192:1: ( ruleAstriumHeaderEntry EOF )
            // InternalSpellDatabaseParser.g:193:1: ruleAstriumHeaderEntry EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAstriumHeaderEntryRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleAstriumHeaderEntry();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAstriumHeaderEntryRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleAstriumHeaderEntry"


    // $ANTLR start "ruleAstriumHeaderEntry"
    // InternalSpellDatabaseParser.g:203:1: ruleAstriumHeaderEntry : ( ( rule__AstriumHeaderEntry__Alternatives ) ) ;
    public final void ruleAstriumHeaderEntry() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT");
        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:208:5: ( ( ( rule__AstriumHeaderEntry__Alternatives ) ) )
            // InternalSpellDatabaseParser.g:209:1: ( ( rule__AstriumHeaderEntry__Alternatives ) )
            {
            // InternalSpellDatabaseParser.g:209:1: ( ( rule__AstriumHeaderEntry__Alternatives ) )
            // InternalSpellDatabaseParser.g:210:1: ( rule__AstriumHeaderEntry__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAstriumHeaderEntryAccess().getAlternatives()); 
            }
            // InternalSpellDatabaseParser.g:211:1: ( rule__AstriumHeaderEntry__Alternatives )
            // InternalSpellDatabaseParser.g:211:2: rule__AstriumHeaderEntry__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__AstriumHeaderEntry__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAstriumHeaderEntryAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleAstriumHeaderEntry"


    // $ANTLR start "entryRuleSkipNLAndComments2"
    // InternalSpellDatabaseParser.g:224:1: entryRuleSkipNLAndComments2 : ruleSkipNLAndComments2 EOF ;
    public final void entryRuleSkipNLAndComments2() throws RecognitionException {

        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT");

        try {
            // InternalSpellDatabaseParser.g:228:1: ( ruleSkipNLAndComments2 EOF )
            // InternalSpellDatabaseParser.g:229:1: ruleSkipNLAndComments2 EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSkipNLAndComments2Rule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSkipNLAndComments2();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSkipNLAndComments2Rule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleSkipNLAndComments2"


    // $ANTLR start "ruleSkipNLAndComments2"
    // InternalSpellDatabaseParser.g:239:1: ruleSkipNLAndComments2 : ( ( rule__SkipNLAndComments2__Group__0 ) ) ;
    public final void ruleSkipNLAndComments2() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT");
        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:244:5: ( ( ( rule__SkipNLAndComments2__Group__0 ) ) )
            // InternalSpellDatabaseParser.g:245:1: ( ( rule__SkipNLAndComments2__Group__0 ) )
            {
            // InternalSpellDatabaseParser.g:245:1: ( ( rule__SkipNLAndComments2__Group__0 ) )
            // InternalSpellDatabaseParser.g:246:1: ( rule__SkipNLAndComments2__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSkipNLAndComments2Access().getGroup()); 
            }
            // InternalSpellDatabaseParser.g:247:1: ( rule__SkipNLAndComments2__Group__0 )
            // InternalSpellDatabaseParser.g:247:2: rule__SkipNLAndComments2__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__SkipNLAndComments2__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSkipNLAndComments2Access().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleSkipNLAndComments2"


    // $ANTLR start "entryRuleSkipNLAndComments"
    // InternalSpellDatabaseParser.g:260:1: entryRuleSkipNLAndComments : ruleSkipNLAndComments EOF ;
    public final void entryRuleSkipNLAndComments() throws RecognitionException {

        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalSpellDatabaseParser.g:264:1: ( ruleSkipNLAndComments EOF )
            // InternalSpellDatabaseParser.g:265:1: ruleSkipNLAndComments EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSkipNLAndCommentsRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSkipNLAndComments();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSkipNLAndCommentsRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleSkipNLAndComments"


    // $ANTLR start "ruleSkipNLAndComments"
    // InternalSpellDatabaseParser.g:275:1: ruleSkipNLAndComments : ( ( rule__SkipNLAndComments__Alternatives )* ) ;
    public final void ruleSkipNLAndComments() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:280:5: ( ( ( rule__SkipNLAndComments__Alternatives )* ) )
            // InternalSpellDatabaseParser.g:281:1: ( ( rule__SkipNLAndComments__Alternatives )* )
            {
            // InternalSpellDatabaseParser.g:281:1: ( ( rule__SkipNLAndComments__Alternatives )* )
            // InternalSpellDatabaseParser.g:282:1: ( rule__SkipNLAndComments__Alternatives )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSkipNLAndCommentsAccess().getAlternatives()); 
            }
            // InternalSpellDatabaseParser.g:283:1: ( rule__SkipNLAndComments__Alternatives )*
            loop1:
            do {
                int alt1=2;
                alt1 = dfa1.predict(input);
                switch (alt1) {
            	case 1 :
            	    // InternalSpellDatabaseParser.g:283:2: rule__SkipNLAndComments__Alternatives
            	    {
            	    pushFollow(FOLLOW_3);
            	    rule__SkipNLAndComments__Alternatives();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop1;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSkipNLAndCommentsAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleSkipNLAndComments"


    // $ANTLR start "entryRuleCSVEntry"
    // InternalSpellDatabaseParser.g:296:1: entryRuleCSVEntry : ruleCSVEntry EOF ;
    public final void entryRuleCSVEntry() throws RecognitionException {
        try {
            // InternalSpellDatabaseParser.g:297:1: ( ruleCSVEntry EOF )
            // InternalSpellDatabaseParser.g:298:1: ruleCSVEntry EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCSVEntryRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleCSVEntry();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCSVEntryRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleCSVEntry"


    // $ANTLR start "ruleCSVEntry"
    // InternalSpellDatabaseParser.g:305:1: ruleCSVEntry : ( ( rule__CSVEntry__Alternatives ) ) ;
    public final void ruleCSVEntry() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:309:5: ( ( ( rule__CSVEntry__Alternatives ) ) )
            // InternalSpellDatabaseParser.g:310:1: ( ( rule__CSVEntry__Alternatives ) )
            {
            // InternalSpellDatabaseParser.g:310:1: ( ( rule__CSVEntry__Alternatives ) )
            // InternalSpellDatabaseParser.g:311:1: ( rule__CSVEntry__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCSVEntryAccess().getAlternatives()); 
            }
            // InternalSpellDatabaseParser.g:312:1: ( rule__CSVEntry__Alternatives )
            // InternalSpellDatabaseParser.g:312:2: rule__CSVEntry__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__CSVEntry__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCSVEntryAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleCSVEntry"


    // $ANTLR start "entryRuleCSVCommand"
    // InternalSpellDatabaseParser.g:324:1: entryRuleCSVCommand : ruleCSVCommand EOF ;
    public final void entryRuleCSVCommand() throws RecognitionException {

        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT");

        try {
            // InternalSpellDatabaseParser.g:328:1: ( ruleCSVCommand EOF )
            // InternalSpellDatabaseParser.g:329:1: ruleCSVCommand EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCSVCommandRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleCSVCommand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCSVCommandRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleCSVCommand"


    // $ANTLR start "ruleCSVCommand"
    // InternalSpellDatabaseParser.g:339:1: ruleCSVCommand : ( ( rule__CSVCommand__Group__0 ) ) ;
    public final void ruleCSVCommand() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT");
        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:344:5: ( ( ( rule__CSVCommand__Group__0 ) ) )
            // InternalSpellDatabaseParser.g:345:1: ( ( rule__CSVCommand__Group__0 ) )
            {
            // InternalSpellDatabaseParser.g:345:1: ( ( rule__CSVCommand__Group__0 ) )
            // InternalSpellDatabaseParser.g:346:1: ( rule__CSVCommand__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCSVCommandAccess().getGroup()); 
            }
            // InternalSpellDatabaseParser.g:347:1: ( rule__CSVCommand__Group__0 )
            // InternalSpellDatabaseParser.g:347:2: rule__CSVCommand__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__CSVCommand__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCSVCommandAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleCSVCommand"


    // $ANTLR start "entryRuleTCArgs"
    // InternalSpellDatabaseParser.g:360:1: entryRuleTCArgs : ruleTCArgs EOF ;
    public final void entryRuleTCArgs() throws RecognitionException {

        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT");

        try {
            // InternalSpellDatabaseParser.g:364:1: ( ruleTCArgs EOF )
            // InternalSpellDatabaseParser.g:365:1: ruleTCArgs EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTCArgsRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleTCArgs();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTCArgsRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleTCArgs"


    // $ANTLR start "ruleTCArgs"
    // InternalSpellDatabaseParser.g:375:1: ruleTCArgs : ( ( rule__TCArgs__Group__0 ) ) ;
    public final void ruleTCArgs() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT");
        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:380:5: ( ( ( rule__TCArgs__Group__0 ) ) )
            // InternalSpellDatabaseParser.g:381:1: ( ( rule__TCArgs__Group__0 ) )
            {
            // InternalSpellDatabaseParser.g:381:1: ( ( rule__TCArgs__Group__0 ) )
            // InternalSpellDatabaseParser.g:382:1: ( rule__TCArgs__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTCArgsAccess().getGroup()); 
            }
            // InternalSpellDatabaseParser.g:383:1: ( rule__TCArgs__Group__0 )
            // InternalSpellDatabaseParser.g:383:2: rule__TCArgs__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__TCArgs__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTCArgsAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleTCArgs"


    // $ANTLR start "entryRuleTCValue"
    // InternalSpellDatabaseParser.g:396:1: entryRuleTCValue : ruleTCValue EOF ;
    public final void entryRuleTCValue() throws RecognitionException {

        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT");

        try {
            // InternalSpellDatabaseParser.g:400:1: ( ruleTCValue EOF )
            // InternalSpellDatabaseParser.g:401:1: ruleTCValue EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTCValueRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleTCValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTCValueRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleTCValue"


    // $ANTLR start "ruleTCValue"
    // InternalSpellDatabaseParser.g:411:1: ruleTCValue : ( ( ( rule__TCValue__Alternatives ) ) ( ( rule__TCValue__Alternatives )* ) ) ;
    public final void ruleTCValue() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT");
        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:416:5: ( ( ( ( rule__TCValue__Alternatives ) ) ( ( rule__TCValue__Alternatives )* ) ) )
            // InternalSpellDatabaseParser.g:417:1: ( ( ( rule__TCValue__Alternatives ) ) ( ( rule__TCValue__Alternatives )* ) )
            {
            // InternalSpellDatabaseParser.g:417:1: ( ( ( rule__TCValue__Alternatives ) ) ( ( rule__TCValue__Alternatives )* ) )
            // InternalSpellDatabaseParser.g:418:1: ( ( rule__TCValue__Alternatives ) ) ( ( rule__TCValue__Alternatives )* )
            {
            // InternalSpellDatabaseParser.g:418:1: ( ( rule__TCValue__Alternatives ) )
            // InternalSpellDatabaseParser.g:419:1: ( rule__TCValue__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTCValueAccess().getAlternatives()); 
            }
            // InternalSpellDatabaseParser.g:420:1: ( rule__TCValue__Alternatives )
            // InternalSpellDatabaseParser.g:420:2: rule__TCValue__Alternatives
            {
            pushFollow(FOLLOW_4);
            rule__TCValue__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTCValueAccess().getAlternatives()); 
            }

            }

            // InternalSpellDatabaseParser.g:423:1: ( ( rule__TCValue__Alternatives )* )
            // InternalSpellDatabaseParser.g:424:1: ( rule__TCValue__Alternatives )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTCValueAccess().getAlternatives()); 
            }
            // InternalSpellDatabaseParser.g:425:1: ( rule__TCValue__Alternatives )*
            loop2:
            do {
                int alt2=2;
                alt2 = dfa2.predict(input);
                switch (alt2) {
            	case 1 :
            	    // InternalSpellDatabaseParser.g:425:2: rule__TCValue__Alternatives
            	    {
            	    pushFollow(FOLLOW_4);
            	    rule__TCValue__Alternatives();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop2;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTCValueAccess().getAlternatives()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleTCValue"


    // $ANTLR start "entryRuleKeyValue"
    // InternalSpellDatabaseParser.g:439:1: entryRuleKeyValue : ruleKeyValue EOF ;
    public final void entryRuleKeyValue() throws RecognitionException {

        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT");

        try {
            // InternalSpellDatabaseParser.g:443:1: ( ruleKeyValue EOF )
            // InternalSpellDatabaseParser.g:444:1: ruleKeyValue EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getKeyValueRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleKeyValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getKeyValueRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleKeyValue"


    // $ANTLR start "ruleKeyValue"
    // InternalSpellDatabaseParser.g:454:1: ruleKeyValue : ( ( ( rule__KeyValue__Alternatives ) ) ( ( rule__KeyValue__Alternatives )* ) ) ;
    public final void ruleKeyValue() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT");
        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:459:5: ( ( ( ( rule__KeyValue__Alternatives ) ) ( ( rule__KeyValue__Alternatives )* ) ) )
            // InternalSpellDatabaseParser.g:460:1: ( ( ( rule__KeyValue__Alternatives ) ) ( ( rule__KeyValue__Alternatives )* ) )
            {
            // InternalSpellDatabaseParser.g:460:1: ( ( ( rule__KeyValue__Alternatives ) ) ( ( rule__KeyValue__Alternatives )* ) )
            // InternalSpellDatabaseParser.g:461:1: ( ( rule__KeyValue__Alternatives ) ) ( ( rule__KeyValue__Alternatives )* )
            {
            // InternalSpellDatabaseParser.g:461:1: ( ( rule__KeyValue__Alternatives ) )
            // InternalSpellDatabaseParser.g:462:1: ( rule__KeyValue__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getKeyValueAccess().getAlternatives()); 
            }
            // InternalSpellDatabaseParser.g:463:1: ( rule__KeyValue__Alternatives )
            // InternalSpellDatabaseParser.g:463:2: rule__KeyValue__Alternatives
            {
            pushFollow(FOLLOW_5);
            rule__KeyValue__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getKeyValueAccess().getAlternatives()); 
            }

            }

            // InternalSpellDatabaseParser.g:466:1: ( ( rule__KeyValue__Alternatives )* )
            // InternalSpellDatabaseParser.g:467:1: ( rule__KeyValue__Alternatives )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getKeyValueAccess().getAlternatives()); 
            }
            // InternalSpellDatabaseParser.g:468:1: ( rule__KeyValue__Alternatives )*
            loop3:
            do {
                int alt3=2;
                alt3 = dfa3.predict(input);
                switch (alt3) {
            	case 1 :
            	    // InternalSpellDatabaseParser.g:468:2: rule__KeyValue__Alternatives
            	    {
            	    pushFollow(FOLLOW_5);
            	    rule__KeyValue__Alternatives();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop3;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getKeyValueAccess().getAlternatives()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleKeyValue"


    // $ANTLR start "entryRuleCSVTelemetry"
    // InternalSpellDatabaseParser.g:482:1: entryRuleCSVTelemetry : ruleCSVTelemetry EOF ;
    public final void entryRuleCSVTelemetry() throws RecognitionException {

        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT");

        try {
            // InternalSpellDatabaseParser.g:486:1: ( ruleCSVTelemetry EOF )
            // InternalSpellDatabaseParser.g:487:1: ruleCSVTelemetry EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCSVTelemetryRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleCSVTelemetry();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCSVTelemetryRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleCSVTelemetry"


    // $ANTLR start "ruleCSVTelemetry"
    // InternalSpellDatabaseParser.g:497:1: ruleCSVTelemetry : ( ( rule__CSVTelemetry__Group__0 ) ) ;
    public final void ruleCSVTelemetry() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT");
        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:502:5: ( ( ( rule__CSVTelemetry__Group__0 ) ) )
            // InternalSpellDatabaseParser.g:503:1: ( ( rule__CSVTelemetry__Group__0 ) )
            {
            // InternalSpellDatabaseParser.g:503:1: ( ( rule__CSVTelemetry__Group__0 ) )
            // InternalSpellDatabaseParser.g:504:1: ( rule__CSVTelemetry__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCSVTelemetryAccess().getGroup()); 
            }
            // InternalSpellDatabaseParser.g:505:1: ( rule__CSVTelemetry__Group__0 )
            // InternalSpellDatabaseParser.g:505:2: rule__CSVTelemetry__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__CSVTelemetry__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCSVTelemetryAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleCSVTelemetry"


    // $ANTLR start "entryRuleCSVSpell"
    // InternalSpellDatabaseParser.g:518:1: entryRuleCSVSpell : ruleCSVSpell EOF ;
    public final void entryRuleCSVSpell() throws RecognitionException {

        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT");

        try {
            // InternalSpellDatabaseParser.g:522:1: ( ruleCSVSpell EOF )
            // InternalSpellDatabaseParser.g:523:1: ruleCSVSpell EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCSVSpellRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleCSVSpell();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCSVSpellRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleCSVSpell"


    // $ANTLR start "ruleCSVSpell"
    // InternalSpellDatabaseParser.g:533:1: ruleCSVSpell : ( ( rule__CSVSpell__Group__0 ) ) ;
    public final void ruleCSVSpell() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT");
        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:538:5: ( ( ( rule__CSVSpell__Group__0 ) ) )
            // InternalSpellDatabaseParser.g:539:1: ( ( rule__CSVSpell__Group__0 ) )
            {
            // InternalSpellDatabaseParser.g:539:1: ( ( rule__CSVSpell__Group__0 ) )
            // InternalSpellDatabaseParser.g:540:1: ( rule__CSVSpell__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCSVSpellAccess().getGroup()); 
            }
            // InternalSpellDatabaseParser.g:541:1: ( rule__CSVSpell__Group__0 )
            // InternalSpellDatabaseParser.g:541:2: rule__CSVSpell__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__CSVSpell__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCSVSpellAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleCSVSpell"


    // $ANTLR start "entryRuleSpellCommand"
    // InternalSpellDatabaseParser.g:554:1: entryRuleSpellCommand : ruleSpellCommand EOF ;
    public final void entryRuleSpellCommand() throws RecognitionException {

        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT");

        try {
            // InternalSpellDatabaseParser.g:558:1: ( ruleSpellCommand EOF )
            // InternalSpellDatabaseParser.g:559:1: ruleSpellCommand EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpellCommandRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSpellCommand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpellCommandRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleSpellCommand"


    // $ANTLR start "ruleSpellCommand"
    // InternalSpellDatabaseParser.g:569:1: ruleSpellCommand : ( ( rule__SpellCommand__Alternatives ) ) ;
    public final void ruleSpellCommand() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT");
        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:574:5: ( ( ( rule__SpellCommand__Alternatives ) ) )
            // InternalSpellDatabaseParser.g:575:1: ( ( rule__SpellCommand__Alternatives ) )
            {
            // InternalSpellDatabaseParser.g:575:1: ( ( rule__SpellCommand__Alternatives ) )
            // InternalSpellDatabaseParser.g:576:1: ( rule__SpellCommand__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpellCommandAccess().getAlternatives()); 
            }
            // InternalSpellDatabaseParser.g:577:1: ( rule__SpellCommand__Alternatives )
            // InternalSpellDatabaseParser.g:577:2: rule__SpellCommand__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__SpellCommand__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpellCommandAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleSpellCommand"


    // $ANTLR start "entryRuleIntOrFloat"
    // InternalSpellDatabaseParser.g:590:1: entryRuleIntOrFloat : ruleIntOrFloat EOF ;
    public final void entryRuleIntOrFloat() throws RecognitionException {
        try {
            // InternalSpellDatabaseParser.g:591:1: ( ruleIntOrFloat EOF )
            // InternalSpellDatabaseParser.g:592:1: ruleIntOrFloat EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntOrFloatRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleIntOrFloat();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntOrFloatRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleIntOrFloat"


    // $ANTLR start "ruleIntOrFloat"
    // InternalSpellDatabaseParser.g:599:1: ruleIntOrFloat : ( ( rule__IntOrFloat__Alternatives ) ) ;
    public final void ruleIntOrFloat() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:603:5: ( ( ( rule__IntOrFloat__Alternatives ) ) )
            // InternalSpellDatabaseParser.g:604:1: ( ( rule__IntOrFloat__Alternatives ) )
            {
            // InternalSpellDatabaseParser.g:604:1: ( ( rule__IntOrFloat__Alternatives ) )
            // InternalSpellDatabaseParser.g:605:1: ( rule__IntOrFloat__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntOrFloatAccess().getAlternatives()); 
            }
            // InternalSpellDatabaseParser.g:606:1: ( rule__IntOrFloat__Alternatives )
            // InternalSpellDatabaseParser.g:606:2: rule__IntOrFloat__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__IntOrFloat__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntOrFloatAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleIntOrFloat"


    // $ANTLR start "entryRulePosIntOrFloat"
    // InternalSpellDatabaseParser.g:618:1: entryRulePosIntOrFloat : rulePosIntOrFloat EOF ;
    public final void entryRulePosIntOrFloat() throws RecognitionException {
        try {
            // InternalSpellDatabaseParser.g:619:1: ( rulePosIntOrFloat EOF )
            // InternalSpellDatabaseParser.g:620:1: rulePosIntOrFloat EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPosIntOrFloatRule()); 
            }
            pushFollow(FOLLOW_1);
            rulePosIntOrFloat();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPosIntOrFloatRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePosIntOrFloat"


    // $ANTLR start "rulePosIntOrFloat"
    // InternalSpellDatabaseParser.g:627:1: rulePosIntOrFloat : ( ( rule__PosIntOrFloat__Alternatives ) ) ;
    public final void rulePosIntOrFloat() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:631:5: ( ( ( rule__PosIntOrFloat__Alternatives ) ) )
            // InternalSpellDatabaseParser.g:632:1: ( ( rule__PosIntOrFloat__Alternatives ) )
            {
            // InternalSpellDatabaseParser.g:632:1: ( ( rule__PosIntOrFloat__Alternatives ) )
            // InternalSpellDatabaseParser.g:633:1: ( rule__PosIntOrFloat__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPosIntOrFloatAccess().getAlternatives()); 
            }
            // InternalSpellDatabaseParser.g:634:1: ( rule__PosIntOrFloat__Alternatives )
            // InternalSpellDatabaseParser.g:634:2: rule__PosIntOrFloat__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__PosIntOrFloat__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPosIntOrFloatAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePosIntOrFloat"


    // $ANTLR start "entryRuleDatabaseEntry"
    // InternalSpellDatabaseParser.g:646:1: entryRuleDatabaseEntry : ruleDatabaseEntry EOF ;
    public final void entryRuleDatabaseEntry() throws RecognitionException {

        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT");

        try {
            // InternalSpellDatabaseParser.g:650:1: ( ruleDatabaseEntry EOF )
            // InternalSpellDatabaseParser.g:651:1: ruleDatabaseEntry EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDatabaseEntryRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleDatabaseEntry();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDatabaseEntryRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleDatabaseEntry"


    // $ANTLR start "ruleDatabaseEntry"
    // InternalSpellDatabaseParser.g:661:1: ruleDatabaseEntry : ( ( rule__DatabaseEntry__Group__0 ) ) ;
    public final void ruleDatabaseEntry() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT");
        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:666:5: ( ( ( rule__DatabaseEntry__Group__0 ) ) )
            // InternalSpellDatabaseParser.g:667:1: ( ( rule__DatabaseEntry__Group__0 ) )
            {
            // InternalSpellDatabaseParser.g:667:1: ( ( rule__DatabaseEntry__Group__0 ) )
            // InternalSpellDatabaseParser.g:668:1: ( rule__DatabaseEntry__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDatabaseEntryAccess().getGroup()); 
            }
            // InternalSpellDatabaseParser.g:669:1: ( rule__DatabaseEntry__Group__0 )
            // InternalSpellDatabaseParser.g:669:2: rule__DatabaseEntry__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__DatabaseEntry__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDatabaseEntryAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleDatabaseEntry"


    // $ANTLR start "entryRuleDatabaseValue"
    // InternalSpellDatabaseParser.g:682:1: entryRuleDatabaseValue : ruleDatabaseValue EOF ;
    public final void entryRuleDatabaseValue() throws RecognitionException {
        try {
            // InternalSpellDatabaseParser.g:683:1: ( ruleDatabaseValue EOF )
            // InternalSpellDatabaseParser.g:684:1: ruleDatabaseValue EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDatabaseValueRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleDatabaseValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDatabaseValueRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDatabaseValue"


    // $ANTLR start "ruleDatabaseValue"
    // InternalSpellDatabaseParser.g:691:1: ruleDatabaseValue : ( ( rule__DatabaseValue__Alternatives ) ) ;
    public final void ruleDatabaseValue() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:695:5: ( ( ( rule__DatabaseValue__Alternatives ) ) )
            // InternalSpellDatabaseParser.g:696:1: ( ( rule__DatabaseValue__Alternatives ) )
            {
            // InternalSpellDatabaseParser.g:696:1: ( ( rule__DatabaseValue__Alternatives ) )
            // InternalSpellDatabaseParser.g:697:1: ( rule__DatabaseValue__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDatabaseValueAccess().getAlternatives()); 
            }
            // InternalSpellDatabaseParser.g:698:1: ( rule__DatabaseValue__Alternatives )
            // InternalSpellDatabaseParser.g:698:2: rule__DatabaseValue__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__DatabaseValue__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDatabaseValueAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDatabaseValue"


    // $ANTLR start "entryRuleLambda_Stmt"
    // InternalSpellDatabaseParser.g:710:1: entryRuleLambda_Stmt : ruleLambda_Stmt EOF ;
    public final void entryRuleLambda_Stmt() throws RecognitionException {
        try {
            // InternalSpellDatabaseParser.g:711:1: ( ruleLambda_Stmt EOF )
            // InternalSpellDatabaseParser.g:712:1: ruleLambda_Stmt EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLambda_StmtRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleLambda_Stmt();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLambda_StmtRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLambda_Stmt"


    // $ANTLR start "ruleLambda_Stmt"
    // InternalSpellDatabaseParser.g:719:1: ruleLambda_Stmt : ( ( rule__Lambda_Stmt__Group__0 ) ) ;
    public final void ruleLambda_Stmt() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:723:5: ( ( ( rule__Lambda_Stmt__Group__0 ) ) )
            // InternalSpellDatabaseParser.g:724:1: ( ( rule__Lambda_Stmt__Group__0 ) )
            {
            // InternalSpellDatabaseParser.g:724:1: ( ( rule__Lambda_Stmt__Group__0 ) )
            // InternalSpellDatabaseParser.g:725:1: ( rule__Lambda_Stmt__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLambda_StmtAccess().getGroup()); 
            }
            // InternalSpellDatabaseParser.g:726:1: ( rule__Lambda_Stmt__Group__0 )
            // InternalSpellDatabaseParser.g:726:2: rule__Lambda_Stmt__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Lambda_Stmt__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLambda_StmtAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLambda_Stmt"


    // $ANTLR start "entryRuleLambda_Function"
    // InternalSpellDatabaseParser.g:738:1: entryRuleLambda_Function : ruleLambda_Function EOF ;
    public final void entryRuleLambda_Function() throws RecognitionException {

        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ANY_OTHER", "RULE_WS");

        try {
            // InternalSpellDatabaseParser.g:742:1: ( ruleLambda_Function EOF )
            // InternalSpellDatabaseParser.g:743:1: ruleLambda_Function EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLambda_FunctionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleLambda_Function();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLambda_FunctionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleLambda_Function"


    // $ANTLR start "ruleLambda_Function"
    // InternalSpellDatabaseParser.g:753:1: ruleLambda_Function : ( ( ( ruleLambda_Partial_Func ) ) ( ( ruleLambda_Partial_Func )* ) ) ;
    public final void ruleLambda_Function() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ANY_OTHER", "RULE_WS");
        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:758:5: ( ( ( ( ruleLambda_Partial_Func ) ) ( ( ruleLambda_Partial_Func )* ) ) )
            // InternalSpellDatabaseParser.g:759:1: ( ( ( ruleLambda_Partial_Func ) ) ( ( ruleLambda_Partial_Func )* ) )
            {
            // InternalSpellDatabaseParser.g:759:1: ( ( ( ruleLambda_Partial_Func ) ) ( ( ruleLambda_Partial_Func )* ) )
            // InternalSpellDatabaseParser.g:760:1: ( ( ruleLambda_Partial_Func ) ) ( ( ruleLambda_Partial_Func )* )
            {
            // InternalSpellDatabaseParser.g:760:1: ( ( ruleLambda_Partial_Func ) )
            // InternalSpellDatabaseParser.g:761:1: ( ruleLambda_Partial_Func )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLambda_FunctionAccess().getLambda_Partial_FuncParserRuleCall()); 
            }
            // InternalSpellDatabaseParser.g:762:1: ( ruleLambda_Partial_Func )
            // InternalSpellDatabaseParser.g:762:3: ruleLambda_Partial_Func
            {
            pushFollow(FOLLOW_6);
            ruleLambda_Partial_Func();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLambda_FunctionAccess().getLambda_Partial_FuncParserRuleCall()); 
            }

            }

            // InternalSpellDatabaseParser.g:765:1: ( ( ruleLambda_Partial_Func )* )
            // InternalSpellDatabaseParser.g:766:1: ( ruleLambda_Partial_Func )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLambda_FunctionAccess().getLambda_Partial_FuncParserRuleCall()); 
            }
            // InternalSpellDatabaseParser.g:767:1: ( ruleLambda_Partial_Func )*
            loop4:
            do {
                int alt4=2;
                alt4 = dfa4.predict(input);
                switch (alt4) {
            	case 1 :
            	    // InternalSpellDatabaseParser.g:767:3: ruleLambda_Partial_Func
            	    {
            	    pushFollow(FOLLOW_6);
            	    ruleLambda_Partial_Func();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop4;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLambda_FunctionAccess().getLambda_Partial_FuncParserRuleCall()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleLambda_Function"


    // $ANTLR start "entryRuleLambda_Partial_Func"
    // InternalSpellDatabaseParser.g:781:1: entryRuleLambda_Partial_Func : ruleLambda_Partial_Func EOF ;
    public final void entryRuleLambda_Partial_Func() throws RecognitionException {

        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ANY_OTHER", "RULE_WS");

        try {
            // InternalSpellDatabaseParser.g:785:1: ( ruleLambda_Partial_Func EOF )
            // InternalSpellDatabaseParser.g:786:1: ruleLambda_Partial_Func EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLambda_Partial_FuncRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleLambda_Partial_Func();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLambda_Partial_FuncRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleLambda_Partial_Func"


    // $ANTLR start "ruleLambda_Partial_Func"
    // InternalSpellDatabaseParser.g:796:1: ruleLambda_Partial_Func : ( ( rule__Lambda_Partial_Func__Alternatives ) ) ;
    public final void ruleLambda_Partial_Func() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ANY_OTHER", "RULE_WS");
        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:801:5: ( ( ( rule__Lambda_Partial_Func__Alternatives ) ) )
            // InternalSpellDatabaseParser.g:802:1: ( ( rule__Lambda_Partial_Func__Alternatives ) )
            {
            // InternalSpellDatabaseParser.g:802:1: ( ( rule__Lambda_Partial_Func__Alternatives ) )
            // InternalSpellDatabaseParser.g:803:1: ( rule__Lambda_Partial_Func__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLambda_Partial_FuncAccess().getAlternatives()); 
            }
            // InternalSpellDatabaseParser.g:804:1: ( rule__Lambda_Partial_Func__Alternatives )
            // InternalSpellDatabaseParser.g:804:2: rule__Lambda_Partial_Func__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Lambda_Partial_Func__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLambda_Partial_FuncAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleLambda_Partial_Func"


    // $ANTLR start "entryRuleLambda_Vars"
    // InternalSpellDatabaseParser.g:817:1: entryRuleLambda_Vars : ruleLambda_Vars EOF ;
    public final void entryRuleLambda_Vars() throws RecognitionException {

        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ANY_OTHER", "RULE_WS");

        try {
            // InternalSpellDatabaseParser.g:821:1: ( ruleLambda_Vars EOF )
            // InternalSpellDatabaseParser.g:822:1: ruleLambda_Vars EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLambda_VarsRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleLambda_Vars();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLambda_VarsRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleLambda_Vars"


    // $ANTLR start "ruleLambda_Vars"
    // InternalSpellDatabaseParser.g:832:1: ruleLambda_Vars : ( ( rule__Lambda_Vars__Group__0 ) ) ;
    public final void ruleLambda_Vars() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ANY_OTHER", "RULE_WS");
        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:837:5: ( ( ( rule__Lambda_Vars__Group__0 ) ) )
            // InternalSpellDatabaseParser.g:838:1: ( ( rule__Lambda_Vars__Group__0 ) )
            {
            // InternalSpellDatabaseParser.g:838:1: ( ( rule__Lambda_Vars__Group__0 ) )
            // InternalSpellDatabaseParser.g:839:1: ( rule__Lambda_Vars__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLambda_VarsAccess().getGroup()); 
            }
            // InternalSpellDatabaseParser.g:840:1: ( rule__Lambda_Vars__Group__0 )
            // InternalSpellDatabaseParser.g:840:2: rule__Lambda_Vars__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Lambda_Vars__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLambda_VarsAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleLambda_Vars"


    // $ANTLR start "entryRuleComplexValue"
    // InternalSpellDatabaseParser.g:853:1: entryRuleComplexValue : ruleComplexValue EOF ;
    public final void entryRuleComplexValue() throws RecognitionException {
        try {
            // InternalSpellDatabaseParser.g:854:1: ( ruleComplexValue EOF )
            // InternalSpellDatabaseParser.g:855:1: ruleComplexValue EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getComplexValueRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleComplexValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getComplexValueRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleComplexValue"


    // $ANTLR start "ruleComplexValue"
    // InternalSpellDatabaseParser.g:862:1: ruleComplexValue : ( ( rule__ComplexValue__Alternatives ) ) ;
    public final void ruleComplexValue() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:866:5: ( ( ( rule__ComplexValue__Alternatives ) ) )
            // InternalSpellDatabaseParser.g:867:1: ( ( rule__ComplexValue__Alternatives ) )
            {
            // InternalSpellDatabaseParser.g:867:1: ( ( rule__ComplexValue__Alternatives ) )
            // InternalSpellDatabaseParser.g:868:1: ( rule__ComplexValue__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getComplexValueAccess().getAlternatives()); 
            }
            // InternalSpellDatabaseParser.g:869:1: ( rule__ComplexValue__Alternatives )
            // InternalSpellDatabaseParser.g:869:2: rule__ComplexValue__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__ComplexValue__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getComplexValueAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleComplexValue"


    // $ANTLR start "entryRuleTuple"
    // InternalSpellDatabaseParser.g:881:1: entryRuleTuple : ruleTuple EOF ;
    public final void entryRuleTuple() throws RecognitionException {

        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT");

        try {
            // InternalSpellDatabaseParser.g:885:1: ( ruleTuple EOF )
            // InternalSpellDatabaseParser.g:886:1: ruleTuple EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTupleRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleTuple();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTupleRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleTuple"


    // $ANTLR start "ruleTuple"
    // InternalSpellDatabaseParser.g:896:1: ruleTuple : ( ( rule__Tuple__Group__0 ) ) ;
    public final void ruleTuple() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT");
        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:901:5: ( ( ( rule__Tuple__Group__0 ) ) )
            // InternalSpellDatabaseParser.g:902:1: ( ( rule__Tuple__Group__0 ) )
            {
            // InternalSpellDatabaseParser.g:902:1: ( ( rule__Tuple__Group__0 ) )
            // InternalSpellDatabaseParser.g:903:1: ( rule__Tuple__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTupleAccess().getGroup()); 
            }
            // InternalSpellDatabaseParser.g:904:1: ( rule__Tuple__Group__0 )
            // InternalSpellDatabaseParser.g:904:2: rule__Tuple__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Tuple__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTupleAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleTuple"


    // $ANTLR start "entryRuleList"
    // InternalSpellDatabaseParser.g:917:1: entryRuleList : ruleList EOF ;
    public final void entryRuleList() throws RecognitionException {

        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT");

        try {
            // InternalSpellDatabaseParser.g:921:1: ( ruleList EOF )
            // InternalSpellDatabaseParser.g:922:1: ruleList EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getListRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleList();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getListRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleList"


    // $ANTLR start "ruleList"
    // InternalSpellDatabaseParser.g:932:1: ruleList : ( ( rule__List__Group__0 ) ) ;
    public final void ruleList() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT");
        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:937:5: ( ( ( rule__List__Group__0 ) ) )
            // InternalSpellDatabaseParser.g:938:1: ( ( rule__List__Group__0 ) )
            {
            // InternalSpellDatabaseParser.g:938:1: ( ( rule__List__Group__0 ) )
            // InternalSpellDatabaseParser.g:939:1: ( rule__List__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getListAccess().getGroup()); 
            }
            // InternalSpellDatabaseParser.g:940:1: ( rule__List__Group__0 )
            // InternalSpellDatabaseParser.g:940:2: rule__List__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__List__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getListAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleList"


    // $ANTLR start "entryRuleDictionary"
    // InternalSpellDatabaseParser.g:953:1: entryRuleDictionary : ruleDictionary EOF ;
    public final void entryRuleDictionary() throws RecognitionException {

        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT");

        try {
            // InternalSpellDatabaseParser.g:957:1: ( ruleDictionary EOF )
            // InternalSpellDatabaseParser.g:958:1: ruleDictionary EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDictionaryRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleDictionary();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDictionaryRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleDictionary"


    // $ANTLR start "ruleDictionary"
    // InternalSpellDatabaseParser.g:968:1: ruleDictionary : ( ( rule__Dictionary__Group__0 ) ) ;
    public final void ruleDictionary() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT");
        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:973:5: ( ( ( rule__Dictionary__Group__0 ) ) )
            // InternalSpellDatabaseParser.g:974:1: ( ( rule__Dictionary__Group__0 ) )
            {
            // InternalSpellDatabaseParser.g:974:1: ( ( rule__Dictionary__Group__0 ) )
            // InternalSpellDatabaseParser.g:975:1: ( rule__Dictionary__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDictionaryAccess().getGroup()); 
            }
            // InternalSpellDatabaseParser.g:976:1: ( rule__Dictionary__Group__0 )
            // InternalSpellDatabaseParser.g:976:2: rule__Dictionary__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Dictionary__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDictionaryAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleDictionary"


    // $ANTLR start "entryRuleDictionaryEntry"
    // InternalSpellDatabaseParser.g:989:1: entryRuleDictionaryEntry : ruleDictionaryEntry EOF ;
    public final void entryRuleDictionaryEntry() throws RecognitionException {

        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT");

        try {
            // InternalSpellDatabaseParser.g:993:1: ( ruleDictionaryEntry EOF )
            // InternalSpellDatabaseParser.g:994:1: ruleDictionaryEntry EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDictionaryEntryRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleDictionaryEntry();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDictionaryEntryRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleDictionaryEntry"


    // $ANTLR start "ruleDictionaryEntry"
    // InternalSpellDatabaseParser.g:1004:1: ruleDictionaryEntry : ( ( rule__DictionaryEntry__Group__0 ) ) ;
    public final void ruleDictionaryEntry() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT");
        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:1009:5: ( ( ( rule__DictionaryEntry__Group__0 ) ) )
            // InternalSpellDatabaseParser.g:1010:1: ( ( rule__DictionaryEntry__Group__0 ) )
            {
            // InternalSpellDatabaseParser.g:1010:1: ( ( rule__DictionaryEntry__Group__0 ) )
            // InternalSpellDatabaseParser.g:1011:1: ( rule__DictionaryEntry__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDictionaryEntryAccess().getGroup()); 
            }
            // InternalSpellDatabaseParser.g:1012:1: ( rule__DictionaryEntry__Group__0 )
            // InternalSpellDatabaseParser.g:1012:2: rule__DictionaryEntry__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__DictionaryEntry__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDictionaryEntryAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleDictionaryEntry"


    // $ANTLR start "entryRuleAtom"
    // InternalSpellDatabaseParser.g:1025:1: entryRuleAtom : ruleAtom EOF ;
    public final void entryRuleAtom() throws RecognitionException {
        try {
            // InternalSpellDatabaseParser.g:1026:1: ( ruleAtom EOF )
            // InternalSpellDatabaseParser.g:1027:1: ruleAtom EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleAtom();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAtom"


    // $ANTLR start "ruleAtom"
    // InternalSpellDatabaseParser.g:1034:1: ruleAtom : ( ( rule__Atom__Alternatives ) ) ;
    public final void ruleAtom() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:1038:5: ( ( ( rule__Atom__Alternatives ) ) )
            // InternalSpellDatabaseParser.g:1039:1: ( ( rule__Atom__Alternatives ) )
            {
            // InternalSpellDatabaseParser.g:1039:1: ( ( rule__Atom__Alternatives ) )
            // InternalSpellDatabaseParser.g:1040:1: ( rule__Atom__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomAccess().getAlternatives()); 
            }
            // InternalSpellDatabaseParser.g:1041:1: ( rule__Atom__Alternatives )
            // InternalSpellDatabaseParser.g:1041:2: rule__Atom__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Atom__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAtom"


    // $ANTLR start "entryRuleRelDate"
    // InternalSpellDatabaseParser.g:1053:1: entryRuleRelDate : ruleRelDate EOF ;
    public final void entryRuleRelDate() throws RecognitionException {
        try {
            // InternalSpellDatabaseParser.g:1054:1: ( ruleRelDate EOF )
            // InternalSpellDatabaseParser.g:1055:1: ruleRelDate EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRelDateRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleRelDate();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRelDateRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleRelDate"


    // $ANTLR start "ruleRelDate"
    // InternalSpellDatabaseParser.g:1062:1: ruleRelDate : ( ( rule__RelDate__ValAssignment ) ) ;
    public final void ruleRelDate() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:1066:5: ( ( ( rule__RelDate__ValAssignment ) ) )
            // InternalSpellDatabaseParser.g:1067:1: ( ( rule__RelDate__ValAssignment ) )
            {
            // InternalSpellDatabaseParser.g:1067:1: ( ( rule__RelDate__ValAssignment ) )
            // InternalSpellDatabaseParser.g:1068:1: ( rule__RelDate__ValAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRelDateAccess().getValAssignment()); 
            }
            // InternalSpellDatabaseParser.g:1069:1: ( rule__RelDate__ValAssignment )
            // InternalSpellDatabaseParser.g:1069:2: rule__RelDate__ValAssignment
            {
            pushFollow(FOLLOW_2);
            rule__RelDate__ValAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRelDateAccess().getValAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleRelDate"


    // $ANTLR start "entryRuleDate"
    // InternalSpellDatabaseParser.g:1081:1: entryRuleDate : ruleDate EOF ;
    public final void entryRuleDate() throws RecognitionException {
        try {
            // InternalSpellDatabaseParser.g:1082:1: ( ruleDate EOF )
            // InternalSpellDatabaseParser.g:1083:1: ruleDate EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDateRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleDate();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDateRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDate"


    // $ANTLR start "ruleDate"
    // InternalSpellDatabaseParser.g:1090:1: ruleDate : ( ( rule__Date__ValAssignment ) ) ;
    public final void ruleDate() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:1094:5: ( ( ( rule__Date__ValAssignment ) ) )
            // InternalSpellDatabaseParser.g:1095:1: ( ( rule__Date__ValAssignment ) )
            {
            // InternalSpellDatabaseParser.g:1095:1: ( ( rule__Date__ValAssignment ) )
            // InternalSpellDatabaseParser.g:1096:1: ( rule__Date__ValAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDateAccess().getValAssignment()); 
            }
            // InternalSpellDatabaseParser.g:1097:1: ( rule__Date__ValAssignment )
            // InternalSpellDatabaseParser.g:1097:2: rule__Date__ValAssignment
            {
            pushFollow(FOLLOW_2);
            rule__Date__ValAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDateAccess().getValAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDate"


    // $ANTLR start "entryRuleBoolean"
    // InternalSpellDatabaseParser.g:1109:1: entryRuleBoolean : ruleBoolean EOF ;
    public final void entryRuleBoolean() throws RecognitionException {
        try {
            // InternalSpellDatabaseParser.g:1110:1: ( ruleBoolean EOF )
            // InternalSpellDatabaseParser.g:1111:1: ruleBoolean EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBooleanRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleBoolean();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBooleanRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleBoolean"


    // $ANTLR start "ruleBoolean"
    // InternalSpellDatabaseParser.g:1118:1: ruleBoolean : ( ( rule__Boolean__ValAssignment ) ) ;
    public final void ruleBoolean() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:1122:5: ( ( ( rule__Boolean__ValAssignment ) ) )
            // InternalSpellDatabaseParser.g:1123:1: ( ( rule__Boolean__ValAssignment ) )
            {
            // InternalSpellDatabaseParser.g:1123:1: ( ( rule__Boolean__ValAssignment ) )
            // InternalSpellDatabaseParser.g:1124:1: ( rule__Boolean__ValAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBooleanAccess().getValAssignment()); 
            }
            // InternalSpellDatabaseParser.g:1125:1: ( rule__Boolean__ValAssignment )
            // InternalSpellDatabaseParser.g:1125:2: rule__Boolean__ValAssignment
            {
            pushFollow(FOLLOW_2);
            rule__Boolean__ValAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBooleanAccess().getValAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleBoolean"


    // $ANTLR start "entryRuleStringValue"
    // InternalSpellDatabaseParser.g:1137:1: entryRuleStringValue : ruleStringValue EOF ;
    public final void entryRuleStringValue() throws RecognitionException {
        try {
            // InternalSpellDatabaseParser.g:1138:1: ( ruleStringValue EOF )
            // InternalSpellDatabaseParser.g:1139:1: ruleStringValue EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringValueRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleStringValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringValueRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleStringValue"


    // $ANTLR start "ruleStringValue"
    // InternalSpellDatabaseParser.g:1146:1: ruleStringValue : ( ( rule__StringValue__ValAssignment ) ) ;
    public final void ruleStringValue() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:1150:5: ( ( ( rule__StringValue__ValAssignment ) ) )
            // InternalSpellDatabaseParser.g:1151:1: ( ( rule__StringValue__ValAssignment ) )
            {
            // InternalSpellDatabaseParser.g:1151:1: ( ( rule__StringValue__ValAssignment ) )
            // InternalSpellDatabaseParser.g:1152:1: ( rule__StringValue__ValAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringValueAccess().getValAssignment()); 
            }
            // InternalSpellDatabaseParser.g:1153:1: ( rule__StringValue__ValAssignment )
            // InternalSpellDatabaseParser.g:1153:2: rule__StringValue__ValAssignment
            {
            pushFollow(FOLLOW_2);
            rule__StringValue__ValAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringValueAccess().getValAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleStringValue"


    // $ANTLR start "entryRuleNumber"
    // InternalSpellDatabaseParser.g:1165:1: entryRuleNumber : ruleNumber EOF ;
    public final void entryRuleNumber() throws RecognitionException {
        try {
            // InternalSpellDatabaseParser.g:1166:1: ( ruleNumber EOF )
            // InternalSpellDatabaseParser.g:1167:1: ruleNumber EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNumberRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleNumber();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNumberRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNumber"


    // $ANTLR start "ruleNumber"
    // InternalSpellDatabaseParser.g:1174:1: ruleNumber : ( ( rule__Number__Alternatives ) ) ;
    public final void ruleNumber() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:1178:5: ( ( ( rule__Number__Alternatives ) ) )
            // InternalSpellDatabaseParser.g:1179:1: ( ( rule__Number__Alternatives ) )
            {
            // InternalSpellDatabaseParser.g:1179:1: ( ( rule__Number__Alternatives ) )
            // InternalSpellDatabaseParser.g:1180:1: ( rule__Number__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNumberAccess().getAlternatives()); 
            }
            // InternalSpellDatabaseParser.g:1181:1: ( rule__Number__Alternatives )
            // InternalSpellDatabaseParser.g:1181:2: rule__Number__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Number__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNumberAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNumber"


    // $ANTLR start "entryRuleFLOAT_Val"
    // InternalSpellDatabaseParser.g:1193:1: entryRuleFLOAT_Val : ruleFLOAT_Val EOF ;
    public final void entryRuleFLOAT_Val() throws RecognitionException {

        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalSpellDatabaseParser.g:1197:1: ( ruleFLOAT_Val EOF )
            // InternalSpellDatabaseParser.g:1198:1: ruleFLOAT_Val EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFLOAT_ValRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleFLOAT_Val();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFLOAT_ValRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleFLOAT_Val"


    // $ANTLR start "ruleFLOAT_Val"
    // InternalSpellDatabaseParser.g:1208:1: ruleFLOAT_Val : ( ( rule__FLOAT_Val__Group__0 ) ) ;
    public final void ruleFLOAT_Val() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:1213:5: ( ( ( rule__FLOAT_Val__Group__0 ) ) )
            // InternalSpellDatabaseParser.g:1214:1: ( ( rule__FLOAT_Val__Group__0 ) )
            {
            // InternalSpellDatabaseParser.g:1214:1: ( ( rule__FLOAT_Val__Group__0 ) )
            // InternalSpellDatabaseParser.g:1215:1: ( rule__FLOAT_Val__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFLOAT_ValAccess().getGroup()); 
            }
            // InternalSpellDatabaseParser.g:1216:1: ( rule__FLOAT_Val__Group__0 )
            // InternalSpellDatabaseParser.g:1216:2: rule__FLOAT_Val__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__FLOAT_Val__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFLOAT_ValAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleFLOAT_Val"


    // $ANTLR start "entryRuleSkipped_NL"
    // InternalSpellDatabaseParser.g:1229:1: entryRuleSkipped_NL : ruleSkipped_NL EOF ;
    public final void entryRuleSkipped_NL() throws RecognitionException {

        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");

        try {
            // InternalSpellDatabaseParser.g:1233:1: ( ruleSkipped_NL EOF )
            // InternalSpellDatabaseParser.g:1234:1: ruleSkipped_NL EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSkipped_NLRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSkipped_NL();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSkipped_NLRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleSkipped_NL"


    // $ANTLR start "ruleSkipped_NL"
    // InternalSpellDatabaseParser.g:1244:1: ruleSkipped_NL : ( ( rule__Skipped_NL__Group__0 )* ) ;
    public final void ruleSkipped_NL() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:1249:5: ( ( ( rule__Skipped_NL__Group__0 )* ) )
            // InternalSpellDatabaseParser.g:1250:1: ( ( rule__Skipped_NL__Group__0 )* )
            {
            // InternalSpellDatabaseParser.g:1250:1: ( ( rule__Skipped_NL__Group__0 )* )
            // InternalSpellDatabaseParser.g:1251:1: ( rule__Skipped_NL__Group__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSkipped_NLAccess().getGroup()); 
            }
            // InternalSpellDatabaseParser.g:1252:1: ( rule__Skipped_NL__Group__0 )*
            loop5:
            do {
                int alt5=2;
                alt5 = dfa5.predict(input);
                switch (alt5) {
            	case 1 :
            	    // InternalSpellDatabaseParser.g:1252:2: rule__Skipped_NL__Group__0
            	    {
            	    pushFollow(FOLLOW_7);
            	    rule__Skipped_NL__Group__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop5;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSkipped_NLAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleSkipped_NL"


    // $ANTLR start "entryRuleRELTIME"
    // InternalSpellDatabaseParser.g:1265:1: entryRuleRELTIME : ruleRELTIME EOF ;
    public final void entryRuleRELTIME() throws RecognitionException {

        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");

        try {
            // InternalSpellDatabaseParser.g:1269:1: ( ruleRELTIME EOF )
            // InternalSpellDatabaseParser.g:1270:1: ruleRELTIME EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRELTIMERule()); 
            }
            pushFollow(FOLLOW_1);
            ruleRELTIME();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRELTIMERule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleRELTIME"


    // $ANTLR start "ruleRELTIME"
    // InternalSpellDatabaseParser.g:1280:1: ruleRELTIME : ( ( rule__RELTIME__Group__0 ) ) ;
    public final void ruleRELTIME() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:1285:5: ( ( ( rule__RELTIME__Group__0 ) ) )
            // InternalSpellDatabaseParser.g:1286:1: ( ( rule__RELTIME__Group__0 ) )
            {
            // InternalSpellDatabaseParser.g:1286:1: ( ( rule__RELTIME__Group__0 ) )
            // InternalSpellDatabaseParser.g:1287:1: ( rule__RELTIME__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRELTIMEAccess().getGroup()); 
            }
            // InternalSpellDatabaseParser.g:1288:1: ( rule__RELTIME__Group__0 )
            // InternalSpellDatabaseParser.g:1288:2: rule__RELTIME__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__RELTIME__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRELTIMEAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleRELTIME"


    // $ANTLR start "entryRuleABSTIME"
    // InternalSpellDatabaseParser.g:1301:1: entryRuleABSTIME : ruleABSTIME EOF ;
    public final void entryRuleABSTIME() throws RecognitionException {

        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalSpellDatabaseParser.g:1305:1: ( ruleABSTIME EOF )
            // InternalSpellDatabaseParser.g:1306:1: ruleABSTIME EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getABSTIMERule()); 
            }
            pushFollow(FOLLOW_1);
            ruleABSTIME();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getABSTIMERule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleABSTIME"


    // $ANTLR start "ruleABSTIME"
    // InternalSpellDatabaseParser.g:1316:1: ruleABSTIME : ( ( rule__ABSTIME__Alternatives ) ) ;
    public final void ruleABSTIME() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:1321:5: ( ( ( rule__ABSTIME__Alternatives ) ) )
            // InternalSpellDatabaseParser.g:1322:1: ( ( rule__ABSTIME__Alternatives ) )
            {
            // InternalSpellDatabaseParser.g:1322:1: ( ( rule__ABSTIME__Alternatives ) )
            // InternalSpellDatabaseParser.g:1323:1: ( rule__ABSTIME__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getABSTIMEAccess().getAlternatives()); 
            }
            // InternalSpellDatabaseParser.g:1324:1: ( rule__ABSTIME__Alternatives )
            // InternalSpellDatabaseParser.g:1324:2: rule__ABSTIME__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__ABSTIME__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getABSTIMEAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleABSTIME"


    // $ANTLR start "entryRuleSINGLE_VALUE"
    // InternalSpellDatabaseParser.g:1337:1: entryRuleSINGLE_VALUE : ruleSINGLE_VALUE EOF ;
    public final void entryRuleSINGLE_VALUE() throws RecognitionException {

        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");

        try {
            // InternalSpellDatabaseParser.g:1341:1: ( ruleSINGLE_VALUE EOF )
            // InternalSpellDatabaseParser.g:1342:1: ruleSINGLE_VALUE EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSINGLE_VALUERule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSINGLE_VALUE();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSINGLE_VALUERule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleSINGLE_VALUE"


    // $ANTLR start "ruleSINGLE_VALUE"
    // InternalSpellDatabaseParser.g:1352:1: ruleSINGLE_VALUE : ( ( ( rule__SINGLE_VALUE__Alternatives ) ) ( ( rule__SINGLE_VALUE__Alternatives )* ) ) ;
    public final void ruleSINGLE_VALUE() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:1357:5: ( ( ( ( rule__SINGLE_VALUE__Alternatives ) ) ( ( rule__SINGLE_VALUE__Alternatives )* ) ) )
            // InternalSpellDatabaseParser.g:1358:1: ( ( ( rule__SINGLE_VALUE__Alternatives ) ) ( ( rule__SINGLE_VALUE__Alternatives )* ) )
            {
            // InternalSpellDatabaseParser.g:1358:1: ( ( ( rule__SINGLE_VALUE__Alternatives ) ) ( ( rule__SINGLE_VALUE__Alternatives )* ) )
            // InternalSpellDatabaseParser.g:1359:1: ( ( rule__SINGLE_VALUE__Alternatives ) ) ( ( rule__SINGLE_VALUE__Alternatives )* )
            {
            // InternalSpellDatabaseParser.g:1359:1: ( ( rule__SINGLE_VALUE__Alternatives ) )
            // InternalSpellDatabaseParser.g:1360:1: ( rule__SINGLE_VALUE__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSINGLE_VALUEAccess().getAlternatives()); 
            }
            // InternalSpellDatabaseParser.g:1361:1: ( rule__SINGLE_VALUE__Alternatives )
            // InternalSpellDatabaseParser.g:1361:2: rule__SINGLE_VALUE__Alternatives
            {
            pushFollow(FOLLOW_8);
            rule__SINGLE_VALUE__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSINGLE_VALUEAccess().getAlternatives()); 
            }

            }

            // InternalSpellDatabaseParser.g:1364:1: ( ( rule__SINGLE_VALUE__Alternatives )* )
            // InternalSpellDatabaseParser.g:1365:1: ( rule__SINGLE_VALUE__Alternatives )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSINGLE_VALUEAccess().getAlternatives()); 
            }
            // InternalSpellDatabaseParser.g:1366:1: ( rule__SINGLE_VALUE__Alternatives )*
            loop6:
            do {
                int alt6=2;
                alt6 = dfa6.predict(input);
                switch (alt6) {
            	case 1 :
            	    // InternalSpellDatabaseParser.g:1366:2: rule__SINGLE_VALUE__Alternatives
            	    {
            	    pushFollow(FOLLOW_8);
            	    rule__SINGLE_VALUE__Alternatives();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop6;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSINGLE_VALUEAccess().getAlternatives()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleSINGLE_VALUE"


    // $ANTLR start "entryRuleID_STMT"
    // InternalSpellDatabaseParser.g:1380:1: entryRuleID_STMT : ruleID_STMT EOF ;
    public final void entryRuleID_STMT() throws RecognitionException {

        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalSpellDatabaseParser.g:1384:1: ( ruleID_STMT EOF )
            // InternalSpellDatabaseParser.g:1385:1: ruleID_STMT EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getID_STMTRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleID_STMT();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getID_STMTRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleID_STMT"


    // $ANTLR start "ruleID_STMT"
    // InternalSpellDatabaseParser.g:1395:1: ruleID_STMT : ( ( rule__ID_STMT__Group__0 ) ) ;
    public final void ruleID_STMT() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:1400:5: ( ( ( rule__ID_STMT__Group__0 ) ) )
            // InternalSpellDatabaseParser.g:1401:1: ( ( rule__ID_STMT__Group__0 ) )
            {
            // InternalSpellDatabaseParser.g:1401:1: ( ( rule__ID_STMT__Group__0 ) )
            // InternalSpellDatabaseParser.g:1402:1: ( rule__ID_STMT__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getID_STMTAccess().getGroup()); 
            }
            // InternalSpellDatabaseParser.g:1403:1: ( rule__ID_STMT__Group__0 )
            // InternalSpellDatabaseParser.g:1403:2: rule__ID_STMT__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ID_STMT__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getID_STMTAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleID_STMT"


    // $ANTLR start "entryRuleASTRIUM_ID"
    // InternalSpellDatabaseParser.g:1416:1: entryRuleASTRIUM_ID : ruleASTRIUM_ID EOF ;
    public final void entryRuleASTRIUM_ID() throws RecognitionException {

        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");

        try {
            // InternalSpellDatabaseParser.g:1420:1: ( ruleASTRIUM_ID EOF )
            // InternalSpellDatabaseParser.g:1421:1: ruleASTRIUM_ID EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getASTRIUM_IDRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleASTRIUM_ID();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getASTRIUM_IDRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleASTRIUM_ID"


    // $ANTLR start "ruleASTRIUM_ID"
    // InternalSpellDatabaseParser.g:1431:1: ruleASTRIUM_ID : ( ( rule__ASTRIUM_ID__Group__0 ) ) ;
    public final void ruleASTRIUM_ID() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:1436:5: ( ( ( rule__ASTRIUM_ID__Group__0 ) ) )
            // InternalSpellDatabaseParser.g:1437:1: ( ( rule__ASTRIUM_ID__Group__0 ) )
            {
            // InternalSpellDatabaseParser.g:1437:1: ( ( rule__ASTRIUM_ID__Group__0 ) )
            // InternalSpellDatabaseParser.g:1438:1: ( rule__ASTRIUM_ID__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getASTRIUM_IDAccess().getGroup()); 
            }
            // InternalSpellDatabaseParser.g:1439:1: ( rule__ASTRIUM_ID__Group__0 )
            // InternalSpellDatabaseParser.g:1439:2: rule__ASTRIUM_ID__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ASTRIUM_ID__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getASTRIUM_IDAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleASTRIUM_ID"


    // $ANTLR start "entryRuleASTRIUM_TIME"
    // InternalSpellDatabaseParser.g:1452:1: entryRuleASTRIUM_TIME : ruleASTRIUM_TIME EOF ;
    public final void entryRuleASTRIUM_TIME() throws RecognitionException {

        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");

        try {
            // InternalSpellDatabaseParser.g:1456:1: ( ruleASTRIUM_TIME EOF )
            // InternalSpellDatabaseParser.g:1457:1: ruleASTRIUM_TIME EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getASTRIUM_TIMERule()); 
            }
            pushFollow(FOLLOW_1);
            ruleASTRIUM_TIME();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getASTRIUM_TIMERule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleASTRIUM_TIME"


    // $ANTLR start "ruleASTRIUM_TIME"
    // InternalSpellDatabaseParser.g:1467:1: ruleASTRIUM_TIME : ( ( rule__ASTRIUM_TIME__Group__0 ) ) ;
    public final void ruleASTRIUM_TIME() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:1472:5: ( ( ( rule__ASTRIUM_TIME__Group__0 ) ) )
            // InternalSpellDatabaseParser.g:1473:1: ( ( rule__ASTRIUM_TIME__Group__0 ) )
            {
            // InternalSpellDatabaseParser.g:1473:1: ( ( rule__ASTRIUM_TIME__Group__0 ) )
            // InternalSpellDatabaseParser.g:1474:1: ( rule__ASTRIUM_TIME__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getASTRIUM_TIMEAccess().getGroup()); 
            }
            // InternalSpellDatabaseParser.g:1475:1: ( rule__ASTRIUM_TIME__Group__0 )
            // InternalSpellDatabaseParser.g:1475:2: rule__ASTRIUM_TIME__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ASTRIUM_TIME__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getASTRIUM_TIMEAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleASTRIUM_TIME"


    // $ANTLR start "entryRuleINTEGER"
    // InternalSpellDatabaseParser.g:1488:1: entryRuleINTEGER : ruleINTEGER EOF ;
    public final void entryRuleINTEGER() throws RecognitionException {

        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalSpellDatabaseParser.g:1492:1: ( ruleINTEGER EOF )
            // InternalSpellDatabaseParser.g:1493:1: ruleINTEGER EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getINTEGERRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleINTEGER();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getINTEGERRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleINTEGER"


    // $ANTLR start "ruleINTEGER"
    // InternalSpellDatabaseParser.g:1503:1: ruleINTEGER : ( ( rule__INTEGER__Group__0 ) ) ;
    public final void ruleINTEGER() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:1508:5: ( ( ( rule__INTEGER__Group__0 ) ) )
            // InternalSpellDatabaseParser.g:1509:1: ( ( rule__INTEGER__Group__0 ) )
            {
            // InternalSpellDatabaseParser.g:1509:1: ( ( rule__INTEGER__Group__0 ) )
            // InternalSpellDatabaseParser.g:1510:1: ( rule__INTEGER__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getINTEGERAccess().getGroup()); 
            }
            // InternalSpellDatabaseParser.g:1511:1: ( rule__INTEGER__Group__0 )
            // InternalSpellDatabaseParser.g:1511:2: rule__INTEGER__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__INTEGER__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getINTEGERAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleINTEGER"


    // $ANTLR start "rule__SpellDatabase__Alternatives_1"
    // InternalSpellDatabaseParser.g:1524:1: rule__SpellDatabase__Alternatives_1 : ( ( ( rule__SpellDatabase__Group_1_0__0 ) ) | ( ( rule__SpellDatabase__Group_1_1__0 ) ) | ( ( rule__SpellDatabase__Group_1_2__0 ) ) );
    public final void rule__SpellDatabase__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:1528:1: ( ( ( rule__SpellDatabase__Group_1_0__0 ) ) | ( ( rule__SpellDatabase__Group_1_1__0 ) ) | ( ( rule__SpellDatabase__Group_1_2__0 ) ) )
            int alt7=3;
            alt7 = dfa7.predict(input);
            switch (alt7) {
                case 1 :
                    // InternalSpellDatabaseParser.g:1529:1: ( ( rule__SpellDatabase__Group_1_0__0 ) )
                    {
                    // InternalSpellDatabaseParser.g:1529:1: ( ( rule__SpellDatabase__Group_1_0__0 ) )
                    // InternalSpellDatabaseParser.g:1530:1: ( rule__SpellDatabase__Group_1_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSpellDatabaseAccess().getGroup_1_0()); 
                    }
                    // InternalSpellDatabaseParser.g:1531:1: ( rule__SpellDatabase__Group_1_0__0 )
                    // InternalSpellDatabaseParser.g:1531:2: rule__SpellDatabase__Group_1_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__SpellDatabase__Group_1_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSpellDatabaseAccess().getGroup_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSpellDatabaseParser.g:1535:6: ( ( rule__SpellDatabase__Group_1_1__0 ) )
                    {
                    // InternalSpellDatabaseParser.g:1535:6: ( ( rule__SpellDatabase__Group_1_1__0 ) )
                    // InternalSpellDatabaseParser.g:1536:1: ( rule__SpellDatabase__Group_1_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSpellDatabaseAccess().getGroup_1_1()); 
                    }
                    // InternalSpellDatabaseParser.g:1537:1: ( rule__SpellDatabase__Group_1_1__0 )
                    // InternalSpellDatabaseParser.g:1537:2: rule__SpellDatabase__Group_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__SpellDatabase__Group_1_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSpellDatabaseAccess().getGroup_1_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSpellDatabaseParser.g:1541:6: ( ( rule__SpellDatabase__Group_1_2__0 ) )
                    {
                    // InternalSpellDatabaseParser.g:1541:6: ( ( rule__SpellDatabase__Group_1_2__0 ) )
                    // InternalSpellDatabaseParser.g:1542:1: ( rule__SpellDatabase__Group_1_2__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSpellDatabaseAccess().getGroup_1_2()); 
                    }
                    // InternalSpellDatabaseParser.g:1543:1: ( rule__SpellDatabase__Group_1_2__0 )
                    // InternalSpellDatabaseParser.g:1543:2: rule__SpellDatabase__Group_1_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__SpellDatabase__Group_1_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSpellDatabaseAccess().getGroup_1_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpellDatabase__Alternatives_1"


    // $ANTLR start "rule__AstriumVariableEntry__Alternatives"
    // InternalSpellDatabaseParser.g:1552:1: rule__AstriumVariableEntry__Alternatives : ( ( ( rule__AstriumVariableEntry__Group_0__0 ) ) | ( ( rule__AstriumVariableEntry__Group_1__0 ) ) );
    public final void rule__AstriumVariableEntry__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:1556:1: ( ( ( rule__AstriumVariableEntry__Group_0__0 ) ) | ( ( rule__AstriumVariableEntry__Group_1__0 ) ) )
            int alt8=2;
            int LA8_0 = input.LA(1);

            if ( (LA8_0==RULE_ASTRIUM_COMMENT) ) {
                alt8=1;
            }
            else if ( (LA8_0==RULE_DOLLAR) ) {
                alt8=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 8, 0, input);

                throw nvae;
            }
            switch (alt8) {
                case 1 :
                    // InternalSpellDatabaseParser.g:1557:1: ( ( rule__AstriumVariableEntry__Group_0__0 ) )
                    {
                    // InternalSpellDatabaseParser.g:1557:1: ( ( rule__AstriumVariableEntry__Group_0__0 ) )
                    // InternalSpellDatabaseParser.g:1558:1: ( rule__AstriumVariableEntry__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAstriumVariableEntryAccess().getGroup_0()); 
                    }
                    // InternalSpellDatabaseParser.g:1559:1: ( rule__AstriumVariableEntry__Group_0__0 )
                    // InternalSpellDatabaseParser.g:1559:2: rule__AstriumVariableEntry__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AstriumVariableEntry__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAstriumVariableEntryAccess().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSpellDatabaseParser.g:1563:6: ( ( rule__AstriumVariableEntry__Group_1__0 ) )
                    {
                    // InternalSpellDatabaseParser.g:1563:6: ( ( rule__AstriumVariableEntry__Group_1__0 ) )
                    // InternalSpellDatabaseParser.g:1564:1: ( rule__AstriumVariableEntry__Group_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAstriumVariableEntryAccess().getGroup_1()); 
                    }
                    // InternalSpellDatabaseParser.g:1565:1: ( rule__AstriumVariableEntry__Group_1__0 )
                    // InternalSpellDatabaseParser.g:1565:2: rule__AstriumVariableEntry__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AstriumVariableEntry__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAstriumVariableEntryAccess().getGroup_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AstriumVariableEntry__Alternatives"


    // $ANTLR start "rule__AstriumVariableEntry__Alternatives_1_5"
    // InternalSpellDatabaseParser.g:1574:1: rule__AstriumVariableEntry__Alternatives_1_5 : ( ( ( rule__AstriumVariableEntry__AstriumTimeAssignment_1_5_0 ) ) | ( ( rule__AstriumVariableEntry__ValueAssignment_1_5_1 ) ) | ( ( rule__AstriumVariableEntry__SimpleValueAssignment_1_5_2 ) ) );
    public final void rule__AstriumVariableEntry__Alternatives_1_5() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:1578:1: ( ( ( rule__AstriumVariableEntry__AstriumTimeAssignment_1_5_0 ) ) | ( ( rule__AstriumVariableEntry__ValueAssignment_1_5_1 ) ) | ( ( rule__AstriumVariableEntry__SimpleValueAssignment_1_5_2 ) ) )
            int alt9=3;
            alt9 = dfa9.predict(input);
            switch (alt9) {
                case 1 :
                    // InternalSpellDatabaseParser.g:1579:1: ( ( rule__AstriumVariableEntry__AstriumTimeAssignment_1_5_0 ) )
                    {
                    // InternalSpellDatabaseParser.g:1579:1: ( ( rule__AstriumVariableEntry__AstriumTimeAssignment_1_5_0 ) )
                    // InternalSpellDatabaseParser.g:1580:1: ( rule__AstriumVariableEntry__AstriumTimeAssignment_1_5_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAstriumVariableEntryAccess().getAstriumTimeAssignment_1_5_0()); 
                    }
                    // InternalSpellDatabaseParser.g:1581:1: ( rule__AstriumVariableEntry__AstriumTimeAssignment_1_5_0 )
                    // InternalSpellDatabaseParser.g:1581:2: rule__AstriumVariableEntry__AstriumTimeAssignment_1_5_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AstriumVariableEntry__AstriumTimeAssignment_1_5_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAstriumVariableEntryAccess().getAstriumTimeAssignment_1_5_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSpellDatabaseParser.g:1585:6: ( ( rule__AstriumVariableEntry__ValueAssignment_1_5_1 ) )
                    {
                    // InternalSpellDatabaseParser.g:1585:6: ( ( rule__AstriumVariableEntry__ValueAssignment_1_5_1 ) )
                    // InternalSpellDatabaseParser.g:1586:1: ( rule__AstriumVariableEntry__ValueAssignment_1_5_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAstriumVariableEntryAccess().getValueAssignment_1_5_1()); 
                    }
                    // InternalSpellDatabaseParser.g:1587:1: ( rule__AstriumVariableEntry__ValueAssignment_1_5_1 )
                    // InternalSpellDatabaseParser.g:1587:2: rule__AstriumVariableEntry__ValueAssignment_1_5_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__AstriumVariableEntry__ValueAssignment_1_5_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAstriumVariableEntryAccess().getValueAssignment_1_5_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSpellDatabaseParser.g:1591:6: ( ( rule__AstriumVariableEntry__SimpleValueAssignment_1_5_2 ) )
                    {
                    // InternalSpellDatabaseParser.g:1591:6: ( ( rule__AstriumVariableEntry__SimpleValueAssignment_1_5_2 ) )
                    // InternalSpellDatabaseParser.g:1592:1: ( rule__AstriumVariableEntry__SimpleValueAssignment_1_5_2 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAstriumVariableEntryAccess().getSimpleValueAssignment_1_5_2()); 
                    }
                    // InternalSpellDatabaseParser.g:1593:1: ( rule__AstriumVariableEntry__SimpleValueAssignment_1_5_2 )
                    // InternalSpellDatabaseParser.g:1593:2: rule__AstriumVariableEntry__SimpleValueAssignment_1_5_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__AstriumVariableEntry__SimpleValueAssignment_1_5_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAstriumVariableEntryAccess().getSimpleValueAssignment_1_5_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AstriumVariableEntry__Alternatives_1_5"


    // $ANTLR start "rule__AstriumHeaderEntry__Alternatives"
    // InternalSpellDatabaseParser.g:1602:1: rule__AstriumHeaderEntry__Alternatives : ( ( ( rule__AstriumHeaderEntry__Group_0__0 ) ) | ( ( rule__AstriumHeaderEntry__Group_1__0 ) ) );
    public final void rule__AstriumHeaderEntry__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:1606:1: ( ( ( rule__AstriumHeaderEntry__Group_0__0 ) ) | ( ( rule__AstriumHeaderEntry__Group_1__0 ) ) )
            int alt10=2;
            int LA10_0 = input.LA(1);

            if ( (LA10_0==RULE_ASTRIUM_COMMENT) ) {
                alt10=1;
            }
            else if ( (LA10_0==RULE_ID) ) {
                alt10=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 10, 0, input);

                throw nvae;
            }
            switch (alt10) {
                case 1 :
                    // InternalSpellDatabaseParser.g:1607:1: ( ( rule__AstriumHeaderEntry__Group_0__0 ) )
                    {
                    // InternalSpellDatabaseParser.g:1607:1: ( ( rule__AstriumHeaderEntry__Group_0__0 ) )
                    // InternalSpellDatabaseParser.g:1608:1: ( rule__AstriumHeaderEntry__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAstriumHeaderEntryAccess().getGroup_0()); 
                    }
                    // InternalSpellDatabaseParser.g:1609:1: ( rule__AstriumHeaderEntry__Group_0__0 )
                    // InternalSpellDatabaseParser.g:1609:2: rule__AstriumHeaderEntry__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AstriumHeaderEntry__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAstriumHeaderEntryAccess().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSpellDatabaseParser.g:1613:6: ( ( rule__AstriumHeaderEntry__Group_1__0 ) )
                    {
                    // InternalSpellDatabaseParser.g:1613:6: ( ( rule__AstriumHeaderEntry__Group_1__0 ) )
                    // InternalSpellDatabaseParser.g:1614:1: ( rule__AstriumHeaderEntry__Group_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAstriumHeaderEntryAccess().getGroup_1()); 
                    }
                    // InternalSpellDatabaseParser.g:1615:1: ( rule__AstriumHeaderEntry__Group_1__0 )
                    // InternalSpellDatabaseParser.g:1615:2: rule__AstriumHeaderEntry__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AstriumHeaderEntry__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAstriumHeaderEntryAccess().getGroup_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AstriumHeaderEntry__Alternatives"


    // $ANTLR start "rule__AstriumHeaderEntry__Alternatives_1_4"
    // InternalSpellDatabaseParser.g:1624:1: rule__AstriumHeaderEntry__Alternatives_1_4 : ( ( ( rule__AstriumHeaderEntry__AstriumTimeAssignment_1_4_0 ) ) | ( ( rule__AstriumHeaderEntry__ValueAssignment_1_4_1 ) ) | ( ( rule__AstriumHeaderEntry__SimpleValueAssignment_1_4_2 ) ) );
    public final void rule__AstriumHeaderEntry__Alternatives_1_4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:1628:1: ( ( ( rule__AstriumHeaderEntry__AstriumTimeAssignment_1_4_0 ) ) | ( ( rule__AstriumHeaderEntry__ValueAssignment_1_4_1 ) ) | ( ( rule__AstriumHeaderEntry__SimpleValueAssignment_1_4_2 ) ) )
            int alt11=3;
            alt11 = dfa11.predict(input);
            switch (alt11) {
                case 1 :
                    // InternalSpellDatabaseParser.g:1629:1: ( ( rule__AstriumHeaderEntry__AstriumTimeAssignment_1_4_0 ) )
                    {
                    // InternalSpellDatabaseParser.g:1629:1: ( ( rule__AstriumHeaderEntry__AstriumTimeAssignment_1_4_0 ) )
                    // InternalSpellDatabaseParser.g:1630:1: ( rule__AstriumHeaderEntry__AstriumTimeAssignment_1_4_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAstriumHeaderEntryAccess().getAstriumTimeAssignment_1_4_0()); 
                    }
                    // InternalSpellDatabaseParser.g:1631:1: ( rule__AstriumHeaderEntry__AstriumTimeAssignment_1_4_0 )
                    // InternalSpellDatabaseParser.g:1631:2: rule__AstriumHeaderEntry__AstriumTimeAssignment_1_4_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AstriumHeaderEntry__AstriumTimeAssignment_1_4_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAstriumHeaderEntryAccess().getAstriumTimeAssignment_1_4_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSpellDatabaseParser.g:1635:6: ( ( rule__AstriumHeaderEntry__ValueAssignment_1_4_1 ) )
                    {
                    // InternalSpellDatabaseParser.g:1635:6: ( ( rule__AstriumHeaderEntry__ValueAssignment_1_4_1 ) )
                    // InternalSpellDatabaseParser.g:1636:1: ( rule__AstriumHeaderEntry__ValueAssignment_1_4_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAstriumHeaderEntryAccess().getValueAssignment_1_4_1()); 
                    }
                    // InternalSpellDatabaseParser.g:1637:1: ( rule__AstriumHeaderEntry__ValueAssignment_1_4_1 )
                    // InternalSpellDatabaseParser.g:1637:2: rule__AstriumHeaderEntry__ValueAssignment_1_4_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__AstriumHeaderEntry__ValueAssignment_1_4_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAstriumHeaderEntryAccess().getValueAssignment_1_4_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSpellDatabaseParser.g:1641:6: ( ( rule__AstriumHeaderEntry__SimpleValueAssignment_1_4_2 ) )
                    {
                    // InternalSpellDatabaseParser.g:1641:6: ( ( rule__AstriumHeaderEntry__SimpleValueAssignment_1_4_2 ) )
                    // InternalSpellDatabaseParser.g:1642:1: ( rule__AstriumHeaderEntry__SimpleValueAssignment_1_4_2 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAstriumHeaderEntryAccess().getSimpleValueAssignment_1_4_2()); 
                    }
                    // InternalSpellDatabaseParser.g:1643:1: ( rule__AstriumHeaderEntry__SimpleValueAssignment_1_4_2 )
                    // InternalSpellDatabaseParser.g:1643:2: rule__AstriumHeaderEntry__SimpleValueAssignment_1_4_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__AstriumHeaderEntry__SimpleValueAssignment_1_4_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAstriumHeaderEntryAccess().getSimpleValueAssignment_1_4_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AstriumHeaderEntry__Alternatives_1_4"


    // $ANTLR start "rule__SkipNLAndComments__Alternatives"
    // InternalSpellDatabaseParser.g:1652:1: rule__SkipNLAndComments__Alternatives : ( ( RULE_WS ) | ( RULE_ML_COMMENT ) | ( RULE_SL_COMMENT ) | ( RULE_NL ) );
    public final void rule__SkipNLAndComments__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:1656:1: ( ( RULE_WS ) | ( RULE_ML_COMMENT ) | ( RULE_SL_COMMENT ) | ( RULE_NL ) )
            int alt12=4;
            switch ( input.LA(1) ) {
            case RULE_WS:
                {
                alt12=1;
                }
                break;
            case RULE_ML_COMMENT:
                {
                alt12=2;
                }
                break;
            case RULE_SL_COMMENT:
                {
                alt12=3;
                }
                break;
            case RULE_NL:
                {
                alt12=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 12, 0, input);

                throw nvae;
            }

            switch (alt12) {
                case 1 :
                    // InternalSpellDatabaseParser.g:1657:1: ( RULE_WS )
                    {
                    // InternalSpellDatabaseParser.g:1657:1: ( RULE_WS )
                    // InternalSpellDatabaseParser.g:1658:1: RULE_WS
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSkipNLAndCommentsAccess().getWSTerminalRuleCall_0()); 
                    }
                    match(input,RULE_WS,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSkipNLAndCommentsAccess().getWSTerminalRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSpellDatabaseParser.g:1663:6: ( RULE_ML_COMMENT )
                    {
                    // InternalSpellDatabaseParser.g:1663:6: ( RULE_ML_COMMENT )
                    // InternalSpellDatabaseParser.g:1664:1: RULE_ML_COMMENT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSkipNLAndCommentsAccess().getML_COMMENTTerminalRuleCall_1()); 
                    }
                    match(input,RULE_ML_COMMENT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSkipNLAndCommentsAccess().getML_COMMENTTerminalRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSpellDatabaseParser.g:1669:6: ( RULE_SL_COMMENT )
                    {
                    // InternalSpellDatabaseParser.g:1669:6: ( RULE_SL_COMMENT )
                    // InternalSpellDatabaseParser.g:1670:1: RULE_SL_COMMENT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSkipNLAndCommentsAccess().getSL_COMMENTTerminalRuleCall_2()); 
                    }
                    match(input,RULE_SL_COMMENT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSkipNLAndCommentsAccess().getSL_COMMENTTerminalRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSpellDatabaseParser.g:1675:6: ( RULE_NL )
                    {
                    // InternalSpellDatabaseParser.g:1675:6: ( RULE_NL )
                    // InternalSpellDatabaseParser.g:1676:1: RULE_NL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSkipNLAndCommentsAccess().getNLTerminalRuleCall_3()); 
                    }
                    match(input,RULE_NL,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSkipNLAndCommentsAccess().getNLTerminalRuleCall_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SkipNLAndComments__Alternatives"


    // $ANTLR start "rule__CSVEntry__Alternatives"
    // InternalSpellDatabaseParser.g:1686:1: rule__CSVEntry__Alternatives : ( ( ruleCSVCommand ) | ( ruleCSVTelemetry ) | ( ruleCSVSpell ) );
    public final void rule__CSVEntry__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:1690:1: ( ( ruleCSVCommand ) | ( ruleCSVTelemetry ) | ( ruleCSVSpell ) )
            int alt13=3;
            switch ( input.LA(1) ) {
            case RULE_CMD:
                {
                alt13=1;
                }
                break;
            case RULE_TM:
                {
                alt13=2;
                }
                break;
            case RULE_SPELL:
                {
                alt13=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 13, 0, input);

                throw nvae;
            }

            switch (alt13) {
                case 1 :
                    // InternalSpellDatabaseParser.g:1691:1: ( ruleCSVCommand )
                    {
                    // InternalSpellDatabaseParser.g:1691:1: ( ruleCSVCommand )
                    // InternalSpellDatabaseParser.g:1692:1: ruleCSVCommand
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getCSVEntryAccess().getCSVCommandParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleCSVCommand();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getCSVEntryAccess().getCSVCommandParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSpellDatabaseParser.g:1697:6: ( ruleCSVTelemetry )
                    {
                    // InternalSpellDatabaseParser.g:1697:6: ( ruleCSVTelemetry )
                    // InternalSpellDatabaseParser.g:1698:1: ruleCSVTelemetry
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getCSVEntryAccess().getCSVTelemetryParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleCSVTelemetry();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getCSVEntryAccess().getCSVTelemetryParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSpellDatabaseParser.g:1703:6: ( ruleCSVSpell )
                    {
                    // InternalSpellDatabaseParser.g:1703:6: ( ruleCSVSpell )
                    // InternalSpellDatabaseParser.g:1704:1: ruleCSVSpell
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getCSVEntryAccess().getCSVSpellParserRuleCall_2()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleCSVSpell();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getCSVEntryAccess().getCSVSpellParserRuleCall_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CSVEntry__Alternatives"


    // $ANTLR start "rule__TCValue__Alternatives"
    // InternalSpellDatabaseParser.g:1714:1: rule__TCValue__Alternatives : ( ( ruleID_STMT ) | ( RULE_BIN_HEX_OCT ) | ( RULE_PLUS ) | ( RULE_MINUS ) | ( ( ruleINTEGER ) ) | ( ( RULE_FLOAT ) ) | ( Asterisk ) | ( RULE_BOOL_EXPR ) );
    public final void rule__TCValue__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:1718:1: ( ( ruleID_STMT ) | ( RULE_BIN_HEX_OCT ) | ( RULE_PLUS ) | ( RULE_MINUS ) | ( ( ruleINTEGER ) ) | ( ( RULE_FLOAT ) ) | ( Asterisk ) | ( RULE_BOOL_EXPR ) )
            int alt14=8;
            alt14 = dfa14.predict(input);
            switch (alt14) {
                case 1 :
                    // InternalSpellDatabaseParser.g:1719:1: ( ruleID_STMT )
                    {
                    // InternalSpellDatabaseParser.g:1719:1: ( ruleID_STMT )
                    // InternalSpellDatabaseParser.g:1720:1: ruleID_STMT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTCValueAccess().getID_STMTParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleID_STMT();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTCValueAccess().getID_STMTParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSpellDatabaseParser.g:1725:6: ( RULE_BIN_HEX_OCT )
                    {
                    // InternalSpellDatabaseParser.g:1725:6: ( RULE_BIN_HEX_OCT )
                    // InternalSpellDatabaseParser.g:1726:1: RULE_BIN_HEX_OCT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTCValueAccess().getBIN_HEX_OCTTerminalRuleCall_1()); 
                    }
                    match(input,RULE_BIN_HEX_OCT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTCValueAccess().getBIN_HEX_OCTTerminalRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSpellDatabaseParser.g:1731:6: ( RULE_PLUS )
                    {
                    // InternalSpellDatabaseParser.g:1731:6: ( RULE_PLUS )
                    // InternalSpellDatabaseParser.g:1732:1: RULE_PLUS
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTCValueAccess().getPLUSTerminalRuleCall_2()); 
                    }
                    match(input,RULE_PLUS,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTCValueAccess().getPLUSTerminalRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSpellDatabaseParser.g:1737:6: ( RULE_MINUS )
                    {
                    // InternalSpellDatabaseParser.g:1737:6: ( RULE_MINUS )
                    // InternalSpellDatabaseParser.g:1738:1: RULE_MINUS
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTCValueAccess().getMINUSTerminalRuleCall_3()); 
                    }
                    match(input,RULE_MINUS,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTCValueAccess().getMINUSTerminalRuleCall_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSpellDatabaseParser.g:1743:6: ( ( ruleINTEGER ) )
                    {
                    // InternalSpellDatabaseParser.g:1743:6: ( ( ruleINTEGER ) )
                    // InternalSpellDatabaseParser.g:1744:1: ( ruleINTEGER )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTCValueAccess().getINTEGERParserRuleCall_4()); 
                    }
                    // InternalSpellDatabaseParser.g:1745:1: ( ruleINTEGER )
                    // InternalSpellDatabaseParser.g:1745:3: ruleINTEGER
                    {
                    pushFollow(FOLLOW_2);
                    ruleINTEGER();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTCValueAccess().getINTEGERParserRuleCall_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalSpellDatabaseParser.g:1749:6: ( ( RULE_FLOAT ) )
                    {
                    // InternalSpellDatabaseParser.g:1749:6: ( ( RULE_FLOAT ) )
                    // InternalSpellDatabaseParser.g:1750:1: ( RULE_FLOAT )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTCValueAccess().getFLOATTerminalRuleCall_5()); 
                    }
                    // InternalSpellDatabaseParser.g:1751:1: ( RULE_FLOAT )
                    // InternalSpellDatabaseParser.g:1751:3: RULE_FLOAT
                    {
                    match(input,RULE_FLOAT,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTCValueAccess().getFLOATTerminalRuleCall_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalSpellDatabaseParser.g:1755:6: ( Asterisk )
                    {
                    // InternalSpellDatabaseParser.g:1755:6: ( Asterisk )
                    // InternalSpellDatabaseParser.g:1756:1: Asterisk
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTCValueAccess().getAsteriskKeyword_6()); 
                    }
                    match(input,Asterisk,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTCValueAccess().getAsteriskKeyword_6()); 
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalSpellDatabaseParser.g:1763:6: ( RULE_BOOL_EXPR )
                    {
                    // InternalSpellDatabaseParser.g:1763:6: ( RULE_BOOL_EXPR )
                    // InternalSpellDatabaseParser.g:1764:1: RULE_BOOL_EXPR
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTCValueAccess().getBOOL_EXPRTerminalRuleCall_7()); 
                    }
                    match(input,RULE_BOOL_EXPR,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTCValueAccess().getBOOL_EXPRTerminalRuleCall_7()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TCValue__Alternatives"


    // $ANTLR start "rule__KeyValue__Alternatives"
    // InternalSpellDatabaseParser.g:1774:1: rule__KeyValue__Alternatives : ( ( ruleID_STMT ) | ( RULE_BIN_HEX_OCT ) | ( RULE_PLUS ) | ( RULE_MINUS ) | ( ( ruleINTEGER ) ) | ( ( RULE_FLOAT ) ) | ( Asterisk ) | ( ( RULE_STRING ) ) | ( RULE_BOOL_EXPR ) );
    public final void rule__KeyValue__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:1778:1: ( ( ruleID_STMT ) | ( RULE_BIN_HEX_OCT ) | ( RULE_PLUS ) | ( RULE_MINUS ) | ( ( ruleINTEGER ) ) | ( ( RULE_FLOAT ) ) | ( Asterisk ) | ( ( RULE_STRING ) ) | ( RULE_BOOL_EXPR ) )
            int alt15=9;
            alt15 = dfa15.predict(input);
            switch (alt15) {
                case 1 :
                    // InternalSpellDatabaseParser.g:1779:1: ( ruleID_STMT )
                    {
                    // InternalSpellDatabaseParser.g:1779:1: ( ruleID_STMT )
                    // InternalSpellDatabaseParser.g:1780:1: ruleID_STMT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getKeyValueAccess().getID_STMTParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleID_STMT();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getKeyValueAccess().getID_STMTParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSpellDatabaseParser.g:1785:6: ( RULE_BIN_HEX_OCT )
                    {
                    // InternalSpellDatabaseParser.g:1785:6: ( RULE_BIN_HEX_OCT )
                    // InternalSpellDatabaseParser.g:1786:1: RULE_BIN_HEX_OCT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getKeyValueAccess().getBIN_HEX_OCTTerminalRuleCall_1()); 
                    }
                    match(input,RULE_BIN_HEX_OCT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getKeyValueAccess().getBIN_HEX_OCTTerminalRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSpellDatabaseParser.g:1791:6: ( RULE_PLUS )
                    {
                    // InternalSpellDatabaseParser.g:1791:6: ( RULE_PLUS )
                    // InternalSpellDatabaseParser.g:1792:1: RULE_PLUS
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getKeyValueAccess().getPLUSTerminalRuleCall_2()); 
                    }
                    match(input,RULE_PLUS,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getKeyValueAccess().getPLUSTerminalRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSpellDatabaseParser.g:1797:6: ( RULE_MINUS )
                    {
                    // InternalSpellDatabaseParser.g:1797:6: ( RULE_MINUS )
                    // InternalSpellDatabaseParser.g:1798:1: RULE_MINUS
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getKeyValueAccess().getMINUSTerminalRuleCall_3()); 
                    }
                    match(input,RULE_MINUS,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getKeyValueAccess().getMINUSTerminalRuleCall_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSpellDatabaseParser.g:1803:6: ( ( ruleINTEGER ) )
                    {
                    // InternalSpellDatabaseParser.g:1803:6: ( ( ruleINTEGER ) )
                    // InternalSpellDatabaseParser.g:1804:1: ( ruleINTEGER )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getKeyValueAccess().getINTEGERParserRuleCall_4()); 
                    }
                    // InternalSpellDatabaseParser.g:1805:1: ( ruleINTEGER )
                    // InternalSpellDatabaseParser.g:1805:3: ruleINTEGER
                    {
                    pushFollow(FOLLOW_2);
                    ruleINTEGER();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getKeyValueAccess().getINTEGERParserRuleCall_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalSpellDatabaseParser.g:1809:6: ( ( RULE_FLOAT ) )
                    {
                    // InternalSpellDatabaseParser.g:1809:6: ( ( RULE_FLOAT ) )
                    // InternalSpellDatabaseParser.g:1810:1: ( RULE_FLOAT )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getKeyValueAccess().getFLOATTerminalRuleCall_5()); 
                    }
                    // InternalSpellDatabaseParser.g:1811:1: ( RULE_FLOAT )
                    // InternalSpellDatabaseParser.g:1811:3: RULE_FLOAT
                    {
                    match(input,RULE_FLOAT,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getKeyValueAccess().getFLOATTerminalRuleCall_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalSpellDatabaseParser.g:1815:6: ( Asterisk )
                    {
                    // InternalSpellDatabaseParser.g:1815:6: ( Asterisk )
                    // InternalSpellDatabaseParser.g:1816:1: Asterisk
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getKeyValueAccess().getAsteriskKeyword_6()); 
                    }
                    match(input,Asterisk,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getKeyValueAccess().getAsteriskKeyword_6()); 
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalSpellDatabaseParser.g:1823:6: ( ( RULE_STRING ) )
                    {
                    // InternalSpellDatabaseParser.g:1823:6: ( ( RULE_STRING ) )
                    // InternalSpellDatabaseParser.g:1824:1: ( RULE_STRING )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getKeyValueAccess().getSTRINGTerminalRuleCall_7()); 
                    }
                    // InternalSpellDatabaseParser.g:1825:1: ( RULE_STRING )
                    // InternalSpellDatabaseParser.g:1825:3: RULE_STRING
                    {
                    match(input,RULE_STRING,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getKeyValueAccess().getSTRINGTerminalRuleCall_7()); 
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalSpellDatabaseParser.g:1829:6: ( RULE_BOOL_EXPR )
                    {
                    // InternalSpellDatabaseParser.g:1829:6: ( RULE_BOOL_EXPR )
                    // InternalSpellDatabaseParser.g:1830:1: RULE_BOOL_EXPR
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getKeyValueAccess().getBOOL_EXPRTerminalRuleCall_8()); 
                    }
                    match(input,RULE_BOOL_EXPR,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getKeyValueAccess().getBOOL_EXPRTerminalRuleCall_8()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__KeyValue__Alternatives"


    // $ANTLR start "rule__SpellCommand__Alternatives"
    // InternalSpellDatabaseParser.g:1840:1: rule__SpellCommand__Alternatives : ( ( ( rule__SpellCommand__Group_0__0 ) ) | ( ( rule__SpellCommand__Group_1__0 ) ) );
    public final void rule__SpellCommand__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:1844:1: ( ( ( rule__SpellCommand__Group_0__0 ) ) | ( ( rule__SpellCommand__Group_1__0 ) ) )
            int alt16=2;
            int LA16_0 = input.LA(1);

            if ( (LA16_0==RULE_WAIT) ) {
                alt16=1;
            }
            else if ( (LA16_0==RULE_PAUSE) ) {
                alt16=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 16, 0, input);

                throw nvae;
            }
            switch (alt16) {
                case 1 :
                    // InternalSpellDatabaseParser.g:1845:1: ( ( rule__SpellCommand__Group_0__0 ) )
                    {
                    // InternalSpellDatabaseParser.g:1845:1: ( ( rule__SpellCommand__Group_0__0 ) )
                    // InternalSpellDatabaseParser.g:1846:1: ( rule__SpellCommand__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSpellCommandAccess().getGroup_0()); 
                    }
                    // InternalSpellDatabaseParser.g:1847:1: ( rule__SpellCommand__Group_0__0 )
                    // InternalSpellDatabaseParser.g:1847:2: rule__SpellCommand__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__SpellCommand__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSpellCommandAccess().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSpellDatabaseParser.g:1851:6: ( ( rule__SpellCommand__Group_1__0 ) )
                    {
                    // InternalSpellDatabaseParser.g:1851:6: ( ( rule__SpellCommand__Group_1__0 ) )
                    // InternalSpellDatabaseParser.g:1852:1: ( rule__SpellCommand__Group_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSpellCommandAccess().getGroup_1()); 
                    }
                    // InternalSpellDatabaseParser.g:1853:1: ( rule__SpellCommand__Group_1__0 )
                    // InternalSpellDatabaseParser.g:1853:2: rule__SpellCommand__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__SpellCommand__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSpellCommandAccess().getGroup_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpellCommand__Alternatives"


    // $ANTLR start "rule__IntOrFloat__Alternatives"
    // InternalSpellDatabaseParser.g:1862:1: rule__IntOrFloat__Alternatives : ( ( ruleFLOAT_Val ) | ( ruleINTEGER ) );
    public final void rule__IntOrFloat__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:1866:1: ( ( ruleFLOAT_Val ) | ( ruleINTEGER ) )
            int alt17=2;
            switch ( input.LA(1) ) {
            case RULE_PLUS:
                {
                int LA17_1 = input.LA(2);

                if ( (LA17_1==RULE_FLOAT) ) {
                    alt17=1;
                }
                else if ( (LA17_1==RULE_INT) ) {
                    alt17=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 17, 1, input);

                    throw nvae;
                }
                }
                break;
            case RULE_MINUS:
                {
                int LA17_2 = input.LA(2);

                if ( (LA17_2==RULE_FLOAT) ) {
                    alt17=1;
                }
                else if ( (LA17_2==RULE_INT) ) {
                    alt17=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 17, 2, input);

                    throw nvae;
                }
                }
                break;
            case RULE_FLOAT:
                {
                alt17=1;
                }
                break;
            case RULE_INT:
                {
                alt17=2;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 17, 0, input);

                throw nvae;
            }

            switch (alt17) {
                case 1 :
                    // InternalSpellDatabaseParser.g:1867:1: ( ruleFLOAT_Val )
                    {
                    // InternalSpellDatabaseParser.g:1867:1: ( ruleFLOAT_Val )
                    // InternalSpellDatabaseParser.g:1868:1: ruleFLOAT_Val
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getIntOrFloatAccess().getFLOAT_ValParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleFLOAT_Val();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getIntOrFloatAccess().getFLOAT_ValParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSpellDatabaseParser.g:1873:6: ( ruleINTEGER )
                    {
                    // InternalSpellDatabaseParser.g:1873:6: ( ruleINTEGER )
                    // InternalSpellDatabaseParser.g:1874:1: ruleINTEGER
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getIntOrFloatAccess().getINTEGERParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleINTEGER();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getIntOrFloatAccess().getINTEGERParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntOrFloat__Alternatives"


    // $ANTLR start "rule__PosIntOrFloat__Alternatives"
    // InternalSpellDatabaseParser.g:1884:1: rule__PosIntOrFloat__Alternatives : ( ( RULE_FLOAT ) | ( RULE_INT ) );
    public final void rule__PosIntOrFloat__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:1888:1: ( ( RULE_FLOAT ) | ( RULE_INT ) )
            int alt18=2;
            int LA18_0 = input.LA(1);

            if ( (LA18_0==RULE_FLOAT) ) {
                alt18=1;
            }
            else if ( (LA18_0==RULE_INT) ) {
                alt18=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 18, 0, input);

                throw nvae;
            }
            switch (alt18) {
                case 1 :
                    // InternalSpellDatabaseParser.g:1889:1: ( RULE_FLOAT )
                    {
                    // InternalSpellDatabaseParser.g:1889:1: ( RULE_FLOAT )
                    // InternalSpellDatabaseParser.g:1890:1: RULE_FLOAT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPosIntOrFloatAccess().getFLOATTerminalRuleCall_0()); 
                    }
                    match(input,RULE_FLOAT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPosIntOrFloatAccess().getFLOATTerminalRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSpellDatabaseParser.g:1895:6: ( RULE_INT )
                    {
                    // InternalSpellDatabaseParser.g:1895:6: ( RULE_INT )
                    // InternalSpellDatabaseParser.g:1896:1: RULE_INT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPosIntOrFloatAccess().getINTTerminalRuleCall_1()); 
                    }
                    match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPosIntOrFloatAccess().getINTTerminalRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PosIntOrFloat__Alternatives"


    // $ANTLR start "rule__DatabaseValue__Alternatives"
    // InternalSpellDatabaseParser.g:1906:1: rule__DatabaseValue__Alternatives : ( ( ruleComplexValue ) | ( ( ruleRelDate ) ) | ( ( ruleDate ) ) | ( ( ruleAtom ) ) );
    public final void rule__DatabaseValue__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:1910:1: ( ( ruleComplexValue ) | ( ( ruleRelDate ) ) | ( ( ruleDate ) ) | ( ( ruleAtom ) ) )
            int alt19=4;
            alt19 = dfa19.predict(input);
            switch (alt19) {
                case 1 :
                    // InternalSpellDatabaseParser.g:1911:1: ( ruleComplexValue )
                    {
                    // InternalSpellDatabaseParser.g:1911:1: ( ruleComplexValue )
                    // InternalSpellDatabaseParser.g:1912:1: ruleComplexValue
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDatabaseValueAccess().getComplexValueParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleComplexValue();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDatabaseValueAccess().getComplexValueParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSpellDatabaseParser.g:1917:6: ( ( ruleRelDate ) )
                    {
                    // InternalSpellDatabaseParser.g:1917:6: ( ( ruleRelDate ) )
                    // InternalSpellDatabaseParser.g:1918:1: ( ruleRelDate )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDatabaseValueAccess().getRelDateParserRuleCall_1()); 
                    }
                    // InternalSpellDatabaseParser.g:1919:1: ( ruleRelDate )
                    // InternalSpellDatabaseParser.g:1919:3: ruleRelDate
                    {
                    pushFollow(FOLLOW_2);
                    ruleRelDate();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDatabaseValueAccess().getRelDateParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSpellDatabaseParser.g:1923:6: ( ( ruleDate ) )
                    {
                    // InternalSpellDatabaseParser.g:1923:6: ( ( ruleDate ) )
                    // InternalSpellDatabaseParser.g:1924:1: ( ruleDate )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDatabaseValueAccess().getDateParserRuleCall_2()); 
                    }
                    // InternalSpellDatabaseParser.g:1925:1: ( ruleDate )
                    // InternalSpellDatabaseParser.g:1925:3: ruleDate
                    {
                    pushFollow(FOLLOW_2);
                    ruleDate();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDatabaseValueAccess().getDateParserRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSpellDatabaseParser.g:1929:6: ( ( ruleAtom ) )
                    {
                    // InternalSpellDatabaseParser.g:1929:6: ( ( ruleAtom ) )
                    // InternalSpellDatabaseParser.g:1930:1: ( ruleAtom )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDatabaseValueAccess().getAtomParserRuleCall_3()); 
                    }
                    // InternalSpellDatabaseParser.g:1931:1: ( ruleAtom )
                    // InternalSpellDatabaseParser.g:1931:3: ruleAtom
                    {
                    pushFollow(FOLLOW_2);
                    ruleAtom();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDatabaseValueAccess().getAtomParserRuleCall_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DatabaseValue__Alternatives"


    // $ANTLR start "rule__Lambda_Partial_Func__Alternatives"
    // InternalSpellDatabaseParser.g:1940:1: rule__Lambda_Partial_Func__Alternatives : ( ( ( rule__Lambda_Partial_Func__Alternatives_0 ) ) | ( ( rule__Lambda_Partial_Func__Group_1__0 ) ) );
    public final void rule__Lambda_Partial_Func__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:1944:1: ( ( ( rule__Lambda_Partial_Func__Alternatives_0 ) ) | ( ( rule__Lambda_Partial_Func__Group_1__0 ) ) )
            int alt20=2;
            alt20 = dfa20.predict(input);
            switch (alt20) {
                case 1 :
                    // InternalSpellDatabaseParser.g:1945:1: ( ( rule__Lambda_Partial_Func__Alternatives_0 ) )
                    {
                    // InternalSpellDatabaseParser.g:1945:1: ( ( rule__Lambda_Partial_Func__Alternatives_0 ) )
                    // InternalSpellDatabaseParser.g:1946:1: ( rule__Lambda_Partial_Func__Alternatives_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLambda_Partial_FuncAccess().getAlternatives_0()); 
                    }
                    // InternalSpellDatabaseParser.g:1947:1: ( rule__Lambda_Partial_Func__Alternatives_0 )
                    // InternalSpellDatabaseParser.g:1947:2: rule__Lambda_Partial_Func__Alternatives_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Lambda_Partial_Func__Alternatives_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLambda_Partial_FuncAccess().getAlternatives_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSpellDatabaseParser.g:1951:6: ( ( rule__Lambda_Partial_Func__Group_1__0 ) )
                    {
                    // InternalSpellDatabaseParser.g:1951:6: ( ( rule__Lambda_Partial_Func__Group_1__0 ) )
                    // InternalSpellDatabaseParser.g:1952:1: ( rule__Lambda_Partial_Func__Group_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLambda_Partial_FuncAccess().getGroup_1()); 
                    }
                    // InternalSpellDatabaseParser.g:1953:1: ( rule__Lambda_Partial_Func__Group_1__0 )
                    // InternalSpellDatabaseParser.g:1953:2: rule__Lambda_Partial_Func__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Lambda_Partial_Func__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLambda_Partial_FuncAccess().getGroup_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Lambda_Partial_Func__Alternatives"


    // $ANTLR start "rule__Lambda_Partial_Func__Alternatives_0"
    // InternalSpellDatabaseParser.g:1962:1: rule__Lambda_Partial_Func__Alternatives_0 : ( ( RULE_ID ) | ( RULE_FLOAT ) | ( RULE_INT ) | ( RULE_PLUS ) | ( RULE_MINUS ) | ( RULE_ML_COMMENT ) | ( RULE_BIN_HEX_OCT ) | ( RULE_BOOL_EXPR ) | ( RULE_STRING ) | ( RULE_ANY_OTHER ) );
    public final void rule__Lambda_Partial_Func__Alternatives_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:1966:1: ( ( RULE_ID ) | ( RULE_FLOAT ) | ( RULE_INT ) | ( RULE_PLUS ) | ( RULE_MINUS ) | ( RULE_ML_COMMENT ) | ( RULE_BIN_HEX_OCT ) | ( RULE_BOOL_EXPR ) | ( RULE_STRING ) | ( RULE_ANY_OTHER ) )
            int alt21=10;
            alt21 = dfa21.predict(input);
            switch (alt21) {
                case 1 :
                    // InternalSpellDatabaseParser.g:1967:1: ( RULE_ID )
                    {
                    // InternalSpellDatabaseParser.g:1967:1: ( RULE_ID )
                    // InternalSpellDatabaseParser.g:1968:1: RULE_ID
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLambda_Partial_FuncAccess().getIDTerminalRuleCall_0_0()); 
                    }
                    match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLambda_Partial_FuncAccess().getIDTerminalRuleCall_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSpellDatabaseParser.g:1973:6: ( RULE_FLOAT )
                    {
                    // InternalSpellDatabaseParser.g:1973:6: ( RULE_FLOAT )
                    // InternalSpellDatabaseParser.g:1974:1: RULE_FLOAT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLambda_Partial_FuncAccess().getFLOATTerminalRuleCall_0_1()); 
                    }
                    match(input,RULE_FLOAT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLambda_Partial_FuncAccess().getFLOATTerminalRuleCall_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSpellDatabaseParser.g:1979:6: ( RULE_INT )
                    {
                    // InternalSpellDatabaseParser.g:1979:6: ( RULE_INT )
                    // InternalSpellDatabaseParser.g:1980:1: RULE_INT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLambda_Partial_FuncAccess().getINTTerminalRuleCall_0_2()); 
                    }
                    match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLambda_Partial_FuncAccess().getINTTerminalRuleCall_0_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSpellDatabaseParser.g:1985:6: ( RULE_PLUS )
                    {
                    // InternalSpellDatabaseParser.g:1985:6: ( RULE_PLUS )
                    // InternalSpellDatabaseParser.g:1986:1: RULE_PLUS
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLambda_Partial_FuncAccess().getPLUSTerminalRuleCall_0_3()); 
                    }
                    match(input,RULE_PLUS,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLambda_Partial_FuncAccess().getPLUSTerminalRuleCall_0_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSpellDatabaseParser.g:1991:6: ( RULE_MINUS )
                    {
                    // InternalSpellDatabaseParser.g:1991:6: ( RULE_MINUS )
                    // InternalSpellDatabaseParser.g:1992:1: RULE_MINUS
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLambda_Partial_FuncAccess().getMINUSTerminalRuleCall_0_4()); 
                    }
                    match(input,RULE_MINUS,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLambda_Partial_FuncAccess().getMINUSTerminalRuleCall_0_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalSpellDatabaseParser.g:1997:6: ( RULE_ML_COMMENT )
                    {
                    // InternalSpellDatabaseParser.g:1997:6: ( RULE_ML_COMMENT )
                    // InternalSpellDatabaseParser.g:1998:1: RULE_ML_COMMENT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLambda_Partial_FuncAccess().getML_COMMENTTerminalRuleCall_0_5()); 
                    }
                    match(input,RULE_ML_COMMENT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLambda_Partial_FuncAccess().getML_COMMENTTerminalRuleCall_0_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalSpellDatabaseParser.g:2003:6: ( RULE_BIN_HEX_OCT )
                    {
                    // InternalSpellDatabaseParser.g:2003:6: ( RULE_BIN_HEX_OCT )
                    // InternalSpellDatabaseParser.g:2004:1: RULE_BIN_HEX_OCT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLambda_Partial_FuncAccess().getBIN_HEX_OCTTerminalRuleCall_0_6()); 
                    }
                    match(input,RULE_BIN_HEX_OCT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLambda_Partial_FuncAccess().getBIN_HEX_OCTTerminalRuleCall_0_6()); 
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalSpellDatabaseParser.g:2009:6: ( RULE_BOOL_EXPR )
                    {
                    // InternalSpellDatabaseParser.g:2009:6: ( RULE_BOOL_EXPR )
                    // InternalSpellDatabaseParser.g:2010:1: RULE_BOOL_EXPR
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLambda_Partial_FuncAccess().getBOOL_EXPRTerminalRuleCall_0_7()); 
                    }
                    match(input,RULE_BOOL_EXPR,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLambda_Partial_FuncAccess().getBOOL_EXPRTerminalRuleCall_0_7()); 
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalSpellDatabaseParser.g:2015:6: ( RULE_STRING )
                    {
                    // InternalSpellDatabaseParser.g:2015:6: ( RULE_STRING )
                    // InternalSpellDatabaseParser.g:2016:1: RULE_STRING
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLambda_Partial_FuncAccess().getSTRINGTerminalRuleCall_0_8()); 
                    }
                    match(input,RULE_STRING,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLambda_Partial_FuncAccess().getSTRINGTerminalRuleCall_0_8()); 
                    }

                    }


                    }
                    break;
                case 10 :
                    // InternalSpellDatabaseParser.g:2021:6: ( RULE_ANY_OTHER )
                    {
                    // InternalSpellDatabaseParser.g:2021:6: ( RULE_ANY_OTHER )
                    // InternalSpellDatabaseParser.g:2022:1: RULE_ANY_OTHER
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLambda_Partial_FuncAccess().getANY_OTHERTerminalRuleCall_0_9()); 
                    }
                    match(input,RULE_ANY_OTHER,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLambda_Partial_FuncAccess().getANY_OTHERTerminalRuleCall_0_9()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Lambda_Partial_Func__Alternatives_0"


    // $ANTLR start "rule__ComplexValue__Alternatives"
    // InternalSpellDatabaseParser.g:2032:1: rule__ComplexValue__Alternatives : ( ( ruleDictionary ) | ( ruleList ) | ( ruleTuple ) );
    public final void rule__ComplexValue__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:2036:1: ( ( ruleDictionary ) | ( ruleList ) | ( ruleTuple ) )
            int alt22=3;
            switch ( input.LA(1) ) {
            case LeftCurlyBracket:
                {
                alt22=1;
                }
                break;
            case LeftSquareBracket:
                {
                alt22=2;
                }
                break;
            case LeftParenthesis:
                {
                alt22=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 22, 0, input);

                throw nvae;
            }

            switch (alt22) {
                case 1 :
                    // InternalSpellDatabaseParser.g:2037:1: ( ruleDictionary )
                    {
                    // InternalSpellDatabaseParser.g:2037:1: ( ruleDictionary )
                    // InternalSpellDatabaseParser.g:2038:1: ruleDictionary
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getComplexValueAccess().getDictionaryParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleDictionary();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getComplexValueAccess().getDictionaryParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSpellDatabaseParser.g:2043:6: ( ruleList )
                    {
                    // InternalSpellDatabaseParser.g:2043:6: ( ruleList )
                    // InternalSpellDatabaseParser.g:2044:1: ruleList
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getComplexValueAccess().getListParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleList();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getComplexValueAccess().getListParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSpellDatabaseParser.g:2049:6: ( ruleTuple )
                    {
                    // InternalSpellDatabaseParser.g:2049:6: ( ruleTuple )
                    // InternalSpellDatabaseParser.g:2050:1: ruleTuple
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getComplexValueAccess().getTupleParserRuleCall_2()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleTuple();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getComplexValueAccess().getTupleParserRuleCall_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ComplexValue__Alternatives"


    // $ANTLR start "rule__Tuple__ValuesAlternatives_2_1_0"
    // InternalSpellDatabaseParser.g:2060:1: rule__Tuple__ValuesAlternatives_2_1_0 : ( ( ruleAtom ) | ( ruleComplexValue ) );
    public final void rule__Tuple__ValuesAlternatives_2_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:2064:1: ( ( ruleAtom ) | ( ruleComplexValue ) )
            int alt23=2;
            alt23 = dfa23.predict(input);
            switch (alt23) {
                case 1 :
                    // InternalSpellDatabaseParser.g:2065:1: ( ruleAtom )
                    {
                    // InternalSpellDatabaseParser.g:2065:1: ( ruleAtom )
                    // InternalSpellDatabaseParser.g:2066:1: ruleAtom
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTupleAccess().getValuesAtomParserRuleCall_2_1_0_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleAtom();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTupleAccess().getValuesAtomParserRuleCall_2_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSpellDatabaseParser.g:2071:6: ( ruleComplexValue )
                    {
                    // InternalSpellDatabaseParser.g:2071:6: ( ruleComplexValue )
                    // InternalSpellDatabaseParser.g:2072:1: ruleComplexValue
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTupleAccess().getValuesComplexValueParserRuleCall_2_1_0_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleComplexValue();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTupleAccess().getValuesComplexValueParserRuleCall_2_1_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tuple__ValuesAlternatives_2_1_0"


    // $ANTLR start "rule__Tuple__ValuesAlternatives_2_3_2_0"
    // InternalSpellDatabaseParser.g:2082:1: rule__Tuple__ValuesAlternatives_2_3_2_0 : ( ( ruleAtom ) | ( ruleComplexValue ) );
    public final void rule__Tuple__ValuesAlternatives_2_3_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:2086:1: ( ( ruleAtom ) | ( ruleComplexValue ) )
            int alt24=2;
            alt24 = dfa24.predict(input);
            switch (alt24) {
                case 1 :
                    // InternalSpellDatabaseParser.g:2087:1: ( ruleAtom )
                    {
                    // InternalSpellDatabaseParser.g:2087:1: ( ruleAtom )
                    // InternalSpellDatabaseParser.g:2088:1: ruleAtom
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTupleAccess().getValuesAtomParserRuleCall_2_3_2_0_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleAtom();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTupleAccess().getValuesAtomParserRuleCall_2_3_2_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSpellDatabaseParser.g:2093:6: ( ruleComplexValue )
                    {
                    // InternalSpellDatabaseParser.g:2093:6: ( ruleComplexValue )
                    // InternalSpellDatabaseParser.g:2094:1: ruleComplexValue
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTupleAccess().getValuesComplexValueParserRuleCall_2_3_2_0_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleComplexValue();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTupleAccess().getValuesComplexValueParserRuleCall_2_3_2_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tuple__ValuesAlternatives_2_3_2_0"


    // $ANTLR start "rule__List__ValuesAlternatives_2_1_0"
    // InternalSpellDatabaseParser.g:2104:1: rule__List__ValuesAlternatives_2_1_0 : ( ( ruleAtom ) | ( ruleComplexValue ) );
    public final void rule__List__ValuesAlternatives_2_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:2108:1: ( ( ruleAtom ) | ( ruleComplexValue ) )
            int alt25=2;
            alt25 = dfa25.predict(input);
            switch (alt25) {
                case 1 :
                    // InternalSpellDatabaseParser.g:2109:1: ( ruleAtom )
                    {
                    // InternalSpellDatabaseParser.g:2109:1: ( ruleAtom )
                    // InternalSpellDatabaseParser.g:2110:1: ruleAtom
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getListAccess().getValuesAtomParserRuleCall_2_1_0_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleAtom();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getListAccess().getValuesAtomParserRuleCall_2_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSpellDatabaseParser.g:2115:6: ( ruleComplexValue )
                    {
                    // InternalSpellDatabaseParser.g:2115:6: ( ruleComplexValue )
                    // InternalSpellDatabaseParser.g:2116:1: ruleComplexValue
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getListAccess().getValuesComplexValueParserRuleCall_2_1_0_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleComplexValue();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getListAccess().getValuesComplexValueParserRuleCall_2_1_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__List__ValuesAlternatives_2_1_0"


    // $ANTLR start "rule__List__ValuesAlternatives_2_3_2_0"
    // InternalSpellDatabaseParser.g:2126:1: rule__List__ValuesAlternatives_2_3_2_0 : ( ( ruleAtom ) | ( ruleComplexValue ) );
    public final void rule__List__ValuesAlternatives_2_3_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:2130:1: ( ( ruleAtom ) | ( ruleComplexValue ) )
            int alt26=2;
            alt26 = dfa26.predict(input);
            switch (alt26) {
                case 1 :
                    // InternalSpellDatabaseParser.g:2131:1: ( ruleAtom )
                    {
                    // InternalSpellDatabaseParser.g:2131:1: ( ruleAtom )
                    // InternalSpellDatabaseParser.g:2132:1: ruleAtom
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getListAccess().getValuesAtomParserRuleCall_2_3_2_0_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleAtom();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getListAccess().getValuesAtomParserRuleCall_2_3_2_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSpellDatabaseParser.g:2137:6: ( ruleComplexValue )
                    {
                    // InternalSpellDatabaseParser.g:2137:6: ( ruleComplexValue )
                    // InternalSpellDatabaseParser.g:2138:1: ruleComplexValue
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getListAccess().getValuesComplexValueParserRuleCall_2_3_2_0_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleComplexValue();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getListAccess().getValuesComplexValueParserRuleCall_2_3_2_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__List__ValuesAlternatives_2_3_2_0"


    // $ANTLR start "rule__DictionaryEntry__KeyAlternatives_0_0"
    // InternalSpellDatabaseParser.g:2148:1: rule__DictionaryEntry__KeyAlternatives_0_0 : ( ( ruleAtom ) | ( ruleComplexValue ) );
    public final void rule__DictionaryEntry__KeyAlternatives_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:2152:1: ( ( ruleAtom ) | ( ruleComplexValue ) )
            int alt27=2;
            alt27 = dfa27.predict(input);
            switch (alt27) {
                case 1 :
                    // InternalSpellDatabaseParser.g:2153:1: ( ruleAtom )
                    {
                    // InternalSpellDatabaseParser.g:2153:1: ( ruleAtom )
                    // InternalSpellDatabaseParser.g:2154:1: ruleAtom
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDictionaryEntryAccess().getKeyAtomParserRuleCall_0_0_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleAtom();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDictionaryEntryAccess().getKeyAtomParserRuleCall_0_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSpellDatabaseParser.g:2159:6: ( ruleComplexValue )
                    {
                    // InternalSpellDatabaseParser.g:2159:6: ( ruleComplexValue )
                    // InternalSpellDatabaseParser.g:2160:1: ruleComplexValue
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDictionaryEntryAccess().getKeyComplexValueParserRuleCall_0_0_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleComplexValue();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDictionaryEntryAccess().getKeyComplexValueParserRuleCall_0_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DictionaryEntry__KeyAlternatives_0_0"


    // $ANTLR start "rule__DictionaryEntry__ValueAlternatives_2_2_0"
    // InternalSpellDatabaseParser.g:2170:1: rule__DictionaryEntry__ValueAlternatives_2_2_0 : ( ( ruleAtom ) | ( ruleComplexValue ) );
    public final void rule__DictionaryEntry__ValueAlternatives_2_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:2174:1: ( ( ruleAtom ) | ( ruleComplexValue ) )
            int alt28=2;
            alt28 = dfa28.predict(input);
            switch (alt28) {
                case 1 :
                    // InternalSpellDatabaseParser.g:2175:1: ( ruleAtom )
                    {
                    // InternalSpellDatabaseParser.g:2175:1: ( ruleAtom )
                    // InternalSpellDatabaseParser.g:2176:1: ruleAtom
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDictionaryEntryAccess().getValueAtomParserRuleCall_2_2_0_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleAtom();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDictionaryEntryAccess().getValueAtomParserRuleCall_2_2_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSpellDatabaseParser.g:2181:6: ( ruleComplexValue )
                    {
                    // InternalSpellDatabaseParser.g:2181:6: ( ruleComplexValue )
                    // InternalSpellDatabaseParser.g:2182:1: ruleComplexValue
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDictionaryEntryAccess().getValueComplexValueParserRuleCall_2_2_0_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleComplexValue();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDictionaryEntryAccess().getValueComplexValueParserRuleCall_2_2_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DictionaryEntry__ValueAlternatives_2_2_0"


    // $ANTLR start "rule__Atom__Alternatives"
    // InternalSpellDatabaseParser.g:2192:1: rule__Atom__Alternatives : ( ( ruleNumber ) | ( ruleStringValue ) | ( ruleBoolean ) | ( ruleLambda_Stmt ) );
    public final void rule__Atom__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:2196:1: ( ( ruleNumber ) | ( ruleStringValue ) | ( ruleBoolean ) | ( ruleLambda_Stmt ) )
            int alt29=4;
            switch ( input.LA(1) ) {
            case RULE_PLUS:
            case RULE_MINUS:
            case RULE_INT:
            case RULE_FLOAT:
            case RULE_BIN_HEX_OCT:
                {
                alt29=1;
                }
                break;
            case RULE_STRING:
                {
                alt29=2;
                }
                break;
            case RULE_BOOL_EXPR:
                {
                alt29=3;
                }
                break;
            case RULE_LAMBDA:
                {
                alt29=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 29, 0, input);

                throw nvae;
            }

            switch (alt29) {
                case 1 :
                    // InternalSpellDatabaseParser.g:2197:1: ( ruleNumber )
                    {
                    // InternalSpellDatabaseParser.g:2197:1: ( ruleNumber )
                    // InternalSpellDatabaseParser.g:2198:1: ruleNumber
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAtomAccess().getNumberParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleNumber();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAtomAccess().getNumberParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSpellDatabaseParser.g:2203:6: ( ruleStringValue )
                    {
                    // InternalSpellDatabaseParser.g:2203:6: ( ruleStringValue )
                    // InternalSpellDatabaseParser.g:2204:1: ruleStringValue
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAtomAccess().getStringValueParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleStringValue();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAtomAccess().getStringValueParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSpellDatabaseParser.g:2209:6: ( ruleBoolean )
                    {
                    // InternalSpellDatabaseParser.g:2209:6: ( ruleBoolean )
                    // InternalSpellDatabaseParser.g:2210:1: ruleBoolean
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAtomAccess().getBooleanParserRuleCall_2()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleBoolean();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAtomAccess().getBooleanParserRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSpellDatabaseParser.g:2215:6: ( ruleLambda_Stmt )
                    {
                    // InternalSpellDatabaseParser.g:2215:6: ( ruleLambda_Stmt )
                    // InternalSpellDatabaseParser.g:2216:1: ruleLambda_Stmt
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAtomAccess().getLambda_StmtParserRuleCall_3()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleLambda_Stmt();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAtomAccess().getLambda_StmtParserRuleCall_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Atom__Alternatives"


    // $ANTLR start "rule__Number__Alternatives"
    // InternalSpellDatabaseParser.g:2226:1: rule__Number__Alternatives : ( ( ( rule__Number__ValAssignment_0 ) ) | ( ( rule__Number__ValIntAssignment_1 ) ) | ( ( rule__Number__ValStrAssignment_2 ) ) );
    public final void rule__Number__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:2230:1: ( ( ( rule__Number__ValAssignment_0 ) ) | ( ( rule__Number__ValIntAssignment_1 ) ) | ( ( rule__Number__ValStrAssignment_2 ) ) )
            int alt30=3;
            alt30 = dfa30.predict(input);
            switch (alt30) {
                case 1 :
                    // InternalSpellDatabaseParser.g:2231:1: ( ( rule__Number__ValAssignment_0 ) )
                    {
                    // InternalSpellDatabaseParser.g:2231:1: ( ( rule__Number__ValAssignment_0 ) )
                    // InternalSpellDatabaseParser.g:2232:1: ( rule__Number__ValAssignment_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNumberAccess().getValAssignment_0()); 
                    }
                    // InternalSpellDatabaseParser.g:2233:1: ( rule__Number__ValAssignment_0 )
                    // InternalSpellDatabaseParser.g:2233:2: rule__Number__ValAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Number__ValAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNumberAccess().getValAssignment_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSpellDatabaseParser.g:2237:6: ( ( rule__Number__ValIntAssignment_1 ) )
                    {
                    // InternalSpellDatabaseParser.g:2237:6: ( ( rule__Number__ValIntAssignment_1 ) )
                    // InternalSpellDatabaseParser.g:2238:1: ( rule__Number__ValIntAssignment_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNumberAccess().getValIntAssignment_1()); 
                    }
                    // InternalSpellDatabaseParser.g:2239:1: ( rule__Number__ValIntAssignment_1 )
                    // InternalSpellDatabaseParser.g:2239:2: rule__Number__ValIntAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__Number__ValIntAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNumberAccess().getValIntAssignment_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSpellDatabaseParser.g:2243:6: ( ( rule__Number__ValStrAssignment_2 ) )
                    {
                    // InternalSpellDatabaseParser.g:2243:6: ( ( rule__Number__ValStrAssignment_2 ) )
                    // InternalSpellDatabaseParser.g:2244:1: ( rule__Number__ValStrAssignment_2 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNumberAccess().getValStrAssignment_2()); 
                    }
                    // InternalSpellDatabaseParser.g:2245:1: ( rule__Number__ValStrAssignment_2 )
                    // InternalSpellDatabaseParser.g:2245:2: rule__Number__ValStrAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__Number__ValStrAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNumberAccess().getValStrAssignment_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Number__Alternatives"


    // $ANTLR start "rule__FLOAT_Val__Alternatives_0"
    // InternalSpellDatabaseParser.g:2254:1: rule__FLOAT_Val__Alternatives_0 : ( ( RULE_PLUS ) | ( RULE_MINUS ) );
    public final void rule__FLOAT_Val__Alternatives_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:2258:1: ( ( RULE_PLUS ) | ( RULE_MINUS ) )
            int alt31=2;
            int LA31_0 = input.LA(1);

            if ( (LA31_0==RULE_PLUS) ) {
                alt31=1;
            }
            else if ( (LA31_0==RULE_MINUS) ) {
                alt31=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 31, 0, input);

                throw nvae;
            }
            switch (alt31) {
                case 1 :
                    // InternalSpellDatabaseParser.g:2259:1: ( RULE_PLUS )
                    {
                    // InternalSpellDatabaseParser.g:2259:1: ( RULE_PLUS )
                    // InternalSpellDatabaseParser.g:2260:1: RULE_PLUS
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFLOAT_ValAccess().getPLUSTerminalRuleCall_0_0()); 
                    }
                    match(input,RULE_PLUS,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFLOAT_ValAccess().getPLUSTerminalRuleCall_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSpellDatabaseParser.g:2265:6: ( RULE_MINUS )
                    {
                    // InternalSpellDatabaseParser.g:2265:6: ( RULE_MINUS )
                    // InternalSpellDatabaseParser.g:2266:1: RULE_MINUS
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFLOAT_ValAccess().getMINUSTerminalRuleCall_0_1()); 
                    }
                    match(input,RULE_MINUS,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFLOAT_ValAccess().getMINUSTerminalRuleCall_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FLOAT_Val__Alternatives_0"


    // $ANTLR start "rule__RELTIME__Alternatives_1"
    // InternalSpellDatabaseParser.g:2276:1: rule__RELTIME__Alternatives_1 : ( ( ( rule__RELTIME__Group_1_0__0 ) ) | ( ( rule__RELTIME__Group_1_1__0 ) ) );
    public final void rule__RELTIME__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:2280:1: ( ( ( rule__RELTIME__Group_1_0__0 ) ) | ( ( rule__RELTIME__Group_1_1__0 ) ) )
            int alt32=2;
            int LA32_0 = input.LA(1);

            if ( (LA32_0==RULE_INT) ) {
                alt32=1;
            }
            else if ( (LA32_0==RULE_COLON) ) {
                alt32=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 32, 0, input);

                throw nvae;
            }
            switch (alt32) {
                case 1 :
                    // InternalSpellDatabaseParser.g:2281:1: ( ( rule__RELTIME__Group_1_0__0 ) )
                    {
                    // InternalSpellDatabaseParser.g:2281:1: ( ( rule__RELTIME__Group_1_0__0 ) )
                    // InternalSpellDatabaseParser.g:2282:1: ( rule__RELTIME__Group_1_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getRELTIMEAccess().getGroup_1_0()); 
                    }
                    // InternalSpellDatabaseParser.g:2283:1: ( rule__RELTIME__Group_1_0__0 )
                    // InternalSpellDatabaseParser.g:2283:2: rule__RELTIME__Group_1_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__RELTIME__Group_1_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getRELTIMEAccess().getGroup_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSpellDatabaseParser.g:2287:6: ( ( rule__RELTIME__Group_1_1__0 ) )
                    {
                    // InternalSpellDatabaseParser.g:2287:6: ( ( rule__RELTIME__Group_1_1__0 ) )
                    // InternalSpellDatabaseParser.g:2288:1: ( rule__RELTIME__Group_1_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getRELTIMEAccess().getGroup_1_1()); 
                    }
                    // InternalSpellDatabaseParser.g:2289:1: ( rule__RELTIME__Group_1_1__0 )
                    // InternalSpellDatabaseParser.g:2289:2: rule__RELTIME__Group_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__RELTIME__Group_1_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getRELTIMEAccess().getGroup_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RELTIME__Alternatives_1"


    // $ANTLR start "rule__ABSTIME__Alternatives"
    // InternalSpellDatabaseParser.g:2298:1: rule__ABSTIME__Alternatives : ( ( ( rule__ABSTIME__Group_0__0 ) ) | ( ( rule__ABSTIME__Group_1__0 ) ) );
    public final void rule__ABSTIME__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:2302:1: ( ( ( rule__ABSTIME__Group_0__0 ) ) | ( ( rule__ABSTIME__Group_1__0 ) ) )
            int alt33=2;
            int LA33_0 = input.LA(1);

            if ( (LA33_0==RULE_INT) ) {
                int LA33_1 = input.LA(2);

                if ( (LA33_1==RULE_MINUS) ) {
                    alt33=1;
                }
                else if ( (LA33_1==Solidus) ) {
                    alt33=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 33, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 33, 0, input);

                throw nvae;
            }
            switch (alt33) {
                case 1 :
                    // InternalSpellDatabaseParser.g:2303:1: ( ( rule__ABSTIME__Group_0__0 ) )
                    {
                    // InternalSpellDatabaseParser.g:2303:1: ( ( rule__ABSTIME__Group_0__0 ) )
                    // InternalSpellDatabaseParser.g:2304:1: ( rule__ABSTIME__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getABSTIMEAccess().getGroup_0()); 
                    }
                    // InternalSpellDatabaseParser.g:2305:1: ( rule__ABSTIME__Group_0__0 )
                    // InternalSpellDatabaseParser.g:2305:2: rule__ABSTIME__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ABSTIME__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getABSTIMEAccess().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSpellDatabaseParser.g:2309:6: ( ( rule__ABSTIME__Group_1__0 ) )
                    {
                    // InternalSpellDatabaseParser.g:2309:6: ( ( rule__ABSTIME__Group_1__0 ) )
                    // InternalSpellDatabaseParser.g:2310:1: ( rule__ABSTIME__Group_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getABSTIMEAccess().getGroup_1()); 
                    }
                    // InternalSpellDatabaseParser.g:2311:1: ( rule__ABSTIME__Group_1__0 )
                    // InternalSpellDatabaseParser.g:2311:2: rule__ABSTIME__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ABSTIME__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getABSTIMEAccess().getGroup_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ABSTIME__Alternatives"


    // $ANTLR start "rule__ABSTIME__Alternatives_0_0_2"
    // InternalSpellDatabaseParser.g:2320:1: rule__ABSTIME__Alternatives_0_0_2 : ( ( RULE_INT ) | ( ruleID_STMT ) );
    public final void rule__ABSTIME__Alternatives_0_0_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:2324:1: ( ( RULE_INT ) | ( ruleID_STMT ) )
            int alt34=2;
            int LA34_0 = input.LA(1);

            if ( (LA34_0==RULE_INT) ) {
                alt34=1;
            }
            else if ( (LA34_0==RULE_ID) ) {
                alt34=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 34, 0, input);

                throw nvae;
            }
            switch (alt34) {
                case 1 :
                    // InternalSpellDatabaseParser.g:2325:1: ( RULE_INT )
                    {
                    // InternalSpellDatabaseParser.g:2325:1: ( RULE_INT )
                    // InternalSpellDatabaseParser.g:2326:1: RULE_INT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getABSTIMEAccess().getINTTerminalRuleCall_0_0_2_0()); 
                    }
                    match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getABSTIMEAccess().getINTTerminalRuleCall_0_0_2_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSpellDatabaseParser.g:2331:6: ( ruleID_STMT )
                    {
                    // InternalSpellDatabaseParser.g:2331:6: ( ruleID_STMT )
                    // InternalSpellDatabaseParser.g:2332:1: ruleID_STMT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getABSTIMEAccess().getID_STMTParserRuleCall_0_0_2_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleID_STMT();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getABSTIMEAccess().getID_STMTParserRuleCall_0_0_2_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ABSTIME__Alternatives_0_0_2"


    // $ANTLR start "rule__ABSTIME__Alternatives_0_1"
    // InternalSpellDatabaseParser.g:2342:1: rule__ABSTIME__Alternatives_0_1 : ( ( RULE_COLON ) | ( RULE_WS ) );
    public final void rule__ABSTIME__Alternatives_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:2346:1: ( ( RULE_COLON ) | ( RULE_WS ) )
            int alt35=2;
            int LA35_0 = input.LA(1);

            if ( (LA35_0==RULE_COLON) ) {
                alt35=1;
            }
            else if ( (LA35_0==RULE_WS) ) {
                alt35=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 35, 0, input);

                throw nvae;
            }
            switch (alt35) {
                case 1 :
                    // InternalSpellDatabaseParser.g:2347:1: ( RULE_COLON )
                    {
                    // InternalSpellDatabaseParser.g:2347:1: ( RULE_COLON )
                    // InternalSpellDatabaseParser.g:2348:1: RULE_COLON
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getABSTIMEAccess().getCOLONTerminalRuleCall_0_1_0()); 
                    }
                    match(input,RULE_COLON,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getABSTIMEAccess().getCOLONTerminalRuleCall_0_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSpellDatabaseParser.g:2353:6: ( RULE_WS )
                    {
                    // InternalSpellDatabaseParser.g:2353:6: ( RULE_WS )
                    // InternalSpellDatabaseParser.g:2354:1: RULE_WS
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getABSTIMEAccess().getWSTerminalRuleCall_0_1_1()); 
                    }
                    match(input,RULE_WS,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getABSTIMEAccess().getWSTerminalRuleCall_0_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ABSTIME__Alternatives_0_1"


    // $ANTLR start "rule__ABSTIME__Alternatives_1_0_2"
    // InternalSpellDatabaseParser.g:2364:1: rule__ABSTIME__Alternatives_1_0_2 : ( ( RULE_INT ) | ( RULE_ID ) );
    public final void rule__ABSTIME__Alternatives_1_0_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:2368:1: ( ( RULE_INT ) | ( RULE_ID ) )
            int alt36=2;
            int LA36_0 = input.LA(1);

            if ( (LA36_0==RULE_INT) ) {
                alt36=1;
            }
            else if ( (LA36_0==RULE_ID) ) {
                alt36=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 36, 0, input);

                throw nvae;
            }
            switch (alt36) {
                case 1 :
                    // InternalSpellDatabaseParser.g:2369:1: ( RULE_INT )
                    {
                    // InternalSpellDatabaseParser.g:2369:1: ( RULE_INT )
                    // InternalSpellDatabaseParser.g:2370:1: RULE_INT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getABSTIMEAccess().getINTTerminalRuleCall_1_0_2_0()); 
                    }
                    match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getABSTIMEAccess().getINTTerminalRuleCall_1_0_2_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSpellDatabaseParser.g:2375:6: ( RULE_ID )
                    {
                    // InternalSpellDatabaseParser.g:2375:6: ( RULE_ID )
                    // InternalSpellDatabaseParser.g:2376:1: RULE_ID
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getABSTIMEAccess().getIDTerminalRuleCall_1_0_2_1()); 
                    }
                    match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getABSTIMEAccess().getIDTerminalRuleCall_1_0_2_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ABSTIME__Alternatives_1_0_2"


    // $ANTLR start "rule__ABSTIME__Alternatives_1_1"
    // InternalSpellDatabaseParser.g:2386:1: rule__ABSTIME__Alternatives_1_1 : ( ( RULE_COLON ) | ( RULE_WS ) );
    public final void rule__ABSTIME__Alternatives_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:2390:1: ( ( RULE_COLON ) | ( RULE_WS ) )
            int alt37=2;
            int LA37_0 = input.LA(1);

            if ( (LA37_0==RULE_COLON) ) {
                alt37=1;
            }
            else if ( (LA37_0==RULE_WS) ) {
                alt37=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 37, 0, input);

                throw nvae;
            }
            switch (alt37) {
                case 1 :
                    // InternalSpellDatabaseParser.g:2391:1: ( RULE_COLON )
                    {
                    // InternalSpellDatabaseParser.g:2391:1: ( RULE_COLON )
                    // InternalSpellDatabaseParser.g:2392:1: RULE_COLON
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getABSTIMEAccess().getCOLONTerminalRuleCall_1_1_0()); 
                    }
                    match(input,RULE_COLON,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getABSTIMEAccess().getCOLONTerminalRuleCall_1_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSpellDatabaseParser.g:2397:6: ( RULE_WS )
                    {
                    // InternalSpellDatabaseParser.g:2397:6: ( RULE_WS )
                    // InternalSpellDatabaseParser.g:2398:1: RULE_WS
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getABSTIMEAccess().getWSTerminalRuleCall_1_1_1()); 
                    }
                    match(input,RULE_WS,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getABSTIMEAccess().getWSTerminalRuleCall_1_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ABSTIME__Alternatives_1_1"


    // $ANTLR start "rule__SINGLE_VALUE__Alternatives"
    // InternalSpellDatabaseParser.g:2408:1: rule__SINGLE_VALUE__Alternatives : ( ( RULE_ID ) | ( RULE_FLOAT ) | ( RULE_INT ) | ( RULE_PLUS ) | ( RULE_MINUS ) | ( RULE_ML_COMMENT ) | ( RULE_BIN_HEX_OCT ) | ( RULE_BOOL_EXPR ) | ( RULE_STRING ) | ( RULE_ANY_OTHER ) | ( FullStop ) );
    public final void rule__SINGLE_VALUE__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:2412:1: ( ( RULE_ID ) | ( RULE_FLOAT ) | ( RULE_INT ) | ( RULE_PLUS ) | ( RULE_MINUS ) | ( RULE_ML_COMMENT ) | ( RULE_BIN_HEX_OCT ) | ( RULE_BOOL_EXPR ) | ( RULE_STRING ) | ( RULE_ANY_OTHER ) | ( FullStop ) )
            int alt38=11;
            alt38 = dfa38.predict(input);
            switch (alt38) {
                case 1 :
                    // InternalSpellDatabaseParser.g:2413:1: ( RULE_ID )
                    {
                    // InternalSpellDatabaseParser.g:2413:1: ( RULE_ID )
                    // InternalSpellDatabaseParser.g:2414:1: RULE_ID
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSINGLE_VALUEAccess().getIDTerminalRuleCall_0()); 
                    }
                    match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSINGLE_VALUEAccess().getIDTerminalRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSpellDatabaseParser.g:2419:6: ( RULE_FLOAT )
                    {
                    // InternalSpellDatabaseParser.g:2419:6: ( RULE_FLOAT )
                    // InternalSpellDatabaseParser.g:2420:1: RULE_FLOAT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSINGLE_VALUEAccess().getFLOATTerminalRuleCall_1()); 
                    }
                    match(input,RULE_FLOAT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSINGLE_VALUEAccess().getFLOATTerminalRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSpellDatabaseParser.g:2425:6: ( RULE_INT )
                    {
                    // InternalSpellDatabaseParser.g:2425:6: ( RULE_INT )
                    // InternalSpellDatabaseParser.g:2426:1: RULE_INT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSINGLE_VALUEAccess().getINTTerminalRuleCall_2()); 
                    }
                    match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSINGLE_VALUEAccess().getINTTerminalRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSpellDatabaseParser.g:2431:6: ( RULE_PLUS )
                    {
                    // InternalSpellDatabaseParser.g:2431:6: ( RULE_PLUS )
                    // InternalSpellDatabaseParser.g:2432:1: RULE_PLUS
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSINGLE_VALUEAccess().getPLUSTerminalRuleCall_3()); 
                    }
                    match(input,RULE_PLUS,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSINGLE_VALUEAccess().getPLUSTerminalRuleCall_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSpellDatabaseParser.g:2437:6: ( RULE_MINUS )
                    {
                    // InternalSpellDatabaseParser.g:2437:6: ( RULE_MINUS )
                    // InternalSpellDatabaseParser.g:2438:1: RULE_MINUS
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSINGLE_VALUEAccess().getMINUSTerminalRuleCall_4()); 
                    }
                    match(input,RULE_MINUS,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSINGLE_VALUEAccess().getMINUSTerminalRuleCall_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalSpellDatabaseParser.g:2443:6: ( RULE_ML_COMMENT )
                    {
                    // InternalSpellDatabaseParser.g:2443:6: ( RULE_ML_COMMENT )
                    // InternalSpellDatabaseParser.g:2444:1: RULE_ML_COMMENT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSINGLE_VALUEAccess().getML_COMMENTTerminalRuleCall_5()); 
                    }
                    match(input,RULE_ML_COMMENT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSINGLE_VALUEAccess().getML_COMMENTTerminalRuleCall_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalSpellDatabaseParser.g:2449:6: ( RULE_BIN_HEX_OCT )
                    {
                    // InternalSpellDatabaseParser.g:2449:6: ( RULE_BIN_HEX_OCT )
                    // InternalSpellDatabaseParser.g:2450:1: RULE_BIN_HEX_OCT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSINGLE_VALUEAccess().getBIN_HEX_OCTTerminalRuleCall_6()); 
                    }
                    match(input,RULE_BIN_HEX_OCT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSINGLE_VALUEAccess().getBIN_HEX_OCTTerminalRuleCall_6()); 
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalSpellDatabaseParser.g:2455:6: ( RULE_BOOL_EXPR )
                    {
                    // InternalSpellDatabaseParser.g:2455:6: ( RULE_BOOL_EXPR )
                    // InternalSpellDatabaseParser.g:2456:1: RULE_BOOL_EXPR
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSINGLE_VALUEAccess().getBOOL_EXPRTerminalRuleCall_7()); 
                    }
                    match(input,RULE_BOOL_EXPR,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSINGLE_VALUEAccess().getBOOL_EXPRTerminalRuleCall_7()); 
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalSpellDatabaseParser.g:2461:6: ( RULE_STRING )
                    {
                    // InternalSpellDatabaseParser.g:2461:6: ( RULE_STRING )
                    // InternalSpellDatabaseParser.g:2462:1: RULE_STRING
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSINGLE_VALUEAccess().getSTRINGTerminalRuleCall_8()); 
                    }
                    match(input,RULE_STRING,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSINGLE_VALUEAccess().getSTRINGTerminalRuleCall_8()); 
                    }

                    }


                    }
                    break;
                case 10 :
                    // InternalSpellDatabaseParser.g:2467:6: ( RULE_ANY_OTHER )
                    {
                    // InternalSpellDatabaseParser.g:2467:6: ( RULE_ANY_OTHER )
                    // InternalSpellDatabaseParser.g:2468:1: RULE_ANY_OTHER
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSINGLE_VALUEAccess().getANY_OTHERTerminalRuleCall_9()); 
                    }
                    match(input,RULE_ANY_OTHER,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSINGLE_VALUEAccess().getANY_OTHERTerminalRuleCall_9()); 
                    }

                    }


                    }
                    break;
                case 11 :
                    // InternalSpellDatabaseParser.g:2473:6: ( FullStop )
                    {
                    // InternalSpellDatabaseParser.g:2473:6: ( FullStop )
                    // InternalSpellDatabaseParser.g:2474:1: FullStop
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSINGLE_VALUEAccess().getFullStopKeyword_10()); 
                    }
                    match(input,FullStop,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSINGLE_VALUEAccess().getFullStopKeyword_10()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SINGLE_VALUE__Alternatives"


    // $ANTLR start "rule__ID_STMT__Alternatives_1"
    // InternalSpellDatabaseParser.g:2486:1: rule__ID_STMT__Alternatives_1 : ( ( RULE_ID ) | ( Backslash ) | ( Solidus ) );
    public final void rule__ID_STMT__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:2490:1: ( ( RULE_ID ) | ( Backslash ) | ( Solidus ) )
            int alt39=3;
            switch ( input.LA(1) ) {
            case RULE_ID:
                {
                alt39=1;
                }
                break;
            case Backslash:
                {
                alt39=2;
                }
                break;
            case Solidus:
                {
                alt39=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 39, 0, input);

                throw nvae;
            }

            switch (alt39) {
                case 1 :
                    // InternalSpellDatabaseParser.g:2491:1: ( RULE_ID )
                    {
                    // InternalSpellDatabaseParser.g:2491:1: ( RULE_ID )
                    // InternalSpellDatabaseParser.g:2492:1: RULE_ID
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getID_STMTAccess().getIDTerminalRuleCall_1_0()); 
                    }
                    match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getID_STMTAccess().getIDTerminalRuleCall_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSpellDatabaseParser.g:2497:6: ( Backslash )
                    {
                    // InternalSpellDatabaseParser.g:2497:6: ( Backslash )
                    // InternalSpellDatabaseParser.g:2498:1: Backslash
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getID_STMTAccess().getReverseSolidusKeyword_1_1()); 
                    }
                    match(input,Backslash,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getID_STMTAccess().getReverseSolidusKeyword_1_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSpellDatabaseParser.g:2505:6: ( Solidus )
                    {
                    // InternalSpellDatabaseParser.g:2505:6: ( Solidus )
                    // InternalSpellDatabaseParser.g:2506:1: Solidus
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getID_STMTAccess().getSolidusKeyword_1_2()); 
                    }
                    match(input,Solidus,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getID_STMTAccess().getSolidusKeyword_1_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ID_STMT__Alternatives_1"


    // $ANTLR start "rule__INTEGER__Alternatives_0"
    // InternalSpellDatabaseParser.g:2518:1: rule__INTEGER__Alternatives_0 : ( ( RULE_PLUS ) | ( RULE_MINUS ) );
    public final void rule__INTEGER__Alternatives_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:2522:1: ( ( RULE_PLUS ) | ( RULE_MINUS ) )
            int alt40=2;
            int LA40_0 = input.LA(1);

            if ( (LA40_0==RULE_PLUS) ) {
                alt40=1;
            }
            else if ( (LA40_0==RULE_MINUS) ) {
                alt40=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 40, 0, input);

                throw nvae;
            }
            switch (alt40) {
                case 1 :
                    // InternalSpellDatabaseParser.g:2523:1: ( RULE_PLUS )
                    {
                    // InternalSpellDatabaseParser.g:2523:1: ( RULE_PLUS )
                    // InternalSpellDatabaseParser.g:2524:1: RULE_PLUS
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getINTEGERAccess().getPLUSTerminalRuleCall_0_0()); 
                    }
                    match(input,RULE_PLUS,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getINTEGERAccess().getPLUSTerminalRuleCall_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSpellDatabaseParser.g:2529:6: ( RULE_MINUS )
                    {
                    // InternalSpellDatabaseParser.g:2529:6: ( RULE_MINUS )
                    // InternalSpellDatabaseParser.g:2530:1: RULE_MINUS
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getINTEGERAccess().getMINUSTerminalRuleCall_0_1()); 
                    }
                    match(input,RULE_MINUS,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getINTEGERAccess().getMINUSTerminalRuleCall_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__INTEGER__Alternatives_0"


    // $ANTLR start "rule__SpellDatabase__Group__0"
    // InternalSpellDatabaseParser.g:2542:1: rule__SpellDatabase__Group__0 : rule__SpellDatabase__Group__0__Impl rule__SpellDatabase__Group__1 ;
    public final void rule__SpellDatabase__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:2546:1: ( rule__SpellDatabase__Group__0__Impl rule__SpellDatabase__Group__1 )
            // InternalSpellDatabaseParser.g:2547:2: rule__SpellDatabase__Group__0__Impl rule__SpellDatabase__Group__1
            {
            pushFollow(FOLLOW_9);
            rule__SpellDatabase__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SpellDatabase__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpellDatabase__Group__0"


    // $ANTLR start "rule__SpellDatabase__Group__0__Impl"
    // InternalSpellDatabaseParser.g:2554:1: rule__SpellDatabase__Group__0__Impl : ( ruleSkipNLAndComments ) ;
    public final void rule__SpellDatabase__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:2558:1: ( ( ruleSkipNLAndComments ) )
            // InternalSpellDatabaseParser.g:2559:1: ( ruleSkipNLAndComments )
            {
            // InternalSpellDatabaseParser.g:2559:1: ( ruleSkipNLAndComments )
            // InternalSpellDatabaseParser.g:2560:1: ruleSkipNLAndComments
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpellDatabaseAccess().getSkipNLAndCommentsParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSkipNLAndComments();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpellDatabaseAccess().getSkipNLAndCommentsParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpellDatabase__Group__0__Impl"


    // $ANTLR start "rule__SpellDatabase__Group__1"
    // InternalSpellDatabaseParser.g:2571:1: rule__SpellDatabase__Group__1 : rule__SpellDatabase__Group__1__Impl ;
    public final void rule__SpellDatabase__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:2575:1: ( rule__SpellDatabase__Group__1__Impl )
            // InternalSpellDatabaseParser.g:2576:2: rule__SpellDatabase__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SpellDatabase__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpellDatabase__Group__1"


    // $ANTLR start "rule__SpellDatabase__Group__1__Impl"
    // InternalSpellDatabaseParser.g:2582:1: rule__SpellDatabase__Group__1__Impl : ( ( rule__SpellDatabase__Alternatives_1 ) ) ;
    public final void rule__SpellDatabase__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:2586:1: ( ( ( rule__SpellDatabase__Alternatives_1 ) ) )
            // InternalSpellDatabaseParser.g:2587:1: ( ( rule__SpellDatabase__Alternatives_1 ) )
            {
            // InternalSpellDatabaseParser.g:2587:1: ( ( rule__SpellDatabase__Alternatives_1 ) )
            // InternalSpellDatabaseParser.g:2588:1: ( rule__SpellDatabase__Alternatives_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpellDatabaseAccess().getAlternatives_1()); 
            }
            // InternalSpellDatabaseParser.g:2589:1: ( rule__SpellDatabase__Alternatives_1 )
            // InternalSpellDatabaseParser.g:2589:2: rule__SpellDatabase__Alternatives_1
            {
            pushFollow(FOLLOW_2);
            rule__SpellDatabase__Alternatives_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpellDatabaseAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpellDatabase__Group__1__Impl"


    // $ANTLR start "rule__SpellDatabase__Group_1_0__0"
    // InternalSpellDatabaseParser.g:2603:1: rule__SpellDatabase__Group_1_0__0 : rule__SpellDatabase__Group_1_0__0__Impl rule__SpellDatabase__Group_1_0__1 ;
    public final void rule__SpellDatabase__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:2607:1: ( rule__SpellDatabase__Group_1_0__0__Impl rule__SpellDatabase__Group_1_0__1 )
            // InternalSpellDatabaseParser.g:2608:2: rule__SpellDatabase__Group_1_0__0__Impl rule__SpellDatabase__Group_1_0__1
            {
            pushFollow(FOLLOW_10);
            rule__SpellDatabase__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SpellDatabase__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpellDatabase__Group_1_0__0"


    // $ANTLR start "rule__SpellDatabase__Group_1_0__0__Impl"
    // InternalSpellDatabaseParser.g:2615:1: rule__SpellDatabase__Group_1_0__0__Impl : ( () ) ;
    public final void rule__SpellDatabase__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:2619:1: ( ( () ) )
            // InternalSpellDatabaseParser.g:2620:1: ( () )
            {
            // InternalSpellDatabaseParser.g:2620:1: ( () )
            // InternalSpellDatabaseParser.g:2621:1: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpellDatabaseAccess().getAstriumSpellDatabaseAction_1_0_0()); 
            }
            // InternalSpellDatabaseParser.g:2622:1: ()
            // InternalSpellDatabaseParser.g:2624:1: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpellDatabaseAccess().getAstriumSpellDatabaseAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpellDatabase__Group_1_0__0__Impl"


    // $ANTLR start "rule__SpellDatabase__Group_1_0__1"
    // InternalSpellDatabaseParser.g:2634:1: rule__SpellDatabase__Group_1_0__1 : rule__SpellDatabase__Group_1_0__1__Impl rule__SpellDatabase__Group_1_0__2 ;
    public final void rule__SpellDatabase__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:2638:1: ( rule__SpellDatabase__Group_1_0__1__Impl rule__SpellDatabase__Group_1_0__2 )
            // InternalSpellDatabaseParser.g:2639:2: rule__SpellDatabase__Group_1_0__1__Impl rule__SpellDatabase__Group_1_0__2
            {
            pushFollow(FOLLOW_11);
            rule__SpellDatabase__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SpellDatabase__Group_1_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpellDatabase__Group_1_0__1"


    // $ANTLR start "rule__SpellDatabase__Group_1_0__1__Impl"
    // InternalSpellDatabaseParser.g:2646:1: rule__SpellDatabase__Group_1_0__1__Impl : ( FILE_HEADER ) ;
    public final void rule__SpellDatabase__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:2650:1: ( ( FILE_HEADER ) )
            // InternalSpellDatabaseParser.g:2651:1: ( FILE_HEADER )
            {
            // InternalSpellDatabaseParser.g:2651:1: ( FILE_HEADER )
            // InternalSpellDatabaseParser.g:2652:1: FILE_HEADER
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpellDatabaseAccess().getFILE_HEADERKeyword_1_0_1()); 
            }
            match(input,FILE_HEADER,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpellDatabaseAccess().getFILE_HEADERKeyword_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpellDatabase__Group_1_0__1__Impl"


    // $ANTLR start "rule__SpellDatabase__Group_1_0__2"
    // InternalSpellDatabaseParser.g:2665:1: rule__SpellDatabase__Group_1_0__2 : rule__SpellDatabase__Group_1_0__2__Impl rule__SpellDatabase__Group_1_0__3 ;
    public final void rule__SpellDatabase__Group_1_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:2669:1: ( rule__SpellDatabase__Group_1_0__2__Impl rule__SpellDatabase__Group_1_0__3 )
            // InternalSpellDatabaseParser.g:2670:2: rule__SpellDatabase__Group_1_0__2__Impl rule__SpellDatabase__Group_1_0__3
            {
            pushFollow(FOLLOW_12);
            rule__SpellDatabase__Group_1_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SpellDatabase__Group_1_0__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpellDatabase__Group_1_0__2"


    // $ANTLR start "rule__SpellDatabase__Group_1_0__2__Impl"
    // InternalSpellDatabaseParser.g:2677:1: rule__SpellDatabase__Group_1_0__2__Impl : ( ruleSkipNLAndComments ) ;
    public final void rule__SpellDatabase__Group_1_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:2681:1: ( ( ruleSkipNLAndComments ) )
            // InternalSpellDatabaseParser.g:2682:1: ( ruleSkipNLAndComments )
            {
            // InternalSpellDatabaseParser.g:2682:1: ( ruleSkipNLAndComments )
            // InternalSpellDatabaseParser.g:2683:1: ruleSkipNLAndComments
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpellDatabaseAccess().getSkipNLAndCommentsParserRuleCall_1_0_2()); 
            }
            pushFollow(FOLLOW_2);
            ruleSkipNLAndComments();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpellDatabaseAccess().getSkipNLAndCommentsParserRuleCall_1_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpellDatabase__Group_1_0__2__Impl"


    // $ANTLR start "rule__SpellDatabase__Group_1_0__3"
    // InternalSpellDatabaseParser.g:2694:1: rule__SpellDatabase__Group_1_0__3 : rule__SpellDatabase__Group_1_0__3__Impl ;
    public final void rule__SpellDatabase__Group_1_0__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:2698:1: ( rule__SpellDatabase__Group_1_0__3__Impl )
            // InternalSpellDatabaseParser.g:2699:2: rule__SpellDatabase__Group_1_0__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SpellDatabase__Group_1_0__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpellDatabase__Group_1_0__3"


    // $ANTLR start "rule__SpellDatabase__Group_1_0__3__Impl"
    // InternalSpellDatabaseParser.g:2705:1: rule__SpellDatabase__Group_1_0__3__Impl : ( ( rule__SpellDatabase__DatabaseAssignment_1_0_3 ) ) ;
    public final void rule__SpellDatabase__Group_1_0__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:2709:1: ( ( ( rule__SpellDatabase__DatabaseAssignment_1_0_3 ) ) )
            // InternalSpellDatabaseParser.g:2710:1: ( ( rule__SpellDatabase__DatabaseAssignment_1_0_3 ) )
            {
            // InternalSpellDatabaseParser.g:2710:1: ( ( rule__SpellDatabase__DatabaseAssignment_1_0_3 ) )
            // InternalSpellDatabaseParser.g:2711:1: ( rule__SpellDatabase__DatabaseAssignment_1_0_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpellDatabaseAccess().getDatabaseAssignment_1_0_3()); 
            }
            // InternalSpellDatabaseParser.g:2712:1: ( rule__SpellDatabase__DatabaseAssignment_1_0_3 )
            // InternalSpellDatabaseParser.g:2712:2: rule__SpellDatabase__DatabaseAssignment_1_0_3
            {
            pushFollow(FOLLOW_2);
            rule__SpellDatabase__DatabaseAssignment_1_0_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpellDatabaseAccess().getDatabaseAssignment_1_0_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpellDatabase__Group_1_0__3__Impl"


    // $ANTLR start "rule__SpellDatabase__Group_1_1__0"
    // InternalSpellDatabaseParser.g:2730:1: rule__SpellDatabase__Group_1_1__0 : rule__SpellDatabase__Group_1_1__0__Impl rule__SpellDatabase__Group_1_1__1 ;
    public final void rule__SpellDatabase__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:2734:1: ( rule__SpellDatabase__Group_1_1__0__Impl rule__SpellDatabase__Group_1_1__1 )
            // InternalSpellDatabaseParser.g:2735:2: rule__SpellDatabase__Group_1_1__0__Impl rule__SpellDatabase__Group_1_1__1
            {
            pushFollow(FOLLOW_13);
            rule__SpellDatabase__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SpellDatabase__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpellDatabase__Group_1_1__0"


    // $ANTLR start "rule__SpellDatabase__Group_1_1__0__Impl"
    // InternalSpellDatabaseParser.g:2742:1: rule__SpellDatabase__Group_1_1__0__Impl : ( () ) ;
    public final void rule__SpellDatabase__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:2746:1: ( ( () ) )
            // InternalSpellDatabaseParser.g:2747:1: ( () )
            {
            // InternalSpellDatabaseParser.g:2747:1: ( () )
            // InternalSpellDatabaseParser.g:2748:1: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpellDatabaseAccess().getSpellDatabaseAction_1_1_0()); 
            }
            // InternalSpellDatabaseParser.g:2749:1: ()
            // InternalSpellDatabaseParser.g:2751:1: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpellDatabaseAccess().getSpellDatabaseAction_1_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpellDatabase__Group_1_1__0__Impl"


    // $ANTLR start "rule__SpellDatabase__Group_1_1__1"
    // InternalSpellDatabaseParser.g:2761:1: rule__SpellDatabase__Group_1_1__1 : rule__SpellDatabase__Group_1_1__1__Impl ;
    public final void rule__SpellDatabase__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:2765:1: ( rule__SpellDatabase__Group_1_1__1__Impl )
            // InternalSpellDatabaseParser.g:2766:2: rule__SpellDatabase__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SpellDatabase__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpellDatabase__Group_1_1__1"


    // $ANTLR start "rule__SpellDatabase__Group_1_1__1__Impl"
    // InternalSpellDatabaseParser.g:2772:1: rule__SpellDatabase__Group_1_1__1__Impl : ( ( rule__SpellDatabase__Group_1_1_1__0 ) ) ;
    public final void rule__SpellDatabase__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:2776:1: ( ( ( rule__SpellDatabase__Group_1_1_1__0 ) ) )
            // InternalSpellDatabaseParser.g:2777:1: ( ( rule__SpellDatabase__Group_1_1_1__0 ) )
            {
            // InternalSpellDatabaseParser.g:2777:1: ( ( rule__SpellDatabase__Group_1_1_1__0 ) )
            // InternalSpellDatabaseParser.g:2778:1: ( rule__SpellDatabase__Group_1_1_1__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpellDatabaseAccess().getGroup_1_1_1()); 
            }
            // InternalSpellDatabaseParser.g:2779:1: ( rule__SpellDatabase__Group_1_1_1__0 )
            // InternalSpellDatabaseParser.g:2779:2: rule__SpellDatabase__Group_1_1_1__0
            {
            pushFollow(FOLLOW_2);
            rule__SpellDatabase__Group_1_1_1__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpellDatabaseAccess().getGroup_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpellDatabase__Group_1_1__1__Impl"


    // $ANTLR start "rule__SpellDatabase__Group_1_1_1__0"
    // InternalSpellDatabaseParser.g:2793:1: rule__SpellDatabase__Group_1_1_1__0 : rule__SpellDatabase__Group_1_1_1__0__Impl rule__SpellDatabase__Group_1_1_1__1 ;
    public final void rule__SpellDatabase__Group_1_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:2797:1: ( rule__SpellDatabase__Group_1_1_1__0__Impl rule__SpellDatabase__Group_1_1_1__1 )
            // InternalSpellDatabaseParser.g:2798:2: rule__SpellDatabase__Group_1_1_1__0__Impl rule__SpellDatabase__Group_1_1_1__1
            {
            pushFollow(FOLLOW_11);
            rule__SpellDatabase__Group_1_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SpellDatabase__Group_1_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpellDatabase__Group_1_1_1__0"


    // $ANTLR start "rule__SpellDatabase__Group_1_1_1__0__Impl"
    // InternalSpellDatabaseParser.g:2805:1: rule__SpellDatabase__Group_1_1_1__0__Impl : ( ( rule__SpellDatabase__DatabaseEntryAssignment_1_1_1_0 ) ) ;
    public final void rule__SpellDatabase__Group_1_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:2809:1: ( ( ( rule__SpellDatabase__DatabaseEntryAssignment_1_1_1_0 ) ) )
            // InternalSpellDatabaseParser.g:2810:1: ( ( rule__SpellDatabase__DatabaseEntryAssignment_1_1_1_0 ) )
            {
            // InternalSpellDatabaseParser.g:2810:1: ( ( rule__SpellDatabase__DatabaseEntryAssignment_1_1_1_0 ) )
            // InternalSpellDatabaseParser.g:2811:1: ( rule__SpellDatabase__DatabaseEntryAssignment_1_1_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpellDatabaseAccess().getDatabaseEntryAssignment_1_1_1_0()); 
            }
            // InternalSpellDatabaseParser.g:2812:1: ( rule__SpellDatabase__DatabaseEntryAssignment_1_1_1_0 )
            // InternalSpellDatabaseParser.g:2812:2: rule__SpellDatabase__DatabaseEntryAssignment_1_1_1_0
            {
            pushFollow(FOLLOW_2);
            rule__SpellDatabase__DatabaseEntryAssignment_1_1_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpellDatabaseAccess().getDatabaseEntryAssignment_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpellDatabase__Group_1_1_1__0__Impl"


    // $ANTLR start "rule__SpellDatabase__Group_1_1_1__1"
    // InternalSpellDatabaseParser.g:2822:1: rule__SpellDatabase__Group_1_1_1__1 : rule__SpellDatabase__Group_1_1_1__1__Impl rule__SpellDatabase__Group_1_1_1__2 ;
    public final void rule__SpellDatabase__Group_1_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:2826:1: ( rule__SpellDatabase__Group_1_1_1__1__Impl rule__SpellDatabase__Group_1_1_1__2 )
            // InternalSpellDatabaseParser.g:2827:2: rule__SpellDatabase__Group_1_1_1__1__Impl rule__SpellDatabase__Group_1_1_1__2
            {
            pushFollow(FOLLOW_11);
            rule__SpellDatabase__Group_1_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SpellDatabase__Group_1_1_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpellDatabase__Group_1_1_1__1"


    // $ANTLR start "rule__SpellDatabase__Group_1_1_1__1__Impl"
    // InternalSpellDatabaseParser.g:2834:1: rule__SpellDatabase__Group_1_1_1__1__Impl : ( ( rule__SpellDatabase__Group_1_1_1_1__0 )* ) ;
    public final void rule__SpellDatabase__Group_1_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:2838:1: ( ( ( rule__SpellDatabase__Group_1_1_1_1__0 )* ) )
            // InternalSpellDatabaseParser.g:2839:1: ( ( rule__SpellDatabase__Group_1_1_1_1__0 )* )
            {
            // InternalSpellDatabaseParser.g:2839:1: ( ( rule__SpellDatabase__Group_1_1_1_1__0 )* )
            // InternalSpellDatabaseParser.g:2840:1: ( rule__SpellDatabase__Group_1_1_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpellDatabaseAccess().getGroup_1_1_1_1()); 
            }
            // InternalSpellDatabaseParser.g:2841:1: ( rule__SpellDatabase__Group_1_1_1_1__0 )*
            loop41:
            do {
                int alt41=2;
                alt41 = dfa41.predict(input);
                switch (alt41) {
            	case 1 :
            	    // InternalSpellDatabaseParser.g:2841:2: rule__SpellDatabase__Group_1_1_1_1__0
            	    {
            	    pushFollow(FOLLOW_14);
            	    rule__SpellDatabase__Group_1_1_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop41;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpellDatabaseAccess().getGroup_1_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpellDatabase__Group_1_1_1__1__Impl"


    // $ANTLR start "rule__SpellDatabase__Group_1_1_1__2"
    // InternalSpellDatabaseParser.g:2851:1: rule__SpellDatabase__Group_1_1_1__2 : rule__SpellDatabase__Group_1_1_1__2__Impl ;
    public final void rule__SpellDatabase__Group_1_1_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:2855:1: ( rule__SpellDatabase__Group_1_1_1__2__Impl )
            // InternalSpellDatabaseParser.g:2856:2: rule__SpellDatabase__Group_1_1_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SpellDatabase__Group_1_1_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpellDatabase__Group_1_1_1__2"


    // $ANTLR start "rule__SpellDatabase__Group_1_1_1__2__Impl"
    // InternalSpellDatabaseParser.g:2862:1: rule__SpellDatabase__Group_1_1_1__2__Impl : ( ruleSkipNLAndComments ) ;
    public final void rule__SpellDatabase__Group_1_1_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:2866:1: ( ( ruleSkipNLAndComments ) )
            // InternalSpellDatabaseParser.g:2867:1: ( ruleSkipNLAndComments )
            {
            // InternalSpellDatabaseParser.g:2867:1: ( ruleSkipNLAndComments )
            // InternalSpellDatabaseParser.g:2868:1: ruleSkipNLAndComments
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpellDatabaseAccess().getSkipNLAndCommentsParserRuleCall_1_1_1_2()); 
            }
            pushFollow(FOLLOW_2);
            ruleSkipNLAndComments();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpellDatabaseAccess().getSkipNLAndCommentsParserRuleCall_1_1_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpellDatabase__Group_1_1_1__2__Impl"


    // $ANTLR start "rule__SpellDatabase__Group_1_1_1_1__0"
    // InternalSpellDatabaseParser.g:2885:1: rule__SpellDatabase__Group_1_1_1_1__0 : rule__SpellDatabase__Group_1_1_1_1__0__Impl rule__SpellDatabase__Group_1_1_1_1__1 ;
    public final void rule__SpellDatabase__Group_1_1_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:2889:1: ( rule__SpellDatabase__Group_1_1_1_1__0__Impl rule__SpellDatabase__Group_1_1_1_1__1 )
            // InternalSpellDatabaseParser.g:2890:2: rule__SpellDatabase__Group_1_1_1_1__0__Impl rule__SpellDatabase__Group_1_1_1_1__1
            {
            pushFollow(FOLLOW_13);
            rule__SpellDatabase__Group_1_1_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SpellDatabase__Group_1_1_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpellDatabase__Group_1_1_1_1__0"


    // $ANTLR start "rule__SpellDatabase__Group_1_1_1_1__0__Impl"
    // InternalSpellDatabaseParser.g:2897:1: rule__SpellDatabase__Group_1_1_1_1__0__Impl : ( ruleSkipNLAndComments2 ) ;
    public final void rule__SpellDatabase__Group_1_1_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:2901:1: ( ( ruleSkipNLAndComments2 ) )
            // InternalSpellDatabaseParser.g:2902:1: ( ruleSkipNLAndComments2 )
            {
            // InternalSpellDatabaseParser.g:2902:1: ( ruleSkipNLAndComments2 )
            // InternalSpellDatabaseParser.g:2903:1: ruleSkipNLAndComments2
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpellDatabaseAccess().getSkipNLAndComments2ParserRuleCall_1_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSkipNLAndComments2();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpellDatabaseAccess().getSkipNLAndComments2ParserRuleCall_1_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpellDatabase__Group_1_1_1_1__0__Impl"


    // $ANTLR start "rule__SpellDatabase__Group_1_1_1_1__1"
    // InternalSpellDatabaseParser.g:2914:1: rule__SpellDatabase__Group_1_1_1_1__1 : rule__SpellDatabase__Group_1_1_1_1__1__Impl ;
    public final void rule__SpellDatabase__Group_1_1_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:2918:1: ( rule__SpellDatabase__Group_1_1_1_1__1__Impl )
            // InternalSpellDatabaseParser.g:2919:2: rule__SpellDatabase__Group_1_1_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SpellDatabase__Group_1_1_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpellDatabase__Group_1_1_1_1__1"


    // $ANTLR start "rule__SpellDatabase__Group_1_1_1_1__1__Impl"
    // InternalSpellDatabaseParser.g:2925:1: rule__SpellDatabase__Group_1_1_1_1__1__Impl : ( ( rule__SpellDatabase__DatabaseEntryAssignment_1_1_1_1_1 )? ) ;
    public final void rule__SpellDatabase__Group_1_1_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:2929:1: ( ( ( rule__SpellDatabase__DatabaseEntryAssignment_1_1_1_1_1 )? ) )
            // InternalSpellDatabaseParser.g:2930:1: ( ( rule__SpellDatabase__DatabaseEntryAssignment_1_1_1_1_1 )? )
            {
            // InternalSpellDatabaseParser.g:2930:1: ( ( rule__SpellDatabase__DatabaseEntryAssignment_1_1_1_1_1 )? )
            // InternalSpellDatabaseParser.g:2931:1: ( rule__SpellDatabase__DatabaseEntryAssignment_1_1_1_1_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpellDatabaseAccess().getDatabaseEntryAssignment_1_1_1_1_1()); 
            }
            // InternalSpellDatabaseParser.g:2932:1: ( rule__SpellDatabase__DatabaseEntryAssignment_1_1_1_1_1 )?
            int alt42=2;
            alt42 = dfa42.predict(input);
            switch (alt42) {
                case 1 :
                    // InternalSpellDatabaseParser.g:2932:2: rule__SpellDatabase__DatabaseEntryAssignment_1_1_1_1_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__SpellDatabase__DatabaseEntryAssignment_1_1_1_1_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpellDatabaseAccess().getDatabaseEntryAssignment_1_1_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpellDatabase__Group_1_1_1_1__1__Impl"


    // $ANTLR start "rule__SpellDatabase__Group_1_2__0"
    // InternalSpellDatabaseParser.g:2946:1: rule__SpellDatabase__Group_1_2__0 : rule__SpellDatabase__Group_1_2__0__Impl rule__SpellDatabase__Group_1_2__1 ;
    public final void rule__SpellDatabase__Group_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:2950:1: ( rule__SpellDatabase__Group_1_2__0__Impl rule__SpellDatabase__Group_1_2__1 )
            // InternalSpellDatabaseParser.g:2951:2: rule__SpellDatabase__Group_1_2__0__Impl rule__SpellDatabase__Group_1_2__1
            {
            pushFollow(FOLLOW_9);
            rule__SpellDatabase__Group_1_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SpellDatabase__Group_1_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpellDatabase__Group_1_2__0"


    // $ANTLR start "rule__SpellDatabase__Group_1_2__0__Impl"
    // InternalSpellDatabaseParser.g:2958:1: rule__SpellDatabase__Group_1_2__0__Impl : ( () ) ;
    public final void rule__SpellDatabase__Group_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:2962:1: ( ( () ) )
            // InternalSpellDatabaseParser.g:2963:1: ( () )
            {
            // InternalSpellDatabaseParser.g:2963:1: ( () )
            // InternalSpellDatabaseParser.g:2964:1: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpellDatabaseAccess().getCSVFileAction_1_2_0()); 
            }
            // InternalSpellDatabaseParser.g:2965:1: ()
            // InternalSpellDatabaseParser.g:2967:1: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpellDatabaseAccess().getCSVFileAction_1_2_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpellDatabase__Group_1_2__0__Impl"


    // $ANTLR start "rule__SpellDatabase__Group_1_2__1"
    // InternalSpellDatabaseParser.g:2977:1: rule__SpellDatabase__Group_1_2__1 : rule__SpellDatabase__Group_1_2__1__Impl rule__SpellDatabase__Group_1_2__2 ;
    public final void rule__SpellDatabase__Group_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:2981:1: ( rule__SpellDatabase__Group_1_2__1__Impl rule__SpellDatabase__Group_1_2__2 )
            // InternalSpellDatabaseParser.g:2982:2: rule__SpellDatabase__Group_1_2__1__Impl rule__SpellDatabase__Group_1_2__2
            {
            pushFollow(FOLLOW_15);
            rule__SpellDatabase__Group_1_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SpellDatabase__Group_1_2__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpellDatabase__Group_1_2__1"


    // $ANTLR start "rule__SpellDatabase__Group_1_2__1__Impl"
    // InternalSpellDatabaseParser.g:2989:1: rule__SpellDatabase__Group_1_2__1__Impl : ( ( rule__SpellDatabase__CsvEntriesAssignment_1_2_1 ) ) ;
    public final void rule__SpellDatabase__Group_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:2993:1: ( ( ( rule__SpellDatabase__CsvEntriesAssignment_1_2_1 ) ) )
            // InternalSpellDatabaseParser.g:2994:1: ( ( rule__SpellDatabase__CsvEntriesAssignment_1_2_1 ) )
            {
            // InternalSpellDatabaseParser.g:2994:1: ( ( rule__SpellDatabase__CsvEntriesAssignment_1_2_1 ) )
            // InternalSpellDatabaseParser.g:2995:1: ( rule__SpellDatabase__CsvEntriesAssignment_1_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpellDatabaseAccess().getCsvEntriesAssignment_1_2_1()); 
            }
            // InternalSpellDatabaseParser.g:2996:1: ( rule__SpellDatabase__CsvEntriesAssignment_1_2_1 )
            // InternalSpellDatabaseParser.g:2996:2: rule__SpellDatabase__CsvEntriesAssignment_1_2_1
            {
            pushFollow(FOLLOW_2);
            rule__SpellDatabase__CsvEntriesAssignment_1_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpellDatabaseAccess().getCsvEntriesAssignment_1_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpellDatabase__Group_1_2__1__Impl"


    // $ANTLR start "rule__SpellDatabase__Group_1_2__2"
    // InternalSpellDatabaseParser.g:3006:1: rule__SpellDatabase__Group_1_2__2 : rule__SpellDatabase__Group_1_2__2__Impl rule__SpellDatabase__Group_1_2__3 ;
    public final void rule__SpellDatabase__Group_1_2__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:3010:1: ( rule__SpellDatabase__Group_1_2__2__Impl rule__SpellDatabase__Group_1_2__3 )
            // InternalSpellDatabaseParser.g:3011:2: rule__SpellDatabase__Group_1_2__2__Impl rule__SpellDatabase__Group_1_2__3
            {
            pushFollow(FOLLOW_15);
            rule__SpellDatabase__Group_1_2__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SpellDatabase__Group_1_2__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpellDatabase__Group_1_2__2"


    // $ANTLR start "rule__SpellDatabase__Group_1_2__2__Impl"
    // InternalSpellDatabaseParser.g:3018:1: rule__SpellDatabase__Group_1_2__2__Impl : ( ( ruleSkipNLAndComments2 )? ) ;
    public final void rule__SpellDatabase__Group_1_2__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:3022:1: ( ( ( ruleSkipNLAndComments2 )? ) )
            // InternalSpellDatabaseParser.g:3023:1: ( ( ruleSkipNLAndComments2 )? )
            {
            // InternalSpellDatabaseParser.g:3023:1: ( ( ruleSkipNLAndComments2 )? )
            // InternalSpellDatabaseParser.g:3024:1: ( ruleSkipNLAndComments2 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpellDatabaseAccess().getSkipNLAndComments2ParserRuleCall_1_2_2()); 
            }
            // InternalSpellDatabaseParser.g:3025:1: ( ruleSkipNLAndComments2 )?
            int alt43=2;
            alt43 = dfa43.predict(input);
            switch (alt43) {
                case 1 :
                    // InternalSpellDatabaseParser.g:3025:3: ruleSkipNLAndComments2
                    {
                    pushFollow(FOLLOW_2);
                    ruleSkipNLAndComments2();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpellDatabaseAccess().getSkipNLAndComments2ParserRuleCall_1_2_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpellDatabase__Group_1_2__2__Impl"


    // $ANTLR start "rule__SpellDatabase__Group_1_2__3"
    // InternalSpellDatabaseParser.g:3035:1: rule__SpellDatabase__Group_1_2__3 : rule__SpellDatabase__Group_1_2__3__Impl rule__SpellDatabase__Group_1_2__4 ;
    public final void rule__SpellDatabase__Group_1_2__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:3039:1: ( rule__SpellDatabase__Group_1_2__3__Impl rule__SpellDatabase__Group_1_2__4 )
            // InternalSpellDatabaseParser.g:3040:2: rule__SpellDatabase__Group_1_2__3__Impl rule__SpellDatabase__Group_1_2__4
            {
            pushFollow(FOLLOW_15);
            rule__SpellDatabase__Group_1_2__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SpellDatabase__Group_1_2__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpellDatabase__Group_1_2__3"


    // $ANTLR start "rule__SpellDatabase__Group_1_2__3__Impl"
    // InternalSpellDatabaseParser.g:3047:1: rule__SpellDatabase__Group_1_2__3__Impl : ( ( rule__SpellDatabase__Group_1_2_3__0 )* ) ;
    public final void rule__SpellDatabase__Group_1_2__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:3051:1: ( ( ( rule__SpellDatabase__Group_1_2_3__0 )* ) )
            // InternalSpellDatabaseParser.g:3052:1: ( ( rule__SpellDatabase__Group_1_2_3__0 )* )
            {
            // InternalSpellDatabaseParser.g:3052:1: ( ( rule__SpellDatabase__Group_1_2_3__0 )* )
            // InternalSpellDatabaseParser.g:3053:1: ( rule__SpellDatabase__Group_1_2_3__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpellDatabaseAccess().getGroup_1_2_3()); 
            }
            // InternalSpellDatabaseParser.g:3054:1: ( rule__SpellDatabase__Group_1_2_3__0 )*
            loop44:
            do {
                int alt44=2;
                alt44 = dfa44.predict(input);
                switch (alt44) {
            	case 1 :
            	    // InternalSpellDatabaseParser.g:3054:2: rule__SpellDatabase__Group_1_2_3__0
            	    {
            	    pushFollow(FOLLOW_16);
            	    rule__SpellDatabase__Group_1_2_3__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop44;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpellDatabaseAccess().getGroup_1_2_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpellDatabase__Group_1_2__3__Impl"


    // $ANTLR start "rule__SpellDatabase__Group_1_2__4"
    // InternalSpellDatabaseParser.g:3064:1: rule__SpellDatabase__Group_1_2__4 : rule__SpellDatabase__Group_1_2__4__Impl ;
    public final void rule__SpellDatabase__Group_1_2__4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:3068:1: ( rule__SpellDatabase__Group_1_2__4__Impl )
            // InternalSpellDatabaseParser.g:3069:2: rule__SpellDatabase__Group_1_2__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SpellDatabase__Group_1_2__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpellDatabase__Group_1_2__4"


    // $ANTLR start "rule__SpellDatabase__Group_1_2__4__Impl"
    // InternalSpellDatabaseParser.g:3075:1: rule__SpellDatabase__Group_1_2__4__Impl : ( ruleSkipNLAndComments ) ;
    public final void rule__SpellDatabase__Group_1_2__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:3079:1: ( ( ruleSkipNLAndComments ) )
            // InternalSpellDatabaseParser.g:3080:1: ( ruleSkipNLAndComments )
            {
            // InternalSpellDatabaseParser.g:3080:1: ( ruleSkipNLAndComments )
            // InternalSpellDatabaseParser.g:3081:1: ruleSkipNLAndComments
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpellDatabaseAccess().getSkipNLAndCommentsParserRuleCall_1_2_4()); 
            }
            pushFollow(FOLLOW_2);
            ruleSkipNLAndComments();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpellDatabaseAccess().getSkipNLAndCommentsParserRuleCall_1_2_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpellDatabase__Group_1_2__4__Impl"


    // $ANTLR start "rule__SpellDatabase__Group_1_2_3__0"
    // InternalSpellDatabaseParser.g:3102:1: rule__SpellDatabase__Group_1_2_3__0 : rule__SpellDatabase__Group_1_2_3__0__Impl rule__SpellDatabase__Group_1_2_3__1 ;
    public final void rule__SpellDatabase__Group_1_2_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:3106:1: ( rule__SpellDatabase__Group_1_2_3__0__Impl rule__SpellDatabase__Group_1_2_3__1 )
            // InternalSpellDatabaseParser.g:3107:2: rule__SpellDatabase__Group_1_2_3__0__Impl rule__SpellDatabase__Group_1_2_3__1
            {
            pushFollow(FOLLOW_17);
            rule__SpellDatabase__Group_1_2_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SpellDatabase__Group_1_2_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpellDatabase__Group_1_2_3__0"


    // $ANTLR start "rule__SpellDatabase__Group_1_2_3__0__Impl"
    // InternalSpellDatabaseParser.g:3114:1: rule__SpellDatabase__Group_1_2_3__0__Impl : ( ( ruleSkipNLAndComments2 )? ) ;
    public final void rule__SpellDatabase__Group_1_2_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:3118:1: ( ( ( ruleSkipNLAndComments2 )? ) )
            // InternalSpellDatabaseParser.g:3119:1: ( ( ruleSkipNLAndComments2 )? )
            {
            // InternalSpellDatabaseParser.g:3119:1: ( ( ruleSkipNLAndComments2 )? )
            // InternalSpellDatabaseParser.g:3120:1: ( ruleSkipNLAndComments2 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpellDatabaseAccess().getSkipNLAndComments2ParserRuleCall_1_2_3_0()); 
            }
            // InternalSpellDatabaseParser.g:3121:1: ( ruleSkipNLAndComments2 )?
            int alt45=2;
            int LA45_0 = input.LA(1);

            if ( (LA45_0==RULE_NL) ) {
                alt45=1;
            }
            switch (alt45) {
                case 1 :
                    // InternalSpellDatabaseParser.g:3121:3: ruleSkipNLAndComments2
                    {
                    pushFollow(FOLLOW_2);
                    ruleSkipNLAndComments2();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpellDatabaseAccess().getSkipNLAndComments2ParserRuleCall_1_2_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpellDatabase__Group_1_2_3__0__Impl"


    // $ANTLR start "rule__SpellDatabase__Group_1_2_3__1"
    // InternalSpellDatabaseParser.g:3131:1: rule__SpellDatabase__Group_1_2_3__1 : rule__SpellDatabase__Group_1_2_3__1__Impl ;
    public final void rule__SpellDatabase__Group_1_2_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:3135:1: ( rule__SpellDatabase__Group_1_2_3__1__Impl )
            // InternalSpellDatabaseParser.g:3136:2: rule__SpellDatabase__Group_1_2_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SpellDatabase__Group_1_2_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpellDatabase__Group_1_2_3__1"


    // $ANTLR start "rule__SpellDatabase__Group_1_2_3__1__Impl"
    // InternalSpellDatabaseParser.g:3142:1: rule__SpellDatabase__Group_1_2_3__1__Impl : ( ( rule__SpellDatabase__CsvEntriesAssignment_1_2_3_1 ) ) ;
    public final void rule__SpellDatabase__Group_1_2_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:3146:1: ( ( ( rule__SpellDatabase__CsvEntriesAssignment_1_2_3_1 ) ) )
            // InternalSpellDatabaseParser.g:3147:1: ( ( rule__SpellDatabase__CsvEntriesAssignment_1_2_3_1 ) )
            {
            // InternalSpellDatabaseParser.g:3147:1: ( ( rule__SpellDatabase__CsvEntriesAssignment_1_2_3_1 ) )
            // InternalSpellDatabaseParser.g:3148:1: ( rule__SpellDatabase__CsvEntriesAssignment_1_2_3_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpellDatabaseAccess().getCsvEntriesAssignment_1_2_3_1()); 
            }
            // InternalSpellDatabaseParser.g:3149:1: ( rule__SpellDatabase__CsvEntriesAssignment_1_2_3_1 )
            // InternalSpellDatabaseParser.g:3149:2: rule__SpellDatabase__CsvEntriesAssignment_1_2_3_1
            {
            pushFollow(FOLLOW_2);
            rule__SpellDatabase__CsvEntriesAssignment_1_2_3_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpellDatabaseAccess().getCsvEntriesAssignment_1_2_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpellDatabase__Group_1_2_3__1__Impl"


    // $ANTLR start "rule__AstriumDatabase__Group__0"
    // InternalSpellDatabaseParser.g:3163:1: rule__AstriumDatabase__Group__0 : rule__AstriumDatabase__Group__0__Impl rule__AstriumDatabase__Group__1 ;
    public final void rule__AstriumDatabase__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:3167:1: ( rule__AstriumDatabase__Group__0__Impl rule__AstriumDatabase__Group__1 )
            // InternalSpellDatabaseParser.g:3168:2: rule__AstriumDatabase__Group__0__Impl rule__AstriumDatabase__Group__1
            {
            pushFollow(FOLLOW_12);
            rule__AstriumDatabase__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AstriumDatabase__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AstriumDatabase__Group__0"


    // $ANTLR start "rule__AstriumDatabase__Group__0__Impl"
    // InternalSpellDatabaseParser.g:3175:1: rule__AstriumDatabase__Group__0__Impl : ( () ) ;
    public final void rule__AstriumDatabase__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:3179:1: ( ( () ) )
            // InternalSpellDatabaseParser.g:3180:1: ( () )
            {
            // InternalSpellDatabaseParser.g:3180:1: ( () )
            // InternalSpellDatabaseParser.g:3181:1: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAstriumDatabaseAccess().getAstriumDatabaseAction_0()); 
            }
            // InternalSpellDatabaseParser.g:3182:1: ()
            // InternalSpellDatabaseParser.g:3184:1: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAstriumDatabaseAccess().getAstriumDatabaseAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AstriumDatabase__Group__0__Impl"


    // $ANTLR start "rule__AstriumDatabase__Group__1"
    // InternalSpellDatabaseParser.g:3194:1: rule__AstriumDatabase__Group__1 : rule__AstriumDatabase__Group__1__Impl rule__AstriumDatabase__Group__2 ;
    public final void rule__AstriumDatabase__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:3198:1: ( rule__AstriumDatabase__Group__1__Impl rule__AstriumDatabase__Group__2 )
            // InternalSpellDatabaseParser.g:3199:2: rule__AstriumDatabase__Group__1__Impl rule__AstriumDatabase__Group__2
            {
            pushFollow(FOLLOW_12);
            rule__AstriumDatabase__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AstriumDatabase__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AstriumDatabase__Group__1"


    // $ANTLR start "rule__AstriumDatabase__Group__1__Impl"
    // InternalSpellDatabaseParser.g:3206:1: rule__AstriumDatabase__Group__1__Impl : ( ( rule__AstriumDatabase__Group_1__0 )* ) ;
    public final void rule__AstriumDatabase__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:3210:1: ( ( ( rule__AstriumDatabase__Group_1__0 )* ) )
            // InternalSpellDatabaseParser.g:3211:1: ( ( rule__AstriumDatabase__Group_1__0 )* )
            {
            // InternalSpellDatabaseParser.g:3211:1: ( ( rule__AstriumDatabase__Group_1__0 )* )
            // InternalSpellDatabaseParser.g:3212:1: ( rule__AstriumDatabase__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAstriumDatabaseAccess().getGroup_1()); 
            }
            // InternalSpellDatabaseParser.g:3213:1: ( rule__AstriumDatabase__Group_1__0 )*
            loop46:
            do {
                int alt46=2;
                int LA46_0 = input.LA(1);

                if ( (LA46_0==RULE_ASTRIUM_COMMENT||LA46_0==RULE_ID) ) {
                    alt46=1;
                }


                switch (alt46) {
            	case 1 :
            	    // InternalSpellDatabaseParser.g:3213:2: rule__AstriumDatabase__Group_1__0
            	    {
            	    pushFollow(FOLLOW_18);
            	    rule__AstriumDatabase__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop46;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAstriumDatabaseAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AstriumDatabase__Group__1__Impl"


    // $ANTLR start "rule__AstriumDatabase__Group__2"
    // InternalSpellDatabaseParser.g:3223:1: rule__AstriumDatabase__Group__2 : rule__AstriumDatabase__Group__2__Impl rule__AstriumDatabase__Group__3 ;
    public final void rule__AstriumDatabase__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:3227:1: ( rule__AstriumDatabase__Group__2__Impl rule__AstriumDatabase__Group__3 )
            // InternalSpellDatabaseParser.g:3228:2: rule__AstriumDatabase__Group__2__Impl rule__AstriumDatabase__Group__3
            {
            pushFollow(FOLLOW_11);
            rule__AstriumDatabase__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AstriumDatabase__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AstriumDatabase__Group__2"


    // $ANTLR start "rule__AstriumDatabase__Group__2__Impl"
    // InternalSpellDatabaseParser.g:3235:1: rule__AstriumDatabase__Group__2__Impl : ( END_FILE_HEADER ) ;
    public final void rule__AstriumDatabase__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:3239:1: ( ( END_FILE_HEADER ) )
            // InternalSpellDatabaseParser.g:3240:1: ( END_FILE_HEADER )
            {
            // InternalSpellDatabaseParser.g:3240:1: ( END_FILE_HEADER )
            // InternalSpellDatabaseParser.g:3241:1: END_FILE_HEADER
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAstriumDatabaseAccess().getEND_FILE_HEADERKeyword_2()); 
            }
            match(input,END_FILE_HEADER,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAstriumDatabaseAccess().getEND_FILE_HEADERKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AstriumDatabase__Group__2__Impl"


    // $ANTLR start "rule__AstriumDatabase__Group__3"
    // InternalSpellDatabaseParser.g:3254:1: rule__AstriumDatabase__Group__3 : rule__AstriumDatabase__Group__3__Impl rule__AstriumDatabase__Group__4 ;
    public final void rule__AstriumDatabase__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:3258:1: ( rule__AstriumDatabase__Group__3__Impl rule__AstriumDatabase__Group__4 )
            // InternalSpellDatabaseParser.g:3259:2: rule__AstriumDatabase__Group__3__Impl rule__AstriumDatabase__Group__4
            {
            pushFollow(FOLLOW_19);
            rule__AstriumDatabase__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AstriumDatabase__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AstriumDatabase__Group__3"


    // $ANTLR start "rule__AstriumDatabase__Group__3__Impl"
    // InternalSpellDatabaseParser.g:3266:1: rule__AstriumDatabase__Group__3__Impl : ( ruleSkipNLAndComments ) ;
    public final void rule__AstriumDatabase__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:3270:1: ( ( ruleSkipNLAndComments ) )
            // InternalSpellDatabaseParser.g:3271:1: ( ruleSkipNLAndComments )
            {
            // InternalSpellDatabaseParser.g:3271:1: ( ruleSkipNLAndComments )
            // InternalSpellDatabaseParser.g:3272:1: ruleSkipNLAndComments
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAstriumDatabaseAccess().getSkipNLAndCommentsParserRuleCall_3()); 
            }
            pushFollow(FOLLOW_2);
            ruleSkipNLAndComments();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAstriumDatabaseAccess().getSkipNLAndCommentsParserRuleCall_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AstriumDatabase__Group__3__Impl"


    // $ANTLR start "rule__AstriumDatabase__Group__4"
    // InternalSpellDatabaseParser.g:3283:1: rule__AstriumDatabase__Group__4 : rule__AstriumDatabase__Group__4__Impl ;
    public final void rule__AstriumDatabase__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:3287:1: ( rule__AstriumDatabase__Group__4__Impl )
            // InternalSpellDatabaseParser.g:3288:2: rule__AstriumDatabase__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AstriumDatabase__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AstriumDatabase__Group__4"


    // $ANTLR start "rule__AstriumDatabase__Group__4__Impl"
    // InternalSpellDatabaseParser.g:3294:1: rule__AstriumDatabase__Group__4__Impl : ( ( rule__AstriumDatabase__Group_4__0 )* ) ;
    public final void rule__AstriumDatabase__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:3298:1: ( ( ( rule__AstriumDatabase__Group_4__0 )* ) )
            // InternalSpellDatabaseParser.g:3299:1: ( ( rule__AstriumDatabase__Group_4__0 )* )
            {
            // InternalSpellDatabaseParser.g:3299:1: ( ( rule__AstriumDatabase__Group_4__0 )* )
            // InternalSpellDatabaseParser.g:3300:1: ( rule__AstriumDatabase__Group_4__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAstriumDatabaseAccess().getGroup_4()); 
            }
            // InternalSpellDatabaseParser.g:3301:1: ( rule__AstriumDatabase__Group_4__0 )*
            loop47:
            do {
                int alt47=2;
                int LA47_0 = input.LA(1);

                if ( (LA47_0==RULE_ASTRIUM_COMMENT||LA47_0==RULE_DOLLAR) ) {
                    alt47=1;
                }


                switch (alt47) {
            	case 1 :
            	    // InternalSpellDatabaseParser.g:3301:2: rule__AstriumDatabase__Group_4__0
            	    {
            	    pushFollow(FOLLOW_20);
            	    rule__AstriumDatabase__Group_4__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop47;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAstriumDatabaseAccess().getGroup_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AstriumDatabase__Group__4__Impl"


    // $ANTLR start "rule__AstriumDatabase__Group_1__0"
    // InternalSpellDatabaseParser.g:3321:1: rule__AstriumDatabase__Group_1__0 : rule__AstriumDatabase__Group_1__0__Impl rule__AstriumDatabase__Group_1__1 ;
    public final void rule__AstriumDatabase__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:3325:1: ( rule__AstriumDatabase__Group_1__0__Impl rule__AstriumDatabase__Group_1__1 )
            // InternalSpellDatabaseParser.g:3326:2: rule__AstriumDatabase__Group_1__0__Impl rule__AstriumDatabase__Group_1__1
            {
            pushFollow(FOLLOW_11);
            rule__AstriumDatabase__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AstriumDatabase__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AstriumDatabase__Group_1__0"


    // $ANTLR start "rule__AstriumDatabase__Group_1__0__Impl"
    // InternalSpellDatabaseParser.g:3333:1: rule__AstriumDatabase__Group_1__0__Impl : ( ( rule__AstriumDatabase__EntriesAssignment_1_0 ) ) ;
    public final void rule__AstriumDatabase__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:3337:1: ( ( ( rule__AstriumDatabase__EntriesAssignment_1_0 ) ) )
            // InternalSpellDatabaseParser.g:3338:1: ( ( rule__AstriumDatabase__EntriesAssignment_1_0 ) )
            {
            // InternalSpellDatabaseParser.g:3338:1: ( ( rule__AstriumDatabase__EntriesAssignment_1_0 ) )
            // InternalSpellDatabaseParser.g:3339:1: ( rule__AstriumDatabase__EntriesAssignment_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAstriumDatabaseAccess().getEntriesAssignment_1_0()); 
            }
            // InternalSpellDatabaseParser.g:3340:1: ( rule__AstriumDatabase__EntriesAssignment_1_0 )
            // InternalSpellDatabaseParser.g:3340:2: rule__AstriumDatabase__EntriesAssignment_1_0
            {
            pushFollow(FOLLOW_2);
            rule__AstriumDatabase__EntriesAssignment_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAstriumDatabaseAccess().getEntriesAssignment_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AstriumDatabase__Group_1__0__Impl"


    // $ANTLR start "rule__AstriumDatabase__Group_1__1"
    // InternalSpellDatabaseParser.g:3350:1: rule__AstriumDatabase__Group_1__1 : rule__AstriumDatabase__Group_1__1__Impl ;
    public final void rule__AstriumDatabase__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:3354:1: ( rule__AstriumDatabase__Group_1__1__Impl )
            // InternalSpellDatabaseParser.g:3355:2: rule__AstriumDatabase__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AstriumDatabase__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AstriumDatabase__Group_1__1"


    // $ANTLR start "rule__AstriumDatabase__Group_1__1__Impl"
    // InternalSpellDatabaseParser.g:3361:1: rule__AstriumDatabase__Group_1__1__Impl : ( ruleSkipNLAndComments ) ;
    public final void rule__AstriumDatabase__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:3365:1: ( ( ruleSkipNLAndComments ) )
            // InternalSpellDatabaseParser.g:3366:1: ( ruleSkipNLAndComments )
            {
            // InternalSpellDatabaseParser.g:3366:1: ( ruleSkipNLAndComments )
            // InternalSpellDatabaseParser.g:3367:1: ruleSkipNLAndComments
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAstriumDatabaseAccess().getSkipNLAndCommentsParserRuleCall_1_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleSkipNLAndComments();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAstriumDatabaseAccess().getSkipNLAndCommentsParserRuleCall_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AstriumDatabase__Group_1__1__Impl"


    // $ANTLR start "rule__AstriumDatabase__Group_4__0"
    // InternalSpellDatabaseParser.g:3382:1: rule__AstriumDatabase__Group_4__0 : rule__AstriumDatabase__Group_4__0__Impl rule__AstriumDatabase__Group_4__1 ;
    public final void rule__AstriumDatabase__Group_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:3386:1: ( rule__AstriumDatabase__Group_4__0__Impl rule__AstriumDatabase__Group_4__1 )
            // InternalSpellDatabaseParser.g:3387:2: rule__AstriumDatabase__Group_4__0__Impl rule__AstriumDatabase__Group_4__1
            {
            pushFollow(FOLLOW_11);
            rule__AstriumDatabase__Group_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AstriumDatabase__Group_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AstriumDatabase__Group_4__0"


    // $ANTLR start "rule__AstriumDatabase__Group_4__0__Impl"
    // InternalSpellDatabaseParser.g:3394:1: rule__AstriumDatabase__Group_4__0__Impl : ( ( rule__AstriumDatabase__EntriesAssignment_4_0 ) ) ;
    public final void rule__AstriumDatabase__Group_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:3398:1: ( ( ( rule__AstriumDatabase__EntriesAssignment_4_0 ) ) )
            // InternalSpellDatabaseParser.g:3399:1: ( ( rule__AstriumDatabase__EntriesAssignment_4_0 ) )
            {
            // InternalSpellDatabaseParser.g:3399:1: ( ( rule__AstriumDatabase__EntriesAssignment_4_0 ) )
            // InternalSpellDatabaseParser.g:3400:1: ( rule__AstriumDatabase__EntriesAssignment_4_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAstriumDatabaseAccess().getEntriesAssignment_4_0()); 
            }
            // InternalSpellDatabaseParser.g:3401:1: ( rule__AstriumDatabase__EntriesAssignment_4_0 )
            // InternalSpellDatabaseParser.g:3401:2: rule__AstriumDatabase__EntriesAssignment_4_0
            {
            pushFollow(FOLLOW_2);
            rule__AstriumDatabase__EntriesAssignment_4_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAstriumDatabaseAccess().getEntriesAssignment_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AstriumDatabase__Group_4__0__Impl"


    // $ANTLR start "rule__AstriumDatabase__Group_4__1"
    // InternalSpellDatabaseParser.g:3411:1: rule__AstriumDatabase__Group_4__1 : rule__AstriumDatabase__Group_4__1__Impl ;
    public final void rule__AstriumDatabase__Group_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:3415:1: ( rule__AstriumDatabase__Group_4__1__Impl )
            // InternalSpellDatabaseParser.g:3416:2: rule__AstriumDatabase__Group_4__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AstriumDatabase__Group_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AstriumDatabase__Group_4__1"


    // $ANTLR start "rule__AstriumDatabase__Group_4__1__Impl"
    // InternalSpellDatabaseParser.g:3422:1: rule__AstriumDatabase__Group_4__1__Impl : ( ruleSkipNLAndComments ) ;
    public final void rule__AstriumDatabase__Group_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:3426:1: ( ( ruleSkipNLAndComments ) )
            // InternalSpellDatabaseParser.g:3427:1: ( ruleSkipNLAndComments )
            {
            // InternalSpellDatabaseParser.g:3427:1: ( ruleSkipNLAndComments )
            // InternalSpellDatabaseParser.g:3428:1: ruleSkipNLAndComments
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAstriumDatabaseAccess().getSkipNLAndCommentsParserRuleCall_4_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleSkipNLAndComments();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAstriumDatabaseAccess().getSkipNLAndCommentsParserRuleCall_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AstriumDatabase__Group_4__1__Impl"


    // $ANTLR start "rule__AstriumVariableEntry__Group_0__0"
    // InternalSpellDatabaseParser.g:3443:1: rule__AstriumVariableEntry__Group_0__0 : rule__AstriumVariableEntry__Group_0__0__Impl rule__AstriumVariableEntry__Group_0__1 ;
    public final void rule__AstriumVariableEntry__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:3447:1: ( rule__AstriumVariableEntry__Group_0__0__Impl rule__AstriumVariableEntry__Group_0__1 )
            // InternalSpellDatabaseParser.g:3448:2: rule__AstriumVariableEntry__Group_0__0__Impl rule__AstriumVariableEntry__Group_0__1
            {
            pushFollow(FOLLOW_21);
            rule__AstriumVariableEntry__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AstriumVariableEntry__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AstriumVariableEntry__Group_0__0"


    // $ANTLR start "rule__AstriumVariableEntry__Group_0__0__Impl"
    // InternalSpellDatabaseParser.g:3455:1: rule__AstriumVariableEntry__Group_0__0__Impl : ( () ) ;
    public final void rule__AstriumVariableEntry__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:3459:1: ( ( () ) )
            // InternalSpellDatabaseParser.g:3460:1: ( () )
            {
            // InternalSpellDatabaseParser.g:3460:1: ( () )
            // InternalSpellDatabaseParser.g:3461:1: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAstriumVariableEntryAccess().getAstriumVariableCommentAction_0_0()); 
            }
            // InternalSpellDatabaseParser.g:3462:1: ()
            // InternalSpellDatabaseParser.g:3464:1: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAstriumVariableEntryAccess().getAstriumVariableCommentAction_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AstriumVariableEntry__Group_0__0__Impl"


    // $ANTLR start "rule__AstriumVariableEntry__Group_0__1"
    // InternalSpellDatabaseParser.g:3474:1: rule__AstriumVariableEntry__Group_0__1 : rule__AstriumVariableEntry__Group_0__1__Impl ;
    public final void rule__AstriumVariableEntry__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:3478:1: ( rule__AstriumVariableEntry__Group_0__1__Impl )
            // InternalSpellDatabaseParser.g:3479:2: rule__AstriumVariableEntry__Group_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AstriumVariableEntry__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AstriumVariableEntry__Group_0__1"


    // $ANTLR start "rule__AstriumVariableEntry__Group_0__1__Impl"
    // InternalSpellDatabaseParser.g:3485:1: rule__AstriumVariableEntry__Group_0__1__Impl : ( ( rule__AstriumVariableEntry__CommentAssignment_0_1 ) ) ;
    public final void rule__AstriumVariableEntry__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:3489:1: ( ( ( rule__AstriumVariableEntry__CommentAssignment_0_1 ) ) )
            // InternalSpellDatabaseParser.g:3490:1: ( ( rule__AstriumVariableEntry__CommentAssignment_0_1 ) )
            {
            // InternalSpellDatabaseParser.g:3490:1: ( ( rule__AstriumVariableEntry__CommentAssignment_0_1 ) )
            // InternalSpellDatabaseParser.g:3491:1: ( rule__AstriumVariableEntry__CommentAssignment_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAstriumVariableEntryAccess().getCommentAssignment_0_1()); 
            }
            // InternalSpellDatabaseParser.g:3492:1: ( rule__AstriumVariableEntry__CommentAssignment_0_1 )
            // InternalSpellDatabaseParser.g:3492:2: rule__AstriumVariableEntry__CommentAssignment_0_1
            {
            pushFollow(FOLLOW_2);
            rule__AstriumVariableEntry__CommentAssignment_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAstriumVariableEntryAccess().getCommentAssignment_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AstriumVariableEntry__Group_0__1__Impl"


    // $ANTLR start "rule__AstriumVariableEntry__Group_1__0"
    // InternalSpellDatabaseParser.g:3506:1: rule__AstriumVariableEntry__Group_1__0 : rule__AstriumVariableEntry__Group_1__0__Impl rule__AstriumVariableEntry__Group_1__1 ;
    public final void rule__AstriumVariableEntry__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:3510:1: ( rule__AstriumVariableEntry__Group_1__0__Impl rule__AstriumVariableEntry__Group_1__1 )
            // InternalSpellDatabaseParser.g:3511:2: rule__AstriumVariableEntry__Group_1__0__Impl rule__AstriumVariableEntry__Group_1__1
            {
            pushFollow(FOLLOW_19);
            rule__AstriumVariableEntry__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AstriumVariableEntry__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AstriumVariableEntry__Group_1__0"


    // $ANTLR start "rule__AstriumVariableEntry__Group_1__0__Impl"
    // InternalSpellDatabaseParser.g:3518:1: rule__AstriumVariableEntry__Group_1__0__Impl : ( () ) ;
    public final void rule__AstriumVariableEntry__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:3522:1: ( ( () ) )
            // InternalSpellDatabaseParser.g:3523:1: ( () )
            {
            // InternalSpellDatabaseParser.g:3523:1: ( () )
            // InternalSpellDatabaseParser.g:3524:1: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAstriumVariableEntryAccess().getAstriumVariableEntryAction_1_0()); 
            }
            // InternalSpellDatabaseParser.g:3525:1: ()
            // InternalSpellDatabaseParser.g:3527:1: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAstriumVariableEntryAccess().getAstriumVariableEntryAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AstriumVariableEntry__Group_1__0__Impl"


    // $ANTLR start "rule__AstriumVariableEntry__Group_1__1"
    // InternalSpellDatabaseParser.g:3537:1: rule__AstriumVariableEntry__Group_1__1 : rule__AstriumVariableEntry__Group_1__1__Impl rule__AstriumVariableEntry__Group_1__2 ;
    public final void rule__AstriumVariableEntry__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:3541:1: ( rule__AstriumVariableEntry__Group_1__1__Impl rule__AstriumVariableEntry__Group_1__2 )
            // InternalSpellDatabaseParser.g:3542:2: rule__AstriumVariableEntry__Group_1__1__Impl rule__AstriumVariableEntry__Group_1__2
            {
            pushFollow(FOLLOW_22);
            rule__AstriumVariableEntry__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AstriumVariableEntry__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AstriumVariableEntry__Group_1__1"


    // $ANTLR start "rule__AstriumVariableEntry__Group_1__1__Impl"
    // InternalSpellDatabaseParser.g:3549:1: rule__AstriumVariableEntry__Group_1__1__Impl : ( RULE_DOLLAR ) ;
    public final void rule__AstriumVariableEntry__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:3553:1: ( ( RULE_DOLLAR ) )
            // InternalSpellDatabaseParser.g:3554:1: ( RULE_DOLLAR )
            {
            // InternalSpellDatabaseParser.g:3554:1: ( RULE_DOLLAR )
            // InternalSpellDatabaseParser.g:3555:1: RULE_DOLLAR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAstriumVariableEntryAccess().getDOLLARTerminalRuleCall_1_1()); 
            }
            match(input,RULE_DOLLAR,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAstriumVariableEntryAccess().getDOLLARTerminalRuleCall_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AstriumVariableEntry__Group_1__1__Impl"


    // $ANTLR start "rule__AstriumVariableEntry__Group_1__2"
    // InternalSpellDatabaseParser.g:3566:1: rule__AstriumVariableEntry__Group_1__2 : rule__AstriumVariableEntry__Group_1__2__Impl rule__AstriumVariableEntry__Group_1__3 ;
    public final void rule__AstriumVariableEntry__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:3570:1: ( rule__AstriumVariableEntry__Group_1__2__Impl rule__AstriumVariableEntry__Group_1__3 )
            // InternalSpellDatabaseParser.g:3571:2: rule__AstriumVariableEntry__Group_1__2__Impl rule__AstriumVariableEntry__Group_1__3
            {
            pushFollow(FOLLOW_23);
            rule__AstriumVariableEntry__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AstriumVariableEntry__Group_1__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AstriumVariableEntry__Group_1__2"


    // $ANTLR start "rule__AstriumVariableEntry__Group_1__2__Impl"
    // InternalSpellDatabaseParser.g:3578:1: rule__AstriumVariableEntry__Group_1__2__Impl : ( ( rule__AstriumVariableEntry__NameAssignment_1_2 ) ) ;
    public final void rule__AstriumVariableEntry__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:3582:1: ( ( ( rule__AstriumVariableEntry__NameAssignment_1_2 ) ) )
            // InternalSpellDatabaseParser.g:3583:1: ( ( rule__AstriumVariableEntry__NameAssignment_1_2 ) )
            {
            // InternalSpellDatabaseParser.g:3583:1: ( ( rule__AstriumVariableEntry__NameAssignment_1_2 ) )
            // InternalSpellDatabaseParser.g:3584:1: ( rule__AstriumVariableEntry__NameAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAstriumVariableEntryAccess().getNameAssignment_1_2()); 
            }
            // InternalSpellDatabaseParser.g:3585:1: ( rule__AstriumVariableEntry__NameAssignment_1_2 )
            // InternalSpellDatabaseParser.g:3585:2: rule__AstriumVariableEntry__NameAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__AstriumVariableEntry__NameAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAstriumVariableEntryAccess().getNameAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AstriumVariableEntry__Group_1__2__Impl"


    // $ANTLR start "rule__AstriumVariableEntry__Group_1__3"
    // InternalSpellDatabaseParser.g:3595:1: rule__AstriumVariableEntry__Group_1__3 : rule__AstriumVariableEntry__Group_1__3__Impl rule__AstriumVariableEntry__Group_1__4 ;
    public final void rule__AstriumVariableEntry__Group_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:3599:1: ( rule__AstriumVariableEntry__Group_1__3__Impl rule__AstriumVariableEntry__Group_1__4 )
            // InternalSpellDatabaseParser.g:3600:2: rule__AstriumVariableEntry__Group_1__3__Impl rule__AstriumVariableEntry__Group_1__4
            {
            pushFollow(FOLLOW_24);
            rule__AstriumVariableEntry__Group_1__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AstriumVariableEntry__Group_1__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AstriumVariableEntry__Group_1__3"


    // $ANTLR start "rule__AstriumVariableEntry__Group_1__3__Impl"
    // InternalSpellDatabaseParser.g:3607:1: rule__AstriumVariableEntry__Group_1__3__Impl : ( RULE_COLON ) ;
    public final void rule__AstriumVariableEntry__Group_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:3611:1: ( ( RULE_COLON ) )
            // InternalSpellDatabaseParser.g:3612:1: ( RULE_COLON )
            {
            // InternalSpellDatabaseParser.g:3612:1: ( RULE_COLON )
            // InternalSpellDatabaseParser.g:3613:1: RULE_COLON
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAstriumVariableEntryAccess().getCOLONTerminalRuleCall_1_3()); 
            }
            match(input,RULE_COLON,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAstriumVariableEntryAccess().getCOLONTerminalRuleCall_1_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AstriumVariableEntry__Group_1__3__Impl"


    // $ANTLR start "rule__AstriumVariableEntry__Group_1__4"
    // InternalSpellDatabaseParser.g:3624:1: rule__AstriumVariableEntry__Group_1__4 : rule__AstriumVariableEntry__Group_1__4__Impl rule__AstriumVariableEntry__Group_1__5 ;
    public final void rule__AstriumVariableEntry__Group_1__4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:3628:1: ( rule__AstriumVariableEntry__Group_1__4__Impl rule__AstriumVariableEntry__Group_1__5 )
            // InternalSpellDatabaseParser.g:3629:2: rule__AstriumVariableEntry__Group_1__4__Impl rule__AstriumVariableEntry__Group_1__5
            {
            pushFollow(FOLLOW_25);
            rule__AstriumVariableEntry__Group_1__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AstriumVariableEntry__Group_1__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AstriumVariableEntry__Group_1__4"


    // $ANTLR start "rule__AstriumVariableEntry__Group_1__4__Impl"
    // InternalSpellDatabaseParser.g:3636:1: rule__AstriumVariableEntry__Group_1__4__Impl : ( EqualsSign ) ;
    public final void rule__AstriumVariableEntry__Group_1__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:3640:1: ( ( EqualsSign ) )
            // InternalSpellDatabaseParser.g:3641:1: ( EqualsSign )
            {
            // InternalSpellDatabaseParser.g:3641:1: ( EqualsSign )
            // InternalSpellDatabaseParser.g:3642:1: EqualsSign
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAstriumVariableEntryAccess().getEqualsSignKeyword_1_4()); 
            }
            match(input,EqualsSign,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAstriumVariableEntryAccess().getEqualsSignKeyword_1_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AstriumVariableEntry__Group_1__4__Impl"


    // $ANTLR start "rule__AstriumVariableEntry__Group_1__5"
    // InternalSpellDatabaseParser.g:3655:1: rule__AstriumVariableEntry__Group_1__5 : rule__AstriumVariableEntry__Group_1__5__Impl ;
    public final void rule__AstriumVariableEntry__Group_1__5() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:3659:1: ( rule__AstriumVariableEntry__Group_1__5__Impl )
            // InternalSpellDatabaseParser.g:3660:2: rule__AstriumVariableEntry__Group_1__5__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AstriumVariableEntry__Group_1__5__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AstriumVariableEntry__Group_1__5"


    // $ANTLR start "rule__AstriumVariableEntry__Group_1__5__Impl"
    // InternalSpellDatabaseParser.g:3666:1: rule__AstriumVariableEntry__Group_1__5__Impl : ( ( rule__AstriumVariableEntry__Alternatives_1_5 )? ) ;
    public final void rule__AstriumVariableEntry__Group_1__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:3670:1: ( ( ( rule__AstriumVariableEntry__Alternatives_1_5 )? ) )
            // InternalSpellDatabaseParser.g:3671:1: ( ( rule__AstriumVariableEntry__Alternatives_1_5 )? )
            {
            // InternalSpellDatabaseParser.g:3671:1: ( ( rule__AstriumVariableEntry__Alternatives_1_5 )? )
            // InternalSpellDatabaseParser.g:3672:1: ( rule__AstriumVariableEntry__Alternatives_1_5 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAstriumVariableEntryAccess().getAlternatives_1_5()); 
            }
            // InternalSpellDatabaseParser.g:3673:1: ( rule__AstriumVariableEntry__Alternatives_1_5 )?
            int alt48=2;
            alt48 = dfa48.predict(input);
            switch (alt48) {
                case 1 :
                    // InternalSpellDatabaseParser.g:3673:2: rule__AstriumVariableEntry__Alternatives_1_5
                    {
                    pushFollow(FOLLOW_2);
                    rule__AstriumVariableEntry__Alternatives_1_5();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAstriumVariableEntryAccess().getAlternatives_1_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AstriumVariableEntry__Group_1__5__Impl"


    // $ANTLR start "rule__AstriumHeaderEntry__Group_0__0"
    // InternalSpellDatabaseParser.g:3695:1: rule__AstriumHeaderEntry__Group_0__0 : rule__AstriumHeaderEntry__Group_0__0__Impl rule__AstriumHeaderEntry__Group_0__1 ;
    public final void rule__AstriumHeaderEntry__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:3699:1: ( rule__AstriumHeaderEntry__Group_0__0__Impl rule__AstriumHeaderEntry__Group_0__1 )
            // InternalSpellDatabaseParser.g:3700:2: rule__AstriumHeaderEntry__Group_0__0__Impl rule__AstriumHeaderEntry__Group_0__1
            {
            pushFollow(FOLLOW_21);
            rule__AstriumHeaderEntry__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AstriumHeaderEntry__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AstriumHeaderEntry__Group_0__0"


    // $ANTLR start "rule__AstriumHeaderEntry__Group_0__0__Impl"
    // InternalSpellDatabaseParser.g:3707:1: rule__AstriumHeaderEntry__Group_0__0__Impl : ( () ) ;
    public final void rule__AstriumHeaderEntry__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:3711:1: ( ( () ) )
            // InternalSpellDatabaseParser.g:3712:1: ( () )
            {
            // InternalSpellDatabaseParser.g:3712:1: ( () )
            // InternalSpellDatabaseParser.g:3713:1: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAstriumHeaderEntryAccess().getAstriumHeaderCommentAction_0_0()); 
            }
            // InternalSpellDatabaseParser.g:3714:1: ()
            // InternalSpellDatabaseParser.g:3716:1: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAstriumHeaderEntryAccess().getAstriumHeaderCommentAction_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AstriumHeaderEntry__Group_0__0__Impl"


    // $ANTLR start "rule__AstriumHeaderEntry__Group_0__1"
    // InternalSpellDatabaseParser.g:3726:1: rule__AstriumHeaderEntry__Group_0__1 : rule__AstriumHeaderEntry__Group_0__1__Impl ;
    public final void rule__AstriumHeaderEntry__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:3730:1: ( rule__AstriumHeaderEntry__Group_0__1__Impl )
            // InternalSpellDatabaseParser.g:3731:2: rule__AstriumHeaderEntry__Group_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AstriumHeaderEntry__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AstriumHeaderEntry__Group_0__1"


    // $ANTLR start "rule__AstriumHeaderEntry__Group_0__1__Impl"
    // InternalSpellDatabaseParser.g:3737:1: rule__AstriumHeaderEntry__Group_0__1__Impl : ( ( rule__AstriumHeaderEntry__CommentAssignment_0_1 ) ) ;
    public final void rule__AstriumHeaderEntry__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:3741:1: ( ( ( rule__AstriumHeaderEntry__CommentAssignment_0_1 ) ) )
            // InternalSpellDatabaseParser.g:3742:1: ( ( rule__AstriumHeaderEntry__CommentAssignment_0_1 ) )
            {
            // InternalSpellDatabaseParser.g:3742:1: ( ( rule__AstriumHeaderEntry__CommentAssignment_0_1 ) )
            // InternalSpellDatabaseParser.g:3743:1: ( rule__AstriumHeaderEntry__CommentAssignment_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAstriumHeaderEntryAccess().getCommentAssignment_0_1()); 
            }
            // InternalSpellDatabaseParser.g:3744:1: ( rule__AstriumHeaderEntry__CommentAssignment_0_1 )
            // InternalSpellDatabaseParser.g:3744:2: rule__AstriumHeaderEntry__CommentAssignment_0_1
            {
            pushFollow(FOLLOW_2);
            rule__AstriumHeaderEntry__CommentAssignment_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAstriumHeaderEntryAccess().getCommentAssignment_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AstriumHeaderEntry__Group_0__1__Impl"


    // $ANTLR start "rule__AstriumHeaderEntry__Group_1__0"
    // InternalSpellDatabaseParser.g:3758:1: rule__AstriumHeaderEntry__Group_1__0 : rule__AstriumHeaderEntry__Group_1__0__Impl rule__AstriumHeaderEntry__Group_1__1 ;
    public final void rule__AstriumHeaderEntry__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:3762:1: ( rule__AstriumHeaderEntry__Group_1__0__Impl rule__AstriumHeaderEntry__Group_1__1 )
            // InternalSpellDatabaseParser.g:3763:2: rule__AstriumHeaderEntry__Group_1__0__Impl rule__AstriumHeaderEntry__Group_1__1
            {
            pushFollow(FOLLOW_22);
            rule__AstriumHeaderEntry__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AstriumHeaderEntry__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AstriumHeaderEntry__Group_1__0"


    // $ANTLR start "rule__AstriumHeaderEntry__Group_1__0__Impl"
    // InternalSpellDatabaseParser.g:3770:1: rule__AstriumHeaderEntry__Group_1__0__Impl : ( () ) ;
    public final void rule__AstriumHeaderEntry__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:3774:1: ( ( () ) )
            // InternalSpellDatabaseParser.g:3775:1: ( () )
            {
            // InternalSpellDatabaseParser.g:3775:1: ( () )
            // InternalSpellDatabaseParser.g:3776:1: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAstriumHeaderEntryAccess().getAstriumHeaderEntryAction_1_0()); 
            }
            // InternalSpellDatabaseParser.g:3777:1: ()
            // InternalSpellDatabaseParser.g:3779:1: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAstriumHeaderEntryAccess().getAstriumHeaderEntryAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AstriumHeaderEntry__Group_1__0__Impl"


    // $ANTLR start "rule__AstriumHeaderEntry__Group_1__1"
    // InternalSpellDatabaseParser.g:3789:1: rule__AstriumHeaderEntry__Group_1__1 : rule__AstriumHeaderEntry__Group_1__1__Impl rule__AstriumHeaderEntry__Group_1__2 ;
    public final void rule__AstriumHeaderEntry__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:3793:1: ( rule__AstriumHeaderEntry__Group_1__1__Impl rule__AstriumHeaderEntry__Group_1__2 )
            // InternalSpellDatabaseParser.g:3794:2: rule__AstriumHeaderEntry__Group_1__1__Impl rule__AstriumHeaderEntry__Group_1__2
            {
            pushFollow(FOLLOW_23);
            rule__AstriumHeaderEntry__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AstriumHeaderEntry__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AstriumHeaderEntry__Group_1__1"


    // $ANTLR start "rule__AstriumHeaderEntry__Group_1__1__Impl"
    // InternalSpellDatabaseParser.g:3801:1: rule__AstriumHeaderEntry__Group_1__1__Impl : ( ( rule__AstriumHeaderEntry__NameAssignment_1_1 ) ) ;
    public final void rule__AstriumHeaderEntry__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:3805:1: ( ( ( rule__AstriumHeaderEntry__NameAssignment_1_1 ) ) )
            // InternalSpellDatabaseParser.g:3806:1: ( ( rule__AstriumHeaderEntry__NameAssignment_1_1 ) )
            {
            // InternalSpellDatabaseParser.g:3806:1: ( ( rule__AstriumHeaderEntry__NameAssignment_1_1 ) )
            // InternalSpellDatabaseParser.g:3807:1: ( rule__AstriumHeaderEntry__NameAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAstriumHeaderEntryAccess().getNameAssignment_1_1()); 
            }
            // InternalSpellDatabaseParser.g:3808:1: ( rule__AstriumHeaderEntry__NameAssignment_1_1 )
            // InternalSpellDatabaseParser.g:3808:2: rule__AstriumHeaderEntry__NameAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__AstriumHeaderEntry__NameAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAstriumHeaderEntryAccess().getNameAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AstriumHeaderEntry__Group_1__1__Impl"


    // $ANTLR start "rule__AstriumHeaderEntry__Group_1__2"
    // InternalSpellDatabaseParser.g:3818:1: rule__AstriumHeaderEntry__Group_1__2 : rule__AstriumHeaderEntry__Group_1__2__Impl rule__AstriumHeaderEntry__Group_1__3 ;
    public final void rule__AstriumHeaderEntry__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:3822:1: ( rule__AstriumHeaderEntry__Group_1__2__Impl rule__AstriumHeaderEntry__Group_1__3 )
            // InternalSpellDatabaseParser.g:3823:2: rule__AstriumHeaderEntry__Group_1__2__Impl rule__AstriumHeaderEntry__Group_1__3
            {
            pushFollow(FOLLOW_24);
            rule__AstriumHeaderEntry__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AstriumHeaderEntry__Group_1__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AstriumHeaderEntry__Group_1__2"


    // $ANTLR start "rule__AstriumHeaderEntry__Group_1__2__Impl"
    // InternalSpellDatabaseParser.g:3830:1: rule__AstriumHeaderEntry__Group_1__2__Impl : ( RULE_COLON ) ;
    public final void rule__AstriumHeaderEntry__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:3834:1: ( ( RULE_COLON ) )
            // InternalSpellDatabaseParser.g:3835:1: ( RULE_COLON )
            {
            // InternalSpellDatabaseParser.g:3835:1: ( RULE_COLON )
            // InternalSpellDatabaseParser.g:3836:1: RULE_COLON
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAstriumHeaderEntryAccess().getCOLONTerminalRuleCall_1_2()); 
            }
            match(input,RULE_COLON,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAstriumHeaderEntryAccess().getCOLONTerminalRuleCall_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AstriumHeaderEntry__Group_1__2__Impl"


    // $ANTLR start "rule__AstriumHeaderEntry__Group_1__3"
    // InternalSpellDatabaseParser.g:3847:1: rule__AstriumHeaderEntry__Group_1__3 : rule__AstriumHeaderEntry__Group_1__3__Impl rule__AstriumHeaderEntry__Group_1__4 ;
    public final void rule__AstriumHeaderEntry__Group_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:3851:1: ( rule__AstriumHeaderEntry__Group_1__3__Impl rule__AstriumHeaderEntry__Group_1__4 )
            // InternalSpellDatabaseParser.g:3852:2: rule__AstriumHeaderEntry__Group_1__3__Impl rule__AstriumHeaderEntry__Group_1__4
            {
            pushFollow(FOLLOW_25);
            rule__AstriumHeaderEntry__Group_1__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AstriumHeaderEntry__Group_1__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AstriumHeaderEntry__Group_1__3"


    // $ANTLR start "rule__AstriumHeaderEntry__Group_1__3__Impl"
    // InternalSpellDatabaseParser.g:3859:1: rule__AstriumHeaderEntry__Group_1__3__Impl : ( EqualsSign ) ;
    public final void rule__AstriumHeaderEntry__Group_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:3863:1: ( ( EqualsSign ) )
            // InternalSpellDatabaseParser.g:3864:1: ( EqualsSign )
            {
            // InternalSpellDatabaseParser.g:3864:1: ( EqualsSign )
            // InternalSpellDatabaseParser.g:3865:1: EqualsSign
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAstriumHeaderEntryAccess().getEqualsSignKeyword_1_3()); 
            }
            match(input,EqualsSign,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAstriumHeaderEntryAccess().getEqualsSignKeyword_1_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AstriumHeaderEntry__Group_1__3__Impl"


    // $ANTLR start "rule__AstriumHeaderEntry__Group_1__4"
    // InternalSpellDatabaseParser.g:3878:1: rule__AstriumHeaderEntry__Group_1__4 : rule__AstriumHeaderEntry__Group_1__4__Impl ;
    public final void rule__AstriumHeaderEntry__Group_1__4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:3882:1: ( rule__AstriumHeaderEntry__Group_1__4__Impl )
            // InternalSpellDatabaseParser.g:3883:2: rule__AstriumHeaderEntry__Group_1__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AstriumHeaderEntry__Group_1__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AstriumHeaderEntry__Group_1__4"


    // $ANTLR start "rule__AstriumHeaderEntry__Group_1__4__Impl"
    // InternalSpellDatabaseParser.g:3889:1: rule__AstriumHeaderEntry__Group_1__4__Impl : ( ( rule__AstriumHeaderEntry__Alternatives_1_4 )? ) ;
    public final void rule__AstriumHeaderEntry__Group_1__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:3893:1: ( ( ( rule__AstriumHeaderEntry__Alternatives_1_4 )? ) )
            // InternalSpellDatabaseParser.g:3894:1: ( ( rule__AstriumHeaderEntry__Alternatives_1_4 )? )
            {
            // InternalSpellDatabaseParser.g:3894:1: ( ( rule__AstriumHeaderEntry__Alternatives_1_4 )? )
            // InternalSpellDatabaseParser.g:3895:1: ( rule__AstriumHeaderEntry__Alternatives_1_4 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAstriumHeaderEntryAccess().getAlternatives_1_4()); 
            }
            // InternalSpellDatabaseParser.g:3896:1: ( rule__AstriumHeaderEntry__Alternatives_1_4 )?
            int alt49=2;
            alt49 = dfa49.predict(input);
            switch (alt49) {
                case 1 :
                    // InternalSpellDatabaseParser.g:3896:2: rule__AstriumHeaderEntry__Alternatives_1_4
                    {
                    pushFollow(FOLLOW_2);
                    rule__AstriumHeaderEntry__Alternatives_1_4();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAstriumHeaderEntryAccess().getAlternatives_1_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AstriumHeaderEntry__Group_1__4__Impl"


    // $ANTLR start "rule__SkipNLAndComments2__Group__0"
    // InternalSpellDatabaseParser.g:3916:1: rule__SkipNLAndComments2__Group__0 : rule__SkipNLAndComments2__Group__0__Impl rule__SkipNLAndComments2__Group__1 ;
    public final void rule__SkipNLAndComments2__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:3920:1: ( rule__SkipNLAndComments2__Group__0__Impl rule__SkipNLAndComments2__Group__1 )
            // InternalSpellDatabaseParser.g:3921:2: rule__SkipNLAndComments2__Group__0__Impl rule__SkipNLAndComments2__Group__1
            {
            pushFollow(FOLLOW_11);
            rule__SkipNLAndComments2__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SkipNLAndComments2__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SkipNLAndComments2__Group__0"


    // $ANTLR start "rule__SkipNLAndComments2__Group__0__Impl"
    // InternalSpellDatabaseParser.g:3928:1: rule__SkipNLAndComments2__Group__0__Impl : ( ( ( RULE_NL ) ) ( ( RULE_NL )* ) ) ;
    public final void rule__SkipNLAndComments2__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:3932:1: ( ( ( ( RULE_NL ) ) ( ( RULE_NL )* ) ) )
            // InternalSpellDatabaseParser.g:3933:1: ( ( ( RULE_NL ) ) ( ( RULE_NL )* ) )
            {
            // InternalSpellDatabaseParser.g:3933:1: ( ( ( RULE_NL ) ) ( ( RULE_NL )* ) )
            // InternalSpellDatabaseParser.g:3934:1: ( ( RULE_NL ) ) ( ( RULE_NL )* )
            {
            // InternalSpellDatabaseParser.g:3934:1: ( ( RULE_NL ) )
            // InternalSpellDatabaseParser.g:3935:1: ( RULE_NL )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSkipNLAndComments2Access().getNLTerminalRuleCall_0()); 
            }
            // InternalSpellDatabaseParser.g:3936:1: ( RULE_NL )
            // InternalSpellDatabaseParser.g:3936:3: RULE_NL
            {
            match(input,RULE_NL,FOLLOW_14); if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSkipNLAndComments2Access().getNLTerminalRuleCall_0()); 
            }

            }

            // InternalSpellDatabaseParser.g:3939:1: ( ( RULE_NL )* )
            // InternalSpellDatabaseParser.g:3940:1: ( RULE_NL )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSkipNLAndComments2Access().getNLTerminalRuleCall_0()); 
            }
            // InternalSpellDatabaseParser.g:3941:1: ( RULE_NL )*
            loop50:
            do {
                int alt50=2;
                alt50 = dfa50.predict(input);
                switch (alt50) {
            	case 1 :
            	    // InternalSpellDatabaseParser.g:3941:3: RULE_NL
            	    {
            	    match(input,RULE_NL,FOLLOW_14); if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop50;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSkipNLAndComments2Access().getNLTerminalRuleCall_0()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SkipNLAndComments2__Group__0__Impl"


    // $ANTLR start "rule__SkipNLAndComments2__Group__1"
    // InternalSpellDatabaseParser.g:3952:1: rule__SkipNLAndComments2__Group__1 : rule__SkipNLAndComments2__Group__1__Impl ;
    public final void rule__SkipNLAndComments2__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:3956:1: ( rule__SkipNLAndComments2__Group__1__Impl )
            // InternalSpellDatabaseParser.g:3957:2: rule__SkipNLAndComments2__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SkipNLAndComments2__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SkipNLAndComments2__Group__1"


    // $ANTLR start "rule__SkipNLAndComments2__Group__1__Impl"
    // InternalSpellDatabaseParser.g:3963:1: rule__SkipNLAndComments2__Group__1__Impl : ( ( ruleSkipNLAndComments ) ) ;
    public final void rule__SkipNLAndComments2__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:3967:1: ( ( ( ruleSkipNLAndComments ) ) )
            // InternalSpellDatabaseParser.g:3968:1: ( ( ruleSkipNLAndComments ) )
            {
            // InternalSpellDatabaseParser.g:3968:1: ( ( ruleSkipNLAndComments ) )
            // InternalSpellDatabaseParser.g:3969:1: ( ruleSkipNLAndComments )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSkipNLAndComments2Access().getSkipNLAndCommentsParserRuleCall_1()); 
            }
            // InternalSpellDatabaseParser.g:3970:1: ( ruleSkipNLAndComments )
            // InternalSpellDatabaseParser.g:3970:3: ruleSkipNLAndComments
            {
            pushFollow(FOLLOW_2);
            ruleSkipNLAndComments();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSkipNLAndComments2Access().getSkipNLAndCommentsParserRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SkipNLAndComments2__Group__1__Impl"


    // $ANTLR start "rule__CSVCommand__Group__0"
    // InternalSpellDatabaseParser.g:3984:1: rule__CSVCommand__Group__0 : rule__CSVCommand__Group__0__Impl rule__CSVCommand__Group__1 ;
    public final void rule__CSVCommand__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:3988:1: ( rule__CSVCommand__Group__0__Impl rule__CSVCommand__Group__1 )
            // InternalSpellDatabaseParser.g:3989:2: rule__CSVCommand__Group__0__Impl rule__CSVCommand__Group__1
            {
            pushFollow(FOLLOW_26);
            rule__CSVCommand__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__CSVCommand__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CSVCommand__Group__0"


    // $ANTLR start "rule__CSVCommand__Group__0__Impl"
    // InternalSpellDatabaseParser.g:3996:1: rule__CSVCommand__Group__0__Impl : ( RULE_CMD ) ;
    public final void rule__CSVCommand__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:4000:1: ( ( RULE_CMD ) )
            // InternalSpellDatabaseParser.g:4001:1: ( RULE_CMD )
            {
            // InternalSpellDatabaseParser.g:4001:1: ( RULE_CMD )
            // InternalSpellDatabaseParser.g:4002:1: RULE_CMD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCSVCommandAccess().getCMDTerminalRuleCall_0()); 
            }
            match(input,RULE_CMD,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCSVCommandAccess().getCMDTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CSVCommand__Group__0__Impl"


    // $ANTLR start "rule__CSVCommand__Group__1"
    // InternalSpellDatabaseParser.g:4013:1: rule__CSVCommand__Group__1 : rule__CSVCommand__Group__1__Impl rule__CSVCommand__Group__2 ;
    public final void rule__CSVCommand__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:4017:1: ( rule__CSVCommand__Group__1__Impl rule__CSVCommand__Group__2 )
            // InternalSpellDatabaseParser.g:4018:2: rule__CSVCommand__Group__1__Impl rule__CSVCommand__Group__2
            {
            pushFollow(FOLLOW_27);
            rule__CSVCommand__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__CSVCommand__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CSVCommand__Group__1"


    // $ANTLR start "rule__CSVCommand__Group__1__Impl"
    // InternalSpellDatabaseParser.g:4025:1: rule__CSVCommand__Group__1__Impl : ( Comma ) ;
    public final void rule__CSVCommand__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:4029:1: ( ( Comma ) )
            // InternalSpellDatabaseParser.g:4030:1: ( Comma )
            {
            // InternalSpellDatabaseParser.g:4030:1: ( Comma )
            // InternalSpellDatabaseParser.g:4031:1: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCSVCommandAccess().getCommaKeyword_1()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCSVCommandAccess().getCommaKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CSVCommand__Group__1__Impl"


    // $ANTLR start "rule__CSVCommand__Group__2"
    // InternalSpellDatabaseParser.g:4044:1: rule__CSVCommand__Group__2 : rule__CSVCommand__Group__2__Impl rule__CSVCommand__Group__3 ;
    public final void rule__CSVCommand__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:4048:1: ( rule__CSVCommand__Group__2__Impl rule__CSVCommand__Group__3 )
            // InternalSpellDatabaseParser.g:4049:2: rule__CSVCommand__Group__2__Impl rule__CSVCommand__Group__3
            {
            pushFollow(FOLLOW_26);
            rule__CSVCommand__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__CSVCommand__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CSVCommand__Group__2"


    // $ANTLR start "rule__CSVCommand__Group__2__Impl"
    // InternalSpellDatabaseParser.g:4056:1: rule__CSVCommand__Group__2__Impl : ( ( rule__CSVCommand__CommandAssignment_2 ) ) ;
    public final void rule__CSVCommand__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:4060:1: ( ( ( rule__CSVCommand__CommandAssignment_2 ) ) )
            // InternalSpellDatabaseParser.g:4061:1: ( ( rule__CSVCommand__CommandAssignment_2 ) )
            {
            // InternalSpellDatabaseParser.g:4061:1: ( ( rule__CSVCommand__CommandAssignment_2 ) )
            // InternalSpellDatabaseParser.g:4062:1: ( rule__CSVCommand__CommandAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCSVCommandAccess().getCommandAssignment_2()); 
            }
            // InternalSpellDatabaseParser.g:4063:1: ( rule__CSVCommand__CommandAssignment_2 )
            // InternalSpellDatabaseParser.g:4063:2: rule__CSVCommand__CommandAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__CSVCommand__CommandAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCSVCommandAccess().getCommandAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CSVCommand__Group__2__Impl"


    // $ANTLR start "rule__CSVCommand__Group__3"
    // InternalSpellDatabaseParser.g:4073:1: rule__CSVCommand__Group__3 : rule__CSVCommand__Group__3__Impl rule__CSVCommand__Group__4 ;
    public final void rule__CSVCommand__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:4077:1: ( rule__CSVCommand__Group__3__Impl rule__CSVCommand__Group__4 )
            // InternalSpellDatabaseParser.g:4078:2: rule__CSVCommand__Group__3__Impl rule__CSVCommand__Group__4
            {
            pushFollow(FOLLOW_26);
            rule__CSVCommand__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__CSVCommand__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CSVCommand__Group__3"


    // $ANTLR start "rule__CSVCommand__Group__3__Impl"
    // InternalSpellDatabaseParser.g:4085:1: rule__CSVCommand__Group__3__Impl : ( ( rule__CSVCommand__Group_3__0 )? ) ;
    public final void rule__CSVCommand__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:4089:1: ( ( ( rule__CSVCommand__Group_3__0 )? ) )
            // InternalSpellDatabaseParser.g:4090:1: ( ( rule__CSVCommand__Group_3__0 )? )
            {
            // InternalSpellDatabaseParser.g:4090:1: ( ( rule__CSVCommand__Group_3__0 )? )
            // InternalSpellDatabaseParser.g:4091:1: ( rule__CSVCommand__Group_3__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCSVCommandAccess().getGroup_3()); 
            }
            // InternalSpellDatabaseParser.g:4092:1: ( rule__CSVCommand__Group_3__0 )?
            int alt51=2;
            alt51 = dfa51.predict(input);
            switch (alt51) {
                case 1 :
                    // InternalSpellDatabaseParser.g:4092:2: rule__CSVCommand__Group_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__CSVCommand__Group_3__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCSVCommandAccess().getGroup_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CSVCommand__Group__3__Impl"


    // $ANTLR start "rule__CSVCommand__Group__4"
    // InternalSpellDatabaseParser.g:4102:1: rule__CSVCommand__Group__4 : rule__CSVCommand__Group__4__Impl ;
    public final void rule__CSVCommand__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:4106:1: ( rule__CSVCommand__Group__4__Impl )
            // InternalSpellDatabaseParser.g:4107:2: rule__CSVCommand__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__CSVCommand__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CSVCommand__Group__4"


    // $ANTLR start "rule__CSVCommand__Group__4__Impl"
    // InternalSpellDatabaseParser.g:4113:1: rule__CSVCommand__Group__4__Impl : ( ( Comma )* ) ;
    public final void rule__CSVCommand__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:4117:1: ( ( ( Comma )* ) )
            // InternalSpellDatabaseParser.g:4118:1: ( ( Comma )* )
            {
            // InternalSpellDatabaseParser.g:4118:1: ( ( Comma )* )
            // InternalSpellDatabaseParser.g:4119:1: ( Comma )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCSVCommandAccess().getCommaKeyword_4()); 
            }
            // InternalSpellDatabaseParser.g:4120:1: ( Comma )*
            loop52:
            do {
                int alt52=2;
                alt52 = dfa52.predict(input);
                switch (alt52) {
            	case 1 :
            	    // InternalSpellDatabaseParser.g:4121:2: Comma
            	    {
            	    match(input,Comma,FOLLOW_28); if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop52;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCSVCommandAccess().getCommaKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CSVCommand__Group__4__Impl"


    // $ANTLR start "rule__CSVCommand__Group_3__0"
    // InternalSpellDatabaseParser.g:4142:1: rule__CSVCommand__Group_3__0 : rule__CSVCommand__Group_3__0__Impl rule__CSVCommand__Group_3__1 ;
    public final void rule__CSVCommand__Group_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:4146:1: ( rule__CSVCommand__Group_3__0__Impl rule__CSVCommand__Group_3__1 )
            // InternalSpellDatabaseParser.g:4147:2: rule__CSVCommand__Group_3__0__Impl rule__CSVCommand__Group_3__1
            {
            pushFollow(FOLLOW_29);
            rule__CSVCommand__Group_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__CSVCommand__Group_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CSVCommand__Group_3__0"


    // $ANTLR start "rule__CSVCommand__Group_3__0__Impl"
    // InternalSpellDatabaseParser.g:4154:1: rule__CSVCommand__Group_3__0__Impl : ( Comma ) ;
    public final void rule__CSVCommand__Group_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:4158:1: ( ( Comma ) )
            // InternalSpellDatabaseParser.g:4159:1: ( Comma )
            {
            // InternalSpellDatabaseParser.g:4159:1: ( Comma )
            // InternalSpellDatabaseParser.g:4160:1: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCSVCommandAccess().getCommaKeyword_3_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCSVCommandAccess().getCommaKeyword_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CSVCommand__Group_3__0__Impl"


    // $ANTLR start "rule__CSVCommand__Group_3__1"
    // InternalSpellDatabaseParser.g:4173:1: rule__CSVCommand__Group_3__1 : rule__CSVCommand__Group_3__1__Impl rule__CSVCommand__Group_3__2 ;
    public final void rule__CSVCommand__Group_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:4177:1: ( rule__CSVCommand__Group_3__1__Impl rule__CSVCommand__Group_3__2 )
            // InternalSpellDatabaseParser.g:4178:2: rule__CSVCommand__Group_3__1__Impl rule__CSVCommand__Group_3__2
            {
            pushFollow(FOLLOW_30);
            rule__CSVCommand__Group_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__CSVCommand__Group_3__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CSVCommand__Group_3__1"


    // $ANTLR start "rule__CSVCommand__Group_3__1__Impl"
    // InternalSpellDatabaseParser.g:4185:1: rule__CSVCommand__Group_3__1__Impl : ( ( rule__CSVCommand__ArgsAssignment_3_1 ) ) ;
    public final void rule__CSVCommand__Group_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:4189:1: ( ( ( rule__CSVCommand__ArgsAssignment_3_1 ) ) )
            // InternalSpellDatabaseParser.g:4190:1: ( ( rule__CSVCommand__ArgsAssignment_3_1 ) )
            {
            // InternalSpellDatabaseParser.g:4190:1: ( ( rule__CSVCommand__ArgsAssignment_3_1 ) )
            // InternalSpellDatabaseParser.g:4191:1: ( rule__CSVCommand__ArgsAssignment_3_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCSVCommandAccess().getArgsAssignment_3_1()); 
            }
            // InternalSpellDatabaseParser.g:4192:1: ( rule__CSVCommand__ArgsAssignment_3_1 )
            // InternalSpellDatabaseParser.g:4192:2: rule__CSVCommand__ArgsAssignment_3_1
            {
            pushFollow(FOLLOW_2);
            rule__CSVCommand__ArgsAssignment_3_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCSVCommandAccess().getArgsAssignment_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CSVCommand__Group_3__1__Impl"


    // $ANTLR start "rule__CSVCommand__Group_3__2"
    // InternalSpellDatabaseParser.g:4202:1: rule__CSVCommand__Group_3__2 : rule__CSVCommand__Group_3__2__Impl ;
    public final void rule__CSVCommand__Group_3__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:4206:1: ( rule__CSVCommand__Group_3__2__Impl )
            // InternalSpellDatabaseParser.g:4207:2: rule__CSVCommand__Group_3__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__CSVCommand__Group_3__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CSVCommand__Group_3__2"


    // $ANTLR start "rule__CSVCommand__Group_3__2__Impl"
    // InternalSpellDatabaseParser.g:4213:1: rule__CSVCommand__Group_3__2__Impl : ( ( rule__CSVCommand__Group_3_2__0 )* ) ;
    public final void rule__CSVCommand__Group_3__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:4217:1: ( ( ( rule__CSVCommand__Group_3_2__0 )* ) )
            // InternalSpellDatabaseParser.g:4218:1: ( ( rule__CSVCommand__Group_3_2__0 )* )
            {
            // InternalSpellDatabaseParser.g:4218:1: ( ( rule__CSVCommand__Group_3_2__0 )* )
            // InternalSpellDatabaseParser.g:4219:1: ( rule__CSVCommand__Group_3_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCSVCommandAccess().getGroup_3_2()); 
            }
            // InternalSpellDatabaseParser.g:4220:1: ( rule__CSVCommand__Group_3_2__0 )*
            loop53:
            do {
                int alt53=2;
                alt53 = dfa53.predict(input);
                switch (alt53) {
            	case 1 :
            	    // InternalSpellDatabaseParser.g:4220:2: rule__CSVCommand__Group_3_2__0
            	    {
            	    pushFollow(FOLLOW_14);
            	    rule__CSVCommand__Group_3_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop53;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCSVCommandAccess().getGroup_3_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CSVCommand__Group_3__2__Impl"


    // $ANTLR start "rule__CSVCommand__Group_3_2__0"
    // InternalSpellDatabaseParser.g:4236:1: rule__CSVCommand__Group_3_2__0 : rule__CSVCommand__Group_3_2__0__Impl ;
    public final void rule__CSVCommand__Group_3_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:4240:1: ( rule__CSVCommand__Group_3_2__0__Impl )
            // InternalSpellDatabaseParser.g:4241:2: rule__CSVCommand__Group_3_2__0__Impl
            {
            pushFollow(FOLLOW_2);
            rule__CSVCommand__Group_3_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CSVCommand__Group_3_2__0"


    // $ANTLR start "rule__CSVCommand__Group_3_2__0__Impl"
    // InternalSpellDatabaseParser.g:4247:1: rule__CSVCommand__Group_3_2__0__Impl : ( ( rule__CSVCommand__Group_3_2_0__0 ) ) ;
    public final void rule__CSVCommand__Group_3_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:4251:1: ( ( ( rule__CSVCommand__Group_3_2_0__0 ) ) )
            // InternalSpellDatabaseParser.g:4252:1: ( ( rule__CSVCommand__Group_3_2_0__0 ) )
            {
            // InternalSpellDatabaseParser.g:4252:1: ( ( rule__CSVCommand__Group_3_2_0__0 ) )
            // InternalSpellDatabaseParser.g:4253:1: ( rule__CSVCommand__Group_3_2_0__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCSVCommandAccess().getGroup_3_2_0()); 
            }
            // InternalSpellDatabaseParser.g:4254:1: ( rule__CSVCommand__Group_3_2_0__0 )
            // InternalSpellDatabaseParser.g:4254:2: rule__CSVCommand__Group_3_2_0__0
            {
            pushFollow(FOLLOW_2);
            rule__CSVCommand__Group_3_2_0__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCSVCommandAccess().getGroup_3_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CSVCommand__Group_3_2__0__Impl"


    // $ANTLR start "rule__CSVCommand__Group_3_2_0__0"
    // InternalSpellDatabaseParser.g:4266:1: rule__CSVCommand__Group_3_2_0__0 : rule__CSVCommand__Group_3_2_0__0__Impl rule__CSVCommand__Group_3_2_0__1 ;
    public final void rule__CSVCommand__Group_3_2_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:4270:1: ( rule__CSVCommand__Group_3_2_0__0__Impl rule__CSVCommand__Group_3_2_0__1 )
            // InternalSpellDatabaseParser.g:4271:2: rule__CSVCommand__Group_3_2_0__0__Impl rule__CSVCommand__Group_3_2_0__1
            {
            pushFollow(FOLLOW_26);
            rule__CSVCommand__Group_3_2_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__CSVCommand__Group_3_2_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CSVCommand__Group_3_2_0__0"


    // $ANTLR start "rule__CSVCommand__Group_3_2_0__0__Impl"
    // InternalSpellDatabaseParser.g:4278:1: rule__CSVCommand__Group_3_2_0__0__Impl : ( ruleSkipNLAndComments2 ) ;
    public final void rule__CSVCommand__Group_3_2_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:4282:1: ( ( ruleSkipNLAndComments2 ) )
            // InternalSpellDatabaseParser.g:4283:1: ( ruleSkipNLAndComments2 )
            {
            // InternalSpellDatabaseParser.g:4283:1: ( ruleSkipNLAndComments2 )
            // InternalSpellDatabaseParser.g:4284:1: ruleSkipNLAndComments2
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCSVCommandAccess().getSkipNLAndComments2ParserRuleCall_3_2_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSkipNLAndComments2();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCSVCommandAccess().getSkipNLAndComments2ParserRuleCall_3_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CSVCommand__Group_3_2_0__0__Impl"


    // $ANTLR start "rule__CSVCommand__Group_3_2_0__1"
    // InternalSpellDatabaseParser.g:4295:1: rule__CSVCommand__Group_3_2_0__1 : rule__CSVCommand__Group_3_2_0__1__Impl rule__CSVCommand__Group_3_2_0__2 ;
    public final void rule__CSVCommand__Group_3_2_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:4299:1: ( rule__CSVCommand__Group_3_2_0__1__Impl rule__CSVCommand__Group_3_2_0__2 )
            // InternalSpellDatabaseParser.g:4300:2: rule__CSVCommand__Group_3_2_0__1__Impl rule__CSVCommand__Group_3_2_0__2
            {
            pushFollow(FOLLOW_26);
            rule__CSVCommand__Group_3_2_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__CSVCommand__Group_3_2_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CSVCommand__Group_3_2_0__1"


    // $ANTLR start "rule__CSVCommand__Group_3_2_0__1__Impl"
    // InternalSpellDatabaseParser.g:4307:1: rule__CSVCommand__Group_3_2_0__1__Impl : ( Comma ) ;
    public final void rule__CSVCommand__Group_3_2_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:4311:1: ( ( Comma ) )
            // InternalSpellDatabaseParser.g:4312:1: ( Comma )
            {
            // InternalSpellDatabaseParser.g:4312:1: ( Comma )
            // InternalSpellDatabaseParser.g:4313:1: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCSVCommandAccess().getCommaKeyword_3_2_0_1()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCSVCommandAccess().getCommaKeyword_3_2_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CSVCommand__Group_3_2_0__1__Impl"


    // $ANTLR start "rule__CSVCommand__Group_3_2_0__2"
    // InternalSpellDatabaseParser.g:4326:1: rule__CSVCommand__Group_3_2_0__2 : rule__CSVCommand__Group_3_2_0__2__Impl rule__CSVCommand__Group_3_2_0__3 ;
    public final void rule__CSVCommand__Group_3_2_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:4330:1: ( rule__CSVCommand__Group_3_2_0__2__Impl rule__CSVCommand__Group_3_2_0__3 )
            // InternalSpellDatabaseParser.g:4331:2: rule__CSVCommand__Group_3_2_0__2__Impl rule__CSVCommand__Group_3_2_0__3
            {
            pushFollow(FOLLOW_29);
            rule__CSVCommand__Group_3_2_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__CSVCommand__Group_3_2_0__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CSVCommand__Group_3_2_0__2"


    // $ANTLR start "rule__CSVCommand__Group_3_2_0__2__Impl"
    // InternalSpellDatabaseParser.g:4338:1: rule__CSVCommand__Group_3_2_0__2__Impl : ( Comma ) ;
    public final void rule__CSVCommand__Group_3_2_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:4342:1: ( ( Comma ) )
            // InternalSpellDatabaseParser.g:4343:1: ( Comma )
            {
            // InternalSpellDatabaseParser.g:4343:1: ( Comma )
            // InternalSpellDatabaseParser.g:4344:1: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCSVCommandAccess().getCommaKeyword_3_2_0_2()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCSVCommandAccess().getCommaKeyword_3_2_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CSVCommand__Group_3_2_0__2__Impl"


    // $ANTLR start "rule__CSVCommand__Group_3_2_0__3"
    // InternalSpellDatabaseParser.g:4357:1: rule__CSVCommand__Group_3_2_0__3 : rule__CSVCommand__Group_3_2_0__3__Impl rule__CSVCommand__Group_3_2_0__4 ;
    public final void rule__CSVCommand__Group_3_2_0__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:4361:1: ( rule__CSVCommand__Group_3_2_0__3__Impl rule__CSVCommand__Group_3_2_0__4 )
            // InternalSpellDatabaseParser.g:4362:2: rule__CSVCommand__Group_3_2_0__3__Impl rule__CSVCommand__Group_3_2_0__4
            {
            pushFollow(FOLLOW_26);
            rule__CSVCommand__Group_3_2_0__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__CSVCommand__Group_3_2_0__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CSVCommand__Group_3_2_0__3"


    // $ANTLR start "rule__CSVCommand__Group_3_2_0__3__Impl"
    // InternalSpellDatabaseParser.g:4369:1: rule__CSVCommand__Group_3_2_0__3__Impl : ( ( rule__CSVCommand__ArgsAssignment_3_2_0_3 ) ) ;
    public final void rule__CSVCommand__Group_3_2_0__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:4373:1: ( ( ( rule__CSVCommand__ArgsAssignment_3_2_0_3 ) ) )
            // InternalSpellDatabaseParser.g:4374:1: ( ( rule__CSVCommand__ArgsAssignment_3_2_0_3 ) )
            {
            // InternalSpellDatabaseParser.g:4374:1: ( ( rule__CSVCommand__ArgsAssignment_3_2_0_3 ) )
            // InternalSpellDatabaseParser.g:4375:1: ( rule__CSVCommand__ArgsAssignment_3_2_0_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCSVCommandAccess().getArgsAssignment_3_2_0_3()); 
            }
            // InternalSpellDatabaseParser.g:4376:1: ( rule__CSVCommand__ArgsAssignment_3_2_0_3 )
            // InternalSpellDatabaseParser.g:4376:2: rule__CSVCommand__ArgsAssignment_3_2_0_3
            {
            pushFollow(FOLLOW_2);
            rule__CSVCommand__ArgsAssignment_3_2_0_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCSVCommandAccess().getArgsAssignment_3_2_0_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CSVCommand__Group_3_2_0__3__Impl"


    // $ANTLR start "rule__CSVCommand__Group_3_2_0__4"
    // InternalSpellDatabaseParser.g:4386:1: rule__CSVCommand__Group_3_2_0__4 : rule__CSVCommand__Group_3_2_0__4__Impl ;
    public final void rule__CSVCommand__Group_3_2_0__4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:4390:1: ( rule__CSVCommand__Group_3_2_0__4__Impl )
            // InternalSpellDatabaseParser.g:4391:2: rule__CSVCommand__Group_3_2_0__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__CSVCommand__Group_3_2_0__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CSVCommand__Group_3_2_0__4"


    // $ANTLR start "rule__CSVCommand__Group_3_2_0__4__Impl"
    // InternalSpellDatabaseParser.g:4397:1: rule__CSVCommand__Group_3_2_0__4__Impl : ( ( Comma )* ) ;
    public final void rule__CSVCommand__Group_3_2_0__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:4401:1: ( ( ( Comma )* ) )
            // InternalSpellDatabaseParser.g:4402:1: ( ( Comma )* )
            {
            // InternalSpellDatabaseParser.g:4402:1: ( ( Comma )* )
            // InternalSpellDatabaseParser.g:4403:1: ( Comma )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCSVCommandAccess().getCommaKeyword_3_2_0_4()); 
            }
            // InternalSpellDatabaseParser.g:4404:1: ( Comma )*
            loop54:
            do {
                int alt54=2;
                alt54 = dfa54.predict(input);
                switch (alt54) {
            	case 1 :
            	    // InternalSpellDatabaseParser.g:4405:2: Comma
            	    {
            	    match(input,Comma,FOLLOW_28); if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop54;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCSVCommandAccess().getCommaKeyword_3_2_0_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CSVCommand__Group_3_2_0__4__Impl"


    // $ANTLR start "rule__TCArgs__Group__0"
    // InternalSpellDatabaseParser.g:4426:1: rule__TCArgs__Group__0 : rule__TCArgs__Group__0__Impl rule__TCArgs__Group__1 ;
    public final void rule__TCArgs__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:4430:1: ( rule__TCArgs__Group__0__Impl rule__TCArgs__Group__1 )
            // InternalSpellDatabaseParser.g:4431:2: rule__TCArgs__Group__0__Impl rule__TCArgs__Group__1
            {
            pushFollow(FOLLOW_26);
            rule__TCArgs__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TCArgs__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TCArgs__Group__0"


    // $ANTLR start "rule__TCArgs__Group__0__Impl"
    // InternalSpellDatabaseParser.g:4438:1: rule__TCArgs__Group__0__Impl : ( ( rule__TCArgs__TcNameAssignment_0 ) ) ;
    public final void rule__TCArgs__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:4442:1: ( ( ( rule__TCArgs__TcNameAssignment_0 ) ) )
            // InternalSpellDatabaseParser.g:4443:1: ( ( rule__TCArgs__TcNameAssignment_0 ) )
            {
            // InternalSpellDatabaseParser.g:4443:1: ( ( rule__TCArgs__TcNameAssignment_0 ) )
            // InternalSpellDatabaseParser.g:4444:1: ( rule__TCArgs__TcNameAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTCArgsAccess().getTcNameAssignment_0()); 
            }
            // InternalSpellDatabaseParser.g:4445:1: ( rule__TCArgs__TcNameAssignment_0 )
            // InternalSpellDatabaseParser.g:4445:2: rule__TCArgs__TcNameAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__TCArgs__TcNameAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTCArgsAccess().getTcNameAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TCArgs__Group__0__Impl"


    // $ANTLR start "rule__TCArgs__Group__1"
    // InternalSpellDatabaseParser.g:4455:1: rule__TCArgs__Group__1 : rule__TCArgs__Group__1__Impl rule__TCArgs__Group__2 ;
    public final void rule__TCArgs__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:4459:1: ( rule__TCArgs__Group__1__Impl rule__TCArgs__Group__2 )
            // InternalSpellDatabaseParser.g:4460:2: rule__TCArgs__Group__1__Impl rule__TCArgs__Group__2
            {
            pushFollow(FOLLOW_29);
            rule__TCArgs__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TCArgs__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TCArgs__Group__1"


    // $ANTLR start "rule__TCArgs__Group__1__Impl"
    // InternalSpellDatabaseParser.g:4467:1: rule__TCArgs__Group__1__Impl : ( Comma ) ;
    public final void rule__TCArgs__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:4471:1: ( ( Comma ) )
            // InternalSpellDatabaseParser.g:4472:1: ( Comma )
            {
            // InternalSpellDatabaseParser.g:4472:1: ( Comma )
            // InternalSpellDatabaseParser.g:4473:1: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTCArgsAccess().getCommaKeyword_1()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTCArgsAccess().getCommaKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TCArgs__Group__1__Impl"


    // $ANTLR start "rule__TCArgs__Group__2"
    // InternalSpellDatabaseParser.g:4486:1: rule__TCArgs__Group__2 : rule__TCArgs__Group__2__Impl rule__TCArgs__Group__3 ;
    public final void rule__TCArgs__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:4490:1: ( rule__TCArgs__Group__2__Impl rule__TCArgs__Group__3 )
            // InternalSpellDatabaseParser.g:4491:2: rule__TCArgs__Group__2__Impl rule__TCArgs__Group__3
            {
            pushFollow(FOLLOW_26);
            rule__TCArgs__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TCArgs__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TCArgs__Group__2"


    // $ANTLR start "rule__TCArgs__Group__2__Impl"
    // InternalSpellDatabaseParser.g:4498:1: rule__TCArgs__Group__2__Impl : ( ( rule__TCArgs__TcValueAssignment_2 ) ) ;
    public final void rule__TCArgs__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:4502:1: ( ( ( rule__TCArgs__TcValueAssignment_2 ) ) )
            // InternalSpellDatabaseParser.g:4503:1: ( ( rule__TCArgs__TcValueAssignment_2 ) )
            {
            // InternalSpellDatabaseParser.g:4503:1: ( ( rule__TCArgs__TcValueAssignment_2 ) )
            // InternalSpellDatabaseParser.g:4504:1: ( rule__TCArgs__TcValueAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTCArgsAccess().getTcValueAssignment_2()); 
            }
            // InternalSpellDatabaseParser.g:4505:1: ( rule__TCArgs__TcValueAssignment_2 )
            // InternalSpellDatabaseParser.g:4505:2: rule__TCArgs__TcValueAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__TCArgs__TcValueAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTCArgsAccess().getTcValueAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TCArgs__Group__2__Impl"


    // $ANTLR start "rule__TCArgs__Group__3"
    // InternalSpellDatabaseParser.g:4515:1: rule__TCArgs__Group__3 : rule__TCArgs__Group__3__Impl rule__TCArgs__Group__4 ;
    public final void rule__TCArgs__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:4519:1: ( rule__TCArgs__Group__3__Impl rule__TCArgs__Group__4 )
            // InternalSpellDatabaseParser.g:4520:2: rule__TCArgs__Group__3__Impl rule__TCArgs__Group__4
            {
            pushFollow(FOLLOW_31);
            rule__TCArgs__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TCArgs__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TCArgs__Group__3"


    // $ANTLR start "rule__TCArgs__Group__3__Impl"
    // InternalSpellDatabaseParser.g:4527:1: rule__TCArgs__Group__3__Impl : ( Comma ) ;
    public final void rule__TCArgs__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:4531:1: ( ( Comma ) )
            // InternalSpellDatabaseParser.g:4532:1: ( Comma )
            {
            // InternalSpellDatabaseParser.g:4532:1: ( Comma )
            // InternalSpellDatabaseParser.g:4533:1: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTCArgsAccess().getCommaKeyword_3()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTCArgsAccess().getCommaKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TCArgs__Group__3__Impl"


    // $ANTLR start "rule__TCArgs__Group__4"
    // InternalSpellDatabaseParser.g:4546:1: rule__TCArgs__Group__4 : rule__TCArgs__Group__4__Impl rule__TCArgs__Group__5 ;
    public final void rule__TCArgs__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:4550:1: ( rule__TCArgs__Group__4__Impl rule__TCArgs__Group__5 )
            // InternalSpellDatabaseParser.g:4551:2: rule__TCArgs__Group__4__Impl rule__TCArgs__Group__5
            {
            pushFollow(FOLLOW_26);
            rule__TCArgs__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TCArgs__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TCArgs__Group__4"


    // $ANTLR start "rule__TCArgs__Group__4__Impl"
    // InternalSpellDatabaseParser.g:4558:1: rule__TCArgs__Group__4__Impl : ( ( rule__TCArgs__TcModAssignment_4 ) ) ;
    public final void rule__TCArgs__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:4562:1: ( ( ( rule__TCArgs__TcModAssignment_4 ) ) )
            // InternalSpellDatabaseParser.g:4563:1: ( ( rule__TCArgs__TcModAssignment_4 ) )
            {
            // InternalSpellDatabaseParser.g:4563:1: ( ( rule__TCArgs__TcModAssignment_4 ) )
            // InternalSpellDatabaseParser.g:4564:1: ( rule__TCArgs__TcModAssignment_4 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTCArgsAccess().getTcModAssignment_4()); 
            }
            // InternalSpellDatabaseParser.g:4565:1: ( rule__TCArgs__TcModAssignment_4 )
            // InternalSpellDatabaseParser.g:4565:2: rule__TCArgs__TcModAssignment_4
            {
            pushFollow(FOLLOW_2);
            rule__TCArgs__TcModAssignment_4();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTCArgsAccess().getTcModAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TCArgs__Group__4__Impl"


    // $ANTLR start "rule__TCArgs__Group__5"
    // InternalSpellDatabaseParser.g:4575:1: rule__TCArgs__Group__5 : rule__TCArgs__Group__5__Impl rule__TCArgs__Group__6 ;
    public final void rule__TCArgs__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:4579:1: ( rule__TCArgs__Group__5__Impl rule__TCArgs__Group__6 )
            // InternalSpellDatabaseParser.g:4580:2: rule__TCArgs__Group__5__Impl rule__TCArgs__Group__6
            {
            pushFollow(FOLLOW_26);
            rule__TCArgs__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TCArgs__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TCArgs__Group__5"


    // $ANTLR start "rule__TCArgs__Group__5__Impl"
    // InternalSpellDatabaseParser.g:4587:1: rule__TCArgs__Group__5__Impl : ( ( rule__TCArgs__Group_5__0 )? ) ;
    public final void rule__TCArgs__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:4591:1: ( ( ( rule__TCArgs__Group_5__0 )? ) )
            // InternalSpellDatabaseParser.g:4592:1: ( ( rule__TCArgs__Group_5__0 )? )
            {
            // InternalSpellDatabaseParser.g:4592:1: ( ( rule__TCArgs__Group_5__0 )? )
            // InternalSpellDatabaseParser.g:4593:1: ( rule__TCArgs__Group_5__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTCArgsAccess().getGroup_5()); 
            }
            // InternalSpellDatabaseParser.g:4594:1: ( rule__TCArgs__Group_5__0 )?
            int alt55=2;
            alt55 = dfa55.predict(input);
            switch (alt55) {
                case 1 :
                    // InternalSpellDatabaseParser.g:4594:2: rule__TCArgs__Group_5__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__TCArgs__Group_5__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTCArgsAccess().getGroup_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TCArgs__Group__5__Impl"


    // $ANTLR start "rule__TCArgs__Group__6"
    // InternalSpellDatabaseParser.g:4604:1: rule__TCArgs__Group__6 : rule__TCArgs__Group__6__Impl ;
    public final void rule__TCArgs__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:4608:1: ( rule__TCArgs__Group__6__Impl )
            // InternalSpellDatabaseParser.g:4609:2: rule__TCArgs__Group__6__Impl
            {
            pushFollow(FOLLOW_2);
            rule__TCArgs__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TCArgs__Group__6"


    // $ANTLR start "rule__TCArgs__Group__6__Impl"
    // InternalSpellDatabaseParser.g:4615:1: rule__TCArgs__Group__6__Impl : ( ( Comma )* ) ;
    public final void rule__TCArgs__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:4619:1: ( ( ( Comma )* ) )
            // InternalSpellDatabaseParser.g:4620:1: ( ( Comma )* )
            {
            // InternalSpellDatabaseParser.g:4620:1: ( ( Comma )* )
            // InternalSpellDatabaseParser.g:4621:1: ( Comma )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTCArgsAccess().getCommaKeyword_6()); 
            }
            // InternalSpellDatabaseParser.g:4622:1: ( Comma )*
            loop56:
            do {
                int alt56=2;
                alt56 = dfa56.predict(input);
                switch (alt56) {
            	case 1 :
            	    // InternalSpellDatabaseParser.g:4623:2: Comma
            	    {
            	    match(input,Comma,FOLLOW_28); if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop56;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTCArgsAccess().getCommaKeyword_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TCArgs__Group__6__Impl"


    // $ANTLR start "rule__TCArgs__Group_5__0"
    // InternalSpellDatabaseParser.g:4648:1: rule__TCArgs__Group_5__0 : rule__TCArgs__Group_5__0__Impl ;
    public final void rule__TCArgs__Group_5__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:4652:1: ( rule__TCArgs__Group_5__0__Impl )
            // InternalSpellDatabaseParser.g:4653:2: rule__TCArgs__Group_5__0__Impl
            {
            pushFollow(FOLLOW_2);
            rule__TCArgs__Group_5__0__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TCArgs__Group_5__0"


    // $ANTLR start "rule__TCArgs__Group_5__0__Impl"
    // InternalSpellDatabaseParser.g:4659:1: rule__TCArgs__Group_5__0__Impl : ( ( rule__TCArgs__Group_5_0__0 ) ) ;
    public final void rule__TCArgs__Group_5__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:4663:1: ( ( ( rule__TCArgs__Group_5_0__0 ) ) )
            // InternalSpellDatabaseParser.g:4664:1: ( ( rule__TCArgs__Group_5_0__0 ) )
            {
            // InternalSpellDatabaseParser.g:4664:1: ( ( rule__TCArgs__Group_5_0__0 ) )
            // InternalSpellDatabaseParser.g:4665:1: ( rule__TCArgs__Group_5_0__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTCArgsAccess().getGroup_5_0()); 
            }
            // InternalSpellDatabaseParser.g:4666:1: ( rule__TCArgs__Group_5_0__0 )
            // InternalSpellDatabaseParser.g:4666:2: rule__TCArgs__Group_5_0__0
            {
            pushFollow(FOLLOW_2);
            rule__TCArgs__Group_5_0__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTCArgsAccess().getGroup_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TCArgs__Group_5__0__Impl"


    // $ANTLR start "rule__TCArgs__Group_5_0__0"
    // InternalSpellDatabaseParser.g:4678:1: rule__TCArgs__Group_5_0__0 : rule__TCArgs__Group_5_0__0__Impl rule__TCArgs__Group_5_0__1 ;
    public final void rule__TCArgs__Group_5_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:4682:1: ( rule__TCArgs__Group_5_0__0__Impl rule__TCArgs__Group_5_0__1 )
            // InternalSpellDatabaseParser.g:4683:2: rule__TCArgs__Group_5_0__0__Impl rule__TCArgs__Group_5_0__1
            {
            pushFollow(FOLLOW_32);
            rule__TCArgs__Group_5_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TCArgs__Group_5_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TCArgs__Group_5_0__0"


    // $ANTLR start "rule__TCArgs__Group_5_0__0__Impl"
    // InternalSpellDatabaseParser.g:4690:1: rule__TCArgs__Group_5_0__0__Impl : ( Comma ) ;
    public final void rule__TCArgs__Group_5_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:4694:1: ( ( Comma ) )
            // InternalSpellDatabaseParser.g:4695:1: ( Comma )
            {
            // InternalSpellDatabaseParser.g:4695:1: ( Comma )
            // InternalSpellDatabaseParser.g:4696:1: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTCArgsAccess().getCommaKeyword_5_0_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTCArgsAccess().getCommaKeyword_5_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TCArgs__Group_5_0__0__Impl"


    // $ANTLR start "rule__TCArgs__Group_5_0__1"
    // InternalSpellDatabaseParser.g:4709:1: rule__TCArgs__Group_5_0__1 : rule__TCArgs__Group_5_0__1__Impl ;
    public final void rule__TCArgs__Group_5_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:4713:1: ( rule__TCArgs__Group_5_0__1__Impl )
            // InternalSpellDatabaseParser.g:4714:2: rule__TCArgs__Group_5_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__TCArgs__Group_5_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TCArgs__Group_5_0__1"


    // $ANTLR start "rule__TCArgs__Group_5_0__1__Impl"
    // InternalSpellDatabaseParser.g:4720:1: rule__TCArgs__Group_5_0__1__Impl : ( ( rule__TCArgs__ToleranceAssignment_5_0_1 )? ) ;
    public final void rule__TCArgs__Group_5_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:4724:1: ( ( ( rule__TCArgs__ToleranceAssignment_5_0_1 )? ) )
            // InternalSpellDatabaseParser.g:4725:1: ( ( rule__TCArgs__ToleranceAssignment_5_0_1 )? )
            {
            // InternalSpellDatabaseParser.g:4725:1: ( ( rule__TCArgs__ToleranceAssignment_5_0_1 )? )
            // InternalSpellDatabaseParser.g:4726:1: ( rule__TCArgs__ToleranceAssignment_5_0_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTCArgsAccess().getToleranceAssignment_5_0_1()); 
            }
            // InternalSpellDatabaseParser.g:4727:1: ( rule__TCArgs__ToleranceAssignment_5_0_1 )?
            int alt57=2;
            alt57 = dfa57.predict(input);
            switch (alt57) {
                case 1 :
                    // InternalSpellDatabaseParser.g:4727:2: rule__TCArgs__ToleranceAssignment_5_0_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__TCArgs__ToleranceAssignment_5_0_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTCArgsAccess().getToleranceAssignment_5_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TCArgs__Group_5_0__1__Impl"


    // $ANTLR start "rule__CSVTelemetry__Group__0"
    // InternalSpellDatabaseParser.g:4741:1: rule__CSVTelemetry__Group__0 : rule__CSVTelemetry__Group__0__Impl rule__CSVTelemetry__Group__1 ;
    public final void rule__CSVTelemetry__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:4745:1: ( rule__CSVTelemetry__Group__0__Impl rule__CSVTelemetry__Group__1 )
            // InternalSpellDatabaseParser.g:4746:2: rule__CSVTelemetry__Group__0__Impl rule__CSVTelemetry__Group__1
            {
            pushFollow(FOLLOW_26);
            rule__CSVTelemetry__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__CSVTelemetry__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CSVTelemetry__Group__0"


    // $ANTLR start "rule__CSVTelemetry__Group__0__Impl"
    // InternalSpellDatabaseParser.g:4753:1: rule__CSVTelemetry__Group__0__Impl : ( RULE_TM ) ;
    public final void rule__CSVTelemetry__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:4757:1: ( ( RULE_TM ) )
            // InternalSpellDatabaseParser.g:4758:1: ( RULE_TM )
            {
            // InternalSpellDatabaseParser.g:4758:1: ( RULE_TM )
            // InternalSpellDatabaseParser.g:4759:1: RULE_TM
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCSVTelemetryAccess().getTMTerminalRuleCall_0()); 
            }
            match(input,RULE_TM,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCSVTelemetryAccess().getTMTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CSVTelemetry__Group__0__Impl"


    // $ANTLR start "rule__CSVTelemetry__Group__1"
    // InternalSpellDatabaseParser.g:4770:1: rule__CSVTelemetry__Group__1 : rule__CSVTelemetry__Group__1__Impl rule__CSVTelemetry__Group__2 ;
    public final void rule__CSVTelemetry__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:4774:1: ( rule__CSVTelemetry__Group__1__Impl rule__CSVTelemetry__Group__2 )
            // InternalSpellDatabaseParser.g:4775:2: rule__CSVTelemetry__Group__1__Impl rule__CSVTelemetry__Group__2
            {
            pushFollow(FOLLOW_26);
            rule__CSVTelemetry__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__CSVTelemetry__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CSVTelemetry__Group__1"


    // $ANTLR start "rule__CSVTelemetry__Group__1__Impl"
    // InternalSpellDatabaseParser.g:4782:1: rule__CSVTelemetry__Group__1__Impl : ( Comma ) ;
    public final void rule__CSVTelemetry__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:4786:1: ( ( Comma ) )
            // InternalSpellDatabaseParser.g:4787:1: ( Comma )
            {
            // InternalSpellDatabaseParser.g:4787:1: ( Comma )
            // InternalSpellDatabaseParser.g:4788:1: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCSVTelemetryAccess().getCommaKeyword_1()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCSVTelemetryAccess().getCommaKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CSVTelemetry__Group__1__Impl"


    // $ANTLR start "rule__CSVTelemetry__Group__2"
    // InternalSpellDatabaseParser.g:4801:1: rule__CSVTelemetry__Group__2 : rule__CSVTelemetry__Group__2__Impl rule__CSVTelemetry__Group__3 ;
    public final void rule__CSVTelemetry__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:4805:1: ( rule__CSVTelemetry__Group__2__Impl rule__CSVTelemetry__Group__3 )
            // InternalSpellDatabaseParser.g:4806:2: rule__CSVTelemetry__Group__2__Impl rule__CSVTelemetry__Group__3
            {
            pushFollow(FOLLOW_29);
            rule__CSVTelemetry__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__CSVTelemetry__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CSVTelemetry__Group__2"


    // $ANTLR start "rule__CSVTelemetry__Group__2__Impl"
    // InternalSpellDatabaseParser.g:4813:1: rule__CSVTelemetry__Group__2__Impl : ( Comma ) ;
    public final void rule__CSVTelemetry__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:4817:1: ( ( Comma ) )
            // InternalSpellDatabaseParser.g:4818:1: ( Comma )
            {
            // InternalSpellDatabaseParser.g:4818:1: ( Comma )
            // InternalSpellDatabaseParser.g:4819:1: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCSVTelemetryAccess().getCommaKeyword_2()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCSVTelemetryAccess().getCommaKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CSVTelemetry__Group__2__Impl"


    // $ANTLR start "rule__CSVTelemetry__Group__3"
    // InternalSpellDatabaseParser.g:4832:1: rule__CSVTelemetry__Group__3 : rule__CSVTelemetry__Group__3__Impl rule__CSVTelemetry__Group__4 ;
    public final void rule__CSVTelemetry__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:4836:1: ( rule__CSVTelemetry__Group__3__Impl rule__CSVTelemetry__Group__4 )
            // InternalSpellDatabaseParser.g:4837:2: rule__CSVTelemetry__Group__3__Impl rule__CSVTelemetry__Group__4
            {
            pushFollow(FOLLOW_26);
            rule__CSVTelemetry__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__CSVTelemetry__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CSVTelemetry__Group__3"


    // $ANTLR start "rule__CSVTelemetry__Group__3__Impl"
    // InternalSpellDatabaseParser.g:4844:1: rule__CSVTelemetry__Group__3__Impl : ( ( rule__CSVTelemetry__TmArgAssignment_3 ) ) ;
    public final void rule__CSVTelemetry__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:4848:1: ( ( ( rule__CSVTelemetry__TmArgAssignment_3 ) ) )
            // InternalSpellDatabaseParser.g:4849:1: ( ( rule__CSVTelemetry__TmArgAssignment_3 ) )
            {
            // InternalSpellDatabaseParser.g:4849:1: ( ( rule__CSVTelemetry__TmArgAssignment_3 ) )
            // InternalSpellDatabaseParser.g:4850:1: ( rule__CSVTelemetry__TmArgAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCSVTelemetryAccess().getTmArgAssignment_3()); 
            }
            // InternalSpellDatabaseParser.g:4851:1: ( rule__CSVTelemetry__TmArgAssignment_3 )
            // InternalSpellDatabaseParser.g:4851:2: rule__CSVTelemetry__TmArgAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__CSVTelemetry__TmArgAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCSVTelemetryAccess().getTmArgAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CSVTelemetry__Group__3__Impl"


    // $ANTLR start "rule__CSVTelemetry__Group__4"
    // InternalSpellDatabaseParser.g:4861:1: rule__CSVTelemetry__Group__4 : rule__CSVTelemetry__Group__4__Impl ;
    public final void rule__CSVTelemetry__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:4865:1: ( rule__CSVTelemetry__Group__4__Impl )
            // InternalSpellDatabaseParser.g:4866:2: rule__CSVTelemetry__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__CSVTelemetry__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CSVTelemetry__Group__4"


    // $ANTLR start "rule__CSVTelemetry__Group__4__Impl"
    // InternalSpellDatabaseParser.g:4872:1: rule__CSVTelemetry__Group__4__Impl : ( ( Comma )* ) ;
    public final void rule__CSVTelemetry__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:4876:1: ( ( ( Comma )* ) )
            // InternalSpellDatabaseParser.g:4877:1: ( ( Comma )* )
            {
            // InternalSpellDatabaseParser.g:4877:1: ( ( Comma )* )
            // InternalSpellDatabaseParser.g:4878:1: ( Comma )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCSVTelemetryAccess().getCommaKeyword_4()); 
            }
            // InternalSpellDatabaseParser.g:4879:1: ( Comma )*
            loop58:
            do {
                int alt58=2;
                alt58 = dfa58.predict(input);
                switch (alt58) {
            	case 1 :
            	    // InternalSpellDatabaseParser.g:4880:2: Comma
            	    {
            	    match(input,Comma,FOLLOW_28); if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop58;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCSVTelemetryAccess().getCommaKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CSVTelemetry__Group__4__Impl"


    // $ANTLR start "rule__CSVSpell__Group__0"
    // InternalSpellDatabaseParser.g:4901:1: rule__CSVSpell__Group__0 : rule__CSVSpell__Group__0__Impl rule__CSVSpell__Group__1 ;
    public final void rule__CSVSpell__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:4905:1: ( rule__CSVSpell__Group__0__Impl rule__CSVSpell__Group__1 )
            // InternalSpellDatabaseParser.g:4906:2: rule__CSVSpell__Group__0__Impl rule__CSVSpell__Group__1
            {
            pushFollow(FOLLOW_26);
            rule__CSVSpell__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__CSVSpell__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CSVSpell__Group__0"


    // $ANTLR start "rule__CSVSpell__Group__0__Impl"
    // InternalSpellDatabaseParser.g:4913:1: rule__CSVSpell__Group__0__Impl : ( RULE_SPELL ) ;
    public final void rule__CSVSpell__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:4917:1: ( ( RULE_SPELL ) )
            // InternalSpellDatabaseParser.g:4918:1: ( RULE_SPELL )
            {
            // InternalSpellDatabaseParser.g:4918:1: ( RULE_SPELL )
            // InternalSpellDatabaseParser.g:4919:1: RULE_SPELL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCSVSpellAccess().getSPELLTerminalRuleCall_0()); 
            }
            match(input,RULE_SPELL,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCSVSpellAccess().getSPELLTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CSVSpell__Group__0__Impl"


    // $ANTLR start "rule__CSVSpell__Group__1"
    // InternalSpellDatabaseParser.g:4930:1: rule__CSVSpell__Group__1 : rule__CSVSpell__Group__1__Impl rule__CSVSpell__Group__2 ;
    public final void rule__CSVSpell__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:4934:1: ( rule__CSVSpell__Group__1__Impl rule__CSVSpell__Group__2 )
            // InternalSpellDatabaseParser.g:4935:2: rule__CSVSpell__Group__1__Impl rule__CSVSpell__Group__2
            {
            pushFollow(FOLLOW_33);
            rule__CSVSpell__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__CSVSpell__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CSVSpell__Group__1"


    // $ANTLR start "rule__CSVSpell__Group__1__Impl"
    // InternalSpellDatabaseParser.g:4942:1: rule__CSVSpell__Group__1__Impl : ( Comma ) ;
    public final void rule__CSVSpell__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:4946:1: ( ( Comma ) )
            // InternalSpellDatabaseParser.g:4947:1: ( Comma )
            {
            // InternalSpellDatabaseParser.g:4947:1: ( Comma )
            // InternalSpellDatabaseParser.g:4948:1: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCSVSpellAccess().getCommaKeyword_1()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCSVSpellAccess().getCommaKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CSVSpell__Group__1__Impl"


    // $ANTLR start "rule__CSVSpell__Group__2"
    // InternalSpellDatabaseParser.g:4961:1: rule__CSVSpell__Group__2 : rule__CSVSpell__Group__2__Impl rule__CSVSpell__Group__3 ;
    public final void rule__CSVSpell__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:4965:1: ( rule__CSVSpell__Group__2__Impl rule__CSVSpell__Group__3 )
            // InternalSpellDatabaseParser.g:4966:2: rule__CSVSpell__Group__2__Impl rule__CSVSpell__Group__3
            {
            pushFollow(FOLLOW_26);
            rule__CSVSpell__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__CSVSpell__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CSVSpell__Group__2"


    // $ANTLR start "rule__CSVSpell__Group__2__Impl"
    // InternalSpellDatabaseParser.g:4973:1: rule__CSVSpell__Group__2__Impl : ( ( rule__CSVSpell__CmdAssignment_2 ) ) ;
    public final void rule__CSVSpell__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:4977:1: ( ( ( rule__CSVSpell__CmdAssignment_2 ) ) )
            // InternalSpellDatabaseParser.g:4978:1: ( ( rule__CSVSpell__CmdAssignment_2 ) )
            {
            // InternalSpellDatabaseParser.g:4978:1: ( ( rule__CSVSpell__CmdAssignment_2 ) )
            // InternalSpellDatabaseParser.g:4979:1: ( rule__CSVSpell__CmdAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCSVSpellAccess().getCmdAssignment_2()); 
            }
            // InternalSpellDatabaseParser.g:4980:1: ( rule__CSVSpell__CmdAssignment_2 )
            // InternalSpellDatabaseParser.g:4980:2: rule__CSVSpell__CmdAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__CSVSpell__CmdAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCSVSpellAccess().getCmdAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CSVSpell__Group__2__Impl"


    // $ANTLR start "rule__CSVSpell__Group__3"
    // InternalSpellDatabaseParser.g:4990:1: rule__CSVSpell__Group__3 : rule__CSVSpell__Group__3__Impl ;
    public final void rule__CSVSpell__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:4994:1: ( rule__CSVSpell__Group__3__Impl )
            // InternalSpellDatabaseParser.g:4995:2: rule__CSVSpell__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__CSVSpell__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CSVSpell__Group__3"


    // $ANTLR start "rule__CSVSpell__Group__3__Impl"
    // InternalSpellDatabaseParser.g:5001:1: rule__CSVSpell__Group__3__Impl : ( ( Comma )* ) ;
    public final void rule__CSVSpell__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:5005:1: ( ( ( Comma )* ) )
            // InternalSpellDatabaseParser.g:5006:1: ( ( Comma )* )
            {
            // InternalSpellDatabaseParser.g:5006:1: ( ( Comma )* )
            // InternalSpellDatabaseParser.g:5007:1: ( Comma )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCSVSpellAccess().getCommaKeyword_3()); 
            }
            // InternalSpellDatabaseParser.g:5008:1: ( Comma )*
            loop59:
            do {
                int alt59=2;
                alt59 = dfa59.predict(input);
                switch (alt59) {
            	case 1 :
            	    // InternalSpellDatabaseParser.g:5009:2: Comma
            	    {
            	    match(input,Comma,FOLLOW_28); if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop59;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCSVSpellAccess().getCommaKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CSVSpell__Group__3__Impl"


    // $ANTLR start "rule__SpellCommand__Group_0__0"
    // InternalSpellDatabaseParser.g:5028:1: rule__SpellCommand__Group_0__0 : rule__SpellCommand__Group_0__0__Impl rule__SpellCommand__Group_0__1 ;
    public final void rule__SpellCommand__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:5032:1: ( rule__SpellCommand__Group_0__0__Impl rule__SpellCommand__Group_0__1 )
            // InternalSpellDatabaseParser.g:5033:2: rule__SpellCommand__Group_0__0__Impl rule__SpellCommand__Group_0__1
            {
            pushFollow(FOLLOW_34);
            rule__SpellCommand__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SpellCommand__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpellCommand__Group_0__0"


    // $ANTLR start "rule__SpellCommand__Group_0__0__Impl"
    // InternalSpellDatabaseParser.g:5040:1: rule__SpellCommand__Group_0__0__Impl : ( () ) ;
    public final void rule__SpellCommand__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:5044:1: ( ( () ) )
            // InternalSpellDatabaseParser.g:5045:1: ( () )
            {
            // InternalSpellDatabaseParser.g:5045:1: ( () )
            // InternalSpellDatabaseParser.g:5046:1: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpellCommandAccess().getWaitCommandAction_0_0()); 
            }
            // InternalSpellDatabaseParser.g:5047:1: ()
            // InternalSpellDatabaseParser.g:5049:1: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpellCommandAccess().getWaitCommandAction_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpellCommand__Group_0__0__Impl"


    // $ANTLR start "rule__SpellCommand__Group_0__1"
    // InternalSpellDatabaseParser.g:5059:1: rule__SpellCommand__Group_0__1 : rule__SpellCommand__Group_0__1__Impl rule__SpellCommand__Group_0__2 ;
    public final void rule__SpellCommand__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:5063:1: ( rule__SpellCommand__Group_0__1__Impl rule__SpellCommand__Group_0__2 )
            // InternalSpellDatabaseParser.g:5064:2: rule__SpellCommand__Group_0__1__Impl rule__SpellCommand__Group_0__2
            {
            pushFollow(FOLLOW_26);
            rule__SpellCommand__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SpellCommand__Group_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpellCommand__Group_0__1"


    // $ANTLR start "rule__SpellCommand__Group_0__1__Impl"
    // InternalSpellDatabaseParser.g:5071:1: rule__SpellCommand__Group_0__1__Impl : ( RULE_WAIT ) ;
    public final void rule__SpellCommand__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:5075:1: ( ( RULE_WAIT ) )
            // InternalSpellDatabaseParser.g:5076:1: ( RULE_WAIT )
            {
            // InternalSpellDatabaseParser.g:5076:1: ( RULE_WAIT )
            // InternalSpellDatabaseParser.g:5077:1: RULE_WAIT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpellCommandAccess().getWAITTerminalRuleCall_0_1()); 
            }
            match(input,RULE_WAIT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpellCommandAccess().getWAITTerminalRuleCall_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpellCommand__Group_0__1__Impl"


    // $ANTLR start "rule__SpellCommand__Group_0__2"
    // InternalSpellDatabaseParser.g:5088:1: rule__SpellCommand__Group_0__2 : rule__SpellCommand__Group_0__2__Impl rule__SpellCommand__Group_0__3 ;
    public final void rule__SpellCommand__Group_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:5092:1: ( rule__SpellCommand__Group_0__2__Impl rule__SpellCommand__Group_0__3 )
            // InternalSpellDatabaseParser.g:5093:2: rule__SpellCommand__Group_0__2__Impl rule__SpellCommand__Group_0__3
            {
            pushFollow(FOLLOW_35);
            rule__SpellCommand__Group_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SpellCommand__Group_0__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpellCommand__Group_0__2"


    // $ANTLR start "rule__SpellCommand__Group_0__2__Impl"
    // InternalSpellDatabaseParser.g:5100:1: rule__SpellCommand__Group_0__2__Impl : ( Comma ) ;
    public final void rule__SpellCommand__Group_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:5104:1: ( ( Comma ) )
            // InternalSpellDatabaseParser.g:5105:1: ( Comma )
            {
            // InternalSpellDatabaseParser.g:5105:1: ( Comma )
            // InternalSpellDatabaseParser.g:5106:1: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpellCommandAccess().getCommaKeyword_0_2()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpellCommandAccess().getCommaKeyword_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpellCommand__Group_0__2__Impl"


    // $ANTLR start "rule__SpellCommand__Group_0__3"
    // InternalSpellDatabaseParser.g:5119:1: rule__SpellCommand__Group_0__3 : rule__SpellCommand__Group_0__3__Impl rule__SpellCommand__Group_0__4 ;
    public final void rule__SpellCommand__Group_0__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:5123:1: ( rule__SpellCommand__Group_0__3__Impl rule__SpellCommand__Group_0__4 )
            // InternalSpellDatabaseParser.g:5124:2: rule__SpellCommand__Group_0__3__Impl rule__SpellCommand__Group_0__4
            {
            pushFollow(FOLLOW_26);
            rule__SpellCommand__Group_0__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SpellCommand__Group_0__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpellCommand__Group_0__3"


    // $ANTLR start "rule__SpellCommand__Group_0__3__Impl"
    // InternalSpellDatabaseParser.g:5131:1: rule__SpellCommand__Group_0__3__Impl : ( ( rule__SpellCommand__ValueAssignment_0_3 ) ) ;
    public final void rule__SpellCommand__Group_0__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:5135:1: ( ( ( rule__SpellCommand__ValueAssignment_0_3 ) ) )
            // InternalSpellDatabaseParser.g:5136:1: ( ( rule__SpellCommand__ValueAssignment_0_3 ) )
            {
            // InternalSpellDatabaseParser.g:5136:1: ( ( rule__SpellCommand__ValueAssignment_0_3 ) )
            // InternalSpellDatabaseParser.g:5137:1: ( rule__SpellCommand__ValueAssignment_0_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpellCommandAccess().getValueAssignment_0_3()); 
            }
            // InternalSpellDatabaseParser.g:5138:1: ( rule__SpellCommand__ValueAssignment_0_3 )
            // InternalSpellDatabaseParser.g:5138:2: rule__SpellCommand__ValueAssignment_0_3
            {
            pushFollow(FOLLOW_2);
            rule__SpellCommand__ValueAssignment_0_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpellCommandAccess().getValueAssignment_0_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpellCommand__Group_0__3__Impl"


    // $ANTLR start "rule__SpellCommand__Group_0__4"
    // InternalSpellDatabaseParser.g:5148:1: rule__SpellCommand__Group_0__4 : rule__SpellCommand__Group_0__4__Impl rule__SpellCommand__Group_0__5 ;
    public final void rule__SpellCommand__Group_0__4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:5152:1: ( rule__SpellCommand__Group_0__4__Impl rule__SpellCommand__Group_0__5 )
            // InternalSpellDatabaseParser.g:5153:2: rule__SpellCommand__Group_0__4__Impl rule__SpellCommand__Group_0__5
            {
            pushFollow(FOLLOW_36);
            rule__SpellCommand__Group_0__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SpellCommand__Group_0__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpellCommand__Group_0__4"


    // $ANTLR start "rule__SpellCommand__Group_0__4__Impl"
    // InternalSpellDatabaseParser.g:5160:1: rule__SpellCommand__Group_0__4__Impl : ( Comma ) ;
    public final void rule__SpellCommand__Group_0__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:5164:1: ( ( Comma ) )
            // InternalSpellDatabaseParser.g:5165:1: ( Comma )
            {
            // InternalSpellDatabaseParser.g:5165:1: ( Comma )
            // InternalSpellDatabaseParser.g:5166:1: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpellCommandAccess().getCommaKeyword_0_4()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpellCommandAccess().getCommaKeyword_0_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpellCommand__Group_0__4__Impl"


    // $ANTLR start "rule__SpellCommand__Group_0__5"
    // InternalSpellDatabaseParser.g:5179:1: rule__SpellCommand__Group_0__5 : rule__SpellCommand__Group_0__5__Impl ;
    public final void rule__SpellCommand__Group_0__5() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:5183:1: ( rule__SpellCommand__Group_0__5__Impl )
            // InternalSpellDatabaseParser.g:5184:2: rule__SpellCommand__Group_0__5__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SpellCommand__Group_0__5__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpellCommand__Group_0__5"


    // $ANTLR start "rule__SpellCommand__Group_0__5__Impl"
    // InternalSpellDatabaseParser.g:5190:1: rule__SpellCommand__Group_0__5__Impl : ( ( rule__SpellCommand__UnitAssignment_0_5 ) ) ;
    public final void rule__SpellCommand__Group_0__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:5194:1: ( ( ( rule__SpellCommand__UnitAssignment_0_5 ) ) )
            // InternalSpellDatabaseParser.g:5195:1: ( ( rule__SpellCommand__UnitAssignment_0_5 ) )
            {
            // InternalSpellDatabaseParser.g:5195:1: ( ( rule__SpellCommand__UnitAssignment_0_5 ) )
            // InternalSpellDatabaseParser.g:5196:1: ( rule__SpellCommand__UnitAssignment_0_5 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpellCommandAccess().getUnitAssignment_0_5()); 
            }
            // InternalSpellDatabaseParser.g:5197:1: ( rule__SpellCommand__UnitAssignment_0_5 )
            // InternalSpellDatabaseParser.g:5197:2: rule__SpellCommand__UnitAssignment_0_5
            {
            pushFollow(FOLLOW_2);
            rule__SpellCommand__UnitAssignment_0_5();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpellCommandAccess().getUnitAssignment_0_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpellCommand__Group_0__5__Impl"


    // $ANTLR start "rule__SpellCommand__Group_1__0"
    // InternalSpellDatabaseParser.g:5219:1: rule__SpellCommand__Group_1__0 : rule__SpellCommand__Group_1__0__Impl rule__SpellCommand__Group_1__1 ;
    public final void rule__SpellCommand__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:5223:1: ( rule__SpellCommand__Group_1__0__Impl rule__SpellCommand__Group_1__1 )
            // InternalSpellDatabaseParser.g:5224:2: rule__SpellCommand__Group_1__0__Impl rule__SpellCommand__Group_1__1
            {
            pushFollow(FOLLOW_33);
            rule__SpellCommand__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SpellCommand__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpellCommand__Group_1__0"


    // $ANTLR start "rule__SpellCommand__Group_1__0__Impl"
    // InternalSpellDatabaseParser.g:5231:1: rule__SpellCommand__Group_1__0__Impl : ( () ) ;
    public final void rule__SpellCommand__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:5235:1: ( ( () ) )
            // InternalSpellDatabaseParser.g:5236:1: ( () )
            {
            // InternalSpellDatabaseParser.g:5236:1: ( () )
            // InternalSpellDatabaseParser.g:5237:1: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpellCommandAccess().getPauseCommandAction_1_0()); 
            }
            // InternalSpellDatabaseParser.g:5238:1: ()
            // InternalSpellDatabaseParser.g:5240:1: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpellCommandAccess().getPauseCommandAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpellCommand__Group_1__0__Impl"


    // $ANTLR start "rule__SpellCommand__Group_1__1"
    // InternalSpellDatabaseParser.g:5250:1: rule__SpellCommand__Group_1__1 : rule__SpellCommand__Group_1__1__Impl rule__SpellCommand__Group_1__2 ;
    public final void rule__SpellCommand__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:5254:1: ( rule__SpellCommand__Group_1__1__Impl rule__SpellCommand__Group_1__2 )
            // InternalSpellDatabaseParser.g:5255:2: rule__SpellCommand__Group_1__1__Impl rule__SpellCommand__Group_1__2
            {
            pushFollow(FOLLOW_26);
            rule__SpellCommand__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SpellCommand__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpellCommand__Group_1__1"


    // $ANTLR start "rule__SpellCommand__Group_1__1__Impl"
    // InternalSpellDatabaseParser.g:5262:1: rule__SpellCommand__Group_1__1__Impl : ( RULE_PAUSE ) ;
    public final void rule__SpellCommand__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:5266:1: ( ( RULE_PAUSE ) )
            // InternalSpellDatabaseParser.g:5267:1: ( RULE_PAUSE )
            {
            // InternalSpellDatabaseParser.g:5267:1: ( RULE_PAUSE )
            // InternalSpellDatabaseParser.g:5268:1: RULE_PAUSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpellCommandAccess().getPAUSETerminalRuleCall_1_1()); 
            }
            match(input,RULE_PAUSE,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpellCommandAccess().getPAUSETerminalRuleCall_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpellCommand__Group_1__1__Impl"


    // $ANTLR start "rule__SpellCommand__Group_1__2"
    // InternalSpellDatabaseParser.g:5279:1: rule__SpellCommand__Group_1__2 : rule__SpellCommand__Group_1__2__Impl ;
    public final void rule__SpellCommand__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:5283:1: ( rule__SpellCommand__Group_1__2__Impl )
            // InternalSpellDatabaseParser.g:5284:2: rule__SpellCommand__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SpellCommand__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpellCommand__Group_1__2"


    // $ANTLR start "rule__SpellCommand__Group_1__2__Impl"
    // InternalSpellDatabaseParser.g:5290:1: rule__SpellCommand__Group_1__2__Impl : ( ( Comma )* ) ;
    public final void rule__SpellCommand__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:5294:1: ( ( ( Comma )* ) )
            // InternalSpellDatabaseParser.g:5295:1: ( ( Comma )* )
            {
            // InternalSpellDatabaseParser.g:5295:1: ( ( Comma )* )
            // InternalSpellDatabaseParser.g:5296:1: ( Comma )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpellCommandAccess().getCommaKeyword_1_2()); 
            }
            // InternalSpellDatabaseParser.g:5297:1: ( Comma )*
            loop60:
            do {
                int alt60=2;
                alt60 = dfa60.predict(input);
                switch (alt60) {
            	case 1 :
            	    // InternalSpellDatabaseParser.g:5298:2: Comma
            	    {
            	    match(input,Comma,FOLLOW_28); if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop60;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpellCommandAccess().getCommaKeyword_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpellCommand__Group_1__2__Impl"


    // $ANTLR start "rule__DatabaseEntry__Group__0"
    // InternalSpellDatabaseParser.g:5315:1: rule__DatabaseEntry__Group__0 : rule__DatabaseEntry__Group__0__Impl rule__DatabaseEntry__Group__1 ;
    public final void rule__DatabaseEntry__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:5319:1: ( rule__DatabaseEntry__Group__0__Impl rule__DatabaseEntry__Group__1 )
            // InternalSpellDatabaseParser.g:5320:2: rule__DatabaseEntry__Group__0__Impl rule__DatabaseEntry__Group__1
            {
            pushFollow(FOLLOW_37);
            rule__DatabaseEntry__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DatabaseEntry__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DatabaseEntry__Group__0"


    // $ANTLR start "rule__DatabaseEntry__Group__0__Impl"
    // InternalSpellDatabaseParser.g:5327:1: rule__DatabaseEntry__Group__0__Impl : ( ( rule__DatabaseEntry__NameAssignment_0 ) ) ;
    public final void rule__DatabaseEntry__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:5331:1: ( ( ( rule__DatabaseEntry__NameAssignment_0 ) ) )
            // InternalSpellDatabaseParser.g:5332:1: ( ( rule__DatabaseEntry__NameAssignment_0 ) )
            {
            // InternalSpellDatabaseParser.g:5332:1: ( ( rule__DatabaseEntry__NameAssignment_0 ) )
            // InternalSpellDatabaseParser.g:5333:1: ( rule__DatabaseEntry__NameAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDatabaseEntryAccess().getNameAssignment_0()); 
            }
            // InternalSpellDatabaseParser.g:5334:1: ( rule__DatabaseEntry__NameAssignment_0 )
            // InternalSpellDatabaseParser.g:5334:2: rule__DatabaseEntry__NameAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__DatabaseEntry__NameAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDatabaseEntryAccess().getNameAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DatabaseEntry__Group__0__Impl"


    // $ANTLR start "rule__DatabaseEntry__Group__1"
    // InternalSpellDatabaseParser.g:5344:1: rule__DatabaseEntry__Group__1 : rule__DatabaseEntry__Group__1__Impl rule__DatabaseEntry__Group__2 ;
    public final void rule__DatabaseEntry__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:5348:1: ( rule__DatabaseEntry__Group__1__Impl rule__DatabaseEntry__Group__2 )
            // InternalSpellDatabaseParser.g:5349:2: rule__DatabaseEntry__Group__1__Impl rule__DatabaseEntry__Group__2
            {
            pushFollow(FOLLOW_37);
            rule__DatabaseEntry__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DatabaseEntry__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DatabaseEntry__Group__1"


    // $ANTLR start "rule__DatabaseEntry__Group__1__Impl"
    // InternalSpellDatabaseParser.g:5356:1: rule__DatabaseEntry__Group__1__Impl : ( ( RULE_WS )? ) ;
    public final void rule__DatabaseEntry__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:5360:1: ( ( ( RULE_WS )? ) )
            // InternalSpellDatabaseParser.g:5361:1: ( ( RULE_WS )? )
            {
            // InternalSpellDatabaseParser.g:5361:1: ( ( RULE_WS )? )
            // InternalSpellDatabaseParser.g:5362:1: ( RULE_WS )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDatabaseEntryAccess().getWSTerminalRuleCall_1()); 
            }
            // InternalSpellDatabaseParser.g:5363:1: ( RULE_WS )?
            int alt61=2;
            alt61 = dfa61.predict(input);
            switch (alt61) {
                case 1 :
                    // InternalSpellDatabaseParser.g:5363:3: RULE_WS
                    {
                    match(input,RULE_WS,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDatabaseEntryAccess().getWSTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DatabaseEntry__Group__1__Impl"


    // $ANTLR start "rule__DatabaseEntry__Group__2"
    // InternalSpellDatabaseParser.g:5373:1: rule__DatabaseEntry__Group__2 : rule__DatabaseEntry__Group__2__Impl rule__DatabaseEntry__Group__3 ;
    public final void rule__DatabaseEntry__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:5377:1: ( rule__DatabaseEntry__Group__2__Impl rule__DatabaseEntry__Group__3 )
            // InternalSpellDatabaseParser.g:5378:2: rule__DatabaseEntry__Group__2__Impl rule__DatabaseEntry__Group__3
            {
            pushFollow(FOLLOW_38);
            rule__DatabaseEntry__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DatabaseEntry__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DatabaseEntry__Group__2"


    // $ANTLR start "rule__DatabaseEntry__Group__2__Impl"
    // InternalSpellDatabaseParser.g:5385:1: rule__DatabaseEntry__Group__2__Impl : ( ruleSkipped_NL ) ;
    public final void rule__DatabaseEntry__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:5389:1: ( ( ruleSkipped_NL ) )
            // InternalSpellDatabaseParser.g:5390:1: ( ruleSkipped_NL )
            {
            // InternalSpellDatabaseParser.g:5390:1: ( ruleSkipped_NL )
            // InternalSpellDatabaseParser.g:5391:1: ruleSkipped_NL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDatabaseEntryAccess().getSkipped_NLParserRuleCall_2()); 
            }
            pushFollow(FOLLOW_2);
            ruleSkipped_NL();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDatabaseEntryAccess().getSkipped_NLParserRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DatabaseEntry__Group__2__Impl"


    // $ANTLR start "rule__DatabaseEntry__Group__3"
    // InternalSpellDatabaseParser.g:5402:1: rule__DatabaseEntry__Group__3 : rule__DatabaseEntry__Group__3__Impl rule__DatabaseEntry__Group__4 ;
    public final void rule__DatabaseEntry__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:5406:1: ( rule__DatabaseEntry__Group__3__Impl rule__DatabaseEntry__Group__4 )
            // InternalSpellDatabaseParser.g:5407:2: rule__DatabaseEntry__Group__3__Impl rule__DatabaseEntry__Group__4
            {
            pushFollow(FOLLOW_38);
            rule__DatabaseEntry__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DatabaseEntry__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DatabaseEntry__Group__3"


    // $ANTLR start "rule__DatabaseEntry__Group__3__Impl"
    // InternalSpellDatabaseParser.g:5414:1: rule__DatabaseEntry__Group__3__Impl : ( ( RULE_WS )? ) ;
    public final void rule__DatabaseEntry__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:5418:1: ( ( ( RULE_WS )? ) )
            // InternalSpellDatabaseParser.g:5419:1: ( ( RULE_WS )? )
            {
            // InternalSpellDatabaseParser.g:5419:1: ( ( RULE_WS )? )
            // InternalSpellDatabaseParser.g:5420:1: ( RULE_WS )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDatabaseEntryAccess().getWSTerminalRuleCall_3()); 
            }
            // InternalSpellDatabaseParser.g:5421:1: ( RULE_WS )?
            int alt62=2;
            alt62 = dfa62.predict(input);
            switch (alt62) {
                case 1 :
                    // InternalSpellDatabaseParser.g:5421:3: RULE_WS
                    {
                    match(input,RULE_WS,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDatabaseEntryAccess().getWSTerminalRuleCall_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DatabaseEntry__Group__3__Impl"


    // $ANTLR start "rule__DatabaseEntry__Group__4"
    // InternalSpellDatabaseParser.g:5431:1: rule__DatabaseEntry__Group__4 : rule__DatabaseEntry__Group__4__Impl ;
    public final void rule__DatabaseEntry__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:5435:1: ( rule__DatabaseEntry__Group__4__Impl )
            // InternalSpellDatabaseParser.g:5436:2: rule__DatabaseEntry__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DatabaseEntry__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DatabaseEntry__Group__4"


    // $ANTLR start "rule__DatabaseEntry__Group__4__Impl"
    // InternalSpellDatabaseParser.g:5442:1: rule__DatabaseEntry__Group__4__Impl : ( ( rule__DatabaseEntry__ValueAssignment_4 )? ) ;
    public final void rule__DatabaseEntry__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:5446:1: ( ( ( rule__DatabaseEntry__ValueAssignment_4 )? ) )
            // InternalSpellDatabaseParser.g:5447:1: ( ( rule__DatabaseEntry__ValueAssignment_4 )? )
            {
            // InternalSpellDatabaseParser.g:5447:1: ( ( rule__DatabaseEntry__ValueAssignment_4 )? )
            // InternalSpellDatabaseParser.g:5448:1: ( rule__DatabaseEntry__ValueAssignment_4 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDatabaseEntryAccess().getValueAssignment_4()); 
            }
            // InternalSpellDatabaseParser.g:5449:1: ( rule__DatabaseEntry__ValueAssignment_4 )?
            int alt63=2;
            alt63 = dfa63.predict(input);
            switch (alt63) {
                case 1 :
                    // InternalSpellDatabaseParser.g:5449:2: rule__DatabaseEntry__ValueAssignment_4
                    {
                    pushFollow(FOLLOW_2);
                    rule__DatabaseEntry__ValueAssignment_4();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDatabaseEntryAccess().getValueAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DatabaseEntry__Group__4__Impl"


    // $ANTLR start "rule__Lambda_Stmt__Group__0"
    // InternalSpellDatabaseParser.g:5469:1: rule__Lambda_Stmt__Group__0 : rule__Lambda_Stmt__Group__0__Impl rule__Lambda_Stmt__Group__1 ;
    public final void rule__Lambda_Stmt__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:5473:1: ( rule__Lambda_Stmt__Group__0__Impl rule__Lambda_Stmt__Group__1 )
            // InternalSpellDatabaseParser.g:5474:2: rule__Lambda_Stmt__Group__0__Impl rule__Lambda_Stmt__Group__1
            {
            pushFollow(FOLLOW_39);
            rule__Lambda_Stmt__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Lambda_Stmt__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Lambda_Stmt__Group__0"


    // $ANTLR start "rule__Lambda_Stmt__Group__0__Impl"
    // InternalSpellDatabaseParser.g:5481:1: rule__Lambda_Stmt__Group__0__Impl : ( () ) ;
    public final void rule__Lambda_Stmt__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:5485:1: ( ( () ) )
            // InternalSpellDatabaseParser.g:5486:1: ( () )
            {
            // InternalSpellDatabaseParser.g:5486:1: ( () )
            // InternalSpellDatabaseParser.g:5487:1: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLambda_StmtAccess().getLambda_StmtAction_0()); 
            }
            // InternalSpellDatabaseParser.g:5488:1: ()
            // InternalSpellDatabaseParser.g:5490:1: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLambda_StmtAccess().getLambda_StmtAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Lambda_Stmt__Group__0__Impl"


    // $ANTLR start "rule__Lambda_Stmt__Group__1"
    // InternalSpellDatabaseParser.g:5500:1: rule__Lambda_Stmt__Group__1 : rule__Lambda_Stmt__Group__1__Impl rule__Lambda_Stmt__Group__2 ;
    public final void rule__Lambda_Stmt__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:5504:1: ( rule__Lambda_Stmt__Group__1__Impl rule__Lambda_Stmt__Group__2 )
            // InternalSpellDatabaseParser.g:5505:2: rule__Lambda_Stmt__Group__1__Impl rule__Lambda_Stmt__Group__2
            {
            pushFollow(FOLLOW_40);
            rule__Lambda_Stmt__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Lambda_Stmt__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Lambda_Stmt__Group__1"


    // $ANTLR start "rule__Lambda_Stmt__Group__1__Impl"
    // InternalSpellDatabaseParser.g:5512:1: rule__Lambda_Stmt__Group__1__Impl : ( RULE_LAMBDA ) ;
    public final void rule__Lambda_Stmt__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:5516:1: ( ( RULE_LAMBDA ) )
            // InternalSpellDatabaseParser.g:5517:1: ( RULE_LAMBDA )
            {
            // InternalSpellDatabaseParser.g:5517:1: ( RULE_LAMBDA )
            // InternalSpellDatabaseParser.g:5518:1: RULE_LAMBDA
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLambda_StmtAccess().getLAMBDATerminalRuleCall_1()); 
            }
            match(input,RULE_LAMBDA,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLambda_StmtAccess().getLAMBDATerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Lambda_Stmt__Group__1__Impl"


    // $ANTLR start "rule__Lambda_Stmt__Group__2"
    // InternalSpellDatabaseParser.g:5529:1: rule__Lambda_Stmt__Group__2 : rule__Lambda_Stmt__Group__2__Impl rule__Lambda_Stmt__Group__3 ;
    public final void rule__Lambda_Stmt__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:5533:1: ( rule__Lambda_Stmt__Group__2__Impl rule__Lambda_Stmt__Group__3 )
            // InternalSpellDatabaseParser.g:5534:2: rule__Lambda_Stmt__Group__2__Impl rule__Lambda_Stmt__Group__3
            {
            pushFollow(FOLLOW_40);
            rule__Lambda_Stmt__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Lambda_Stmt__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Lambda_Stmt__Group__2"


    // $ANTLR start "rule__Lambda_Stmt__Group__2__Impl"
    // InternalSpellDatabaseParser.g:5541:1: rule__Lambda_Stmt__Group__2__Impl : ( ( rule__Lambda_Stmt__VariablesAssignment_2 )? ) ;
    public final void rule__Lambda_Stmt__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:5545:1: ( ( ( rule__Lambda_Stmt__VariablesAssignment_2 )? ) )
            // InternalSpellDatabaseParser.g:5546:1: ( ( rule__Lambda_Stmt__VariablesAssignment_2 )? )
            {
            // InternalSpellDatabaseParser.g:5546:1: ( ( rule__Lambda_Stmt__VariablesAssignment_2 )? )
            // InternalSpellDatabaseParser.g:5547:1: ( rule__Lambda_Stmt__VariablesAssignment_2 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLambda_StmtAccess().getVariablesAssignment_2()); 
            }
            // InternalSpellDatabaseParser.g:5548:1: ( rule__Lambda_Stmt__VariablesAssignment_2 )?
            int alt64=2;
            int LA64_0 = input.LA(1);

            if ( (LA64_0==RULE_ID) ) {
                alt64=1;
            }
            switch (alt64) {
                case 1 :
                    // InternalSpellDatabaseParser.g:5548:2: rule__Lambda_Stmt__VariablesAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__Lambda_Stmt__VariablesAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLambda_StmtAccess().getVariablesAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Lambda_Stmt__Group__2__Impl"


    // $ANTLR start "rule__Lambda_Stmt__Group__3"
    // InternalSpellDatabaseParser.g:5558:1: rule__Lambda_Stmt__Group__3 : rule__Lambda_Stmt__Group__3__Impl rule__Lambda_Stmt__Group__4 ;
    public final void rule__Lambda_Stmt__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:5562:1: ( rule__Lambda_Stmt__Group__3__Impl rule__Lambda_Stmt__Group__4 )
            // InternalSpellDatabaseParser.g:5563:2: rule__Lambda_Stmt__Group__3__Impl rule__Lambda_Stmt__Group__4
            {
            pushFollow(FOLLOW_41);
            rule__Lambda_Stmt__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Lambda_Stmt__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Lambda_Stmt__Group__3"


    // $ANTLR start "rule__Lambda_Stmt__Group__3__Impl"
    // InternalSpellDatabaseParser.g:5570:1: rule__Lambda_Stmt__Group__3__Impl : ( RULE_COLON ) ;
    public final void rule__Lambda_Stmt__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:5574:1: ( ( RULE_COLON ) )
            // InternalSpellDatabaseParser.g:5575:1: ( RULE_COLON )
            {
            // InternalSpellDatabaseParser.g:5575:1: ( RULE_COLON )
            // InternalSpellDatabaseParser.g:5576:1: RULE_COLON
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLambda_StmtAccess().getCOLONTerminalRuleCall_3()); 
            }
            match(input,RULE_COLON,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLambda_StmtAccess().getCOLONTerminalRuleCall_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Lambda_Stmt__Group__3__Impl"


    // $ANTLR start "rule__Lambda_Stmt__Group__4"
    // InternalSpellDatabaseParser.g:5587:1: rule__Lambda_Stmt__Group__4 : rule__Lambda_Stmt__Group__4__Impl ;
    public final void rule__Lambda_Stmt__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:5591:1: ( rule__Lambda_Stmt__Group__4__Impl )
            // InternalSpellDatabaseParser.g:5592:2: rule__Lambda_Stmt__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Lambda_Stmt__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Lambda_Stmt__Group__4"


    // $ANTLR start "rule__Lambda_Stmt__Group__4__Impl"
    // InternalSpellDatabaseParser.g:5598:1: rule__Lambda_Stmt__Group__4__Impl : ( ( rule__Lambda_Stmt__ValAssignment_4 )? ) ;
    public final void rule__Lambda_Stmt__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:5602:1: ( ( ( rule__Lambda_Stmt__ValAssignment_4 )? ) )
            // InternalSpellDatabaseParser.g:5603:1: ( ( rule__Lambda_Stmt__ValAssignment_4 )? )
            {
            // InternalSpellDatabaseParser.g:5603:1: ( ( rule__Lambda_Stmt__ValAssignment_4 )? )
            // InternalSpellDatabaseParser.g:5604:1: ( rule__Lambda_Stmt__ValAssignment_4 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLambda_StmtAccess().getValAssignment_4()); 
            }
            // InternalSpellDatabaseParser.g:5605:1: ( rule__Lambda_Stmt__ValAssignment_4 )?
            int alt65=2;
            alt65 = dfa65.predict(input);
            switch (alt65) {
                case 1 :
                    // InternalSpellDatabaseParser.g:5605:2: rule__Lambda_Stmt__ValAssignment_4
                    {
                    pushFollow(FOLLOW_2);
                    rule__Lambda_Stmt__ValAssignment_4();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLambda_StmtAccess().getValAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Lambda_Stmt__Group__4__Impl"


    // $ANTLR start "rule__Lambda_Partial_Func__Group_1__0"
    // InternalSpellDatabaseParser.g:5625:1: rule__Lambda_Partial_Func__Group_1__0 : rule__Lambda_Partial_Func__Group_1__0__Impl rule__Lambda_Partial_Func__Group_1__1 ;
    public final void rule__Lambda_Partial_Func__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:5629:1: ( rule__Lambda_Partial_Func__Group_1__0__Impl rule__Lambda_Partial_Func__Group_1__1 )
            // InternalSpellDatabaseParser.g:5630:2: rule__Lambda_Partial_Func__Group_1__0__Impl rule__Lambda_Partial_Func__Group_1__1
            {
            pushFollow(FOLLOW_40);
            rule__Lambda_Partial_Func__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Lambda_Partial_Func__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Lambda_Partial_Func__Group_1__0"


    // $ANTLR start "rule__Lambda_Partial_Func__Group_1__0__Impl"
    // InternalSpellDatabaseParser.g:5637:1: rule__Lambda_Partial_Func__Group_1__0__Impl : ( RULE_LAMBDA ) ;
    public final void rule__Lambda_Partial_Func__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:5641:1: ( ( RULE_LAMBDA ) )
            // InternalSpellDatabaseParser.g:5642:1: ( RULE_LAMBDA )
            {
            // InternalSpellDatabaseParser.g:5642:1: ( RULE_LAMBDA )
            // InternalSpellDatabaseParser.g:5643:1: RULE_LAMBDA
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLambda_Partial_FuncAccess().getLAMBDATerminalRuleCall_1_0()); 
            }
            match(input,RULE_LAMBDA,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLambda_Partial_FuncAccess().getLAMBDATerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Lambda_Partial_Func__Group_1__0__Impl"


    // $ANTLR start "rule__Lambda_Partial_Func__Group_1__1"
    // InternalSpellDatabaseParser.g:5654:1: rule__Lambda_Partial_Func__Group_1__1 : rule__Lambda_Partial_Func__Group_1__1__Impl rule__Lambda_Partial_Func__Group_1__2 ;
    public final void rule__Lambda_Partial_Func__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:5658:1: ( rule__Lambda_Partial_Func__Group_1__1__Impl rule__Lambda_Partial_Func__Group_1__2 )
            // InternalSpellDatabaseParser.g:5659:2: rule__Lambda_Partial_Func__Group_1__1__Impl rule__Lambda_Partial_Func__Group_1__2
            {
            pushFollow(FOLLOW_40);
            rule__Lambda_Partial_Func__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Lambda_Partial_Func__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Lambda_Partial_Func__Group_1__1"


    // $ANTLR start "rule__Lambda_Partial_Func__Group_1__1__Impl"
    // InternalSpellDatabaseParser.g:5666:1: rule__Lambda_Partial_Func__Group_1__1__Impl : ( ( ruleLambda_Vars )? ) ;
    public final void rule__Lambda_Partial_Func__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:5670:1: ( ( ( ruleLambda_Vars )? ) )
            // InternalSpellDatabaseParser.g:5671:1: ( ( ruleLambda_Vars )? )
            {
            // InternalSpellDatabaseParser.g:5671:1: ( ( ruleLambda_Vars )? )
            // InternalSpellDatabaseParser.g:5672:1: ( ruleLambda_Vars )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLambda_Partial_FuncAccess().getLambda_VarsParserRuleCall_1_1()); 
            }
            // InternalSpellDatabaseParser.g:5673:1: ( ruleLambda_Vars )?
            int alt66=2;
            int LA66_0 = input.LA(1);

            if ( (LA66_0==RULE_ID) ) {
                alt66=1;
            }
            switch (alt66) {
                case 1 :
                    // InternalSpellDatabaseParser.g:5673:3: ruleLambda_Vars
                    {
                    pushFollow(FOLLOW_2);
                    ruleLambda_Vars();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLambda_Partial_FuncAccess().getLambda_VarsParserRuleCall_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Lambda_Partial_Func__Group_1__1__Impl"


    // $ANTLR start "rule__Lambda_Partial_Func__Group_1__2"
    // InternalSpellDatabaseParser.g:5683:1: rule__Lambda_Partial_Func__Group_1__2 : rule__Lambda_Partial_Func__Group_1__2__Impl rule__Lambda_Partial_Func__Group_1__3 ;
    public final void rule__Lambda_Partial_Func__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:5687:1: ( rule__Lambda_Partial_Func__Group_1__2__Impl rule__Lambda_Partial_Func__Group_1__3 )
            // InternalSpellDatabaseParser.g:5688:2: rule__Lambda_Partial_Func__Group_1__2__Impl rule__Lambda_Partial_Func__Group_1__3
            {
            pushFollow(FOLLOW_41);
            rule__Lambda_Partial_Func__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Lambda_Partial_Func__Group_1__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Lambda_Partial_Func__Group_1__2"


    // $ANTLR start "rule__Lambda_Partial_Func__Group_1__2__Impl"
    // InternalSpellDatabaseParser.g:5695:1: rule__Lambda_Partial_Func__Group_1__2__Impl : ( RULE_COLON ) ;
    public final void rule__Lambda_Partial_Func__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:5699:1: ( ( RULE_COLON ) )
            // InternalSpellDatabaseParser.g:5700:1: ( RULE_COLON )
            {
            // InternalSpellDatabaseParser.g:5700:1: ( RULE_COLON )
            // InternalSpellDatabaseParser.g:5701:1: RULE_COLON
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLambda_Partial_FuncAccess().getCOLONTerminalRuleCall_1_2()); 
            }
            match(input,RULE_COLON,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLambda_Partial_FuncAccess().getCOLONTerminalRuleCall_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Lambda_Partial_Func__Group_1__2__Impl"


    // $ANTLR start "rule__Lambda_Partial_Func__Group_1__3"
    // InternalSpellDatabaseParser.g:5712:1: rule__Lambda_Partial_Func__Group_1__3 : rule__Lambda_Partial_Func__Group_1__3__Impl ;
    public final void rule__Lambda_Partial_Func__Group_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:5716:1: ( rule__Lambda_Partial_Func__Group_1__3__Impl )
            // InternalSpellDatabaseParser.g:5717:2: rule__Lambda_Partial_Func__Group_1__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Lambda_Partial_Func__Group_1__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Lambda_Partial_Func__Group_1__3"


    // $ANTLR start "rule__Lambda_Partial_Func__Group_1__3__Impl"
    // InternalSpellDatabaseParser.g:5723:1: rule__Lambda_Partial_Func__Group_1__3__Impl : ( ( ruleLambda_Function )? ) ;
    public final void rule__Lambda_Partial_Func__Group_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:5727:1: ( ( ( ruleLambda_Function )? ) )
            // InternalSpellDatabaseParser.g:5728:1: ( ( ruleLambda_Function )? )
            {
            // InternalSpellDatabaseParser.g:5728:1: ( ( ruleLambda_Function )? )
            // InternalSpellDatabaseParser.g:5729:1: ( ruleLambda_Function )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLambda_Partial_FuncAccess().getLambda_FunctionParserRuleCall_1_3()); 
            }
            // InternalSpellDatabaseParser.g:5730:1: ( ruleLambda_Function )?
            int alt67=2;
            alt67 = dfa67.predict(input);
            switch (alt67) {
                case 1 :
                    // InternalSpellDatabaseParser.g:5730:3: ruleLambda_Function
                    {
                    pushFollow(FOLLOW_2);
                    ruleLambda_Function();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLambda_Partial_FuncAccess().getLambda_FunctionParserRuleCall_1_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Lambda_Partial_Func__Group_1__3__Impl"


    // $ANTLR start "rule__Lambda_Vars__Group__0"
    // InternalSpellDatabaseParser.g:5748:1: rule__Lambda_Vars__Group__0 : rule__Lambda_Vars__Group__0__Impl rule__Lambda_Vars__Group__1 ;
    public final void rule__Lambda_Vars__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:5752:1: ( rule__Lambda_Vars__Group__0__Impl rule__Lambda_Vars__Group__1 )
            // InternalSpellDatabaseParser.g:5753:2: rule__Lambda_Vars__Group__0__Impl rule__Lambda_Vars__Group__1
            {
            pushFollow(FOLLOW_26);
            rule__Lambda_Vars__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Lambda_Vars__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Lambda_Vars__Group__0"


    // $ANTLR start "rule__Lambda_Vars__Group__0__Impl"
    // InternalSpellDatabaseParser.g:5760:1: rule__Lambda_Vars__Group__0__Impl : ( RULE_ID ) ;
    public final void rule__Lambda_Vars__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:5764:1: ( ( RULE_ID ) )
            // InternalSpellDatabaseParser.g:5765:1: ( RULE_ID )
            {
            // InternalSpellDatabaseParser.g:5765:1: ( RULE_ID )
            // InternalSpellDatabaseParser.g:5766:1: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLambda_VarsAccess().getIDTerminalRuleCall_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLambda_VarsAccess().getIDTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Lambda_Vars__Group__0__Impl"


    // $ANTLR start "rule__Lambda_Vars__Group__1"
    // InternalSpellDatabaseParser.g:5777:1: rule__Lambda_Vars__Group__1 : rule__Lambda_Vars__Group__1__Impl ;
    public final void rule__Lambda_Vars__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:5781:1: ( rule__Lambda_Vars__Group__1__Impl )
            // InternalSpellDatabaseParser.g:5782:2: rule__Lambda_Vars__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Lambda_Vars__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Lambda_Vars__Group__1"


    // $ANTLR start "rule__Lambda_Vars__Group__1__Impl"
    // InternalSpellDatabaseParser.g:5788:1: rule__Lambda_Vars__Group__1__Impl : ( ( rule__Lambda_Vars__Group_1__0 )* ) ;
    public final void rule__Lambda_Vars__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:5792:1: ( ( ( rule__Lambda_Vars__Group_1__0 )* ) )
            // InternalSpellDatabaseParser.g:5793:1: ( ( rule__Lambda_Vars__Group_1__0 )* )
            {
            // InternalSpellDatabaseParser.g:5793:1: ( ( rule__Lambda_Vars__Group_1__0 )* )
            // InternalSpellDatabaseParser.g:5794:1: ( rule__Lambda_Vars__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLambda_VarsAccess().getGroup_1()); 
            }
            // InternalSpellDatabaseParser.g:5795:1: ( rule__Lambda_Vars__Group_1__0 )*
            loop68:
            do {
                int alt68=2;
                int LA68_0 = input.LA(1);

                if ( (LA68_0==Comma) ) {
                    alt68=1;
                }


                switch (alt68) {
            	case 1 :
            	    // InternalSpellDatabaseParser.g:5795:2: rule__Lambda_Vars__Group_1__0
            	    {
            	    pushFollow(FOLLOW_28);
            	    rule__Lambda_Vars__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop68;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLambda_VarsAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Lambda_Vars__Group__1__Impl"


    // $ANTLR start "rule__Lambda_Vars__Group_1__0"
    // InternalSpellDatabaseParser.g:5809:1: rule__Lambda_Vars__Group_1__0 : rule__Lambda_Vars__Group_1__0__Impl rule__Lambda_Vars__Group_1__1 ;
    public final void rule__Lambda_Vars__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:5813:1: ( rule__Lambda_Vars__Group_1__0__Impl rule__Lambda_Vars__Group_1__1 )
            // InternalSpellDatabaseParser.g:5814:2: rule__Lambda_Vars__Group_1__0__Impl rule__Lambda_Vars__Group_1__1
            {
            pushFollow(FOLLOW_27);
            rule__Lambda_Vars__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Lambda_Vars__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Lambda_Vars__Group_1__0"


    // $ANTLR start "rule__Lambda_Vars__Group_1__0__Impl"
    // InternalSpellDatabaseParser.g:5821:1: rule__Lambda_Vars__Group_1__0__Impl : ( Comma ) ;
    public final void rule__Lambda_Vars__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:5825:1: ( ( Comma ) )
            // InternalSpellDatabaseParser.g:5826:1: ( Comma )
            {
            // InternalSpellDatabaseParser.g:5826:1: ( Comma )
            // InternalSpellDatabaseParser.g:5827:1: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLambda_VarsAccess().getCommaKeyword_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLambda_VarsAccess().getCommaKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Lambda_Vars__Group_1__0__Impl"


    // $ANTLR start "rule__Lambda_Vars__Group_1__1"
    // InternalSpellDatabaseParser.g:5840:1: rule__Lambda_Vars__Group_1__1 : rule__Lambda_Vars__Group_1__1__Impl ;
    public final void rule__Lambda_Vars__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:5844:1: ( rule__Lambda_Vars__Group_1__1__Impl )
            // InternalSpellDatabaseParser.g:5845:2: rule__Lambda_Vars__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Lambda_Vars__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Lambda_Vars__Group_1__1"


    // $ANTLR start "rule__Lambda_Vars__Group_1__1__Impl"
    // InternalSpellDatabaseParser.g:5851:1: rule__Lambda_Vars__Group_1__1__Impl : ( RULE_ID ) ;
    public final void rule__Lambda_Vars__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:5855:1: ( ( RULE_ID ) )
            // InternalSpellDatabaseParser.g:5856:1: ( RULE_ID )
            {
            // InternalSpellDatabaseParser.g:5856:1: ( RULE_ID )
            // InternalSpellDatabaseParser.g:5857:1: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLambda_VarsAccess().getIDTerminalRuleCall_1_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLambda_VarsAccess().getIDTerminalRuleCall_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Lambda_Vars__Group_1__1__Impl"


    // $ANTLR start "rule__Tuple__Group__0"
    // InternalSpellDatabaseParser.g:5872:1: rule__Tuple__Group__0 : rule__Tuple__Group__0__Impl rule__Tuple__Group__1 ;
    public final void rule__Tuple__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:5876:1: ( rule__Tuple__Group__0__Impl rule__Tuple__Group__1 )
            // InternalSpellDatabaseParser.g:5877:2: rule__Tuple__Group__0__Impl rule__Tuple__Group__1
            {
            pushFollow(FOLLOW_42);
            rule__Tuple__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Tuple__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tuple__Group__0"


    // $ANTLR start "rule__Tuple__Group__0__Impl"
    // InternalSpellDatabaseParser.g:5884:1: rule__Tuple__Group__0__Impl : ( () ) ;
    public final void rule__Tuple__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:5888:1: ( ( () ) )
            // InternalSpellDatabaseParser.g:5889:1: ( () )
            {
            // InternalSpellDatabaseParser.g:5889:1: ( () )
            // InternalSpellDatabaseParser.g:5890:1: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTupleAccess().getTupleAction_0()); 
            }
            // InternalSpellDatabaseParser.g:5891:1: ()
            // InternalSpellDatabaseParser.g:5893:1: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTupleAccess().getTupleAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tuple__Group__0__Impl"


    // $ANTLR start "rule__Tuple__Group__1"
    // InternalSpellDatabaseParser.g:5903:1: rule__Tuple__Group__1 : rule__Tuple__Group__1__Impl rule__Tuple__Group__2 ;
    public final void rule__Tuple__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:5907:1: ( rule__Tuple__Group__1__Impl rule__Tuple__Group__2 )
            // InternalSpellDatabaseParser.g:5908:2: rule__Tuple__Group__1__Impl rule__Tuple__Group__2
            {
            pushFollow(FOLLOW_37);
            rule__Tuple__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Tuple__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tuple__Group__1"


    // $ANTLR start "rule__Tuple__Group__1__Impl"
    // InternalSpellDatabaseParser.g:5915:1: rule__Tuple__Group__1__Impl : ( LeftParenthesis ) ;
    public final void rule__Tuple__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:5919:1: ( ( LeftParenthesis ) )
            // InternalSpellDatabaseParser.g:5920:1: ( LeftParenthesis )
            {
            // InternalSpellDatabaseParser.g:5920:1: ( LeftParenthesis )
            // InternalSpellDatabaseParser.g:5921:1: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTupleAccess().getLeftParenthesisKeyword_1()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTupleAccess().getLeftParenthesisKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tuple__Group__1__Impl"


    // $ANTLR start "rule__Tuple__Group__2"
    // InternalSpellDatabaseParser.g:5934:1: rule__Tuple__Group__2 : rule__Tuple__Group__2__Impl rule__Tuple__Group__3 ;
    public final void rule__Tuple__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:5938:1: ( rule__Tuple__Group__2__Impl rule__Tuple__Group__3 )
            // InternalSpellDatabaseParser.g:5939:2: rule__Tuple__Group__2__Impl rule__Tuple__Group__3
            {
            pushFollow(FOLLOW_37);
            rule__Tuple__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Tuple__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tuple__Group__2"


    // $ANTLR start "rule__Tuple__Group__2__Impl"
    // InternalSpellDatabaseParser.g:5946:1: rule__Tuple__Group__2__Impl : ( ( rule__Tuple__Group_2__0 )? ) ;
    public final void rule__Tuple__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:5950:1: ( ( ( rule__Tuple__Group_2__0 )? ) )
            // InternalSpellDatabaseParser.g:5951:1: ( ( rule__Tuple__Group_2__0 )? )
            {
            // InternalSpellDatabaseParser.g:5951:1: ( ( rule__Tuple__Group_2__0 )? )
            // InternalSpellDatabaseParser.g:5952:1: ( rule__Tuple__Group_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTupleAccess().getGroup_2()); 
            }
            // InternalSpellDatabaseParser.g:5953:1: ( rule__Tuple__Group_2__0 )?
            int alt69=2;
            alt69 = dfa69.predict(input);
            switch (alt69) {
                case 1 :
                    // InternalSpellDatabaseParser.g:5953:2: rule__Tuple__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Tuple__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTupleAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tuple__Group__2__Impl"


    // $ANTLR start "rule__Tuple__Group__3"
    // InternalSpellDatabaseParser.g:5963:1: rule__Tuple__Group__3 : rule__Tuple__Group__3__Impl rule__Tuple__Group__4 ;
    public final void rule__Tuple__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:5967:1: ( rule__Tuple__Group__3__Impl rule__Tuple__Group__4 )
            // InternalSpellDatabaseParser.g:5968:2: rule__Tuple__Group__3__Impl rule__Tuple__Group__4
            {
            pushFollow(FOLLOW_43);
            rule__Tuple__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Tuple__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tuple__Group__3"


    // $ANTLR start "rule__Tuple__Group__3__Impl"
    // InternalSpellDatabaseParser.g:5975:1: rule__Tuple__Group__3__Impl : ( ruleSkipped_NL ) ;
    public final void rule__Tuple__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:5979:1: ( ( ruleSkipped_NL ) )
            // InternalSpellDatabaseParser.g:5980:1: ( ruleSkipped_NL )
            {
            // InternalSpellDatabaseParser.g:5980:1: ( ruleSkipped_NL )
            // InternalSpellDatabaseParser.g:5981:1: ruleSkipped_NL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTupleAccess().getSkipped_NLParserRuleCall_3()); 
            }
            pushFollow(FOLLOW_2);
            ruleSkipped_NL();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTupleAccess().getSkipped_NLParserRuleCall_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tuple__Group__3__Impl"


    // $ANTLR start "rule__Tuple__Group__4"
    // InternalSpellDatabaseParser.g:5992:1: rule__Tuple__Group__4 : rule__Tuple__Group__4__Impl rule__Tuple__Group__5 ;
    public final void rule__Tuple__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:5996:1: ( rule__Tuple__Group__4__Impl rule__Tuple__Group__5 )
            // InternalSpellDatabaseParser.g:5997:2: rule__Tuple__Group__4__Impl rule__Tuple__Group__5
            {
            pushFollow(FOLLOW_43);
            rule__Tuple__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Tuple__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tuple__Group__4"


    // $ANTLR start "rule__Tuple__Group__4__Impl"
    // InternalSpellDatabaseParser.g:6004:1: rule__Tuple__Group__4__Impl : ( ( Comma )? ) ;
    public final void rule__Tuple__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:6008:1: ( ( ( Comma )? ) )
            // InternalSpellDatabaseParser.g:6009:1: ( ( Comma )? )
            {
            // InternalSpellDatabaseParser.g:6009:1: ( ( Comma )? )
            // InternalSpellDatabaseParser.g:6010:1: ( Comma )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTupleAccess().getCommaKeyword_4()); 
            }
            // InternalSpellDatabaseParser.g:6011:1: ( Comma )?
            int alt70=2;
            int LA70_0 = input.LA(1);

            if ( (LA70_0==Comma) ) {
                alt70=1;
            }
            switch (alt70) {
                case 1 :
                    // InternalSpellDatabaseParser.g:6012:2: Comma
                    {
                    match(input,Comma,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTupleAccess().getCommaKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tuple__Group__4__Impl"


    // $ANTLR start "rule__Tuple__Group__5"
    // InternalSpellDatabaseParser.g:6023:1: rule__Tuple__Group__5 : rule__Tuple__Group__5__Impl rule__Tuple__Group__6 ;
    public final void rule__Tuple__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:6027:1: ( rule__Tuple__Group__5__Impl rule__Tuple__Group__6 )
            // InternalSpellDatabaseParser.g:6028:2: rule__Tuple__Group__5__Impl rule__Tuple__Group__6
            {
            pushFollow(FOLLOW_44);
            rule__Tuple__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Tuple__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tuple__Group__5"


    // $ANTLR start "rule__Tuple__Group__5__Impl"
    // InternalSpellDatabaseParser.g:6035:1: rule__Tuple__Group__5__Impl : ( ruleSkipped_NL ) ;
    public final void rule__Tuple__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:6039:1: ( ( ruleSkipped_NL ) )
            // InternalSpellDatabaseParser.g:6040:1: ( ruleSkipped_NL )
            {
            // InternalSpellDatabaseParser.g:6040:1: ( ruleSkipped_NL )
            // InternalSpellDatabaseParser.g:6041:1: ruleSkipped_NL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTupleAccess().getSkipped_NLParserRuleCall_5()); 
            }
            pushFollow(FOLLOW_2);
            ruleSkipped_NL();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTupleAccess().getSkipped_NLParserRuleCall_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tuple__Group__5__Impl"


    // $ANTLR start "rule__Tuple__Group__6"
    // InternalSpellDatabaseParser.g:6052:1: rule__Tuple__Group__6 : rule__Tuple__Group__6__Impl ;
    public final void rule__Tuple__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:6056:1: ( rule__Tuple__Group__6__Impl )
            // InternalSpellDatabaseParser.g:6057:2: rule__Tuple__Group__6__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Tuple__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tuple__Group__6"


    // $ANTLR start "rule__Tuple__Group__6__Impl"
    // InternalSpellDatabaseParser.g:6063:1: rule__Tuple__Group__6__Impl : ( RightParenthesis ) ;
    public final void rule__Tuple__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:6067:1: ( ( RightParenthesis ) )
            // InternalSpellDatabaseParser.g:6068:1: ( RightParenthesis )
            {
            // InternalSpellDatabaseParser.g:6068:1: ( RightParenthesis )
            // InternalSpellDatabaseParser.g:6069:1: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTupleAccess().getRightParenthesisKeyword_6()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTupleAccess().getRightParenthesisKeyword_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tuple__Group__6__Impl"


    // $ANTLR start "rule__Tuple__Group_2__0"
    // InternalSpellDatabaseParser.g:6096:1: rule__Tuple__Group_2__0 : rule__Tuple__Group_2__0__Impl rule__Tuple__Group_2__1 ;
    public final void rule__Tuple__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:6100:1: ( rule__Tuple__Group_2__0__Impl rule__Tuple__Group_2__1 )
            // InternalSpellDatabaseParser.g:6101:2: rule__Tuple__Group_2__0__Impl rule__Tuple__Group_2__1
            {
            pushFollow(FOLLOW_45);
            rule__Tuple__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Tuple__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tuple__Group_2__0"


    // $ANTLR start "rule__Tuple__Group_2__0__Impl"
    // InternalSpellDatabaseParser.g:6108:1: rule__Tuple__Group_2__0__Impl : ( ruleSkipped_NL ) ;
    public final void rule__Tuple__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:6112:1: ( ( ruleSkipped_NL ) )
            // InternalSpellDatabaseParser.g:6113:1: ( ruleSkipped_NL )
            {
            // InternalSpellDatabaseParser.g:6113:1: ( ruleSkipped_NL )
            // InternalSpellDatabaseParser.g:6114:1: ruleSkipped_NL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTupleAccess().getSkipped_NLParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSkipped_NL();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTupleAccess().getSkipped_NLParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tuple__Group_2__0__Impl"


    // $ANTLR start "rule__Tuple__Group_2__1"
    // InternalSpellDatabaseParser.g:6125:1: rule__Tuple__Group_2__1 : rule__Tuple__Group_2__1__Impl rule__Tuple__Group_2__2 ;
    public final void rule__Tuple__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:6129:1: ( rule__Tuple__Group_2__1__Impl rule__Tuple__Group_2__2 )
            // InternalSpellDatabaseParser.g:6130:2: rule__Tuple__Group_2__1__Impl rule__Tuple__Group_2__2
            {
            pushFollow(FOLLOW_37);
            rule__Tuple__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Tuple__Group_2__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tuple__Group_2__1"


    // $ANTLR start "rule__Tuple__Group_2__1__Impl"
    // InternalSpellDatabaseParser.g:6137:1: rule__Tuple__Group_2__1__Impl : ( ( rule__Tuple__ValuesAssignment_2_1 ) ) ;
    public final void rule__Tuple__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:6141:1: ( ( ( rule__Tuple__ValuesAssignment_2_1 ) ) )
            // InternalSpellDatabaseParser.g:6142:1: ( ( rule__Tuple__ValuesAssignment_2_1 ) )
            {
            // InternalSpellDatabaseParser.g:6142:1: ( ( rule__Tuple__ValuesAssignment_2_1 ) )
            // InternalSpellDatabaseParser.g:6143:1: ( rule__Tuple__ValuesAssignment_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTupleAccess().getValuesAssignment_2_1()); 
            }
            // InternalSpellDatabaseParser.g:6144:1: ( rule__Tuple__ValuesAssignment_2_1 )
            // InternalSpellDatabaseParser.g:6144:2: rule__Tuple__ValuesAssignment_2_1
            {
            pushFollow(FOLLOW_2);
            rule__Tuple__ValuesAssignment_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTupleAccess().getValuesAssignment_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tuple__Group_2__1__Impl"


    // $ANTLR start "rule__Tuple__Group_2__2"
    // InternalSpellDatabaseParser.g:6154:1: rule__Tuple__Group_2__2 : rule__Tuple__Group_2__2__Impl rule__Tuple__Group_2__3 ;
    public final void rule__Tuple__Group_2__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:6158:1: ( rule__Tuple__Group_2__2__Impl rule__Tuple__Group_2__3 )
            // InternalSpellDatabaseParser.g:6159:2: rule__Tuple__Group_2__2__Impl rule__Tuple__Group_2__3
            {
            pushFollow(FOLLOW_26);
            rule__Tuple__Group_2__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Tuple__Group_2__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tuple__Group_2__2"


    // $ANTLR start "rule__Tuple__Group_2__2__Impl"
    // InternalSpellDatabaseParser.g:6166:1: rule__Tuple__Group_2__2__Impl : ( ruleSkipped_NL ) ;
    public final void rule__Tuple__Group_2__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:6170:1: ( ( ruleSkipped_NL ) )
            // InternalSpellDatabaseParser.g:6171:1: ( ruleSkipped_NL )
            {
            // InternalSpellDatabaseParser.g:6171:1: ( ruleSkipped_NL )
            // InternalSpellDatabaseParser.g:6172:1: ruleSkipped_NL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTupleAccess().getSkipped_NLParserRuleCall_2_2()); 
            }
            pushFollow(FOLLOW_2);
            ruleSkipped_NL();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTupleAccess().getSkipped_NLParserRuleCall_2_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tuple__Group_2__2__Impl"


    // $ANTLR start "rule__Tuple__Group_2__3"
    // InternalSpellDatabaseParser.g:6183:1: rule__Tuple__Group_2__3 : rule__Tuple__Group_2__3__Impl ;
    public final void rule__Tuple__Group_2__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:6187:1: ( rule__Tuple__Group_2__3__Impl )
            // InternalSpellDatabaseParser.g:6188:2: rule__Tuple__Group_2__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Tuple__Group_2__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tuple__Group_2__3"


    // $ANTLR start "rule__Tuple__Group_2__3__Impl"
    // InternalSpellDatabaseParser.g:6194:1: rule__Tuple__Group_2__3__Impl : ( ( rule__Tuple__Group_2_3__0 )* ) ;
    public final void rule__Tuple__Group_2__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:6198:1: ( ( ( rule__Tuple__Group_2_3__0 )* ) )
            // InternalSpellDatabaseParser.g:6199:1: ( ( rule__Tuple__Group_2_3__0 )* )
            {
            // InternalSpellDatabaseParser.g:6199:1: ( ( rule__Tuple__Group_2_3__0 )* )
            // InternalSpellDatabaseParser.g:6200:1: ( rule__Tuple__Group_2_3__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTupleAccess().getGroup_2_3()); 
            }
            // InternalSpellDatabaseParser.g:6201:1: ( rule__Tuple__Group_2_3__0 )*
            loop71:
            do {
                int alt71=2;
                alt71 = dfa71.predict(input);
                switch (alt71) {
            	case 1 :
            	    // InternalSpellDatabaseParser.g:6201:2: rule__Tuple__Group_2_3__0
            	    {
            	    pushFollow(FOLLOW_28);
            	    rule__Tuple__Group_2_3__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop71;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTupleAccess().getGroup_2_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tuple__Group_2__3__Impl"


    // $ANTLR start "rule__Tuple__Group_2_3__0"
    // InternalSpellDatabaseParser.g:6219:1: rule__Tuple__Group_2_3__0 : rule__Tuple__Group_2_3__0__Impl rule__Tuple__Group_2_3__1 ;
    public final void rule__Tuple__Group_2_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:6223:1: ( rule__Tuple__Group_2_3__0__Impl rule__Tuple__Group_2_3__1 )
            // InternalSpellDatabaseParser.g:6224:2: rule__Tuple__Group_2_3__0__Impl rule__Tuple__Group_2_3__1
            {
            pushFollow(FOLLOW_37);
            rule__Tuple__Group_2_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Tuple__Group_2_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tuple__Group_2_3__0"


    // $ANTLR start "rule__Tuple__Group_2_3__0__Impl"
    // InternalSpellDatabaseParser.g:6231:1: rule__Tuple__Group_2_3__0__Impl : ( Comma ) ;
    public final void rule__Tuple__Group_2_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:6235:1: ( ( Comma ) )
            // InternalSpellDatabaseParser.g:6236:1: ( Comma )
            {
            // InternalSpellDatabaseParser.g:6236:1: ( Comma )
            // InternalSpellDatabaseParser.g:6237:1: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTupleAccess().getCommaKeyword_2_3_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTupleAccess().getCommaKeyword_2_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tuple__Group_2_3__0__Impl"


    // $ANTLR start "rule__Tuple__Group_2_3__1"
    // InternalSpellDatabaseParser.g:6250:1: rule__Tuple__Group_2_3__1 : rule__Tuple__Group_2_3__1__Impl rule__Tuple__Group_2_3__2 ;
    public final void rule__Tuple__Group_2_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:6254:1: ( rule__Tuple__Group_2_3__1__Impl rule__Tuple__Group_2_3__2 )
            // InternalSpellDatabaseParser.g:6255:2: rule__Tuple__Group_2_3__1__Impl rule__Tuple__Group_2_3__2
            {
            pushFollow(FOLLOW_45);
            rule__Tuple__Group_2_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Tuple__Group_2_3__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tuple__Group_2_3__1"


    // $ANTLR start "rule__Tuple__Group_2_3__1__Impl"
    // InternalSpellDatabaseParser.g:6262:1: rule__Tuple__Group_2_3__1__Impl : ( ruleSkipped_NL ) ;
    public final void rule__Tuple__Group_2_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:6266:1: ( ( ruleSkipped_NL ) )
            // InternalSpellDatabaseParser.g:6267:1: ( ruleSkipped_NL )
            {
            // InternalSpellDatabaseParser.g:6267:1: ( ruleSkipped_NL )
            // InternalSpellDatabaseParser.g:6268:1: ruleSkipped_NL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTupleAccess().getSkipped_NLParserRuleCall_2_3_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleSkipped_NL();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTupleAccess().getSkipped_NLParserRuleCall_2_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tuple__Group_2_3__1__Impl"


    // $ANTLR start "rule__Tuple__Group_2_3__2"
    // InternalSpellDatabaseParser.g:6279:1: rule__Tuple__Group_2_3__2 : rule__Tuple__Group_2_3__2__Impl ;
    public final void rule__Tuple__Group_2_3__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:6283:1: ( rule__Tuple__Group_2_3__2__Impl )
            // InternalSpellDatabaseParser.g:6284:2: rule__Tuple__Group_2_3__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Tuple__Group_2_3__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tuple__Group_2_3__2"


    // $ANTLR start "rule__Tuple__Group_2_3__2__Impl"
    // InternalSpellDatabaseParser.g:6290:1: rule__Tuple__Group_2_3__2__Impl : ( ( rule__Tuple__ValuesAssignment_2_3_2 ) ) ;
    public final void rule__Tuple__Group_2_3__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:6294:1: ( ( ( rule__Tuple__ValuesAssignment_2_3_2 ) ) )
            // InternalSpellDatabaseParser.g:6295:1: ( ( rule__Tuple__ValuesAssignment_2_3_2 ) )
            {
            // InternalSpellDatabaseParser.g:6295:1: ( ( rule__Tuple__ValuesAssignment_2_3_2 ) )
            // InternalSpellDatabaseParser.g:6296:1: ( rule__Tuple__ValuesAssignment_2_3_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTupleAccess().getValuesAssignment_2_3_2()); 
            }
            // InternalSpellDatabaseParser.g:6297:1: ( rule__Tuple__ValuesAssignment_2_3_2 )
            // InternalSpellDatabaseParser.g:6297:2: rule__Tuple__ValuesAssignment_2_3_2
            {
            pushFollow(FOLLOW_2);
            rule__Tuple__ValuesAssignment_2_3_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTupleAccess().getValuesAssignment_2_3_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tuple__Group_2_3__2__Impl"


    // $ANTLR start "rule__List__Group__0"
    // InternalSpellDatabaseParser.g:6313:1: rule__List__Group__0 : rule__List__Group__0__Impl rule__List__Group__1 ;
    public final void rule__List__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:6317:1: ( rule__List__Group__0__Impl rule__List__Group__1 )
            // InternalSpellDatabaseParser.g:6318:2: rule__List__Group__0__Impl rule__List__Group__1
            {
            pushFollow(FOLLOW_46);
            rule__List__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__List__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__List__Group__0"


    // $ANTLR start "rule__List__Group__0__Impl"
    // InternalSpellDatabaseParser.g:6325:1: rule__List__Group__0__Impl : ( () ) ;
    public final void rule__List__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:6329:1: ( ( () ) )
            // InternalSpellDatabaseParser.g:6330:1: ( () )
            {
            // InternalSpellDatabaseParser.g:6330:1: ( () )
            // InternalSpellDatabaseParser.g:6331:1: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getListAccess().getListAction_0()); 
            }
            // InternalSpellDatabaseParser.g:6332:1: ()
            // InternalSpellDatabaseParser.g:6334:1: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getListAccess().getListAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__List__Group__0__Impl"


    // $ANTLR start "rule__List__Group__1"
    // InternalSpellDatabaseParser.g:6344:1: rule__List__Group__1 : rule__List__Group__1__Impl rule__List__Group__2 ;
    public final void rule__List__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:6348:1: ( rule__List__Group__1__Impl rule__List__Group__2 )
            // InternalSpellDatabaseParser.g:6349:2: rule__List__Group__1__Impl rule__List__Group__2
            {
            pushFollow(FOLLOW_37);
            rule__List__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__List__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__List__Group__1"


    // $ANTLR start "rule__List__Group__1__Impl"
    // InternalSpellDatabaseParser.g:6356:1: rule__List__Group__1__Impl : ( LeftSquareBracket ) ;
    public final void rule__List__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:6360:1: ( ( LeftSquareBracket ) )
            // InternalSpellDatabaseParser.g:6361:1: ( LeftSquareBracket )
            {
            // InternalSpellDatabaseParser.g:6361:1: ( LeftSquareBracket )
            // InternalSpellDatabaseParser.g:6362:1: LeftSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getListAccess().getLeftSquareBracketKeyword_1()); 
            }
            match(input,LeftSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getListAccess().getLeftSquareBracketKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__List__Group__1__Impl"


    // $ANTLR start "rule__List__Group__2"
    // InternalSpellDatabaseParser.g:6375:1: rule__List__Group__2 : rule__List__Group__2__Impl rule__List__Group__3 ;
    public final void rule__List__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:6379:1: ( rule__List__Group__2__Impl rule__List__Group__3 )
            // InternalSpellDatabaseParser.g:6380:2: rule__List__Group__2__Impl rule__List__Group__3
            {
            pushFollow(FOLLOW_37);
            rule__List__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__List__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__List__Group__2"


    // $ANTLR start "rule__List__Group__2__Impl"
    // InternalSpellDatabaseParser.g:6387:1: rule__List__Group__2__Impl : ( ( rule__List__Group_2__0 )? ) ;
    public final void rule__List__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:6391:1: ( ( ( rule__List__Group_2__0 )? ) )
            // InternalSpellDatabaseParser.g:6392:1: ( ( rule__List__Group_2__0 )? )
            {
            // InternalSpellDatabaseParser.g:6392:1: ( ( rule__List__Group_2__0 )? )
            // InternalSpellDatabaseParser.g:6393:1: ( rule__List__Group_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getListAccess().getGroup_2()); 
            }
            // InternalSpellDatabaseParser.g:6394:1: ( rule__List__Group_2__0 )?
            int alt72=2;
            alt72 = dfa72.predict(input);
            switch (alt72) {
                case 1 :
                    // InternalSpellDatabaseParser.g:6394:2: rule__List__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__List__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getListAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__List__Group__2__Impl"


    // $ANTLR start "rule__List__Group__3"
    // InternalSpellDatabaseParser.g:6404:1: rule__List__Group__3 : rule__List__Group__3__Impl rule__List__Group__4 ;
    public final void rule__List__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:6408:1: ( rule__List__Group__3__Impl rule__List__Group__4 )
            // InternalSpellDatabaseParser.g:6409:2: rule__List__Group__3__Impl rule__List__Group__4
            {
            pushFollow(FOLLOW_43);
            rule__List__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__List__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__List__Group__3"


    // $ANTLR start "rule__List__Group__3__Impl"
    // InternalSpellDatabaseParser.g:6416:1: rule__List__Group__3__Impl : ( ruleSkipped_NL ) ;
    public final void rule__List__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:6420:1: ( ( ruleSkipped_NL ) )
            // InternalSpellDatabaseParser.g:6421:1: ( ruleSkipped_NL )
            {
            // InternalSpellDatabaseParser.g:6421:1: ( ruleSkipped_NL )
            // InternalSpellDatabaseParser.g:6422:1: ruleSkipped_NL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getListAccess().getSkipped_NLParserRuleCall_3()); 
            }
            pushFollow(FOLLOW_2);
            ruleSkipped_NL();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getListAccess().getSkipped_NLParserRuleCall_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__List__Group__3__Impl"


    // $ANTLR start "rule__List__Group__4"
    // InternalSpellDatabaseParser.g:6433:1: rule__List__Group__4 : rule__List__Group__4__Impl rule__List__Group__5 ;
    public final void rule__List__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:6437:1: ( rule__List__Group__4__Impl rule__List__Group__5 )
            // InternalSpellDatabaseParser.g:6438:2: rule__List__Group__4__Impl rule__List__Group__5
            {
            pushFollow(FOLLOW_43);
            rule__List__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__List__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__List__Group__4"


    // $ANTLR start "rule__List__Group__4__Impl"
    // InternalSpellDatabaseParser.g:6445:1: rule__List__Group__4__Impl : ( ( Comma )? ) ;
    public final void rule__List__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:6449:1: ( ( ( Comma )? ) )
            // InternalSpellDatabaseParser.g:6450:1: ( ( Comma )? )
            {
            // InternalSpellDatabaseParser.g:6450:1: ( ( Comma )? )
            // InternalSpellDatabaseParser.g:6451:1: ( Comma )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getListAccess().getCommaKeyword_4()); 
            }
            // InternalSpellDatabaseParser.g:6452:1: ( Comma )?
            int alt73=2;
            int LA73_0 = input.LA(1);

            if ( (LA73_0==Comma) ) {
                alt73=1;
            }
            switch (alt73) {
                case 1 :
                    // InternalSpellDatabaseParser.g:6453:2: Comma
                    {
                    match(input,Comma,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getListAccess().getCommaKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__List__Group__4__Impl"


    // $ANTLR start "rule__List__Group__5"
    // InternalSpellDatabaseParser.g:6464:1: rule__List__Group__5 : rule__List__Group__5__Impl rule__List__Group__6 ;
    public final void rule__List__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:6468:1: ( rule__List__Group__5__Impl rule__List__Group__6 )
            // InternalSpellDatabaseParser.g:6469:2: rule__List__Group__5__Impl rule__List__Group__6
            {
            pushFollow(FOLLOW_47);
            rule__List__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__List__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__List__Group__5"


    // $ANTLR start "rule__List__Group__5__Impl"
    // InternalSpellDatabaseParser.g:6476:1: rule__List__Group__5__Impl : ( ruleSkipped_NL ) ;
    public final void rule__List__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:6480:1: ( ( ruleSkipped_NL ) )
            // InternalSpellDatabaseParser.g:6481:1: ( ruleSkipped_NL )
            {
            // InternalSpellDatabaseParser.g:6481:1: ( ruleSkipped_NL )
            // InternalSpellDatabaseParser.g:6482:1: ruleSkipped_NL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getListAccess().getSkipped_NLParserRuleCall_5()); 
            }
            pushFollow(FOLLOW_2);
            ruleSkipped_NL();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getListAccess().getSkipped_NLParserRuleCall_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__List__Group__5__Impl"


    // $ANTLR start "rule__List__Group__6"
    // InternalSpellDatabaseParser.g:6493:1: rule__List__Group__6 : rule__List__Group__6__Impl ;
    public final void rule__List__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:6497:1: ( rule__List__Group__6__Impl )
            // InternalSpellDatabaseParser.g:6498:2: rule__List__Group__6__Impl
            {
            pushFollow(FOLLOW_2);
            rule__List__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__List__Group__6"


    // $ANTLR start "rule__List__Group__6__Impl"
    // InternalSpellDatabaseParser.g:6504:1: rule__List__Group__6__Impl : ( RightSquareBracket ) ;
    public final void rule__List__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:6508:1: ( ( RightSquareBracket ) )
            // InternalSpellDatabaseParser.g:6509:1: ( RightSquareBracket )
            {
            // InternalSpellDatabaseParser.g:6509:1: ( RightSquareBracket )
            // InternalSpellDatabaseParser.g:6510:1: RightSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getListAccess().getRightSquareBracketKeyword_6()); 
            }
            match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getListAccess().getRightSquareBracketKeyword_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__List__Group__6__Impl"


    // $ANTLR start "rule__List__Group_2__0"
    // InternalSpellDatabaseParser.g:6537:1: rule__List__Group_2__0 : rule__List__Group_2__0__Impl rule__List__Group_2__1 ;
    public final void rule__List__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:6541:1: ( rule__List__Group_2__0__Impl rule__List__Group_2__1 )
            // InternalSpellDatabaseParser.g:6542:2: rule__List__Group_2__0__Impl rule__List__Group_2__1
            {
            pushFollow(FOLLOW_45);
            rule__List__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__List__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__List__Group_2__0"


    // $ANTLR start "rule__List__Group_2__0__Impl"
    // InternalSpellDatabaseParser.g:6549:1: rule__List__Group_2__0__Impl : ( ruleSkipped_NL ) ;
    public final void rule__List__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:6553:1: ( ( ruleSkipped_NL ) )
            // InternalSpellDatabaseParser.g:6554:1: ( ruleSkipped_NL )
            {
            // InternalSpellDatabaseParser.g:6554:1: ( ruleSkipped_NL )
            // InternalSpellDatabaseParser.g:6555:1: ruleSkipped_NL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getListAccess().getSkipped_NLParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSkipped_NL();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getListAccess().getSkipped_NLParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__List__Group_2__0__Impl"


    // $ANTLR start "rule__List__Group_2__1"
    // InternalSpellDatabaseParser.g:6566:1: rule__List__Group_2__1 : rule__List__Group_2__1__Impl rule__List__Group_2__2 ;
    public final void rule__List__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:6570:1: ( rule__List__Group_2__1__Impl rule__List__Group_2__2 )
            // InternalSpellDatabaseParser.g:6571:2: rule__List__Group_2__1__Impl rule__List__Group_2__2
            {
            pushFollow(FOLLOW_37);
            rule__List__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__List__Group_2__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__List__Group_2__1"


    // $ANTLR start "rule__List__Group_2__1__Impl"
    // InternalSpellDatabaseParser.g:6578:1: rule__List__Group_2__1__Impl : ( ( rule__List__ValuesAssignment_2_1 ) ) ;
    public final void rule__List__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:6582:1: ( ( ( rule__List__ValuesAssignment_2_1 ) ) )
            // InternalSpellDatabaseParser.g:6583:1: ( ( rule__List__ValuesAssignment_2_1 ) )
            {
            // InternalSpellDatabaseParser.g:6583:1: ( ( rule__List__ValuesAssignment_2_1 ) )
            // InternalSpellDatabaseParser.g:6584:1: ( rule__List__ValuesAssignment_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getListAccess().getValuesAssignment_2_1()); 
            }
            // InternalSpellDatabaseParser.g:6585:1: ( rule__List__ValuesAssignment_2_1 )
            // InternalSpellDatabaseParser.g:6585:2: rule__List__ValuesAssignment_2_1
            {
            pushFollow(FOLLOW_2);
            rule__List__ValuesAssignment_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getListAccess().getValuesAssignment_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__List__Group_2__1__Impl"


    // $ANTLR start "rule__List__Group_2__2"
    // InternalSpellDatabaseParser.g:6595:1: rule__List__Group_2__2 : rule__List__Group_2__2__Impl rule__List__Group_2__3 ;
    public final void rule__List__Group_2__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:6599:1: ( rule__List__Group_2__2__Impl rule__List__Group_2__3 )
            // InternalSpellDatabaseParser.g:6600:2: rule__List__Group_2__2__Impl rule__List__Group_2__3
            {
            pushFollow(FOLLOW_26);
            rule__List__Group_2__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__List__Group_2__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__List__Group_2__2"


    // $ANTLR start "rule__List__Group_2__2__Impl"
    // InternalSpellDatabaseParser.g:6607:1: rule__List__Group_2__2__Impl : ( ruleSkipped_NL ) ;
    public final void rule__List__Group_2__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:6611:1: ( ( ruleSkipped_NL ) )
            // InternalSpellDatabaseParser.g:6612:1: ( ruleSkipped_NL )
            {
            // InternalSpellDatabaseParser.g:6612:1: ( ruleSkipped_NL )
            // InternalSpellDatabaseParser.g:6613:1: ruleSkipped_NL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getListAccess().getSkipped_NLParserRuleCall_2_2()); 
            }
            pushFollow(FOLLOW_2);
            ruleSkipped_NL();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getListAccess().getSkipped_NLParserRuleCall_2_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__List__Group_2__2__Impl"


    // $ANTLR start "rule__List__Group_2__3"
    // InternalSpellDatabaseParser.g:6624:1: rule__List__Group_2__3 : rule__List__Group_2__3__Impl ;
    public final void rule__List__Group_2__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:6628:1: ( rule__List__Group_2__3__Impl )
            // InternalSpellDatabaseParser.g:6629:2: rule__List__Group_2__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__List__Group_2__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__List__Group_2__3"


    // $ANTLR start "rule__List__Group_2__3__Impl"
    // InternalSpellDatabaseParser.g:6635:1: rule__List__Group_2__3__Impl : ( ( rule__List__Group_2_3__0 )* ) ;
    public final void rule__List__Group_2__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:6639:1: ( ( ( rule__List__Group_2_3__0 )* ) )
            // InternalSpellDatabaseParser.g:6640:1: ( ( rule__List__Group_2_3__0 )* )
            {
            // InternalSpellDatabaseParser.g:6640:1: ( ( rule__List__Group_2_3__0 )* )
            // InternalSpellDatabaseParser.g:6641:1: ( rule__List__Group_2_3__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getListAccess().getGroup_2_3()); 
            }
            // InternalSpellDatabaseParser.g:6642:1: ( rule__List__Group_2_3__0 )*
            loop74:
            do {
                int alt74=2;
                alt74 = dfa74.predict(input);
                switch (alt74) {
            	case 1 :
            	    // InternalSpellDatabaseParser.g:6642:2: rule__List__Group_2_3__0
            	    {
            	    pushFollow(FOLLOW_28);
            	    rule__List__Group_2_3__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop74;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getListAccess().getGroup_2_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__List__Group_2__3__Impl"


    // $ANTLR start "rule__List__Group_2_3__0"
    // InternalSpellDatabaseParser.g:6660:1: rule__List__Group_2_3__0 : rule__List__Group_2_3__0__Impl rule__List__Group_2_3__1 ;
    public final void rule__List__Group_2_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:6664:1: ( rule__List__Group_2_3__0__Impl rule__List__Group_2_3__1 )
            // InternalSpellDatabaseParser.g:6665:2: rule__List__Group_2_3__0__Impl rule__List__Group_2_3__1
            {
            pushFollow(FOLLOW_37);
            rule__List__Group_2_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__List__Group_2_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__List__Group_2_3__0"


    // $ANTLR start "rule__List__Group_2_3__0__Impl"
    // InternalSpellDatabaseParser.g:6672:1: rule__List__Group_2_3__0__Impl : ( Comma ) ;
    public final void rule__List__Group_2_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:6676:1: ( ( Comma ) )
            // InternalSpellDatabaseParser.g:6677:1: ( Comma )
            {
            // InternalSpellDatabaseParser.g:6677:1: ( Comma )
            // InternalSpellDatabaseParser.g:6678:1: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getListAccess().getCommaKeyword_2_3_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getListAccess().getCommaKeyword_2_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__List__Group_2_3__0__Impl"


    // $ANTLR start "rule__List__Group_2_3__1"
    // InternalSpellDatabaseParser.g:6691:1: rule__List__Group_2_3__1 : rule__List__Group_2_3__1__Impl rule__List__Group_2_3__2 ;
    public final void rule__List__Group_2_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:6695:1: ( rule__List__Group_2_3__1__Impl rule__List__Group_2_3__2 )
            // InternalSpellDatabaseParser.g:6696:2: rule__List__Group_2_3__1__Impl rule__List__Group_2_3__2
            {
            pushFollow(FOLLOW_45);
            rule__List__Group_2_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__List__Group_2_3__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__List__Group_2_3__1"


    // $ANTLR start "rule__List__Group_2_3__1__Impl"
    // InternalSpellDatabaseParser.g:6703:1: rule__List__Group_2_3__1__Impl : ( ruleSkipped_NL ) ;
    public final void rule__List__Group_2_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:6707:1: ( ( ruleSkipped_NL ) )
            // InternalSpellDatabaseParser.g:6708:1: ( ruleSkipped_NL )
            {
            // InternalSpellDatabaseParser.g:6708:1: ( ruleSkipped_NL )
            // InternalSpellDatabaseParser.g:6709:1: ruleSkipped_NL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getListAccess().getSkipped_NLParserRuleCall_2_3_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleSkipped_NL();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getListAccess().getSkipped_NLParserRuleCall_2_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__List__Group_2_3__1__Impl"


    // $ANTLR start "rule__List__Group_2_3__2"
    // InternalSpellDatabaseParser.g:6720:1: rule__List__Group_2_3__2 : rule__List__Group_2_3__2__Impl ;
    public final void rule__List__Group_2_3__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:6724:1: ( rule__List__Group_2_3__2__Impl )
            // InternalSpellDatabaseParser.g:6725:2: rule__List__Group_2_3__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__List__Group_2_3__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__List__Group_2_3__2"


    // $ANTLR start "rule__List__Group_2_3__2__Impl"
    // InternalSpellDatabaseParser.g:6731:1: rule__List__Group_2_3__2__Impl : ( ( rule__List__ValuesAssignment_2_3_2 ) ) ;
    public final void rule__List__Group_2_3__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:6735:1: ( ( ( rule__List__ValuesAssignment_2_3_2 ) ) )
            // InternalSpellDatabaseParser.g:6736:1: ( ( rule__List__ValuesAssignment_2_3_2 ) )
            {
            // InternalSpellDatabaseParser.g:6736:1: ( ( rule__List__ValuesAssignment_2_3_2 ) )
            // InternalSpellDatabaseParser.g:6737:1: ( rule__List__ValuesAssignment_2_3_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getListAccess().getValuesAssignment_2_3_2()); 
            }
            // InternalSpellDatabaseParser.g:6738:1: ( rule__List__ValuesAssignment_2_3_2 )
            // InternalSpellDatabaseParser.g:6738:2: rule__List__ValuesAssignment_2_3_2
            {
            pushFollow(FOLLOW_2);
            rule__List__ValuesAssignment_2_3_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getListAccess().getValuesAssignment_2_3_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__List__Group_2_3__2__Impl"


    // $ANTLR start "rule__Dictionary__Group__0"
    // InternalSpellDatabaseParser.g:6754:1: rule__Dictionary__Group__0 : rule__Dictionary__Group__0__Impl rule__Dictionary__Group__1 ;
    public final void rule__Dictionary__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:6758:1: ( rule__Dictionary__Group__0__Impl rule__Dictionary__Group__1 )
            // InternalSpellDatabaseParser.g:6759:2: rule__Dictionary__Group__0__Impl rule__Dictionary__Group__1
            {
            pushFollow(FOLLOW_48);
            rule__Dictionary__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Dictionary__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dictionary__Group__0"


    // $ANTLR start "rule__Dictionary__Group__0__Impl"
    // InternalSpellDatabaseParser.g:6766:1: rule__Dictionary__Group__0__Impl : ( () ) ;
    public final void rule__Dictionary__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:6770:1: ( ( () ) )
            // InternalSpellDatabaseParser.g:6771:1: ( () )
            {
            // InternalSpellDatabaseParser.g:6771:1: ( () )
            // InternalSpellDatabaseParser.g:6772:1: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDictionaryAccess().getDicitonaryAction_0()); 
            }
            // InternalSpellDatabaseParser.g:6773:1: ()
            // InternalSpellDatabaseParser.g:6775:1: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDictionaryAccess().getDicitonaryAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dictionary__Group__0__Impl"


    // $ANTLR start "rule__Dictionary__Group__1"
    // InternalSpellDatabaseParser.g:6785:1: rule__Dictionary__Group__1 : rule__Dictionary__Group__1__Impl rule__Dictionary__Group__2 ;
    public final void rule__Dictionary__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:6789:1: ( rule__Dictionary__Group__1__Impl rule__Dictionary__Group__2 )
            // InternalSpellDatabaseParser.g:6790:2: rule__Dictionary__Group__1__Impl rule__Dictionary__Group__2
            {
            pushFollow(FOLLOW_37);
            rule__Dictionary__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Dictionary__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dictionary__Group__1"


    // $ANTLR start "rule__Dictionary__Group__1__Impl"
    // InternalSpellDatabaseParser.g:6797:1: rule__Dictionary__Group__1__Impl : ( LeftCurlyBracket ) ;
    public final void rule__Dictionary__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:6801:1: ( ( LeftCurlyBracket ) )
            // InternalSpellDatabaseParser.g:6802:1: ( LeftCurlyBracket )
            {
            // InternalSpellDatabaseParser.g:6802:1: ( LeftCurlyBracket )
            // InternalSpellDatabaseParser.g:6803:1: LeftCurlyBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDictionaryAccess().getLeftCurlyBracketKeyword_1()); 
            }
            match(input,LeftCurlyBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDictionaryAccess().getLeftCurlyBracketKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dictionary__Group__1__Impl"


    // $ANTLR start "rule__Dictionary__Group__2"
    // InternalSpellDatabaseParser.g:6816:1: rule__Dictionary__Group__2 : rule__Dictionary__Group__2__Impl rule__Dictionary__Group__3 ;
    public final void rule__Dictionary__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:6820:1: ( rule__Dictionary__Group__2__Impl rule__Dictionary__Group__3 )
            // InternalSpellDatabaseParser.g:6821:2: rule__Dictionary__Group__2__Impl rule__Dictionary__Group__3
            {
            pushFollow(FOLLOW_37);
            rule__Dictionary__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Dictionary__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dictionary__Group__2"


    // $ANTLR start "rule__Dictionary__Group__2__Impl"
    // InternalSpellDatabaseParser.g:6828:1: rule__Dictionary__Group__2__Impl : ( ( rule__Dictionary__Group_2__0 )? ) ;
    public final void rule__Dictionary__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:6832:1: ( ( ( rule__Dictionary__Group_2__0 )? ) )
            // InternalSpellDatabaseParser.g:6833:1: ( ( rule__Dictionary__Group_2__0 )? )
            {
            // InternalSpellDatabaseParser.g:6833:1: ( ( rule__Dictionary__Group_2__0 )? )
            // InternalSpellDatabaseParser.g:6834:1: ( rule__Dictionary__Group_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDictionaryAccess().getGroup_2()); 
            }
            // InternalSpellDatabaseParser.g:6835:1: ( rule__Dictionary__Group_2__0 )?
            int alt75=2;
            alt75 = dfa75.predict(input);
            switch (alt75) {
                case 1 :
                    // InternalSpellDatabaseParser.g:6835:2: rule__Dictionary__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Dictionary__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDictionaryAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dictionary__Group__2__Impl"


    // $ANTLR start "rule__Dictionary__Group__3"
    // InternalSpellDatabaseParser.g:6845:1: rule__Dictionary__Group__3 : rule__Dictionary__Group__3__Impl rule__Dictionary__Group__4 ;
    public final void rule__Dictionary__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:6849:1: ( rule__Dictionary__Group__3__Impl rule__Dictionary__Group__4 )
            // InternalSpellDatabaseParser.g:6850:2: rule__Dictionary__Group__3__Impl rule__Dictionary__Group__4
            {
            pushFollow(FOLLOW_43);
            rule__Dictionary__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Dictionary__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dictionary__Group__3"


    // $ANTLR start "rule__Dictionary__Group__3__Impl"
    // InternalSpellDatabaseParser.g:6857:1: rule__Dictionary__Group__3__Impl : ( ruleSkipped_NL ) ;
    public final void rule__Dictionary__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:6861:1: ( ( ruleSkipped_NL ) )
            // InternalSpellDatabaseParser.g:6862:1: ( ruleSkipped_NL )
            {
            // InternalSpellDatabaseParser.g:6862:1: ( ruleSkipped_NL )
            // InternalSpellDatabaseParser.g:6863:1: ruleSkipped_NL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDictionaryAccess().getSkipped_NLParserRuleCall_3()); 
            }
            pushFollow(FOLLOW_2);
            ruleSkipped_NL();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDictionaryAccess().getSkipped_NLParserRuleCall_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dictionary__Group__3__Impl"


    // $ANTLR start "rule__Dictionary__Group__4"
    // InternalSpellDatabaseParser.g:6874:1: rule__Dictionary__Group__4 : rule__Dictionary__Group__4__Impl rule__Dictionary__Group__5 ;
    public final void rule__Dictionary__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:6878:1: ( rule__Dictionary__Group__4__Impl rule__Dictionary__Group__5 )
            // InternalSpellDatabaseParser.g:6879:2: rule__Dictionary__Group__4__Impl rule__Dictionary__Group__5
            {
            pushFollow(FOLLOW_43);
            rule__Dictionary__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Dictionary__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dictionary__Group__4"


    // $ANTLR start "rule__Dictionary__Group__4__Impl"
    // InternalSpellDatabaseParser.g:6886:1: rule__Dictionary__Group__4__Impl : ( ( Comma )? ) ;
    public final void rule__Dictionary__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:6890:1: ( ( ( Comma )? ) )
            // InternalSpellDatabaseParser.g:6891:1: ( ( Comma )? )
            {
            // InternalSpellDatabaseParser.g:6891:1: ( ( Comma )? )
            // InternalSpellDatabaseParser.g:6892:1: ( Comma )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDictionaryAccess().getCommaKeyword_4()); 
            }
            // InternalSpellDatabaseParser.g:6893:1: ( Comma )?
            int alt76=2;
            int LA76_0 = input.LA(1);

            if ( (LA76_0==Comma) ) {
                alt76=1;
            }
            switch (alt76) {
                case 1 :
                    // InternalSpellDatabaseParser.g:6894:2: Comma
                    {
                    match(input,Comma,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDictionaryAccess().getCommaKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dictionary__Group__4__Impl"


    // $ANTLR start "rule__Dictionary__Group__5"
    // InternalSpellDatabaseParser.g:6905:1: rule__Dictionary__Group__5 : rule__Dictionary__Group__5__Impl rule__Dictionary__Group__6 ;
    public final void rule__Dictionary__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:6909:1: ( rule__Dictionary__Group__5__Impl rule__Dictionary__Group__6 )
            // InternalSpellDatabaseParser.g:6910:2: rule__Dictionary__Group__5__Impl rule__Dictionary__Group__6
            {
            pushFollow(FOLLOW_49);
            rule__Dictionary__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Dictionary__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dictionary__Group__5"


    // $ANTLR start "rule__Dictionary__Group__5__Impl"
    // InternalSpellDatabaseParser.g:6917:1: rule__Dictionary__Group__5__Impl : ( ruleSkipped_NL ) ;
    public final void rule__Dictionary__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:6921:1: ( ( ruleSkipped_NL ) )
            // InternalSpellDatabaseParser.g:6922:1: ( ruleSkipped_NL )
            {
            // InternalSpellDatabaseParser.g:6922:1: ( ruleSkipped_NL )
            // InternalSpellDatabaseParser.g:6923:1: ruleSkipped_NL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDictionaryAccess().getSkipped_NLParserRuleCall_5()); 
            }
            pushFollow(FOLLOW_2);
            ruleSkipped_NL();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDictionaryAccess().getSkipped_NLParserRuleCall_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dictionary__Group__5__Impl"


    // $ANTLR start "rule__Dictionary__Group__6"
    // InternalSpellDatabaseParser.g:6934:1: rule__Dictionary__Group__6 : rule__Dictionary__Group__6__Impl ;
    public final void rule__Dictionary__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:6938:1: ( rule__Dictionary__Group__6__Impl )
            // InternalSpellDatabaseParser.g:6939:2: rule__Dictionary__Group__6__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Dictionary__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dictionary__Group__6"


    // $ANTLR start "rule__Dictionary__Group__6__Impl"
    // InternalSpellDatabaseParser.g:6945:1: rule__Dictionary__Group__6__Impl : ( RightCurlyBracket ) ;
    public final void rule__Dictionary__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:6949:1: ( ( RightCurlyBracket ) )
            // InternalSpellDatabaseParser.g:6950:1: ( RightCurlyBracket )
            {
            // InternalSpellDatabaseParser.g:6950:1: ( RightCurlyBracket )
            // InternalSpellDatabaseParser.g:6951:1: RightCurlyBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDictionaryAccess().getRightCurlyBracketKeyword_6()); 
            }
            match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDictionaryAccess().getRightCurlyBracketKeyword_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dictionary__Group__6__Impl"


    // $ANTLR start "rule__Dictionary__Group_2__0"
    // InternalSpellDatabaseParser.g:6978:1: rule__Dictionary__Group_2__0 : rule__Dictionary__Group_2__0__Impl rule__Dictionary__Group_2__1 ;
    public final void rule__Dictionary__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:6982:1: ( rule__Dictionary__Group_2__0__Impl rule__Dictionary__Group_2__1 )
            // InternalSpellDatabaseParser.g:6983:2: rule__Dictionary__Group_2__0__Impl rule__Dictionary__Group_2__1
            {
            pushFollow(FOLLOW_45);
            rule__Dictionary__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Dictionary__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dictionary__Group_2__0"


    // $ANTLR start "rule__Dictionary__Group_2__0__Impl"
    // InternalSpellDatabaseParser.g:6990:1: rule__Dictionary__Group_2__0__Impl : ( ruleSkipped_NL ) ;
    public final void rule__Dictionary__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:6994:1: ( ( ruleSkipped_NL ) )
            // InternalSpellDatabaseParser.g:6995:1: ( ruleSkipped_NL )
            {
            // InternalSpellDatabaseParser.g:6995:1: ( ruleSkipped_NL )
            // InternalSpellDatabaseParser.g:6996:1: ruleSkipped_NL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDictionaryAccess().getSkipped_NLParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSkipped_NL();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDictionaryAccess().getSkipped_NLParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dictionary__Group_2__0__Impl"


    // $ANTLR start "rule__Dictionary__Group_2__1"
    // InternalSpellDatabaseParser.g:7007:1: rule__Dictionary__Group_2__1 : rule__Dictionary__Group_2__1__Impl rule__Dictionary__Group_2__2 ;
    public final void rule__Dictionary__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:7011:1: ( rule__Dictionary__Group_2__1__Impl rule__Dictionary__Group_2__2 )
            // InternalSpellDatabaseParser.g:7012:2: rule__Dictionary__Group_2__1__Impl rule__Dictionary__Group_2__2
            {
            pushFollow(FOLLOW_37);
            rule__Dictionary__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Dictionary__Group_2__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dictionary__Group_2__1"


    // $ANTLR start "rule__Dictionary__Group_2__1__Impl"
    // InternalSpellDatabaseParser.g:7019:1: rule__Dictionary__Group_2__1__Impl : ( ( rule__Dictionary__EntriesAssignment_2_1 ) ) ;
    public final void rule__Dictionary__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:7023:1: ( ( ( rule__Dictionary__EntriesAssignment_2_1 ) ) )
            // InternalSpellDatabaseParser.g:7024:1: ( ( rule__Dictionary__EntriesAssignment_2_1 ) )
            {
            // InternalSpellDatabaseParser.g:7024:1: ( ( rule__Dictionary__EntriesAssignment_2_1 ) )
            // InternalSpellDatabaseParser.g:7025:1: ( rule__Dictionary__EntriesAssignment_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDictionaryAccess().getEntriesAssignment_2_1()); 
            }
            // InternalSpellDatabaseParser.g:7026:1: ( rule__Dictionary__EntriesAssignment_2_1 )
            // InternalSpellDatabaseParser.g:7026:2: rule__Dictionary__EntriesAssignment_2_1
            {
            pushFollow(FOLLOW_2);
            rule__Dictionary__EntriesAssignment_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDictionaryAccess().getEntriesAssignment_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dictionary__Group_2__1__Impl"


    // $ANTLR start "rule__Dictionary__Group_2__2"
    // InternalSpellDatabaseParser.g:7036:1: rule__Dictionary__Group_2__2 : rule__Dictionary__Group_2__2__Impl rule__Dictionary__Group_2__3 ;
    public final void rule__Dictionary__Group_2__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:7040:1: ( rule__Dictionary__Group_2__2__Impl rule__Dictionary__Group_2__3 )
            // InternalSpellDatabaseParser.g:7041:2: rule__Dictionary__Group_2__2__Impl rule__Dictionary__Group_2__3
            {
            pushFollow(FOLLOW_26);
            rule__Dictionary__Group_2__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Dictionary__Group_2__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dictionary__Group_2__2"


    // $ANTLR start "rule__Dictionary__Group_2__2__Impl"
    // InternalSpellDatabaseParser.g:7048:1: rule__Dictionary__Group_2__2__Impl : ( ruleSkipped_NL ) ;
    public final void rule__Dictionary__Group_2__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:7052:1: ( ( ruleSkipped_NL ) )
            // InternalSpellDatabaseParser.g:7053:1: ( ruleSkipped_NL )
            {
            // InternalSpellDatabaseParser.g:7053:1: ( ruleSkipped_NL )
            // InternalSpellDatabaseParser.g:7054:1: ruleSkipped_NL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDictionaryAccess().getSkipped_NLParserRuleCall_2_2()); 
            }
            pushFollow(FOLLOW_2);
            ruleSkipped_NL();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDictionaryAccess().getSkipped_NLParserRuleCall_2_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dictionary__Group_2__2__Impl"


    // $ANTLR start "rule__Dictionary__Group_2__3"
    // InternalSpellDatabaseParser.g:7065:1: rule__Dictionary__Group_2__3 : rule__Dictionary__Group_2__3__Impl ;
    public final void rule__Dictionary__Group_2__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:7069:1: ( rule__Dictionary__Group_2__3__Impl )
            // InternalSpellDatabaseParser.g:7070:2: rule__Dictionary__Group_2__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Dictionary__Group_2__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dictionary__Group_2__3"


    // $ANTLR start "rule__Dictionary__Group_2__3__Impl"
    // InternalSpellDatabaseParser.g:7076:1: rule__Dictionary__Group_2__3__Impl : ( ( rule__Dictionary__Group_2_3__0 )* ) ;
    public final void rule__Dictionary__Group_2__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:7080:1: ( ( ( rule__Dictionary__Group_2_3__0 )* ) )
            // InternalSpellDatabaseParser.g:7081:1: ( ( rule__Dictionary__Group_2_3__0 )* )
            {
            // InternalSpellDatabaseParser.g:7081:1: ( ( rule__Dictionary__Group_2_3__0 )* )
            // InternalSpellDatabaseParser.g:7082:1: ( rule__Dictionary__Group_2_3__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDictionaryAccess().getGroup_2_3()); 
            }
            // InternalSpellDatabaseParser.g:7083:1: ( rule__Dictionary__Group_2_3__0 )*
            loop77:
            do {
                int alt77=2;
                alt77 = dfa77.predict(input);
                switch (alt77) {
            	case 1 :
            	    // InternalSpellDatabaseParser.g:7083:2: rule__Dictionary__Group_2_3__0
            	    {
            	    pushFollow(FOLLOW_28);
            	    rule__Dictionary__Group_2_3__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop77;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDictionaryAccess().getGroup_2_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dictionary__Group_2__3__Impl"


    // $ANTLR start "rule__Dictionary__Group_2_3__0"
    // InternalSpellDatabaseParser.g:7101:1: rule__Dictionary__Group_2_3__0 : rule__Dictionary__Group_2_3__0__Impl rule__Dictionary__Group_2_3__1 ;
    public final void rule__Dictionary__Group_2_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:7105:1: ( rule__Dictionary__Group_2_3__0__Impl rule__Dictionary__Group_2_3__1 )
            // InternalSpellDatabaseParser.g:7106:2: rule__Dictionary__Group_2_3__0__Impl rule__Dictionary__Group_2_3__1
            {
            pushFollow(FOLLOW_37);
            rule__Dictionary__Group_2_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Dictionary__Group_2_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dictionary__Group_2_3__0"


    // $ANTLR start "rule__Dictionary__Group_2_3__0__Impl"
    // InternalSpellDatabaseParser.g:7113:1: rule__Dictionary__Group_2_3__0__Impl : ( Comma ) ;
    public final void rule__Dictionary__Group_2_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:7117:1: ( ( Comma ) )
            // InternalSpellDatabaseParser.g:7118:1: ( Comma )
            {
            // InternalSpellDatabaseParser.g:7118:1: ( Comma )
            // InternalSpellDatabaseParser.g:7119:1: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDictionaryAccess().getCommaKeyword_2_3_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDictionaryAccess().getCommaKeyword_2_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dictionary__Group_2_3__0__Impl"


    // $ANTLR start "rule__Dictionary__Group_2_3__1"
    // InternalSpellDatabaseParser.g:7132:1: rule__Dictionary__Group_2_3__1 : rule__Dictionary__Group_2_3__1__Impl rule__Dictionary__Group_2_3__2 ;
    public final void rule__Dictionary__Group_2_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:7136:1: ( rule__Dictionary__Group_2_3__1__Impl rule__Dictionary__Group_2_3__2 )
            // InternalSpellDatabaseParser.g:7137:2: rule__Dictionary__Group_2_3__1__Impl rule__Dictionary__Group_2_3__2
            {
            pushFollow(FOLLOW_45);
            rule__Dictionary__Group_2_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Dictionary__Group_2_3__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dictionary__Group_2_3__1"


    // $ANTLR start "rule__Dictionary__Group_2_3__1__Impl"
    // InternalSpellDatabaseParser.g:7144:1: rule__Dictionary__Group_2_3__1__Impl : ( ruleSkipped_NL ) ;
    public final void rule__Dictionary__Group_2_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:7148:1: ( ( ruleSkipped_NL ) )
            // InternalSpellDatabaseParser.g:7149:1: ( ruleSkipped_NL )
            {
            // InternalSpellDatabaseParser.g:7149:1: ( ruleSkipped_NL )
            // InternalSpellDatabaseParser.g:7150:1: ruleSkipped_NL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDictionaryAccess().getSkipped_NLParserRuleCall_2_3_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleSkipped_NL();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDictionaryAccess().getSkipped_NLParserRuleCall_2_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dictionary__Group_2_3__1__Impl"


    // $ANTLR start "rule__Dictionary__Group_2_3__2"
    // InternalSpellDatabaseParser.g:7161:1: rule__Dictionary__Group_2_3__2 : rule__Dictionary__Group_2_3__2__Impl rule__Dictionary__Group_2_3__3 ;
    public final void rule__Dictionary__Group_2_3__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:7165:1: ( rule__Dictionary__Group_2_3__2__Impl rule__Dictionary__Group_2_3__3 )
            // InternalSpellDatabaseParser.g:7166:2: rule__Dictionary__Group_2_3__2__Impl rule__Dictionary__Group_2_3__3
            {
            pushFollow(FOLLOW_37);
            rule__Dictionary__Group_2_3__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Dictionary__Group_2_3__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dictionary__Group_2_3__2"


    // $ANTLR start "rule__Dictionary__Group_2_3__2__Impl"
    // InternalSpellDatabaseParser.g:7173:1: rule__Dictionary__Group_2_3__2__Impl : ( ( rule__Dictionary__EntriesAssignment_2_3_2 ) ) ;
    public final void rule__Dictionary__Group_2_3__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:7177:1: ( ( ( rule__Dictionary__EntriesAssignment_2_3_2 ) ) )
            // InternalSpellDatabaseParser.g:7178:1: ( ( rule__Dictionary__EntriesAssignment_2_3_2 ) )
            {
            // InternalSpellDatabaseParser.g:7178:1: ( ( rule__Dictionary__EntriesAssignment_2_3_2 ) )
            // InternalSpellDatabaseParser.g:7179:1: ( rule__Dictionary__EntriesAssignment_2_3_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDictionaryAccess().getEntriesAssignment_2_3_2()); 
            }
            // InternalSpellDatabaseParser.g:7180:1: ( rule__Dictionary__EntriesAssignment_2_3_2 )
            // InternalSpellDatabaseParser.g:7180:2: rule__Dictionary__EntriesAssignment_2_3_2
            {
            pushFollow(FOLLOW_2);
            rule__Dictionary__EntriesAssignment_2_3_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDictionaryAccess().getEntriesAssignment_2_3_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dictionary__Group_2_3__2__Impl"


    // $ANTLR start "rule__Dictionary__Group_2_3__3"
    // InternalSpellDatabaseParser.g:7190:1: rule__Dictionary__Group_2_3__3 : rule__Dictionary__Group_2_3__3__Impl ;
    public final void rule__Dictionary__Group_2_3__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:7194:1: ( rule__Dictionary__Group_2_3__3__Impl )
            // InternalSpellDatabaseParser.g:7195:2: rule__Dictionary__Group_2_3__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Dictionary__Group_2_3__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dictionary__Group_2_3__3"


    // $ANTLR start "rule__Dictionary__Group_2_3__3__Impl"
    // InternalSpellDatabaseParser.g:7201:1: rule__Dictionary__Group_2_3__3__Impl : ( ruleSkipped_NL ) ;
    public final void rule__Dictionary__Group_2_3__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:7205:1: ( ( ruleSkipped_NL ) )
            // InternalSpellDatabaseParser.g:7206:1: ( ruleSkipped_NL )
            {
            // InternalSpellDatabaseParser.g:7206:1: ( ruleSkipped_NL )
            // InternalSpellDatabaseParser.g:7207:1: ruleSkipped_NL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDictionaryAccess().getSkipped_NLParserRuleCall_2_3_3()); 
            }
            pushFollow(FOLLOW_2);
            ruleSkipped_NL();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDictionaryAccess().getSkipped_NLParserRuleCall_2_3_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dictionary__Group_2_3__3__Impl"


    // $ANTLR start "rule__DictionaryEntry__Group__0"
    // InternalSpellDatabaseParser.g:7226:1: rule__DictionaryEntry__Group__0 : rule__DictionaryEntry__Group__0__Impl rule__DictionaryEntry__Group__1 ;
    public final void rule__DictionaryEntry__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:7230:1: ( rule__DictionaryEntry__Group__0__Impl rule__DictionaryEntry__Group__1 )
            // InternalSpellDatabaseParser.g:7231:2: rule__DictionaryEntry__Group__0__Impl rule__DictionaryEntry__Group__1
            {
            pushFollow(FOLLOW_37);
            rule__DictionaryEntry__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DictionaryEntry__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DictionaryEntry__Group__0"


    // $ANTLR start "rule__DictionaryEntry__Group__0__Impl"
    // InternalSpellDatabaseParser.g:7238:1: rule__DictionaryEntry__Group__0__Impl : ( ( rule__DictionaryEntry__KeyAssignment_0 ) ) ;
    public final void rule__DictionaryEntry__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:7242:1: ( ( ( rule__DictionaryEntry__KeyAssignment_0 ) ) )
            // InternalSpellDatabaseParser.g:7243:1: ( ( rule__DictionaryEntry__KeyAssignment_0 ) )
            {
            // InternalSpellDatabaseParser.g:7243:1: ( ( rule__DictionaryEntry__KeyAssignment_0 ) )
            // InternalSpellDatabaseParser.g:7244:1: ( rule__DictionaryEntry__KeyAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDictionaryEntryAccess().getKeyAssignment_0()); 
            }
            // InternalSpellDatabaseParser.g:7245:1: ( rule__DictionaryEntry__KeyAssignment_0 )
            // InternalSpellDatabaseParser.g:7245:2: rule__DictionaryEntry__KeyAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__DictionaryEntry__KeyAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDictionaryEntryAccess().getKeyAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DictionaryEntry__Group__0__Impl"


    // $ANTLR start "rule__DictionaryEntry__Group__1"
    // InternalSpellDatabaseParser.g:7255:1: rule__DictionaryEntry__Group__1 : rule__DictionaryEntry__Group__1__Impl rule__DictionaryEntry__Group__2 ;
    public final void rule__DictionaryEntry__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:7259:1: ( rule__DictionaryEntry__Group__1__Impl rule__DictionaryEntry__Group__2 )
            // InternalSpellDatabaseParser.g:7260:2: rule__DictionaryEntry__Group__1__Impl rule__DictionaryEntry__Group__2
            {
            pushFollow(FOLLOW_23);
            rule__DictionaryEntry__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DictionaryEntry__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DictionaryEntry__Group__1"


    // $ANTLR start "rule__DictionaryEntry__Group__1__Impl"
    // InternalSpellDatabaseParser.g:7267:1: rule__DictionaryEntry__Group__1__Impl : ( ruleSkipped_NL ) ;
    public final void rule__DictionaryEntry__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:7271:1: ( ( ruleSkipped_NL ) )
            // InternalSpellDatabaseParser.g:7272:1: ( ruleSkipped_NL )
            {
            // InternalSpellDatabaseParser.g:7272:1: ( ruleSkipped_NL )
            // InternalSpellDatabaseParser.g:7273:1: ruleSkipped_NL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDictionaryEntryAccess().getSkipped_NLParserRuleCall_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleSkipped_NL();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDictionaryEntryAccess().getSkipped_NLParserRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DictionaryEntry__Group__1__Impl"


    // $ANTLR start "rule__DictionaryEntry__Group__2"
    // InternalSpellDatabaseParser.g:7284:1: rule__DictionaryEntry__Group__2 : rule__DictionaryEntry__Group__2__Impl ;
    public final void rule__DictionaryEntry__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:7288:1: ( rule__DictionaryEntry__Group__2__Impl )
            // InternalSpellDatabaseParser.g:7289:2: rule__DictionaryEntry__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DictionaryEntry__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DictionaryEntry__Group__2"


    // $ANTLR start "rule__DictionaryEntry__Group__2__Impl"
    // InternalSpellDatabaseParser.g:7295:1: rule__DictionaryEntry__Group__2__Impl : ( ( rule__DictionaryEntry__Group_2__0 )? ) ;
    public final void rule__DictionaryEntry__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:7299:1: ( ( ( rule__DictionaryEntry__Group_2__0 )? ) )
            // InternalSpellDatabaseParser.g:7300:1: ( ( rule__DictionaryEntry__Group_2__0 )? )
            {
            // InternalSpellDatabaseParser.g:7300:1: ( ( rule__DictionaryEntry__Group_2__0 )? )
            // InternalSpellDatabaseParser.g:7301:1: ( rule__DictionaryEntry__Group_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDictionaryEntryAccess().getGroup_2()); 
            }
            // InternalSpellDatabaseParser.g:7302:1: ( rule__DictionaryEntry__Group_2__0 )?
            int alt78=2;
            int LA78_0 = input.LA(1);

            if ( (LA78_0==RULE_COLON) ) {
                alt78=1;
            }
            switch (alt78) {
                case 1 :
                    // InternalSpellDatabaseParser.g:7302:2: rule__DictionaryEntry__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__DictionaryEntry__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDictionaryEntryAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DictionaryEntry__Group__2__Impl"


    // $ANTLR start "rule__DictionaryEntry__Group_2__0"
    // InternalSpellDatabaseParser.g:7318:1: rule__DictionaryEntry__Group_2__0 : rule__DictionaryEntry__Group_2__0__Impl rule__DictionaryEntry__Group_2__1 ;
    public final void rule__DictionaryEntry__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:7322:1: ( rule__DictionaryEntry__Group_2__0__Impl rule__DictionaryEntry__Group_2__1 )
            // InternalSpellDatabaseParser.g:7323:2: rule__DictionaryEntry__Group_2__0__Impl rule__DictionaryEntry__Group_2__1
            {
            pushFollow(FOLLOW_37);
            rule__DictionaryEntry__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DictionaryEntry__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DictionaryEntry__Group_2__0"


    // $ANTLR start "rule__DictionaryEntry__Group_2__0__Impl"
    // InternalSpellDatabaseParser.g:7330:1: rule__DictionaryEntry__Group_2__0__Impl : ( RULE_COLON ) ;
    public final void rule__DictionaryEntry__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:7334:1: ( ( RULE_COLON ) )
            // InternalSpellDatabaseParser.g:7335:1: ( RULE_COLON )
            {
            // InternalSpellDatabaseParser.g:7335:1: ( RULE_COLON )
            // InternalSpellDatabaseParser.g:7336:1: RULE_COLON
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDictionaryEntryAccess().getCOLONTerminalRuleCall_2_0()); 
            }
            match(input,RULE_COLON,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDictionaryEntryAccess().getCOLONTerminalRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DictionaryEntry__Group_2__0__Impl"


    // $ANTLR start "rule__DictionaryEntry__Group_2__1"
    // InternalSpellDatabaseParser.g:7347:1: rule__DictionaryEntry__Group_2__1 : rule__DictionaryEntry__Group_2__1__Impl rule__DictionaryEntry__Group_2__2 ;
    public final void rule__DictionaryEntry__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:7351:1: ( rule__DictionaryEntry__Group_2__1__Impl rule__DictionaryEntry__Group_2__2 )
            // InternalSpellDatabaseParser.g:7352:2: rule__DictionaryEntry__Group_2__1__Impl rule__DictionaryEntry__Group_2__2
            {
            pushFollow(FOLLOW_45);
            rule__DictionaryEntry__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DictionaryEntry__Group_2__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DictionaryEntry__Group_2__1"


    // $ANTLR start "rule__DictionaryEntry__Group_2__1__Impl"
    // InternalSpellDatabaseParser.g:7359:1: rule__DictionaryEntry__Group_2__1__Impl : ( ruleSkipped_NL ) ;
    public final void rule__DictionaryEntry__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:7363:1: ( ( ruleSkipped_NL ) )
            // InternalSpellDatabaseParser.g:7364:1: ( ruleSkipped_NL )
            {
            // InternalSpellDatabaseParser.g:7364:1: ( ruleSkipped_NL )
            // InternalSpellDatabaseParser.g:7365:1: ruleSkipped_NL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDictionaryEntryAccess().getSkipped_NLParserRuleCall_2_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleSkipped_NL();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDictionaryEntryAccess().getSkipped_NLParserRuleCall_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DictionaryEntry__Group_2__1__Impl"


    // $ANTLR start "rule__DictionaryEntry__Group_2__2"
    // InternalSpellDatabaseParser.g:7376:1: rule__DictionaryEntry__Group_2__2 : rule__DictionaryEntry__Group_2__2__Impl ;
    public final void rule__DictionaryEntry__Group_2__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:7380:1: ( rule__DictionaryEntry__Group_2__2__Impl )
            // InternalSpellDatabaseParser.g:7381:2: rule__DictionaryEntry__Group_2__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DictionaryEntry__Group_2__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DictionaryEntry__Group_2__2"


    // $ANTLR start "rule__DictionaryEntry__Group_2__2__Impl"
    // InternalSpellDatabaseParser.g:7387:1: rule__DictionaryEntry__Group_2__2__Impl : ( ( rule__DictionaryEntry__ValueAssignment_2_2 ) ) ;
    public final void rule__DictionaryEntry__Group_2__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:7391:1: ( ( ( rule__DictionaryEntry__ValueAssignment_2_2 ) ) )
            // InternalSpellDatabaseParser.g:7392:1: ( ( rule__DictionaryEntry__ValueAssignment_2_2 ) )
            {
            // InternalSpellDatabaseParser.g:7392:1: ( ( rule__DictionaryEntry__ValueAssignment_2_2 ) )
            // InternalSpellDatabaseParser.g:7393:1: ( rule__DictionaryEntry__ValueAssignment_2_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDictionaryEntryAccess().getValueAssignment_2_2()); 
            }
            // InternalSpellDatabaseParser.g:7394:1: ( rule__DictionaryEntry__ValueAssignment_2_2 )
            // InternalSpellDatabaseParser.g:7394:2: rule__DictionaryEntry__ValueAssignment_2_2
            {
            pushFollow(FOLLOW_2);
            rule__DictionaryEntry__ValueAssignment_2_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDictionaryEntryAccess().getValueAssignment_2_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DictionaryEntry__Group_2__2__Impl"


    // $ANTLR start "rule__FLOAT_Val__Group__0"
    // InternalSpellDatabaseParser.g:7410:1: rule__FLOAT_Val__Group__0 : rule__FLOAT_Val__Group__0__Impl rule__FLOAT_Val__Group__1 ;
    public final void rule__FLOAT_Val__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:7414:1: ( rule__FLOAT_Val__Group__0__Impl rule__FLOAT_Val__Group__1 )
            // InternalSpellDatabaseParser.g:7415:2: rule__FLOAT_Val__Group__0__Impl rule__FLOAT_Val__Group__1
            {
            pushFollow(FOLLOW_35);
            rule__FLOAT_Val__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FLOAT_Val__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FLOAT_Val__Group__0"


    // $ANTLR start "rule__FLOAT_Val__Group__0__Impl"
    // InternalSpellDatabaseParser.g:7422:1: rule__FLOAT_Val__Group__0__Impl : ( ( rule__FLOAT_Val__Alternatives_0 )? ) ;
    public final void rule__FLOAT_Val__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:7426:1: ( ( ( rule__FLOAT_Val__Alternatives_0 )? ) )
            // InternalSpellDatabaseParser.g:7427:1: ( ( rule__FLOAT_Val__Alternatives_0 )? )
            {
            // InternalSpellDatabaseParser.g:7427:1: ( ( rule__FLOAT_Val__Alternatives_0 )? )
            // InternalSpellDatabaseParser.g:7428:1: ( rule__FLOAT_Val__Alternatives_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFLOAT_ValAccess().getAlternatives_0()); 
            }
            // InternalSpellDatabaseParser.g:7429:1: ( rule__FLOAT_Val__Alternatives_0 )?
            int alt79=2;
            int LA79_0 = input.LA(1);

            if ( ((LA79_0>=RULE_PLUS && LA79_0<=RULE_MINUS)) ) {
                alt79=1;
            }
            switch (alt79) {
                case 1 :
                    // InternalSpellDatabaseParser.g:7429:2: rule__FLOAT_Val__Alternatives_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__FLOAT_Val__Alternatives_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFLOAT_ValAccess().getAlternatives_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FLOAT_Val__Group__0__Impl"


    // $ANTLR start "rule__FLOAT_Val__Group__1"
    // InternalSpellDatabaseParser.g:7439:1: rule__FLOAT_Val__Group__1 : rule__FLOAT_Val__Group__1__Impl ;
    public final void rule__FLOAT_Val__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:7443:1: ( rule__FLOAT_Val__Group__1__Impl )
            // InternalSpellDatabaseParser.g:7444:2: rule__FLOAT_Val__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FLOAT_Val__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FLOAT_Val__Group__1"


    // $ANTLR start "rule__FLOAT_Val__Group__1__Impl"
    // InternalSpellDatabaseParser.g:7450:1: rule__FLOAT_Val__Group__1__Impl : ( RULE_FLOAT ) ;
    public final void rule__FLOAT_Val__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:7454:1: ( ( RULE_FLOAT ) )
            // InternalSpellDatabaseParser.g:7455:1: ( RULE_FLOAT )
            {
            // InternalSpellDatabaseParser.g:7455:1: ( RULE_FLOAT )
            // InternalSpellDatabaseParser.g:7456:1: RULE_FLOAT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFLOAT_ValAccess().getFLOATTerminalRuleCall_1()); 
            }
            match(input,RULE_FLOAT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFLOAT_ValAccess().getFLOATTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FLOAT_Val__Group__1__Impl"


    // $ANTLR start "rule__Skipped_NL__Group__0"
    // InternalSpellDatabaseParser.g:7471:1: rule__Skipped_NL__Group__0 : rule__Skipped_NL__Group__0__Impl rule__Skipped_NL__Group__1 ;
    public final void rule__Skipped_NL__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:7475:1: ( rule__Skipped_NL__Group__0__Impl rule__Skipped_NL__Group__1 )
            // InternalSpellDatabaseParser.g:7476:2: rule__Skipped_NL__Group__0__Impl rule__Skipped_NL__Group__1
            {
            pushFollow(FOLLOW_30);
            rule__Skipped_NL__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Skipped_NL__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Skipped_NL__Group__0"


    // $ANTLR start "rule__Skipped_NL__Group__0__Impl"
    // InternalSpellDatabaseParser.g:7483:1: rule__Skipped_NL__Group__0__Impl : ( Backslash ) ;
    public final void rule__Skipped_NL__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:7487:1: ( ( Backslash ) )
            // InternalSpellDatabaseParser.g:7488:1: ( Backslash )
            {
            // InternalSpellDatabaseParser.g:7488:1: ( Backslash )
            // InternalSpellDatabaseParser.g:7489:1: Backslash
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSkipped_NLAccess().getReverseSolidusKeyword_0()); 
            }
            match(input,Backslash,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSkipped_NLAccess().getReverseSolidusKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Skipped_NL__Group__0__Impl"


    // $ANTLR start "rule__Skipped_NL__Group__1"
    // InternalSpellDatabaseParser.g:7502:1: rule__Skipped_NL__Group__1 : rule__Skipped_NL__Group__1__Impl ;
    public final void rule__Skipped_NL__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:7506:1: ( rule__Skipped_NL__Group__1__Impl )
            // InternalSpellDatabaseParser.g:7507:2: rule__Skipped_NL__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Skipped_NL__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Skipped_NL__Group__1"


    // $ANTLR start "rule__Skipped_NL__Group__1__Impl"
    // InternalSpellDatabaseParser.g:7513:1: rule__Skipped_NL__Group__1__Impl : ( RULE_NL ) ;
    public final void rule__Skipped_NL__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:7517:1: ( ( RULE_NL ) )
            // InternalSpellDatabaseParser.g:7518:1: ( RULE_NL )
            {
            // InternalSpellDatabaseParser.g:7518:1: ( RULE_NL )
            // InternalSpellDatabaseParser.g:7519:1: RULE_NL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSkipped_NLAccess().getNLTerminalRuleCall_1()); 
            }
            match(input,RULE_NL,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSkipped_NLAccess().getNLTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Skipped_NL__Group__1__Impl"


    // $ANTLR start "rule__RELTIME__Group__0"
    // InternalSpellDatabaseParser.g:7534:1: rule__RELTIME__Group__0 : rule__RELTIME__Group__0__Impl rule__RELTIME__Group__1 ;
    public final void rule__RELTIME__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:7538:1: ( rule__RELTIME__Group__0__Impl rule__RELTIME__Group__1 )
            // InternalSpellDatabaseParser.g:7539:2: rule__RELTIME__Group__0__Impl rule__RELTIME__Group__1
            {
            pushFollow(FOLLOW_50);
            rule__RELTIME__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__RELTIME__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RELTIME__Group__0"


    // $ANTLR start "rule__RELTIME__Group__0__Impl"
    // InternalSpellDatabaseParser.g:7546:1: rule__RELTIME__Group__0__Impl : ( ruleINTEGER ) ;
    public final void rule__RELTIME__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:7550:1: ( ( ruleINTEGER ) )
            // InternalSpellDatabaseParser.g:7551:1: ( ruleINTEGER )
            {
            // InternalSpellDatabaseParser.g:7551:1: ( ruleINTEGER )
            // InternalSpellDatabaseParser.g:7552:1: ruleINTEGER
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRELTIMEAccess().getINTEGERParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleINTEGER();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRELTIMEAccess().getINTEGERParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RELTIME__Group__0__Impl"


    // $ANTLR start "rule__RELTIME__Group__1"
    // InternalSpellDatabaseParser.g:7563:1: rule__RELTIME__Group__1 : rule__RELTIME__Group__1__Impl ;
    public final void rule__RELTIME__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:7567:1: ( rule__RELTIME__Group__1__Impl )
            // InternalSpellDatabaseParser.g:7568:2: rule__RELTIME__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__RELTIME__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RELTIME__Group__1"


    // $ANTLR start "rule__RELTIME__Group__1__Impl"
    // InternalSpellDatabaseParser.g:7574:1: rule__RELTIME__Group__1__Impl : ( ( rule__RELTIME__Alternatives_1 ) ) ;
    public final void rule__RELTIME__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:7578:1: ( ( ( rule__RELTIME__Alternatives_1 ) ) )
            // InternalSpellDatabaseParser.g:7579:1: ( ( rule__RELTIME__Alternatives_1 ) )
            {
            // InternalSpellDatabaseParser.g:7579:1: ( ( rule__RELTIME__Alternatives_1 ) )
            // InternalSpellDatabaseParser.g:7580:1: ( rule__RELTIME__Alternatives_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRELTIMEAccess().getAlternatives_1()); 
            }
            // InternalSpellDatabaseParser.g:7581:1: ( rule__RELTIME__Alternatives_1 )
            // InternalSpellDatabaseParser.g:7581:2: rule__RELTIME__Alternatives_1
            {
            pushFollow(FOLLOW_2);
            rule__RELTIME__Alternatives_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRELTIMEAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RELTIME__Group__1__Impl"


    // $ANTLR start "rule__RELTIME__Group_1_0__0"
    // InternalSpellDatabaseParser.g:7595:1: rule__RELTIME__Group_1_0__0 : rule__RELTIME__Group_1_0__0__Impl rule__RELTIME__Group_1_0__1 ;
    public final void rule__RELTIME__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:7599:1: ( rule__RELTIME__Group_1_0__0__Impl rule__RELTIME__Group_1_0__1 )
            // InternalSpellDatabaseParser.g:7600:2: rule__RELTIME__Group_1_0__0__Impl rule__RELTIME__Group_1_0__1
            {
            pushFollow(FOLLOW_23);
            rule__RELTIME__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__RELTIME__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RELTIME__Group_1_0__0"


    // $ANTLR start "rule__RELTIME__Group_1_0__0__Impl"
    // InternalSpellDatabaseParser.g:7607:1: rule__RELTIME__Group_1_0__0__Impl : ( RULE_INT ) ;
    public final void rule__RELTIME__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:7611:1: ( ( RULE_INT ) )
            // InternalSpellDatabaseParser.g:7612:1: ( RULE_INT )
            {
            // InternalSpellDatabaseParser.g:7612:1: ( RULE_INT )
            // InternalSpellDatabaseParser.g:7613:1: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRELTIMEAccess().getINTTerminalRuleCall_1_0_0()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRELTIMEAccess().getINTTerminalRuleCall_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RELTIME__Group_1_0__0__Impl"


    // $ANTLR start "rule__RELTIME__Group_1_0__1"
    // InternalSpellDatabaseParser.g:7624:1: rule__RELTIME__Group_1_0__1 : rule__RELTIME__Group_1_0__1__Impl rule__RELTIME__Group_1_0__2 ;
    public final void rule__RELTIME__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:7628:1: ( rule__RELTIME__Group_1_0__1__Impl rule__RELTIME__Group_1_0__2 )
            // InternalSpellDatabaseParser.g:7629:2: rule__RELTIME__Group_1_0__1__Impl rule__RELTIME__Group_1_0__2
            {
            pushFollow(FOLLOW_51);
            rule__RELTIME__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__RELTIME__Group_1_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RELTIME__Group_1_0__1"


    // $ANTLR start "rule__RELTIME__Group_1_0__1__Impl"
    // InternalSpellDatabaseParser.g:7636:1: rule__RELTIME__Group_1_0__1__Impl : ( RULE_COLON ) ;
    public final void rule__RELTIME__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:7640:1: ( ( RULE_COLON ) )
            // InternalSpellDatabaseParser.g:7641:1: ( RULE_COLON )
            {
            // InternalSpellDatabaseParser.g:7641:1: ( RULE_COLON )
            // InternalSpellDatabaseParser.g:7642:1: RULE_COLON
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRELTIMEAccess().getCOLONTerminalRuleCall_1_0_1()); 
            }
            match(input,RULE_COLON,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRELTIMEAccess().getCOLONTerminalRuleCall_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RELTIME__Group_1_0__1__Impl"


    // $ANTLR start "rule__RELTIME__Group_1_0__2"
    // InternalSpellDatabaseParser.g:7653:1: rule__RELTIME__Group_1_0__2 : rule__RELTIME__Group_1_0__2__Impl rule__RELTIME__Group_1_0__3 ;
    public final void rule__RELTIME__Group_1_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:7657:1: ( rule__RELTIME__Group_1_0__2__Impl rule__RELTIME__Group_1_0__3 )
            // InternalSpellDatabaseParser.g:7658:2: rule__RELTIME__Group_1_0__2__Impl rule__RELTIME__Group_1_0__3
            {
            pushFollow(FOLLOW_23);
            rule__RELTIME__Group_1_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__RELTIME__Group_1_0__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RELTIME__Group_1_0__2"


    // $ANTLR start "rule__RELTIME__Group_1_0__2__Impl"
    // InternalSpellDatabaseParser.g:7665:1: rule__RELTIME__Group_1_0__2__Impl : ( RULE_INT ) ;
    public final void rule__RELTIME__Group_1_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:7669:1: ( ( RULE_INT ) )
            // InternalSpellDatabaseParser.g:7670:1: ( RULE_INT )
            {
            // InternalSpellDatabaseParser.g:7670:1: ( RULE_INT )
            // InternalSpellDatabaseParser.g:7671:1: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRELTIMEAccess().getINTTerminalRuleCall_1_0_2()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRELTIMEAccess().getINTTerminalRuleCall_1_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RELTIME__Group_1_0__2__Impl"


    // $ANTLR start "rule__RELTIME__Group_1_0__3"
    // InternalSpellDatabaseParser.g:7682:1: rule__RELTIME__Group_1_0__3 : rule__RELTIME__Group_1_0__3__Impl rule__RELTIME__Group_1_0__4 ;
    public final void rule__RELTIME__Group_1_0__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:7686:1: ( rule__RELTIME__Group_1_0__3__Impl rule__RELTIME__Group_1_0__4 )
            // InternalSpellDatabaseParser.g:7687:2: rule__RELTIME__Group_1_0__3__Impl rule__RELTIME__Group_1_0__4
            {
            pushFollow(FOLLOW_51);
            rule__RELTIME__Group_1_0__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__RELTIME__Group_1_0__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RELTIME__Group_1_0__3"


    // $ANTLR start "rule__RELTIME__Group_1_0__3__Impl"
    // InternalSpellDatabaseParser.g:7694:1: rule__RELTIME__Group_1_0__3__Impl : ( RULE_COLON ) ;
    public final void rule__RELTIME__Group_1_0__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:7698:1: ( ( RULE_COLON ) )
            // InternalSpellDatabaseParser.g:7699:1: ( RULE_COLON )
            {
            // InternalSpellDatabaseParser.g:7699:1: ( RULE_COLON )
            // InternalSpellDatabaseParser.g:7700:1: RULE_COLON
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRELTIMEAccess().getCOLONTerminalRuleCall_1_0_3()); 
            }
            match(input,RULE_COLON,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRELTIMEAccess().getCOLONTerminalRuleCall_1_0_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RELTIME__Group_1_0__3__Impl"


    // $ANTLR start "rule__RELTIME__Group_1_0__4"
    // InternalSpellDatabaseParser.g:7711:1: rule__RELTIME__Group_1_0__4 : rule__RELTIME__Group_1_0__4__Impl ;
    public final void rule__RELTIME__Group_1_0__4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:7715:1: ( rule__RELTIME__Group_1_0__4__Impl )
            // InternalSpellDatabaseParser.g:7716:2: rule__RELTIME__Group_1_0__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__RELTIME__Group_1_0__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RELTIME__Group_1_0__4"


    // $ANTLR start "rule__RELTIME__Group_1_0__4__Impl"
    // InternalSpellDatabaseParser.g:7722:1: rule__RELTIME__Group_1_0__4__Impl : ( RULE_INT ) ;
    public final void rule__RELTIME__Group_1_0__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:7726:1: ( ( RULE_INT ) )
            // InternalSpellDatabaseParser.g:7727:1: ( RULE_INT )
            {
            // InternalSpellDatabaseParser.g:7727:1: ( RULE_INT )
            // InternalSpellDatabaseParser.g:7728:1: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRELTIMEAccess().getINTTerminalRuleCall_1_0_4()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRELTIMEAccess().getINTTerminalRuleCall_1_0_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RELTIME__Group_1_0__4__Impl"


    // $ANTLR start "rule__RELTIME__Group_1_1__0"
    // InternalSpellDatabaseParser.g:7749:1: rule__RELTIME__Group_1_1__0 : rule__RELTIME__Group_1_1__0__Impl rule__RELTIME__Group_1_1__1 ;
    public final void rule__RELTIME__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:7753:1: ( rule__RELTIME__Group_1_1__0__Impl rule__RELTIME__Group_1_1__1 )
            // InternalSpellDatabaseParser.g:7754:2: rule__RELTIME__Group_1_1__0__Impl rule__RELTIME__Group_1_1__1
            {
            pushFollow(FOLLOW_51);
            rule__RELTIME__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__RELTIME__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RELTIME__Group_1_1__0"


    // $ANTLR start "rule__RELTIME__Group_1_1__0__Impl"
    // InternalSpellDatabaseParser.g:7761:1: rule__RELTIME__Group_1_1__0__Impl : ( RULE_COLON ) ;
    public final void rule__RELTIME__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:7765:1: ( ( RULE_COLON ) )
            // InternalSpellDatabaseParser.g:7766:1: ( RULE_COLON )
            {
            // InternalSpellDatabaseParser.g:7766:1: ( RULE_COLON )
            // InternalSpellDatabaseParser.g:7767:1: RULE_COLON
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRELTIMEAccess().getCOLONTerminalRuleCall_1_1_0()); 
            }
            match(input,RULE_COLON,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRELTIMEAccess().getCOLONTerminalRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RELTIME__Group_1_1__0__Impl"


    // $ANTLR start "rule__RELTIME__Group_1_1__1"
    // InternalSpellDatabaseParser.g:7778:1: rule__RELTIME__Group_1_1__1 : rule__RELTIME__Group_1_1__1__Impl rule__RELTIME__Group_1_1__2 ;
    public final void rule__RELTIME__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:7782:1: ( rule__RELTIME__Group_1_1__1__Impl rule__RELTIME__Group_1_1__2 )
            // InternalSpellDatabaseParser.g:7783:2: rule__RELTIME__Group_1_1__1__Impl rule__RELTIME__Group_1_1__2
            {
            pushFollow(FOLLOW_23);
            rule__RELTIME__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__RELTIME__Group_1_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RELTIME__Group_1_1__1"


    // $ANTLR start "rule__RELTIME__Group_1_1__1__Impl"
    // InternalSpellDatabaseParser.g:7790:1: rule__RELTIME__Group_1_1__1__Impl : ( RULE_INT ) ;
    public final void rule__RELTIME__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:7794:1: ( ( RULE_INT ) )
            // InternalSpellDatabaseParser.g:7795:1: ( RULE_INT )
            {
            // InternalSpellDatabaseParser.g:7795:1: ( RULE_INT )
            // InternalSpellDatabaseParser.g:7796:1: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRELTIMEAccess().getINTTerminalRuleCall_1_1_1()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRELTIMEAccess().getINTTerminalRuleCall_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RELTIME__Group_1_1__1__Impl"


    // $ANTLR start "rule__RELTIME__Group_1_1__2"
    // InternalSpellDatabaseParser.g:7807:1: rule__RELTIME__Group_1_1__2 : rule__RELTIME__Group_1_1__2__Impl rule__RELTIME__Group_1_1__3 ;
    public final void rule__RELTIME__Group_1_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:7811:1: ( rule__RELTIME__Group_1_1__2__Impl rule__RELTIME__Group_1_1__3 )
            // InternalSpellDatabaseParser.g:7812:2: rule__RELTIME__Group_1_1__2__Impl rule__RELTIME__Group_1_1__3
            {
            pushFollow(FOLLOW_51);
            rule__RELTIME__Group_1_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__RELTIME__Group_1_1__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RELTIME__Group_1_1__2"


    // $ANTLR start "rule__RELTIME__Group_1_1__2__Impl"
    // InternalSpellDatabaseParser.g:7819:1: rule__RELTIME__Group_1_1__2__Impl : ( RULE_COLON ) ;
    public final void rule__RELTIME__Group_1_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:7823:1: ( ( RULE_COLON ) )
            // InternalSpellDatabaseParser.g:7824:1: ( RULE_COLON )
            {
            // InternalSpellDatabaseParser.g:7824:1: ( RULE_COLON )
            // InternalSpellDatabaseParser.g:7825:1: RULE_COLON
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRELTIMEAccess().getCOLONTerminalRuleCall_1_1_2()); 
            }
            match(input,RULE_COLON,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRELTIMEAccess().getCOLONTerminalRuleCall_1_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RELTIME__Group_1_1__2__Impl"


    // $ANTLR start "rule__RELTIME__Group_1_1__3"
    // InternalSpellDatabaseParser.g:7836:1: rule__RELTIME__Group_1_1__3 : rule__RELTIME__Group_1_1__3__Impl ;
    public final void rule__RELTIME__Group_1_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:7840:1: ( rule__RELTIME__Group_1_1__3__Impl )
            // InternalSpellDatabaseParser.g:7841:2: rule__RELTIME__Group_1_1__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__RELTIME__Group_1_1__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RELTIME__Group_1_1__3"


    // $ANTLR start "rule__RELTIME__Group_1_1__3__Impl"
    // InternalSpellDatabaseParser.g:7847:1: rule__RELTIME__Group_1_1__3__Impl : ( RULE_INT ) ;
    public final void rule__RELTIME__Group_1_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:7851:1: ( ( RULE_INT ) )
            // InternalSpellDatabaseParser.g:7852:1: ( RULE_INT )
            {
            // InternalSpellDatabaseParser.g:7852:1: ( RULE_INT )
            // InternalSpellDatabaseParser.g:7853:1: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRELTIMEAccess().getINTTerminalRuleCall_1_1_3()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRELTIMEAccess().getINTTerminalRuleCall_1_1_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RELTIME__Group_1_1__3__Impl"


    // $ANTLR start "rule__ABSTIME__Group_0__0"
    // InternalSpellDatabaseParser.g:7872:1: rule__ABSTIME__Group_0__0 : rule__ABSTIME__Group_0__0__Impl rule__ABSTIME__Group_0__1 ;
    public final void rule__ABSTIME__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:7876:1: ( rule__ABSTIME__Group_0__0__Impl rule__ABSTIME__Group_0__1 )
            // InternalSpellDatabaseParser.g:7877:2: rule__ABSTIME__Group_0__0__Impl rule__ABSTIME__Group_0__1
            {
            pushFollow(FOLLOW_52);
            rule__ABSTIME__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ABSTIME__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ABSTIME__Group_0__0"


    // $ANTLR start "rule__ABSTIME__Group_0__0__Impl"
    // InternalSpellDatabaseParser.g:7884:1: rule__ABSTIME__Group_0__0__Impl : ( ( rule__ABSTIME__Group_0_0__0 ) ) ;
    public final void rule__ABSTIME__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:7888:1: ( ( ( rule__ABSTIME__Group_0_0__0 ) ) )
            // InternalSpellDatabaseParser.g:7889:1: ( ( rule__ABSTIME__Group_0_0__0 ) )
            {
            // InternalSpellDatabaseParser.g:7889:1: ( ( rule__ABSTIME__Group_0_0__0 ) )
            // InternalSpellDatabaseParser.g:7890:1: ( rule__ABSTIME__Group_0_0__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getABSTIMEAccess().getGroup_0_0()); 
            }
            // InternalSpellDatabaseParser.g:7891:1: ( rule__ABSTIME__Group_0_0__0 )
            // InternalSpellDatabaseParser.g:7891:2: rule__ABSTIME__Group_0_0__0
            {
            pushFollow(FOLLOW_2);
            rule__ABSTIME__Group_0_0__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getABSTIMEAccess().getGroup_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ABSTIME__Group_0__0__Impl"


    // $ANTLR start "rule__ABSTIME__Group_0__1"
    // InternalSpellDatabaseParser.g:7901:1: rule__ABSTIME__Group_0__1 : rule__ABSTIME__Group_0__1__Impl rule__ABSTIME__Group_0__2 ;
    public final void rule__ABSTIME__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:7905:1: ( rule__ABSTIME__Group_0__1__Impl rule__ABSTIME__Group_0__2 )
            // InternalSpellDatabaseParser.g:7906:2: rule__ABSTIME__Group_0__1__Impl rule__ABSTIME__Group_0__2
            {
            pushFollow(FOLLOW_51);
            rule__ABSTIME__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ABSTIME__Group_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ABSTIME__Group_0__1"


    // $ANTLR start "rule__ABSTIME__Group_0__1__Impl"
    // InternalSpellDatabaseParser.g:7913:1: rule__ABSTIME__Group_0__1__Impl : ( ( rule__ABSTIME__Alternatives_0_1 ) ) ;
    public final void rule__ABSTIME__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:7917:1: ( ( ( rule__ABSTIME__Alternatives_0_1 ) ) )
            // InternalSpellDatabaseParser.g:7918:1: ( ( rule__ABSTIME__Alternatives_0_1 ) )
            {
            // InternalSpellDatabaseParser.g:7918:1: ( ( rule__ABSTIME__Alternatives_0_1 ) )
            // InternalSpellDatabaseParser.g:7919:1: ( rule__ABSTIME__Alternatives_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getABSTIMEAccess().getAlternatives_0_1()); 
            }
            // InternalSpellDatabaseParser.g:7920:1: ( rule__ABSTIME__Alternatives_0_1 )
            // InternalSpellDatabaseParser.g:7920:2: rule__ABSTIME__Alternatives_0_1
            {
            pushFollow(FOLLOW_2);
            rule__ABSTIME__Alternatives_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getABSTIMEAccess().getAlternatives_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ABSTIME__Group_0__1__Impl"


    // $ANTLR start "rule__ABSTIME__Group_0__2"
    // InternalSpellDatabaseParser.g:7930:1: rule__ABSTIME__Group_0__2 : rule__ABSTIME__Group_0__2__Impl ;
    public final void rule__ABSTIME__Group_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:7934:1: ( rule__ABSTIME__Group_0__2__Impl )
            // InternalSpellDatabaseParser.g:7935:2: rule__ABSTIME__Group_0__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ABSTIME__Group_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ABSTIME__Group_0__2"


    // $ANTLR start "rule__ABSTIME__Group_0__2__Impl"
    // InternalSpellDatabaseParser.g:7941:1: rule__ABSTIME__Group_0__2__Impl : ( ( rule__ABSTIME__Group_0_2__0 )? ) ;
    public final void rule__ABSTIME__Group_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:7945:1: ( ( ( rule__ABSTIME__Group_0_2__0 )? ) )
            // InternalSpellDatabaseParser.g:7946:1: ( ( rule__ABSTIME__Group_0_2__0 )? )
            {
            // InternalSpellDatabaseParser.g:7946:1: ( ( rule__ABSTIME__Group_0_2__0 )? )
            // InternalSpellDatabaseParser.g:7947:1: ( rule__ABSTIME__Group_0_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getABSTIMEAccess().getGroup_0_2()); 
            }
            // InternalSpellDatabaseParser.g:7948:1: ( rule__ABSTIME__Group_0_2__0 )?
            int alt80=2;
            int LA80_0 = input.LA(1);

            if ( (LA80_0==RULE_INT) ) {
                alt80=1;
            }
            switch (alt80) {
                case 1 :
                    // InternalSpellDatabaseParser.g:7948:2: rule__ABSTIME__Group_0_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ABSTIME__Group_0_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getABSTIMEAccess().getGroup_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ABSTIME__Group_0__2__Impl"


    // $ANTLR start "rule__ABSTIME__Group_0_0__0"
    // InternalSpellDatabaseParser.g:7964:1: rule__ABSTIME__Group_0_0__0 : rule__ABSTIME__Group_0_0__0__Impl rule__ABSTIME__Group_0_0__1 ;
    public final void rule__ABSTIME__Group_0_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:7968:1: ( rule__ABSTIME__Group_0_0__0__Impl rule__ABSTIME__Group_0_0__1 )
            // InternalSpellDatabaseParser.g:7969:2: rule__ABSTIME__Group_0_0__0__Impl rule__ABSTIME__Group_0_0__1
            {
            pushFollow(FOLLOW_53);
            rule__ABSTIME__Group_0_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ABSTIME__Group_0_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ABSTIME__Group_0_0__0"


    // $ANTLR start "rule__ABSTIME__Group_0_0__0__Impl"
    // InternalSpellDatabaseParser.g:7976:1: rule__ABSTIME__Group_0_0__0__Impl : ( RULE_INT ) ;
    public final void rule__ABSTIME__Group_0_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:7980:1: ( ( RULE_INT ) )
            // InternalSpellDatabaseParser.g:7981:1: ( RULE_INT )
            {
            // InternalSpellDatabaseParser.g:7981:1: ( RULE_INT )
            // InternalSpellDatabaseParser.g:7982:1: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getABSTIMEAccess().getINTTerminalRuleCall_0_0_0()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getABSTIMEAccess().getINTTerminalRuleCall_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ABSTIME__Group_0_0__0__Impl"


    // $ANTLR start "rule__ABSTIME__Group_0_0__1"
    // InternalSpellDatabaseParser.g:7993:1: rule__ABSTIME__Group_0_0__1 : rule__ABSTIME__Group_0_0__1__Impl rule__ABSTIME__Group_0_0__2 ;
    public final void rule__ABSTIME__Group_0_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:7997:1: ( rule__ABSTIME__Group_0_0__1__Impl rule__ABSTIME__Group_0_0__2 )
            // InternalSpellDatabaseParser.g:7998:2: rule__ABSTIME__Group_0_0__1__Impl rule__ABSTIME__Group_0_0__2
            {
            pushFollow(FOLLOW_54);
            rule__ABSTIME__Group_0_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ABSTIME__Group_0_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ABSTIME__Group_0_0__1"


    // $ANTLR start "rule__ABSTIME__Group_0_0__1__Impl"
    // InternalSpellDatabaseParser.g:8005:1: rule__ABSTIME__Group_0_0__1__Impl : ( RULE_MINUS ) ;
    public final void rule__ABSTIME__Group_0_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:8009:1: ( ( RULE_MINUS ) )
            // InternalSpellDatabaseParser.g:8010:1: ( RULE_MINUS )
            {
            // InternalSpellDatabaseParser.g:8010:1: ( RULE_MINUS )
            // InternalSpellDatabaseParser.g:8011:1: RULE_MINUS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getABSTIMEAccess().getMINUSTerminalRuleCall_0_0_1()); 
            }
            match(input,RULE_MINUS,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getABSTIMEAccess().getMINUSTerminalRuleCall_0_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ABSTIME__Group_0_0__1__Impl"


    // $ANTLR start "rule__ABSTIME__Group_0_0__2"
    // InternalSpellDatabaseParser.g:8022:1: rule__ABSTIME__Group_0_0__2 : rule__ABSTIME__Group_0_0__2__Impl rule__ABSTIME__Group_0_0__3 ;
    public final void rule__ABSTIME__Group_0_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:8026:1: ( rule__ABSTIME__Group_0_0__2__Impl rule__ABSTIME__Group_0_0__3 )
            // InternalSpellDatabaseParser.g:8027:2: rule__ABSTIME__Group_0_0__2__Impl rule__ABSTIME__Group_0_0__3
            {
            pushFollow(FOLLOW_53);
            rule__ABSTIME__Group_0_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ABSTIME__Group_0_0__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ABSTIME__Group_0_0__2"


    // $ANTLR start "rule__ABSTIME__Group_0_0__2__Impl"
    // InternalSpellDatabaseParser.g:8034:1: rule__ABSTIME__Group_0_0__2__Impl : ( ( rule__ABSTIME__Alternatives_0_0_2 ) ) ;
    public final void rule__ABSTIME__Group_0_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:8038:1: ( ( ( rule__ABSTIME__Alternatives_0_0_2 ) ) )
            // InternalSpellDatabaseParser.g:8039:1: ( ( rule__ABSTIME__Alternatives_0_0_2 ) )
            {
            // InternalSpellDatabaseParser.g:8039:1: ( ( rule__ABSTIME__Alternatives_0_0_2 ) )
            // InternalSpellDatabaseParser.g:8040:1: ( rule__ABSTIME__Alternatives_0_0_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getABSTIMEAccess().getAlternatives_0_0_2()); 
            }
            // InternalSpellDatabaseParser.g:8041:1: ( rule__ABSTIME__Alternatives_0_0_2 )
            // InternalSpellDatabaseParser.g:8041:2: rule__ABSTIME__Alternatives_0_0_2
            {
            pushFollow(FOLLOW_2);
            rule__ABSTIME__Alternatives_0_0_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getABSTIMEAccess().getAlternatives_0_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ABSTIME__Group_0_0__2__Impl"


    // $ANTLR start "rule__ABSTIME__Group_0_0__3"
    // InternalSpellDatabaseParser.g:8051:1: rule__ABSTIME__Group_0_0__3 : rule__ABSTIME__Group_0_0__3__Impl rule__ABSTIME__Group_0_0__4 ;
    public final void rule__ABSTIME__Group_0_0__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:8055:1: ( rule__ABSTIME__Group_0_0__3__Impl rule__ABSTIME__Group_0_0__4 )
            // InternalSpellDatabaseParser.g:8056:2: rule__ABSTIME__Group_0_0__3__Impl rule__ABSTIME__Group_0_0__4
            {
            pushFollow(FOLLOW_51);
            rule__ABSTIME__Group_0_0__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ABSTIME__Group_0_0__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ABSTIME__Group_0_0__3"


    // $ANTLR start "rule__ABSTIME__Group_0_0__3__Impl"
    // InternalSpellDatabaseParser.g:8063:1: rule__ABSTIME__Group_0_0__3__Impl : ( RULE_MINUS ) ;
    public final void rule__ABSTIME__Group_0_0__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:8067:1: ( ( RULE_MINUS ) )
            // InternalSpellDatabaseParser.g:8068:1: ( RULE_MINUS )
            {
            // InternalSpellDatabaseParser.g:8068:1: ( RULE_MINUS )
            // InternalSpellDatabaseParser.g:8069:1: RULE_MINUS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getABSTIMEAccess().getMINUSTerminalRuleCall_0_0_3()); 
            }
            match(input,RULE_MINUS,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getABSTIMEAccess().getMINUSTerminalRuleCall_0_0_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ABSTIME__Group_0_0__3__Impl"


    // $ANTLR start "rule__ABSTIME__Group_0_0__4"
    // InternalSpellDatabaseParser.g:8080:1: rule__ABSTIME__Group_0_0__4 : rule__ABSTIME__Group_0_0__4__Impl ;
    public final void rule__ABSTIME__Group_0_0__4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:8084:1: ( rule__ABSTIME__Group_0_0__4__Impl )
            // InternalSpellDatabaseParser.g:8085:2: rule__ABSTIME__Group_0_0__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ABSTIME__Group_0_0__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ABSTIME__Group_0_0__4"


    // $ANTLR start "rule__ABSTIME__Group_0_0__4__Impl"
    // InternalSpellDatabaseParser.g:8091:1: rule__ABSTIME__Group_0_0__4__Impl : ( RULE_INT ) ;
    public final void rule__ABSTIME__Group_0_0__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:8095:1: ( ( RULE_INT ) )
            // InternalSpellDatabaseParser.g:8096:1: ( RULE_INT )
            {
            // InternalSpellDatabaseParser.g:8096:1: ( RULE_INT )
            // InternalSpellDatabaseParser.g:8097:1: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getABSTIMEAccess().getINTTerminalRuleCall_0_0_4()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getABSTIMEAccess().getINTTerminalRuleCall_0_0_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ABSTIME__Group_0_0__4__Impl"


    // $ANTLR start "rule__ABSTIME__Group_0_2__0"
    // InternalSpellDatabaseParser.g:8118:1: rule__ABSTIME__Group_0_2__0 : rule__ABSTIME__Group_0_2__0__Impl rule__ABSTIME__Group_0_2__1 ;
    public final void rule__ABSTIME__Group_0_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:8122:1: ( rule__ABSTIME__Group_0_2__0__Impl rule__ABSTIME__Group_0_2__1 )
            // InternalSpellDatabaseParser.g:8123:2: rule__ABSTIME__Group_0_2__0__Impl rule__ABSTIME__Group_0_2__1
            {
            pushFollow(FOLLOW_23);
            rule__ABSTIME__Group_0_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ABSTIME__Group_0_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ABSTIME__Group_0_2__0"


    // $ANTLR start "rule__ABSTIME__Group_0_2__0__Impl"
    // InternalSpellDatabaseParser.g:8130:1: rule__ABSTIME__Group_0_2__0__Impl : ( RULE_INT ) ;
    public final void rule__ABSTIME__Group_0_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:8134:1: ( ( RULE_INT ) )
            // InternalSpellDatabaseParser.g:8135:1: ( RULE_INT )
            {
            // InternalSpellDatabaseParser.g:8135:1: ( RULE_INT )
            // InternalSpellDatabaseParser.g:8136:1: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getABSTIMEAccess().getINTTerminalRuleCall_0_2_0()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getABSTIMEAccess().getINTTerminalRuleCall_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ABSTIME__Group_0_2__0__Impl"


    // $ANTLR start "rule__ABSTIME__Group_0_2__1"
    // InternalSpellDatabaseParser.g:8147:1: rule__ABSTIME__Group_0_2__1 : rule__ABSTIME__Group_0_2__1__Impl rule__ABSTIME__Group_0_2__2 ;
    public final void rule__ABSTIME__Group_0_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:8151:1: ( rule__ABSTIME__Group_0_2__1__Impl rule__ABSTIME__Group_0_2__2 )
            // InternalSpellDatabaseParser.g:8152:2: rule__ABSTIME__Group_0_2__1__Impl rule__ABSTIME__Group_0_2__2
            {
            pushFollow(FOLLOW_51);
            rule__ABSTIME__Group_0_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ABSTIME__Group_0_2__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ABSTIME__Group_0_2__1"


    // $ANTLR start "rule__ABSTIME__Group_0_2__1__Impl"
    // InternalSpellDatabaseParser.g:8159:1: rule__ABSTIME__Group_0_2__1__Impl : ( RULE_COLON ) ;
    public final void rule__ABSTIME__Group_0_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:8163:1: ( ( RULE_COLON ) )
            // InternalSpellDatabaseParser.g:8164:1: ( RULE_COLON )
            {
            // InternalSpellDatabaseParser.g:8164:1: ( RULE_COLON )
            // InternalSpellDatabaseParser.g:8165:1: RULE_COLON
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getABSTIMEAccess().getCOLONTerminalRuleCall_0_2_1()); 
            }
            match(input,RULE_COLON,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getABSTIMEAccess().getCOLONTerminalRuleCall_0_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ABSTIME__Group_0_2__1__Impl"


    // $ANTLR start "rule__ABSTIME__Group_0_2__2"
    // InternalSpellDatabaseParser.g:8176:1: rule__ABSTIME__Group_0_2__2 : rule__ABSTIME__Group_0_2__2__Impl rule__ABSTIME__Group_0_2__3 ;
    public final void rule__ABSTIME__Group_0_2__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:8180:1: ( rule__ABSTIME__Group_0_2__2__Impl rule__ABSTIME__Group_0_2__3 )
            // InternalSpellDatabaseParser.g:8181:2: rule__ABSTIME__Group_0_2__2__Impl rule__ABSTIME__Group_0_2__3
            {
            pushFollow(FOLLOW_23);
            rule__ABSTIME__Group_0_2__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ABSTIME__Group_0_2__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ABSTIME__Group_0_2__2"


    // $ANTLR start "rule__ABSTIME__Group_0_2__2__Impl"
    // InternalSpellDatabaseParser.g:8188:1: rule__ABSTIME__Group_0_2__2__Impl : ( RULE_INT ) ;
    public final void rule__ABSTIME__Group_0_2__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:8192:1: ( ( RULE_INT ) )
            // InternalSpellDatabaseParser.g:8193:1: ( RULE_INT )
            {
            // InternalSpellDatabaseParser.g:8193:1: ( RULE_INT )
            // InternalSpellDatabaseParser.g:8194:1: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getABSTIMEAccess().getINTTerminalRuleCall_0_2_2()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getABSTIMEAccess().getINTTerminalRuleCall_0_2_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ABSTIME__Group_0_2__2__Impl"


    // $ANTLR start "rule__ABSTIME__Group_0_2__3"
    // InternalSpellDatabaseParser.g:8205:1: rule__ABSTIME__Group_0_2__3 : rule__ABSTIME__Group_0_2__3__Impl ;
    public final void rule__ABSTIME__Group_0_2__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:8209:1: ( rule__ABSTIME__Group_0_2__3__Impl )
            // InternalSpellDatabaseParser.g:8210:2: rule__ABSTIME__Group_0_2__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ABSTIME__Group_0_2__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ABSTIME__Group_0_2__3"


    // $ANTLR start "rule__ABSTIME__Group_0_2__3__Impl"
    // InternalSpellDatabaseParser.g:8216:1: rule__ABSTIME__Group_0_2__3__Impl : ( ( rule__ABSTIME__Group_0_2_3__0 )? ) ;
    public final void rule__ABSTIME__Group_0_2__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:8220:1: ( ( ( rule__ABSTIME__Group_0_2_3__0 )? ) )
            // InternalSpellDatabaseParser.g:8221:1: ( ( rule__ABSTIME__Group_0_2_3__0 )? )
            {
            // InternalSpellDatabaseParser.g:8221:1: ( ( rule__ABSTIME__Group_0_2_3__0 )? )
            // InternalSpellDatabaseParser.g:8222:1: ( rule__ABSTIME__Group_0_2_3__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getABSTIMEAccess().getGroup_0_2_3()); 
            }
            // InternalSpellDatabaseParser.g:8223:1: ( rule__ABSTIME__Group_0_2_3__0 )?
            int alt81=2;
            int LA81_0 = input.LA(1);

            if ( (LA81_0==RULE_COLON) ) {
                alt81=1;
            }
            switch (alt81) {
                case 1 :
                    // InternalSpellDatabaseParser.g:8223:2: rule__ABSTIME__Group_0_2_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ABSTIME__Group_0_2_3__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getABSTIMEAccess().getGroup_0_2_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ABSTIME__Group_0_2__3__Impl"


    // $ANTLR start "rule__ABSTIME__Group_0_2_3__0"
    // InternalSpellDatabaseParser.g:8241:1: rule__ABSTIME__Group_0_2_3__0 : rule__ABSTIME__Group_0_2_3__0__Impl rule__ABSTIME__Group_0_2_3__1 ;
    public final void rule__ABSTIME__Group_0_2_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:8245:1: ( rule__ABSTIME__Group_0_2_3__0__Impl rule__ABSTIME__Group_0_2_3__1 )
            // InternalSpellDatabaseParser.g:8246:2: rule__ABSTIME__Group_0_2_3__0__Impl rule__ABSTIME__Group_0_2_3__1
            {
            pushFollow(FOLLOW_51);
            rule__ABSTIME__Group_0_2_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ABSTIME__Group_0_2_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ABSTIME__Group_0_2_3__0"


    // $ANTLR start "rule__ABSTIME__Group_0_2_3__0__Impl"
    // InternalSpellDatabaseParser.g:8253:1: rule__ABSTIME__Group_0_2_3__0__Impl : ( RULE_COLON ) ;
    public final void rule__ABSTIME__Group_0_2_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:8257:1: ( ( RULE_COLON ) )
            // InternalSpellDatabaseParser.g:8258:1: ( RULE_COLON )
            {
            // InternalSpellDatabaseParser.g:8258:1: ( RULE_COLON )
            // InternalSpellDatabaseParser.g:8259:1: RULE_COLON
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getABSTIMEAccess().getCOLONTerminalRuleCall_0_2_3_0()); 
            }
            match(input,RULE_COLON,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getABSTIMEAccess().getCOLONTerminalRuleCall_0_2_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ABSTIME__Group_0_2_3__0__Impl"


    // $ANTLR start "rule__ABSTIME__Group_0_2_3__1"
    // InternalSpellDatabaseParser.g:8270:1: rule__ABSTIME__Group_0_2_3__1 : rule__ABSTIME__Group_0_2_3__1__Impl ;
    public final void rule__ABSTIME__Group_0_2_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:8274:1: ( rule__ABSTIME__Group_0_2_3__1__Impl )
            // InternalSpellDatabaseParser.g:8275:2: rule__ABSTIME__Group_0_2_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ABSTIME__Group_0_2_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ABSTIME__Group_0_2_3__1"


    // $ANTLR start "rule__ABSTIME__Group_0_2_3__1__Impl"
    // InternalSpellDatabaseParser.g:8281:1: rule__ABSTIME__Group_0_2_3__1__Impl : ( RULE_INT ) ;
    public final void rule__ABSTIME__Group_0_2_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:8285:1: ( ( RULE_INT ) )
            // InternalSpellDatabaseParser.g:8286:1: ( RULE_INT )
            {
            // InternalSpellDatabaseParser.g:8286:1: ( RULE_INT )
            // InternalSpellDatabaseParser.g:8287:1: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getABSTIMEAccess().getINTTerminalRuleCall_0_2_3_1()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getABSTIMEAccess().getINTTerminalRuleCall_0_2_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ABSTIME__Group_0_2_3__1__Impl"


    // $ANTLR start "rule__ABSTIME__Group_1__0"
    // InternalSpellDatabaseParser.g:8302:1: rule__ABSTIME__Group_1__0 : rule__ABSTIME__Group_1__0__Impl rule__ABSTIME__Group_1__1 ;
    public final void rule__ABSTIME__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:8306:1: ( rule__ABSTIME__Group_1__0__Impl rule__ABSTIME__Group_1__1 )
            // InternalSpellDatabaseParser.g:8307:2: rule__ABSTIME__Group_1__0__Impl rule__ABSTIME__Group_1__1
            {
            pushFollow(FOLLOW_52);
            rule__ABSTIME__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ABSTIME__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ABSTIME__Group_1__0"


    // $ANTLR start "rule__ABSTIME__Group_1__0__Impl"
    // InternalSpellDatabaseParser.g:8314:1: rule__ABSTIME__Group_1__0__Impl : ( ( rule__ABSTIME__Group_1_0__0 ) ) ;
    public final void rule__ABSTIME__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:8318:1: ( ( ( rule__ABSTIME__Group_1_0__0 ) ) )
            // InternalSpellDatabaseParser.g:8319:1: ( ( rule__ABSTIME__Group_1_0__0 ) )
            {
            // InternalSpellDatabaseParser.g:8319:1: ( ( rule__ABSTIME__Group_1_0__0 ) )
            // InternalSpellDatabaseParser.g:8320:1: ( rule__ABSTIME__Group_1_0__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getABSTIMEAccess().getGroup_1_0()); 
            }
            // InternalSpellDatabaseParser.g:8321:1: ( rule__ABSTIME__Group_1_0__0 )
            // InternalSpellDatabaseParser.g:8321:2: rule__ABSTIME__Group_1_0__0
            {
            pushFollow(FOLLOW_2);
            rule__ABSTIME__Group_1_0__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getABSTIMEAccess().getGroup_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ABSTIME__Group_1__0__Impl"


    // $ANTLR start "rule__ABSTIME__Group_1__1"
    // InternalSpellDatabaseParser.g:8331:1: rule__ABSTIME__Group_1__1 : rule__ABSTIME__Group_1__1__Impl rule__ABSTIME__Group_1__2 ;
    public final void rule__ABSTIME__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:8335:1: ( rule__ABSTIME__Group_1__1__Impl rule__ABSTIME__Group_1__2 )
            // InternalSpellDatabaseParser.g:8336:2: rule__ABSTIME__Group_1__1__Impl rule__ABSTIME__Group_1__2
            {
            pushFollow(FOLLOW_51);
            rule__ABSTIME__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ABSTIME__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ABSTIME__Group_1__1"


    // $ANTLR start "rule__ABSTIME__Group_1__1__Impl"
    // InternalSpellDatabaseParser.g:8343:1: rule__ABSTIME__Group_1__1__Impl : ( ( rule__ABSTIME__Alternatives_1_1 ) ) ;
    public final void rule__ABSTIME__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:8347:1: ( ( ( rule__ABSTIME__Alternatives_1_1 ) ) )
            // InternalSpellDatabaseParser.g:8348:1: ( ( rule__ABSTIME__Alternatives_1_1 ) )
            {
            // InternalSpellDatabaseParser.g:8348:1: ( ( rule__ABSTIME__Alternatives_1_1 ) )
            // InternalSpellDatabaseParser.g:8349:1: ( rule__ABSTIME__Alternatives_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getABSTIMEAccess().getAlternatives_1_1()); 
            }
            // InternalSpellDatabaseParser.g:8350:1: ( rule__ABSTIME__Alternatives_1_1 )
            // InternalSpellDatabaseParser.g:8350:2: rule__ABSTIME__Alternatives_1_1
            {
            pushFollow(FOLLOW_2);
            rule__ABSTIME__Alternatives_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getABSTIMEAccess().getAlternatives_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ABSTIME__Group_1__1__Impl"


    // $ANTLR start "rule__ABSTIME__Group_1__2"
    // InternalSpellDatabaseParser.g:8360:1: rule__ABSTIME__Group_1__2 : rule__ABSTIME__Group_1__2__Impl ;
    public final void rule__ABSTIME__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:8364:1: ( rule__ABSTIME__Group_1__2__Impl )
            // InternalSpellDatabaseParser.g:8365:2: rule__ABSTIME__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ABSTIME__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ABSTIME__Group_1__2"


    // $ANTLR start "rule__ABSTIME__Group_1__2__Impl"
    // InternalSpellDatabaseParser.g:8371:1: rule__ABSTIME__Group_1__2__Impl : ( ( rule__ABSTIME__Group_1_2__0 )? ) ;
    public final void rule__ABSTIME__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:8375:1: ( ( ( rule__ABSTIME__Group_1_2__0 )? ) )
            // InternalSpellDatabaseParser.g:8376:1: ( ( rule__ABSTIME__Group_1_2__0 )? )
            {
            // InternalSpellDatabaseParser.g:8376:1: ( ( rule__ABSTIME__Group_1_2__0 )? )
            // InternalSpellDatabaseParser.g:8377:1: ( rule__ABSTIME__Group_1_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getABSTIMEAccess().getGroup_1_2()); 
            }
            // InternalSpellDatabaseParser.g:8378:1: ( rule__ABSTIME__Group_1_2__0 )?
            int alt82=2;
            int LA82_0 = input.LA(1);

            if ( (LA82_0==RULE_INT) ) {
                alt82=1;
            }
            switch (alt82) {
                case 1 :
                    // InternalSpellDatabaseParser.g:8378:2: rule__ABSTIME__Group_1_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ABSTIME__Group_1_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getABSTIMEAccess().getGroup_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ABSTIME__Group_1__2__Impl"


    // $ANTLR start "rule__ABSTIME__Group_1_0__0"
    // InternalSpellDatabaseParser.g:8394:1: rule__ABSTIME__Group_1_0__0 : rule__ABSTIME__Group_1_0__0__Impl rule__ABSTIME__Group_1_0__1 ;
    public final void rule__ABSTIME__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:8398:1: ( rule__ABSTIME__Group_1_0__0__Impl rule__ABSTIME__Group_1_0__1 )
            // InternalSpellDatabaseParser.g:8399:2: rule__ABSTIME__Group_1_0__0__Impl rule__ABSTIME__Group_1_0__1
            {
            pushFollow(FOLLOW_55);
            rule__ABSTIME__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ABSTIME__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ABSTIME__Group_1_0__0"


    // $ANTLR start "rule__ABSTIME__Group_1_0__0__Impl"
    // InternalSpellDatabaseParser.g:8406:1: rule__ABSTIME__Group_1_0__0__Impl : ( RULE_INT ) ;
    public final void rule__ABSTIME__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:8410:1: ( ( RULE_INT ) )
            // InternalSpellDatabaseParser.g:8411:1: ( RULE_INT )
            {
            // InternalSpellDatabaseParser.g:8411:1: ( RULE_INT )
            // InternalSpellDatabaseParser.g:8412:1: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getABSTIMEAccess().getINTTerminalRuleCall_1_0_0()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getABSTIMEAccess().getINTTerminalRuleCall_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ABSTIME__Group_1_0__0__Impl"


    // $ANTLR start "rule__ABSTIME__Group_1_0__1"
    // InternalSpellDatabaseParser.g:8423:1: rule__ABSTIME__Group_1_0__1 : rule__ABSTIME__Group_1_0__1__Impl rule__ABSTIME__Group_1_0__2 ;
    public final void rule__ABSTIME__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:8427:1: ( rule__ABSTIME__Group_1_0__1__Impl rule__ABSTIME__Group_1_0__2 )
            // InternalSpellDatabaseParser.g:8428:2: rule__ABSTIME__Group_1_0__1__Impl rule__ABSTIME__Group_1_0__2
            {
            pushFollow(FOLLOW_54);
            rule__ABSTIME__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ABSTIME__Group_1_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ABSTIME__Group_1_0__1"


    // $ANTLR start "rule__ABSTIME__Group_1_0__1__Impl"
    // InternalSpellDatabaseParser.g:8435:1: rule__ABSTIME__Group_1_0__1__Impl : ( Solidus ) ;
    public final void rule__ABSTIME__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:8439:1: ( ( Solidus ) )
            // InternalSpellDatabaseParser.g:8440:1: ( Solidus )
            {
            // InternalSpellDatabaseParser.g:8440:1: ( Solidus )
            // InternalSpellDatabaseParser.g:8441:1: Solidus
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getABSTIMEAccess().getSolidusKeyword_1_0_1()); 
            }
            match(input,Solidus,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getABSTIMEAccess().getSolidusKeyword_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ABSTIME__Group_1_0__1__Impl"


    // $ANTLR start "rule__ABSTIME__Group_1_0__2"
    // InternalSpellDatabaseParser.g:8454:1: rule__ABSTIME__Group_1_0__2 : rule__ABSTIME__Group_1_0__2__Impl rule__ABSTIME__Group_1_0__3 ;
    public final void rule__ABSTIME__Group_1_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:8458:1: ( rule__ABSTIME__Group_1_0__2__Impl rule__ABSTIME__Group_1_0__3 )
            // InternalSpellDatabaseParser.g:8459:2: rule__ABSTIME__Group_1_0__2__Impl rule__ABSTIME__Group_1_0__3
            {
            pushFollow(FOLLOW_55);
            rule__ABSTIME__Group_1_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ABSTIME__Group_1_0__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ABSTIME__Group_1_0__2"


    // $ANTLR start "rule__ABSTIME__Group_1_0__2__Impl"
    // InternalSpellDatabaseParser.g:8466:1: rule__ABSTIME__Group_1_0__2__Impl : ( ( rule__ABSTIME__Alternatives_1_0_2 ) ) ;
    public final void rule__ABSTIME__Group_1_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:8470:1: ( ( ( rule__ABSTIME__Alternatives_1_0_2 ) ) )
            // InternalSpellDatabaseParser.g:8471:1: ( ( rule__ABSTIME__Alternatives_1_0_2 ) )
            {
            // InternalSpellDatabaseParser.g:8471:1: ( ( rule__ABSTIME__Alternatives_1_0_2 ) )
            // InternalSpellDatabaseParser.g:8472:1: ( rule__ABSTIME__Alternatives_1_0_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getABSTIMEAccess().getAlternatives_1_0_2()); 
            }
            // InternalSpellDatabaseParser.g:8473:1: ( rule__ABSTIME__Alternatives_1_0_2 )
            // InternalSpellDatabaseParser.g:8473:2: rule__ABSTIME__Alternatives_1_0_2
            {
            pushFollow(FOLLOW_2);
            rule__ABSTIME__Alternatives_1_0_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getABSTIMEAccess().getAlternatives_1_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ABSTIME__Group_1_0__2__Impl"


    // $ANTLR start "rule__ABSTIME__Group_1_0__3"
    // InternalSpellDatabaseParser.g:8483:1: rule__ABSTIME__Group_1_0__3 : rule__ABSTIME__Group_1_0__3__Impl rule__ABSTIME__Group_1_0__4 ;
    public final void rule__ABSTIME__Group_1_0__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:8487:1: ( rule__ABSTIME__Group_1_0__3__Impl rule__ABSTIME__Group_1_0__4 )
            // InternalSpellDatabaseParser.g:8488:2: rule__ABSTIME__Group_1_0__3__Impl rule__ABSTIME__Group_1_0__4
            {
            pushFollow(FOLLOW_51);
            rule__ABSTIME__Group_1_0__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ABSTIME__Group_1_0__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ABSTIME__Group_1_0__3"


    // $ANTLR start "rule__ABSTIME__Group_1_0__3__Impl"
    // InternalSpellDatabaseParser.g:8495:1: rule__ABSTIME__Group_1_0__3__Impl : ( Solidus ) ;
    public final void rule__ABSTIME__Group_1_0__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:8499:1: ( ( Solidus ) )
            // InternalSpellDatabaseParser.g:8500:1: ( Solidus )
            {
            // InternalSpellDatabaseParser.g:8500:1: ( Solidus )
            // InternalSpellDatabaseParser.g:8501:1: Solidus
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getABSTIMEAccess().getSolidusKeyword_1_0_3()); 
            }
            match(input,Solidus,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getABSTIMEAccess().getSolidusKeyword_1_0_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ABSTIME__Group_1_0__3__Impl"


    // $ANTLR start "rule__ABSTIME__Group_1_0__4"
    // InternalSpellDatabaseParser.g:8514:1: rule__ABSTIME__Group_1_0__4 : rule__ABSTIME__Group_1_0__4__Impl ;
    public final void rule__ABSTIME__Group_1_0__4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:8518:1: ( rule__ABSTIME__Group_1_0__4__Impl )
            // InternalSpellDatabaseParser.g:8519:2: rule__ABSTIME__Group_1_0__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ABSTIME__Group_1_0__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ABSTIME__Group_1_0__4"


    // $ANTLR start "rule__ABSTIME__Group_1_0__4__Impl"
    // InternalSpellDatabaseParser.g:8525:1: rule__ABSTIME__Group_1_0__4__Impl : ( RULE_INT ) ;
    public final void rule__ABSTIME__Group_1_0__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:8529:1: ( ( RULE_INT ) )
            // InternalSpellDatabaseParser.g:8530:1: ( RULE_INT )
            {
            // InternalSpellDatabaseParser.g:8530:1: ( RULE_INT )
            // InternalSpellDatabaseParser.g:8531:1: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getABSTIMEAccess().getINTTerminalRuleCall_1_0_4()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getABSTIMEAccess().getINTTerminalRuleCall_1_0_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ABSTIME__Group_1_0__4__Impl"


    // $ANTLR start "rule__ABSTIME__Group_1_2__0"
    // InternalSpellDatabaseParser.g:8552:1: rule__ABSTIME__Group_1_2__0 : rule__ABSTIME__Group_1_2__0__Impl rule__ABSTIME__Group_1_2__1 ;
    public final void rule__ABSTIME__Group_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:8556:1: ( rule__ABSTIME__Group_1_2__0__Impl rule__ABSTIME__Group_1_2__1 )
            // InternalSpellDatabaseParser.g:8557:2: rule__ABSTIME__Group_1_2__0__Impl rule__ABSTIME__Group_1_2__1
            {
            pushFollow(FOLLOW_23);
            rule__ABSTIME__Group_1_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ABSTIME__Group_1_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ABSTIME__Group_1_2__0"


    // $ANTLR start "rule__ABSTIME__Group_1_2__0__Impl"
    // InternalSpellDatabaseParser.g:8564:1: rule__ABSTIME__Group_1_2__0__Impl : ( RULE_INT ) ;
    public final void rule__ABSTIME__Group_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:8568:1: ( ( RULE_INT ) )
            // InternalSpellDatabaseParser.g:8569:1: ( RULE_INT )
            {
            // InternalSpellDatabaseParser.g:8569:1: ( RULE_INT )
            // InternalSpellDatabaseParser.g:8570:1: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getABSTIMEAccess().getINTTerminalRuleCall_1_2_0()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getABSTIMEAccess().getINTTerminalRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ABSTIME__Group_1_2__0__Impl"


    // $ANTLR start "rule__ABSTIME__Group_1_2__1"
    // InternalSpellDatabaseParser.g:8581:1: rule__ABSTIME__Group_1_2__1 : rule__ABSTIME__Group_1_2__1__Impl rule__ABSTIME__Group_1_2__2 ;
    public final void rule__ABSTIME__Group_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:8585:1: ( rule__ABSTIME__Group_1_2__1__Impl rule__ABSTIME__Group_1_2__2 )
            // InternalSpellDatabaseParser.g:8586:2: rule__ABSTIME__Group_1_2__1__Impl rule__ABSTIME__Group_1_2__2
            {
            pushFollow(FOLLOW_51);
            rule__ABSTIME__Group_1_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ABSTIME__Group_1_2__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ABSTIME__Group_1_2__1"


    // $ANTLR start "rule__ABSTIME__Group_1_2__1__Impl"
    // InternalSpellDatabaseParser.g:8593:1: rule__ABSTIME__Group_1_2__1__Impl : ( RULE_COLON ) ;
    public final void rule__ABSTIME__Group_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:8597:1: ( ( RULE_COLON ) )
            // InternalSpellDatabaseParser.g:8598:1: ( RULE_COLON )
            {
            // InternalSpellDatabaseParser.g:8598:1: ( RULE_COLON )
            // InternalSpellDatabaseParser.g:8599:1: RULE_COLON
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getABSTIMEAccess().getCOLONTerminalRuleCall_1_2_1()); 
            }
            match(input,RULE_COLON,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getABSTIMEAccess().getCOLONTerminalRuleCall_1_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ABSTIME__Group_1_2__1__Impl"


    // $ANTLR start "rule__ABSTIME__Group_1_2__2"
    // InternalSpellDatabaseParser.g:8610:1: rule__ABSTIME__Group_1_2__2 : rule__ABSTIME__Group_1_2__2__Impl rule__ABSTIME__Group_1_2__3 ;
    public final void rule__ABSTIME__Group_1_2__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:8614:1: ( rule__ABSTIME__Group_1_2__2__Impl rule__ABSTIME__Group_1_2__3 )
            // InternalSpellDatabaseParser.g:8615:2: rule__ABSTIME__Group_1_2__2__Impl rule__ABSTIME__Group_1_2__3
            {
            pushFollow(FOLLOW_23);
            rule__ABSTIME__Group_1_2__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ABSTIME__Group_1_2__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ABSTIME__Group_1_2__2"


    // $ANTLR start "rule__ABSTIME__Group_1_2__2__Impl"
    // InternalSpellDatabaseParser.g:8622:1: rule__ABSTIME__Group_1_2__2__Impl : ( RULE_INT ) ;
    public final void rule__ABSTIME__Group_1_2__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:8626:1: ( ( RULE_INT ) )
            // InternalSpellDatabaseParser.g:8627:1: ( RULE_INT )
            {
            // InternalSpellDatabaseParser.g:8627:1: ( RULE_INT )
            // InternalSpellDatabaseParser.g:8628:1: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getABSTIMEAccess().getINTTerminalRuleCall_1_2_2()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getABSTIMEAccess().getINTTerminalRuleCall_1_2_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ABSTIME__Group_1_2__2__Impl"


    // $ANTLR start "rule__ABSTIME__Group_1_2__3"
    // InternalSpellDatabaseParser.g:8639:1: rule__ABSTIME__Group_1_2__3 : rule__ABSTIME__Group_1_2__3__Impl ;
    public final void rule__ABSTIME__Group_1_2__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:8643:1: ( rule__ABSTIME__Group_1_2__3__Impl )
            // InternalSpellDatabaseParser.g:8644:2: rule__ABSTIME__Group_1_2__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ABSTIME__Group_1_2__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ABSTIME__Group_1_2__3"


    // $ANTLR start "rule__ABSTIME__Group_1_2__3__Impl"
    // InternalSpellDatabaseParser.g:8650:1: rule__ABSTIME__Group_1_2__3__Impl : ( ( rule__ABSTIME__Group_1_2_3__0 )? ) ;
    public final void rule__ABSTIME__Group_1_2__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:8654:1: ( ( ( rule__ABSTIME__Group_1_2_3__0 )? ) )
            // InternalSpellDatabaseParser.g:8655:1: ( ( rule__ABSTIME__Group_1_2_3__0 )? )
            {
            // InternalSpellDatabaseParser.g:8655:1: ( ( rule__ABSTIME__Group_1_2_3__0 )? )
            // InternalSpellDatabaseParser.g:8656:1: ( rule__ABSTIME__Group_1_2_3__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getABSTIMEAccess().getGroup_1_2_3()); 
            }
            // InternalSpellDatabaseParser.g:8657:1: ( rule__ABSTIME__Group_1_2_3__0 )?
            int alt83=2;
            int LA83_0 = input.LA(1);

            if ( (LA83_0==RULE_COLON) ) {
                alt83=1;
            }
            switch (alt83) {
                case 1 :
                    // InternalSpellDatabaseParser.g:8657:2: rule__ABSTIME__Group_1_2_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ABSTIME__Group_1_2_3__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getABSTIMEAccess().getGroup_1_2_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ABSTIME__Group_1_2__3__Impl"


    // $ANTLR start "rule__ABSTIME__Group_1_2_3__0"
    // InternalSpellDatabaseParser.g:8675:1: rule__ABSTIME__Group_1_2_3__0 : rule__ABSTIME__Group_1_2_3__0__Impl rule__ABSTIME__Group_1_2_3__1 ;
    public final void rule__ABSTIME__Group_1_2_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:8679:1: ( rule__ABSTIME__Group_1_2_3__0__Impl rule__ABSTIME__Group_1_2_3__1 )
            // InternalSpellDatabaseParser.g:8680:2: rule__ABSTIME__Group_1_2_3__0__Impl rule__ABSTIME__Group_1_2_3__1
            {
            pushFollow(FOLLOW_51);
            rule__ABSTIME__Group_1_2_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ABSTIME__Group_1_2_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ABSTIME__Group_1_2_3__0"


    // $ANTLR start "rule__ABSTIME__Group_1_2_3__0__Impl"
    // InternalSpellDatabaseParser.g:8687:1: rule__ABSTIME__Group_1_2_3__0__Impl : ( RULE_COLON ) ;
    public final void rule__ABSTIME__Group_1_2_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:8691:1: ( ( RULE_COLON ) )
            // InternalSpellDatabaseParser.g:8692:1: ( RULE_COLON )
            {
            // InternalSpellDatabaseParser.g:8692:1: ( RULE_COLON )
            // InternalSpellDatabaseParser.g:8693:1: RULE_COLON
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getABSTIMEAccess().getCOLONTerminalRuleCall_1_2_3_0()); 
            }
            match(input,RULE_COLON,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getABSTIMEAccess().getCOLONTerminalRuleCall_1_2_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ABSTIME__Group_1_2_3__0__Impl"


    // $ANTLR start "rule__ABSTIME__Group_1_2_3__1"
    // InternalSpellDatabaseParser.g:8704:1: rule__ABSTIME__Group_1_2_3__1 : rule__ABSTIME__Group_1_2_3__1__Impl ;
    public final void rule__ABSTIME__Group_1_2_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:8708:1: ( rule__ABSTIME__Group_1_2_3__1__Impl )
            // InternalSpellDatabaseParser.g:8709:2: rule__ABSTIME__Group_1_2_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ABSTIME__Group_1_2_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ABSTIME__Group_1_2_3__1"


    // $ANTLR start "rule__ABSTIME__Group_1_2_3__1__Impl"
    // InternalSpellDatabaseParser.g:8715:1: rule__ABSTIME__Group_1_2_3__1__Impl : ( RULE_INT ) ;
    public final void rule__ABSTIME__Group_1_2_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:8719:1: ( ( RULE_INT ) )
            // InternalSpellDatabaseParser.g:8720:1: ( RULE_INT )
            {
            // InternalSpellDatabaseParser.g:8720:1: ( RULE_INT )
            // InternalSpellDatabaseParser.g:8721:1: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getABSTIMEAccess().getINTTerminalRuleCall_1_2_3_1()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getABSTIMEAccess().getINTTerminalRuleCall_1_2_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ABSTIME__Group_1_2_3__1__Impl"


    // $ANTLR start "rule__ID_STMT__Group__0"
    // InternalSpellDatabaseParser.g:8736:1: rule__ID_STMT__Group__0 : rule__ID_STMT__Group__0__Impl rule__ID_STMT__Group__1 ;
    public final void rule__ID_STMT__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:8740:1: ( rule__ID_STMT__Group__0__Impl rule__ID_STMT__Group__1 )
            // InternalSpellDatabaseParser.g:8741:2: rule__ID_STMT__Group__0__Impl rule__ID_STMT__Group__1
            {
            pushFollow(FOLLOW_56);
            rule__ID_STMT__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ID_STMT__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ID_STMT__Group__0"


    // $ANTLR start "rule__ID_STMT__Group__0__Impl"
    // InternalSpellDatabaseParser.g:8748:1: rule__ID_STMT__Group__0__Impl : ( RULE_ID ) ;
    public final void rule__ID_STMT__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:8752:1: ( ( RULE_ID ) )
            // InternalSpellDatabaseParser.g:8753:1: ( RULE_ID )
            {
            // InternalSpellDatabaseParser.g:8753:1: ( RULE_ID )
            // InternalSpellDatabaseParser.g:8754:1: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getID_STMTAccess().getIDTerminalRuleCall_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getID_STMTAccess().getIDTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ID_STMT__Group__0__Impl"


    // $ANTLR start "rule__ID_STMT__Group__1"
    // InternalSpellDatabaseParser.g:8765:1: rule__ID_STMT__Group__1 : rule__ID_STMT__Group__1__Impl ;
    public final void rule__ID_STMT__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:8769:1: ( rule__ID_STMT__Group__1__Impl )
            // InternalSpellDatabaseParser.g:8770:2: rule__ID_STMT__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ID_STMT__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ID_STMT__Group__1"


    // $ANTLR start "rule__ID_STMT__Group__1__Impl"
    // InternalSpellDatabaseParser.g:8776:1: rule__ID_STMT__Group__1__Impl : ( ( rule__ID_STMT__Alternatives_1 )* ) ;
    public final void rule__ID_STMT__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:8780:1: ( ( ( rule__ID_STMT__Alternatives_1 )* ) )
            // InternalSpellDatabaseParser.g:8781:1: ( ( rule__ID_STMT__Alternatives_1 )* )
            {
            // InternalSpellDatabaseParser.g:8781:1: ( ( rule__ID_STMT__Alternatives_1 )* )
            // InternalSpellDatabaseParser.g:8782:1: ( rule__ID_STMT__Alternatives_1 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getID_STMTAccess().getAlternatives_1()); 
            }
            // InternalSpellDatabaseParser.g:8783:1: ( rule__ID_STMT__Alternatives_1 )*
            loop84:
            do {
                int alt84=2;
                alt84 = dfa84.predict(input);
                switch (alt84) {
            	case 1 :
            	    // InternalSpellDatabaseParser.g:8783:2: rule__ID_STMT__Alternatives_1
            	    {
            	    pushFollow(FOLLOW_57);
            	    rule__ID_STMT__Alternatives_1();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop84;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getID_STMTAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ID_STMT__Group__1__Impl"


    // $ANTLR start "rule__ASTRIUM_ID__Group__0"
    // InternalSpellDatabaseParser.g:8797:1: rule__ASTRIUM_ID__Group__0 : rule__ASTRIUM_ID__Group__0__Impl rule__ASTRIUM_ID__Group__1 ;
    public final void rule__ASTRIUM_ID__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:8801:1: ( rule__ASTRIUM_ID__Group__0__Impl rule__ASTRIUM_ID__Group__1 )
            // InternalSpellDatabaseParser.g:8802:2: rule__ASTRIUM_ID__Group__0__Impl rule__ASTRIUM_ID__Group__1
            {
            pushFollow(FOLLOW_27);
            rule__ASTRIUM_ID__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ASTRIUM_ID__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ASTRIUM_ID__Group__0"


    // $ANTLR start "rule__ASTRIUM_ID__Group__0__Impl"
    // InternalSpellDatabaseParser.g:8809:1: rule__ASTRIUM_ID__Group__0__Impl : ( RULE_ID ) ;
    public final void rule__ASTRIUM_ID__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:8813:1: ( ( RULE_ID ) )
            // InternalSpellDatabaseParser.g:8814:1: ( RULE_ID )
            {
            // InternalSpellDatabaseParser.g:8814:1: ( RULE_ID )
            // InternalSpellDatabaseParser.g:8815:1: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getASTRIUM_IDAccess().getIDTerminalRuleCall_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getASTRIUM_IDAccess().getIDTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ASTRIUM_ID__Group__0__Impl"


    // $ANTLR start "rule__ASTRIUM_ID__Group__1"
    // InternalSpellDatabaseParser.g:8826:1: rule__ASTRIUM_ID__Group__1 : rule__ASTRIUM_ID__Group__1__Impl ;
    public final void rule__ASTRIUM_ID__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:8830:1: ( rule__ASTRIUM_ID__Group__1__Impl )
            // InternalSpellDatabaseParser.g:8831:2: rule__ASTRIUM_ID__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ASTRIUM_ID__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ASTRIUM_ID__Group__1"


    // $ANTLR start "rule__ASTRIUM_ID__Group__1__Impl"
    // InternalSpellDatabaseParser.g:8837:1: rule__ASTRIUM_ID__Group__1__Impl : ( ( RULE_ID )* ) ;
    public final void rule__ASTRIUM_ID__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:8841:1: ( ( ( RULE_ID )* ) )
            // InternalSpellDatabaseParser.g:8842:1: ( ( RULE_ID )* )
            {
            // InternalSpellDatabaseParser.g:8842:1: ( ( RULE_ID )* )
            // InternalSpellDatabaseParser.g:8843:1: ( RULE_ID )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getASTRIUM_IDAccess().getIDTerminalRuleCall_1()); 
            }
            // InternalSpellDatabaseParser.g:8844:1: ( RULE_ID )*
            loop85:
            do {
                int alt85=2;
                int LA85_0 = input.LA(1);

                if ( (LA85_0==RULE_ID) ) {
                    alt85=1;
                }


                switch (alt85) {
            	case 1 :
            	    // InternalSpellDatabaseParser.g:8844:3: RULE_ID
            	    {
            	    match(input,RULE_ID,FOLLOW_58); if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop85;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getASTRIUM_IDAccess().getIDTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ASTRIUM_ID__Group__1__Impl"


    // $ANTLR start "rule__ASTRIUM_TIME__Group__0"
    // InternalSpellDatabaseParser.g:8858:1: rule__ASTRIUM_TIME__Group__0 : rule__ASTRIUM_TIME__Group__0__Impl rule__ASTRIUM_TIME__Group__1 ;
    public final void rule__ASTRIUM_TIME__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:8862:1: ( rule__ASTRIUM_TIME__Group__0__Impl rule__ASTRIUM_TIME__Group__1 )
            // InternalSpellDatabaseParser.g:8863:2: rule__ASTRIUM_TIME__Group__0__Impl rule__ASTRIUM_TIME__Group__1
            {
            pushFollow(FOLLOW_54);
            rule__ASTRIUM_TIME__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ASTRIUM_TIME__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ASTRIUM_TIME__Group__0"


    // $ANTLR start "rule__ASTRIUM_TIME__Group__0__Impl"
    // InternalSpellDatabaseParser.g:8870:1: rule__ASTRIUM_TIME__Group__0__Impl : ( ( rule__ASTRIUM_TIME__Group_0__0 )? ) ;
    public final void rule__ASTRIUM_TIME__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:8874:1: ( ( ( rule__ASTRIUM_TIME__Group_0__0 )? ) )
            // InternalSpellDatabaseParser.g:8875:1: ( ( rule__ASTRIUM_TIME__Group_0__0 )? )
            {
            // InternalSpellDatabaseParser.g:8875:1: ( ( rule__ASTRIUM_TIME__Group_0__0 )? )
            // InternalSpellDatabaseParser.g:8876:1: ( rule__ASTRIUM_TIME__Group_0__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getASTRIUM_TIMEAccess().getGroup_0()); 
            }
            // InternalSpellDatabaseParser.g:8877:1: ( rule__ASTRIUM_TIME__Group_0__0 )?
            int alt86=2;
            int LA86_0 = input.LA(1);

            if ( (LA86_0==RULE_ID) ) {
                alt86=1;
            }
            else if ( (LA86_0==RULE_INT) ) {
                int LA86_2 = input.LA(2);

                if ( (LA86_2==RULE_ID) ) {
                    alt86=1;
                }
            }
            switch (alt86) {
                case 1 :
                    // InternalSpellDatabaseParser.g:8877:2: rule__ASTRIUM_TIME__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ASTRIUM_TIME__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getASTRIUM_TIMEAccess().getGroup_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ASTRIUM_TIME__Group__0__Impl"


    // $ANTLR start "rule__ASTRIUM_TIME__Group__1"
    // InternalSpellDatabaseParser.g:8887:1: rule__ASTRIUM_TIME__Group__1 : rule__ASTRIUM_TIME__Group__1__Impl rule__ASTRIUM_TIME__Group__2 ;
    public final void rule__ASTRIUM_TIME__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:8891:1: ( rule__ASTRIUM_TIME__Group__1__Impl rule__ASTRIUM_TIME__Group__2 )
            // InternalSpellDatabaseParser.g:8892:2: rule__ASTRIUM_TIME__Group__1__Impl rule__ASTRIUM_TIME__Group__2
            {
            pushFollow(FOLLOW_23);
            rule__ASTRIUM_TIME__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ASTRIUM_TIME__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ASTRIUM_TIME__Group__1"


    // $ANTLR start "rule__ASTRIUM_TIME__Group__1__Impl"
    // InternalSpellDatabaseParser.g:8899:1: rule__ASTRIUM_TIME__Group__1__Impl : ( RULE_INT ) ;
    public final void rule__ASTRIUM_TIME__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:8903:1: ( ( RULE_INT ) )
            // InternalSpellDatabaseParser.g:8904:1: ( RULE_INT )
            {
            // InternalSpellDatabaseParser.g:8904:1: ( RULE_INT )
            // InternalSpellDatabaseParser.g:8905:1: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getASTRIUM_TIMEAccess().getINTTerminalRuleCall_1()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getASTRIUM_TIMEAccess().getINTTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ASTRIUM_TIME__Group__1__Impl"


    // $ANTLR start "rule__ASTRIUM_TIME__Group__2"
    // InternalSpellDatabaseParser.g:8916:1: rule__ASTRIUM_TIME__Group__2 : rule__ASTRIUM_TIME__Group__2__Impl rule__ASTRIUM_TIME__Group__3 ;
    public final void rule__ASTRIUM_TIME__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:8920:1: ( rule__ASTRIUM_TIME__Group__2__Impl rule__ASTRIUM_TIME__Group__3 )
            // InternalSpellDatabaseParser.g:8921:2: rule__ASTRIUM_TIME__Group__2__Impl rule__ASTRIUM_TIME__Group__3
            {
            pushFollow(FOLLOW_51);
            rule__ASTRIUM_TIME__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ASTRIUM_TIME__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ASTRIUM_TIME__Group__2"


    // $ANTLR start "rule__ASTRIUM_TIME__Group__2__Impl"
    // InternalSpellDatabaseParser.g:8928:1: rule__ASTRIUM_TIME__Group__2__Impl : ( RULE_COLON ) ;
    public final void rule__ASTRIUM_TIME__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:8932:1: ( ( RULE_COLON ) )
            // InternalSpellDatabaseParser.g:8933:1: ( RULE_COLON )
            {
            // InternalSpellDatabaseParser.g:8933:1: ( RULE_COLON )
            // InternalSpellDatabaseParser.g:8934:1: RULE_COLON
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getASTRIUM_TIMEAccess().getCOLONTerminalRuleCall_2()); 
            }
            match(input,RULE_COLON,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getASTRIUM_TIMEAccess().getCOLONTerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ASTRIUM_TIME__Group__2__Impl"


    // $ANTLR start "rule__ASTRIUM_TIME__Group__3"
    // InternalSpellDatabaseParser.g:8945:1: rule__ASTRIUM_TIME__Group__3 : rule__ASTRIUM_TIME__Group__3__Impl rule__ASTRIUM_TIME__Group__4 ;
    public final void rule__ASTRIUM_TIME__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:8949:1: ( rule__ASTRIUM_TIME__Group__3__Impl rule__ASTRIUM_TIME__Group__4 )
            // InternalSpellDatabaseParser.g:8950:2: rule__ASTRIUM_TIME__Group__3__Impl rule__ASTRIUM_TIME__Group__4
            {
            pushFollow(FOLLOW_23);
            rule__ASTRIUM_TIME__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ASTRIUM_TIME__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ASTRIUM_TIME__Group__3"


    // $ANTLR start "rule__ASTRIUM_TIME__Group__3__Impl"
    // InternalSpellDatabaseParser.g:8957:1: rule__ASTRIUM_TIME__Group__3__Impl : ( RULE_INT ) ;
    public final void rule__ASTRIUM_TIME__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:8961:1: ( ( RULE_INT ) )
            // InternalSpellDatabaseParser.g:8962:1: ( RULE_INT )
            {
            // InternalSpellDatabaseParser.g:8962:1: ( RULE_INT )
            // InternalSpellDatabaseParser.g:8963:1: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getASTRIUM_TIMEAccess().getINTTerminalRuleCall_3()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getASTRIUM_TIMEAccess().getINTTerminalRuleCall_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ASTRIUM_TIME__Group__3__Impl"


    // $ANTLR start "rule__ASTRIUM_TIME__Group__4"
    // InternalSpellDatabaseParser.g:8974:1: rule__ASTRIUM_TIME__Group__4 : rule__ASTRIUM_TIME__Group__4__Impl rule__ASTRIUM_TIME__Group__5 ;
    public final void rule__ASTRIUM_TIME__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:8978:1: ( rule__ASTRIUM_TIME__Group__4__Impl rule__ASTRIUM_TIME__Group__5 )
            // InternalSpellDatabaseParser.g:8979:2: rule__ASTRIUM_TIME__Group__4__Impl rule__ASTRIUM_TIME__Group__5
            {
            pushFollow(FOLLOW_51);
            rule__ASTRIUM_TIME__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ASTRIUM_TIME__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ASTRIUM_TIME__Group__4"


    // $ANTLR start "rule__ASTRIUM_TIME__Group__4__Impl"
    // InternalSpellDatabaseParser.g:8986:1: rule__ASTRIUM_TIME__Group__4__Impl : ( RULE_COLON ) ;
    public final void rule__ASTRIUM_TIME__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:8990:1: ( ( RULE_COLON ) )
            // InternalSpellDatabaseParser.g:8991:1: ( RULE_COLON )
            {
            // InternalSpellDatabaseParser.g:8991:1: ( RULE_COLON )
            // InternalSpellDatabaseParser.g:8992:1: RULE_COLON
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getASTRIUM_TIMEAccess().getCOLONTerminalRuleCall_4()); 
            }
            match(input,RULE_COLON,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getASTRIUM_TIMEAccess().getCOLONTerminalRuleCall_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ASTRIUM_TIME__Group__4__Impl"


    // $ANTLR start "rule__ASTRIUM_TIME__Group__5"
    // InternalSpellDatabaseParser.g:9003:1: rule__ASTRIUM_TIME__Group__5 : rule__ASTRIUM_TIME__Group__5__Impl ;
    public final void rule__ASTRIUM_TIME__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:9007:1: ( rule__ASTRIUM_TIME__Group__5__Impl )
            // InternalSpellDatabaseParser.g:9008:2: rule__ASTRIUM_TIME__Group__5__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ASTRIUM_TIME__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ASTRIUM_TIME__Group__5"


    // $ANTLR start "rule__ASTRIUM_TIME__Group__5__Impl"
    // InternalSpellDatabaseParser.g:9014:1: rule__ASTRIUM_TIME__Group__5__Impl : ( RULE_INT ) ;
    public final void rule__ASTRIUM_TIME__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:9018:1: ( ( RULE_INT ) )
            // InternalSpellDatabaseParser.g:9019:1: ( RULE_INT )
            {
            // InternalSpellDatabaseParser.g:9019:1: ( RULE_INT )
            // InternalSpellDatabaseParser.g:9020:1: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getASTRIUM_TIMEAccess().getINTTerminalRuleCall_5()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getASTRIUM_TIMEAccess().getINTTerminalRuleCall_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ASTRIUM_TIME__Group__5__Impl"


    // $ANTLR start "rule__ASTRIUM_TIME__Group_0__0"
    // InternalSpellDatabaseParser.g:9043:1: rule__ASTRIUM_TIME__Group_0__0 : rule__ASTRIUM_TIME__Group_0__0__Impl rule__ASTRIUM_TIME__Group_0__1 ;
    public final void rule__ASTRIUM_TIME__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:9047:1: ( rule__ASTRIUM_TIME__Group_0__0__Impl rule__ASTRIUM_TIME__Group_0__1 )
            // InternalSpellDatabaseParser.g:9048:2: rule__ASTRIUM_TIME__Group_0__0__Impl rule__ASTRIUM_TIME__Group_0__1
            {
            pushFollow(FOLLOW_54);
            rule__ASTRIUM_TIME__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ASTRIUM_TIME__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ASTRIUM_TIME__Group_0__0"


    // $ANTLR start "rule__ASTRIUM_TIME__Group_0__0__Impl"
    // InternalSpellDatabaseParser.g:9055:1: rule__ASTRIUM_TIME__Group_0__0__Impl : ( ( rule__ASTRIUM_TIME__Group_0_0__0 )? ) ;
    public final void rule__ASTRIUM_TIME__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:9059:1: ( ( ( rule__ASTRIUM_TIME__Group_0_0__0 )? ) )
            // InternalSpellDatabaseParser.g:9060:1: ( ( rule__ASTRIUM_TIME__Group_0_0__0 )? )
            {
            // InternalSpellDatabaseParser.g:9060:1: ( ( rule__ASTRIUM_TIME__Group_0_0__0 )? )
            // InternalSpellDatabaseParser.g:9061:1: ( rule__ASTRIUM_TIME__Group_0_0__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getASTRIUM_TIMEAccess().getGroup_0_0()); 
            }
            // InternalSpellDatabaseParser.g:9062:1: ( rule__ASTRIUM_TIME__Group_0_0__0 )?
            int alt87=2;
            int LA87_0 = input.LA(1);

            if ( (LA87_0==RULE_ID) ) {
                alt87=1;
            }
            switch (alt87) {
                case 1 :
                    // InternalSpellDatabaseParser.g:9062:2: rule__ASTRIUM_TIME__Group_0_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ASTRIUM_TIME__Group_0_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getASTRIUM_TIMEAccess().getGroup_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ASTRIUM_TIME__Group_0__0__Impl"


    // $ANTLR start "rule__ASTRIUM_TIME__Group_0__1"
    // InternalSpellDatabaseParser.g:9072:1: rule__ASTRIUM_TIME__Group_0__1 : rule__ASTRIUM_TIME__Group_0__1__Impl rule__ASTRIUM_TIME__Group_0__2 ;
    public final void rule__ASTRIUM_TIME__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:9076:1: ( rule__ASTRIUM_TIME__Group_0__1__Impl rule__ASTRIUM_TIME__Group_0__2 )
            // InternalSpellDatabaseParser.g:9077:2: rule__ASTRIUM_TIME__Group_0__1__Impl rule__ASTRIUM_TIME__Group_0__2
            {
            pushFollow(FOLLOW_27);
            rule__ASTRIUM_TIME__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ASTRIUM_TIME__Group_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ASTRIUM_TIME__Group_0__1"


    // $ANTLR start "rule__ASTRIUM_TIME__Group_0__1__Impl"
    // InternalSpellDatabaseParser.g:9084:1: rule__ASTRIUM_TIME__Group_0__1__Impl : ( RULE_INT ) ;
    public final void rule__ASTRIUM_TIME__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:9088:1: ( ( RULE_INT ) )
            // InternalSpellDatabaseParser.g:9089:1: ( RULE_INT )
            {
            // InternalSpellDatabaseParser.g:9089:1: ( RULE_INT )
            // InternalSpellDatabaseParser.g:9090:1: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getASTRIUM_TIMEAccess().getINTTerminalRuleCall_0_1()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getASTRIUM_TIMEAccess().getINTTerminalRuleCall_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ASTRIUM_TIME__Group_0__1__Impl"


    // $ANTLR start "rule__ASTRIUM_TIME__Group_0__2"
    // InternalSpellDatabaseParser.g:9101:1: rule__ASTRIUM_TIME__Group_0__2 : rule__ASTRIUM_TIME__Group_0__2__Impl rule__ASTRIUM_TIME__Group_0__3 ;
    public final void rule__ASTRIUM_TIME__Group_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:9105:1: ( rule__ASTRIUM_TIME__Group_0__2__Impl rule__ASTRIUM_TIME__Group_0__3 )
            // InternalSpellDatabaseParser.g:9106:2: rule__ASTRIUM_TIME__Group_0__2__Impl rule__ASTRIUM_TIME__Group_0__3
            {
            pushFollow(FOLLOW_51);
            rule__ASTRIUM_TIME__Group_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ASTRIUM_TIME__Group_0__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ASTRIUM_TIME__Group_0__2"


    // $ANTLR start "rule__ASTRIUM_TIME__Group_0__2__Impl"
    // InternalSpellDatabaseParser.g:9113:1: rule__ASTRIUM_TIME__Group_0__2__Impl : ( RULE_ID ) ;
    public final void rule__ASTRIUM_TIME__Group_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:9117:1: ( ( RULE_ID ) )
            // InternalSpellDatabaseParser.g:9118:1: ( RULE_ID )
            {
            // InternalSpellDatabaseParser.g:9118:1: ( RULE_ID )
            // InternalSpellDatabaseParser.g:9119:1: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getASTRIUM_TIMEAccess().getIDTerminalRuleCall_0_2()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getASTRIUM_TIMEAccess().getIDTerminalRuleCall_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ASTRIUM_TIME__Group_0__2__Impl"


    // $ANTLR start "rule__ASTRIUM_TIME__Group_0__3"
    // InternalSpellDatabaseParser.g:9130:1: rule__ASTRIUM_TIME__Group_0__3 : rule__ASTRIUM_TIME__Group_0__3__Impl ;
    public final void rule__ASTRIUM_TIME__Group_0__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:9134:1: ( rule__ASTRIUM_TIME__Group_0__3__Impl )
            // InternalSpellDatabaseParser.g:9135:2: rule__ASTRIUM_TIME__Group_0__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ASTRIUM_TIME__Group_0__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ASTRIUM_TIME__Group_0__3"


    // $ANTLR start "rule__ASTRIUM_TIME__Group_0__3__Impl"
    // InternalSpellDatabaseParser.g:9141:1: rule__ASTRIUM_TIME__Group_0__3__Impl : ( RULE_INT ) ;
    public final void rule__ASTRIUM_TIME__Group_0__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:9145:1: ( ( RULE_INT ) )
            // InternalSpellDatabaseParser.g:9146:1: ( RULE_INT )
            {
            // InternalSpellDatabaseParser.g:9146:1: ( RULE_INT )
            // InternalSpellDatabaseParser.g:9147:1: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getASTRIUM_TIMEAccess().getINTTerminalRuleCall_0_3()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getASTRIUM_TIMEAccess().getINTTerminalRuleCall_0_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ASTRIUM_TIME__Group_0__3__Impl"


    // $ANTLR start "rule__ASTRIUM_TIME__Group_0_0__0"
    // InternalSpellDatabaseParser.g:9166:1: rule__ASTRIUM_TIME__Group_0_0__0 : rule__ASTRIUM_TIME__Group_0_0__0__Impl rule__ASTRIUM_TIME__Group_0_0__1 ;
    public final void rule__ASTRIUM_TIME__Group_0_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:9170:1: ( rule__ASTRIUM_TIME__Group_0_0__0__Impl rule__ASTRIUM_TIME__Group_0_0__1 )
            // InternalSpellDatabaseParser.g:9171:2: rule__ASTRIUM_TIME__Group_0_0__0__Impl rule__ASTRIUM_TIME__Group_0_0__1
            {
            pushFollow(FOLLOW_59);
            rule__ASTRIUM_TIME__Group_0_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ASTRIUM_TIME__Group_0_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ASTRIUM_TIME__Group_0_0__0"


    // $ANTLR start "rule__ASTRIUM_TIME__Group_0_0__0__Impl"
    // InternalSpellDatabaseParser.g:9178:1: rule__ASTRIUM_TIME__Group_0_0__0__Impl : ( RULE_ID ) ;
    public final void rule__ASTRIUM_TIME__Group_0_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:9182:1: ( ( RULE_ID ) )
            // InternalSpellDatabaseParser.g:9183:1: ( RULE_ID )
            {
            // InternalSpellDatabaseParser.g:9183:1: ( RULE_ID )
            // InternalSpellDatabaseParser.g:9184:1: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getASTRIUM_TIMEAccess().getIDTerminalRuleCall_0_0_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getASTRIUM_TIMEAccess().getIDTerminalRuleCall_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ASTRIUM_TIME__Group_0_0__0__Impl"


    // $ANTLR start "rule__ASTRIUM_TIME__Group_0_0__1"
    // InternalSpellDatabaseParser.g:9195:1: rule__ASTRIUM_TIME__Group_0_0__1 : rule__ASTRIUM_TIME__Group_0_0__1__Impl ;
    public final void rule__ASTRIUM_TIME__Group_0_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:9199:1: ( rule__ASTRIUM_TIME__Group_0_0__1__Impl )
            // InternalSpellDatabaseParser.g:9200:2: rule__ASTRIUM_TIME__Group_0_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ASTRIUM_TIME__Group_0_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ASTRIUM_TIME__Group_0_0__1"


    // $ANTLR start "rule__ASTRIUM_TIME__Group_0_0__1__Impl"
    // InternalSpellDatabaseParser.g:9206:1: rule__ASTRIUM_TIME__Group_0_0__1__Impl : ( FullStop ) ;
    public final void rule__ASTRIUM_TIME__Group_0_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:9210:1: ( ( FullStop ) )
            // InternalSpellDatabaseParser.g:9211:1: ( FullStop )
            {
            // InternalSpellDatabaseParser.g:9211:1: ( FullStop )
            // InternalSpellDatabaseParser.g:9212:1: FullStop
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getASTRIUM_TIMEAccess().getFullStopKeyword_0_0_1()); 
            }
            match(input,FullStop,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getASTRIUM_TIMEAccess().getFullStopKeyword_0_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ASTRIUM_TIME__Group_0_0__1__Impl"


    // $ANTLR start "rule__INTEGER__Group__0"
    // InternalSpellDatabaseParser.g:9229:1: rule__INTEGER__Group__0 : rule__INTEGER__Group__0__Impl rule__INTEGER__Group__1 ;
    public final void rule__INTEGER__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:9233:1: ( rule__INTEGER__Group__0__Impl rule__INTEGER__Group__1 )
            // InternalSpellDatabaseParser.g:9234:2: rule__INTEGER__Group__0__Impl rule__INTEGER__Group__1
            {
            pushFollow(FOLLOW_60);
            rule__INTEGER__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__INTEGER__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__INTEGER__Group__0"


    // $ANTLR start "rule__INTEGER__Group__0__Impl"
    // InternalSpellDatabaseParser.g:9241:1: rule__INTEGER__Group__0__Impl : ( ( rule__INTEGER__Alternatives_0 )? ) ;
    public final void rule__INTEGER__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:9245:1: ( ( ( rule__INTEGER__Alternatives_0 )? ) )
            // InternalSpellDatabaseParser.g:9246:1: ( ( rule__INTEGER__Alternatives_0 )? )
            {
            // InternalSpellDatabaseParser.g:9246:1: ( ( rule__INTEGER__Alternatives_0 )? )
            // InternalSpellDatabaseParser.g:9247:1: ( rule__INTEGER__Alternatives_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getINTEGERAccess().getAlternatives_0()); 
            }
            // InternalSpellDatabaseParser.g:9248:1: ( rule__INTEGER__Alternatives_0 )?
            int alt88=2;
            int LA88_0 = input.LA(1);

            if ( ((LA88_0>=RULE_PLUS && LA88_0<=RULE_MINUS)) ) {
                alt88=1;
            }
            switch (alt88) {
                case 1 :
                    // InternalSpellDatabaseParser.g:9248:2: rule__INTEGER__Alternatives_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__INTEGER__Alternatives_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getINTEGERAccess().getAlternatives_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__INTEGER__Group__0__Impl"


    // $ANTLR start "rule__INTEGER__Group__1"
    // InternalSpellDatabaseParser.g:9258:1: rule__INTEGER__Group__1 : rule__INTEGER__Group__1__Impl ;
    public final void rule__INTEGER__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:9262:1: ( rule__INTEGER__Group__1__Impl )
            // InternalSpellDatabaseParser.g:9263:2: rule__INTEGER__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__INTEGER__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__INTEGER__Group__1"


    // $ANTLR start "rule__INTEGER__Group__1__Impl"
    // InternalSpellDatabaseParser.g:9269:1: rule__INTEGER__Group__1__Impl : ( RULE_INT ) ;
    public final void rule__INTEGER__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:9273:1: ( ( RULE_INT ) )
            // InternalSpellDatabaseParser.g:9274:1: ( RULE_INT )
            {
            // InternalSpellDatabaseParser.g:9274:1: ( RULE_INT )
            // InternalSpellDatabaseParser.g:9275:1: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getINTEGERAccess().getINTTerminalRuleCall_1()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getINTEGERAccess().getINTTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__INTEGER__Group__1__Impl"


    // $ANTLR start "rule__SpellDatabase__DatabaseAssignment_1_0_3"
    // InternalSpellDatabaseParser.g:9291:1: rule__SpellDatabase__DatabaseAssignment_1_0_3 : ( ruleAstriumDatabase ) ;
    public final void rule__SpellDatabase__DatabaseAssignment_1_0_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:9295:1: ( ( ruleAstriumDatabase ) )
            // InternalSpellDatabaseParser.g:9296:1: ( ruleAstriumDatabase )
            {
            // InternalSpellDatabaseParser.g:9296:1: ( ruleAstriumDatabase )
            // InternalSpellDatabaseParser.g:9297:1: ruleAstriumDatabase
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpellDatabaseAccess().getDatabaseAstriumDatabaseParserRuleCall_1_0_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAstriumDatabase();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpellDatabaseAccess().getDatabaseAstriumDatabaseParserRuleCall_1_0_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpellDatabase__DatabaseAssignment_1_0_3"


    // $ANTLR start "rule__SpellDatabase__DatabaseEntryAssignment_1_1_1_0"
    // InternalSpellDatabaseParser.g:9306:1: rule__SpellDatabase__DatabaseEntryAssignment_1_1_1_0 : ( ruleDatabaseEntry ) ;
    public final void rule__SpellDatabase__DatabaseEntryAssignment_1_1_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:9310:1: ( ( ruleDatabaseEntry ) )
            // InternalSpellDatabaseParser.g:9311:1: ( ruleDatabaseEntry )
            {
            // InternalSpellDatabaseParser.g:9311:1: ( ruleDatabaseEntry )
            // InternalSpellDatabaseParser.g:9312:1: ruleDatabaseEntry
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpellDatabaseAccess().getDatabaseEntryDatabaseEntryParserRuleCall_1_1_1_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDatabaseEntry();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpellDatabaseAccess().getDatabaseEntryDatabaseEntryParserRuleCall_1_1_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpellDatabase__DatabaseEntryAssignment_1_1_1_0"


    // $ANTLR start "rule__SpellDatabase__DatabaseEntryAssignment_1_1_1_1_1"
    // InternalSpellDatabaseParser.g:9321:1: rule__SpellDatabase__DatabaseEntryAssignment_1_1_1_1_1 : ( ruleDatabaseEntry ) ;
    public final void rule__SpellDatabase__DatabaseEntryAssignment_1_1_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:9325:1: ( ( ruleDatabaseEntry ) )
            // InternalSpellDatabaseParser.g:9326:1: ( ruleDatabaseEntry )
            {
            // InternalSpellDatabaseParser.g:9326:1: ( ruleDatabaseEntry )
            // InternalSpellDatabaseParser.g:9327:1: ruleDatabaseEntry
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpellDatabaseAccess().getDatabaseEntryDatabaseEntryParserRuleCall_1_1_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDatabaseEntry();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpellDatabaseAccess().getDatabaseEntryDatabaseEntryParserRuleCall_1_1_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpellDatabase__DatabaseEntryAssignment_1_1_1_1_1"


    // $ANTLR start "rule__SpellDatabase__CsvEntriesAssignment_1_2_1"
    // InternalSpellDatabaseParser.g:9336:1: rule__SpellDatabase__CsvEntriesAssignment_1_2_1 : ( ruleCSVEntry ) ;
    public final void rule__SpellDatabase__CsvEntriesAssignment_1_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:9340:1: ( ( ruleCSVEntry ) )
            // InternalSpellDatabaseParser.g:9341:1: ( ruleCSVEntry )
            {
            // InternalSpellDatabaseParser.g:9341:1: ( ruleCSVEntry )
            // InternalSpellDatabaseParser.g:9342:1: ruleCSVEntry
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpellDatabaseAccess().getCsvEntriesCSVEntryParserRuleCall_1_2_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleCSVEntry();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpellDatabaseAccess().getCsvEntriesCSVEntryParserRuleCall_1_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpellDatabase__CsvEntriesAssignment_1_2_1"


    // $ANTLR start "rule__SpellDatabase__CsvEntriesAssignment_1_2_3_1"
    // InternalSpellDatabaseParser.g:9351:1: rule__SpellDatabase__CsvEntriesAssignment_1_2_3_1 : ( ruleCSVEntry ) ;
    public final void rule__SpellDatabase__CsvEntriesAssignment_1_2_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:9355:1: ( ( ruleCSVEntry ) )
            // InternalSpellDatabaseParser.g:9356:1: ( ruleCSVEntry )
            {
            // InternalSpellDatabaseParser.g:9356:1: ( ruleCSVEntry )
            // InternalSpellDatabaseParser.g:9357:1: ruleCSVEntry
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpellDatabaseAccess().getCsvEntriesCSVEntryParserRuleCall_1_2_3_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleCSVEntry();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpellDatabaseAccess().getCsvEntriesCSVEntryParserRuleCall_1_2_3_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpellDatabase__CsvEntriesAssignment_1_2_3_1"


    // $ANTLR start "rule__AstriumDatabase__EntriesAssignment_1_0"
    // InternalSpellDatabaseParser.g:9366:1: rule__AstriumDatabase__EntriesAssignment_1_0 : ( ruleAstriumHeaderEntry ) ;
    public final void rule__AstriumDatabase__EntriesAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:9370:1: ( ( ruleAstriumHeaderEntry ) )
            // InternalSpellDatabaseParser.g:9371:1: ( ruleAstriumHeaderEntry )
            {
            // InternalSpellDatabaseParser.g:9371:1: ( ruleAstriumHeaderEntry )
            // InternalSpellDatabaseParser.g:9372:1: ruleAstriumHeaderEntry
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAstriumDatabaseAccess().getEntriesAstriumHeaderEntryParserRuleCall_1_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAstriumHeaderEntry();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAstriumDatabaseAccess().getEntriesAstriumHeaderEntryParserRuleCall_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AstriumDatabase__EntriesAssignment_1_0"


    // $ANTLR start "rule__AstriumDatabase__EntriesAssignment_4_0"
    // InternalSpellDatabaseParser.g:9381:1: rule__AstriumDatabase__EntriesAssignment_4_0 : ( ruleAstriumVariableEntry ) ;
    public final void rule__AstriumDatabase__EntriesAssignment_4_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:9385:1: ( ( ruleAstriumVariableEntry ) )
            // InternalSpellDatabaseParser.g:9386:1: ( ruleAstriumVariableEntry )
            {
            // InternalSpellDatabaseParser.g:9386:1: ( ruleAstriumVariableEntry )
            // InternalSpellDatabaseParser.g:9387:1: ruleAstriumVariableEntry
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAstriumDatabaseAccess().getEntriesAstriumVariableEntryParserRuleCall_4_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAstriumVariableEntry();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAstriumDatabaseAccess().getEntriesAstriumVariableEntryParserRuleCall_4_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AstriumDatabase__EntriesAssignment_4_0"


    // $ANTLR start "rule__AstriumVariableEntry__CommentAssignment_0_1"
    // InternalSpellDatabaseParser.g:9396:1: rule__AstriumVariableEntry__CommentAssignment_0_1 : ( RULE_ASTRIUM_COMMENT ) ;
    public final void rule__AstriumVariableEntry__CommentAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:9400:1: ( ( RULE_ASTRIUM_COMMENT ) )
            // InternalSpellDatabaseParser.g:9401:1: ( RULE_ASTRIUM_COMMENT )
            {
            // InternalSpellDatabaseParser.g:9401:1: ( RULE_ASTRIUM_COMMENT )
            // InternalSpellDatabaseParser.g:9402:1: RULE_ASTRIUM_COMMENT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAstriumVariableEntryAccess().getCommentASTRIUM_COMMENTTerminalRuleCall_0_1_0()); 
            }
            match(input,RULE_ASTRIUM_COMMENT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAstriumVariableEntryAccess().getCommentASTRIUM_COMMENTTerminalRuleCall_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AstriumVariableEntry__CommentAssignment_0_1"


    // $ANTLR start "rule__AstriumVariableEntry__NameAssignment_1_2"
    // InternalSpellDatabaseParser.g:9411:1: rule__AstriumVariableEntry__NameAssignment_1_2 : ( ruleASTRIUM_ID ) ;
    public final void rule__AstriumVariableEntry__NameAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:9415:1: ( ( ruleASTRIUM_ID ) )
            // InternalSpellDatabaseParser.g:9416:1: ( ruleASTRIUM_ID )
            {
            // InternalSpellDatabaseParser.g:9416:1: ( ruleASTRIUM_ID )
            // InternalSpellDatabaseParser.g:9417:1: ruleASTRIUM_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAstriumVariableEntryAccess().getNameASTRIUM_IDParserRuleCall_1_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleASTRIUM_ID();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAstriumVariableEntryAccess().getNameASTRIUM_IDParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AstriumVariableEntry__NameAssignment_1_2"


    // $ANTLR start "rule__AstriumVariableEntry__AstriumTimeAssignment_1_5_0"
    // InternalSpellDatabaseParser.g:9426:1: rule__AstriumVariableEntry__AstriumTimeAssignment_1_5_0 : ( ruleASTRIUM_TIME ) ;
    public final void rule__AstriumVariableEntry__AstriumTimeAssignment_1_5_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:9430:1: ( ( ruleASTRIUM_TIME ) )
            // InternalSpellDatabaseParser.g:9431:1: ( ruleASTRIUM_TIME )
            {
            // InternalSpellDatabaseParser.g:9431:1: ( ruleASTRIUM_TIME )
            // InternalSpellDatabaseParser.g:9432:1: ruleASTRIUM_TIME
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAstriumVariableEntryAccess().getAstriumTimeASTRIUM_TIMEParserRuleCall_1_5_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleASTRIUM_TIME();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAstriumVariableEntryAccess().getAstriumTimeASTRIUM_TIMEParserRuleCall_1_5_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AstriumVariableEntry__AstriumTimeAssignment_1_5_0"


    // $ANTLR start "rule__AstriumVariableEntry__ValueAssignment_1_5_1"
    // InternalSpellDatabaseParser.g:9441:1: rule__AstriumVariableEntry__ValueAssignment_1_5_1 : ( ruleAtom ) ;
    public final void rule__AstriumVariableEntry__ValueAssignment_1_5_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:9445:1: ( ( ruleAtom ) )
            // InternalSpellDatabaseParser.g:9446:1: ( ruleAtom )
            {
            // InternalSpellDatabaseParser.g:9446:1: ( ruleAtom )
            // InternalSpellDatabaseParser.g:9447:1: ruleAtom
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAstriumVariableEntryAccess().getValueAtomParserRuleCall_1_5_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAtom();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAstriumVariableEntryAccess().getValueAtomParserRuleCall_1_5_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AstriumVariableEntry__ValueAssignment_1_5_1"


    // $ANTLR start "rule__AstriumVariableEntry__SimpleValueAssignment_1_5_2"
    // InternalSpellDatabaseParser.g:9456:1: rule__AstriumVariableEntry__SimpleValueAssignment_1_5_2 : ( ruleSINGLE_VALUE ) ;
    public final void rule__AstriumVariableEntry__SimpleValueAssignment_1_5_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:9460:1: ( ( ruleSINGLE_VALUE ) )
            // InternalSpellDatabaseParser.g:9461:1: ( ruleSINGLE_VALUE )
            {
            // InternalSpellDatabaseParser.g:9461:1: ( ruleSINGLE_VALUE )
            // InternalSpellDatabaseParser.g:9462:1: ruleSINGLE_VALUE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAstriumVariableEntryAccess().getSimpleValueSINGLE_VALUEParserRuleCall_1_5_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSINGLE_VALUE();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAstriumVariableEntryAccess().getSimpleValueSINGLE_VALUEParserRuleCall_1_5_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AstriumVariableEntry__SimpleValueAssignment_1_5_2"


    // $ANTLR start "rule__AstriumHeaderEntry__CommentAssignment_0_1"
    // InternalSpellDatabaseParser.g:9471:1: rule__AstriumHeaderEntry__CommentAssignment_0_1 : ( RULE_ASTRIUM_COMMENT ) ;
    public final void rule__AstriumHeaderEntry__CommentAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:9475:1: ( ( RULE_ASTRIUM_COMMENT ) )
            // InternalSpellDatabaseParser.g:9476:1: ( RULE_ASTRIUM_COMMENT )
            {
            // InternalSpellDatabaseParser.g:9476:1: ( RULE_ASTRIUM_COMMENT )
            // InternalSpellDatabaseParser.g:9477:1: RULE_ASTRIUM_COMMENT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAstriumHeaderEntryAccess().getCommentASTRIUM_COMMENTTerminalRuleCall_0_1_0()); 
            }
            match(input,RULE_ASTRIUM_COMMENT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAstriumHeaderEntryAccess().getCommentASTRIUM_COMMENTTerminalRuleCall_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AstriumHeaderEntry__CommentAssignment_0_1"


    // $ANTLR start "rule__AstriumHeaderEntry__NameAssignment_1_1"
    // InternalSpellDatabaseParser.g:9486:1: rule__AstriumHeaderEntry__NameAssignment_1_1 : ( ruleASTRIUM_ID ) ;
    public final void rule__AstriumHeaderEntry__NameAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:9490:1: ( ( ruleASTRIUM_ID ) )
            // InternalSpellDatabaseParser.g:9491:1: ( ruleASTRIUM_ID )
            {
            // InternalSpellDatabaseParser.g:9491:1: ( ruleASTRIUM_ID )
            // InternalSpellDatabaseParser.g:9492:1: ruleASTRIUM_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAstriumHeaderEntryAccess().getNameASTRIUM_IDParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleASTRIUM_ID();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAstriumHeaderEntryAccess().getNameASTRIUM_IDParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AstriumHeaderEntry__NameAssignment_1_1"


    // $ANTLR start "rule__AstriumHeaderEntry__AstriumTimeAssignment_1_4_0"
    // InternalSpellDatabaseParser.g:9501:1: rule__AstriumHeaderEntry__AstriumTimeAssignment_1_4_0 : ( ruleASTRIUM_TIME ) ;
    public final void rule__AstriumHeaderEntry__AstriumTimeAssignment_1_4_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:9505:1: ( ( ruleASTRIUM_TIME ) )
            // InternalSpellDatabaseParser.g:9506:1: ( ruleASTRIUM_TIME )
            {
            // InternalSpellDatabaseParser.g:9506:1: ( ruleASTRIUM_TIME )
            // InternalSpellDatabaseParser.g:9507:1: ruleASTRIUM_TIME
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAstriumHeaderEntryAccess().getAstriumTimeASTRIUM_TIMEParserRuleCall_1_4_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleASTRIUM_TIME();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAstriumHeaderEntryAccess().getAstriumTimeASTRIUM_TIMEParserRuleCall_1_4_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AstriumHeaderEntry__AstriumTimeAssignment_1_4_0"


    // $ANTLR start "rule__AstriumHeaderEntry__ValueAssignment_1_4_1"
    // InternalSpellDatabaseParser.g:9516:1: rule__AstriumHeaderEntry__ValueAssignment_1_4_1 : ( ruleAtom ) ;
    public final void rule__AstriumHeaderEntry__ValueAssignment_1_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:9520:1: ( ( ruleAtom ) )
            // InternalSpellDatabaseParser.g:9521:1: ( ruleAtom )
            {
            // InternalSpellDatabaseParser.g:9521:1: ( ruleAtom )
            // InternalSpellDatabaseParser.g:9522:1: ruleAtom
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAstriumHeaderEntryAccess().getValueAtomParserRuleCall_1_4_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAtom();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAstriumHeaderEntryAccess().getValueAtomParserRuleCall_1_4_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AstriumHeaderEntry__ValueAssignment_1_4_1"


    // $ANTLR start "rule__AstriumHeaderEntry__SimpleValueAssignment_1_4_2"
    // InternalSpellDatabaseParser.g:9531:1: rule__AstriumHeaderEntry__SimpleValueAssignment_1_4_2 : ( ruleSINGLE_VALUE ) ;
    public final void rule__AstriumHeaderEntry__SimpleValueAssignment_1_4_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:9535:1: ( ( ruleSINGLE_VALUE ) )
            // InternalSpellDatabaseParser.g:9536:1: ( ruleSINGLE_VALUE )
            {
            // InternalSpellDatabaseParser.g:9536:1: ( ruleSINGLE_VALUE )
            // InternalSpellDatabaseParser.g:9537:1: ruleSINGLE_VALUE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAstriumHeaderEntryAccess().getSimpleValueSINGLE_VALUEParserRuleCall_1_4_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSINGLE_VALUE();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAstriumHeaderEntryAccess().getSimpleValueSINGLE_VALUEParserRuleCall_1_4_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AstriumHeaderEntry__SimpleValueAssignment_1_4_2"


    // $ANTLR start "rule__CSVCommand__CommandAssignment_2"
    // InternalSpellDatabaseParser.g:9546:1: rule__CSVCommand__CommandAssignment_2 : ( ruleID_STMT ) ;
    public final void rule__CSVCommand__CommandAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:9550:1: ( ( ruleID_STMT ) )
            // InternalSpellDatabaseParser.g:9551:1: ( ruleID_STMT )
            {
            // InternalSpellDatabaseParser.g:9551:1: ( ruleID_STMT )
            // InternalSpellDatabaseParser.g:9552:1: ruleID_STMT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCSVCommandAccess().getCommandID_STMTParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleID_STMT();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCSVCommandAccess().getCommandID_STMTParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CSVCommand__CommandAssignment_2"


    // $ANTLR start "rule__CSVCommand__ArgsAssignment_3_1"
    // InternalSpellDatabaseParser.g:9561:1: rule__CSVCommand__ArgsAssignment_3_1 : ( ruleTCArgs ) ;
    public final void rule__CSVCommand__ArgsAssignment_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:9565:1: ( ( ruleTCArgs ) )
            // InternalSpellDatabaseParser.g:9566:1: ( ruleTCArgs )
            {
            // InternalSpellDatabaseParser.g:9566:1: ( ruleTCArgs )
            // InternalSpellDatabaseParser.g:9567:1: ruleTCArgs
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCSVCommandAccess().getArgsTCArgsParserRuleCall_3_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleTCArgs();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCSVCommandAccess().getArgsTCArgsParserRuleCall_3_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CSVCommand__ArgsAssignment_3_1"


    // $ANTLR start "rule__CSVCommand__ArgsAssignment_3_2_0_3"
    // InternalSpellDatabaseParser.g:9576:1: rule__CSVCommand__ArgsAssignment_3_2_0_3 : ( ruleTCArgs ) ;
    public final void rule__CSVCommand__ArgsAssignment_3_2_0_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:9580:1: ( ( ruleTCArgs ) )
            // InternalSpellDatabaseParser.g:9581:1: ( ruleTCArgs )
            {
            // InternalSpellDatabaseParser.g:9581:1: ( ruleTCArgs )
            // InternalSpellDatabaseParser.g:9582:1: ruleTCArgs
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCSVCommandAccess().getArgsTCArgsParserRuleCall_3_2_0_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleTCArgs();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCSVCommandAccess().getArgsTCArgsParserRuleCall_3_2_0_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CSVCommand__ArgsAssignment_3_2_0_3"


    // $ANTLR start "rule__TCArgs__TcNameAssignment_0"
    // InternalSpellDatabaseParser.g:9591:1: rule__TCArgs__TcNameAssignment_0 : ( ruleTCValue ) ;
    public final void rule__TCArgs__TcNameAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:9595:1: ( ( ruleTCValue ) )
            // InternalSpellDatabaseParser.g:9596:1: ( ruleTCValue )
            {
            // InternalSpellDatabaseParser.g:9596:1: ( ruleTCValue )
            // InternalSpellDatabaseParser.g:9597:1: ruleTCValue
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTCArgsAccess().getTcNameTCValueParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleTCValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTCArgsAccess().getTcNameTCValueParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TCArgs__TcNameAssignment_0"


    // $ANTLR start "rule__TCArgs__TcValueAssignment_2"
    // InternalSpellDatabaseParser.g:9606:1: rule__TCArgs__TcValueAssignment_2 : ( ruleTCValue ) ;
    public final void rule__TCArgs__TcValueAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:9610:1: ( ( ruleTCValue ) )
            // InternalSpellDatabaseParser.g:9611:1: ( ruleTCValue )
            {
            // InternalSpellDatabaseParser.g:9611:1: ( ruleTCValue )
            // InternalSpellDatabaseParser.g:9612:1: ruleTCValue
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTCArgsAccess().getTcValueTCValueParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleTCValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTCArgsAccess().getTcValueTCValueParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TCArgs__TcValueAssignment_2"


    // $ANTLR start "rule__TCArgs__TcModAssignment_4"
    // InternalSpellDatabaseParser.g:9621:1: rule__TCArgs__TcModAssignment_4 : ( RULE_STATE_EXPR ) ;
    public final void rule__TCArgs__TcModAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:9625:1: ( ( RULE_STATE_EXPR ) )
            // InternalSpellDatabaseParser.g:9626:1: ( RULE_STATE_EXPR )
            {
            // InternalSpellDatabaseParser.g:9626:1: ( RULE_STATE_EXPR )
            // InternalSpellDatabaseParser.g:9627:1: RULE_STATE_EXPR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTCArgsAccess().getTcModSTATE_EXPRTerminalRuleCall_4_0()); 
            }
            match(input,RULE_STATE_EXPR,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTCArgsAccess().getTcModSTATE_EXPRTerminalRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TCArgs__TcModAssignment_4"


    // $ANTLR start "rule__TCArgs__ToleranceAssignment_5_0_1"
    // InternalSpellDatabaseParser.g:9636:1: rule__TCArgs__ToleranceAssignment_5_0_1 : ( rulePosIntOrFloat ) ;
    public final void rule__TCArgs__ToleranceAssignment_5_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:9640:1: ( ( rulePosIntOrFloat ) )
            // InternalSpellDatabaseParser.g:9641:1: ( rulePosIntOrFloat )
            {
            // InternalSpellDatabaseParser.g:9641:1: ( rulePosIntOrFloat )
            // InternalSpellDatabaseParser.g:9642:1: rulePosIntOrFloat
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTCArgsAccess().getTolerancePosIntOrFloatParserRuleCall_5_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            rulePosIntOrFloat();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTCArgsAccess().getTolerancePosIntOrFloatParserRuleCall_5_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TCArgs__ToleranceAssignment_5_0_1"


    // $ANTLR start "rule__CSVTelemetry__TmArgAssignment_3"
    // InternalSpellDatabaseParser.g:9651:1: rule__CSVTelemetry__TmArgAssignment_3 : ( ruleTCArgs ) ;
    public final void rule__CSVTelemetry__TmArgAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:9655:1: ( ( ruleTCArgs ) )
            // InternalSpellDatabaseParser.g:9656:1: ( ruleTCArgs )
            {
            // InternalSpellDatabaseParser.g:9656:1: ( ruleTCArgs )
            // InternalSpellDatabaseParser.g:9657:1: ruleTCArgs
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCSVTelemetryAccess().getTmArgTCArgsParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleTCArgs();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCSVTelemetryAccess().getTmArgTCArgsParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CSVTelemetry__TmArgAssignment_3"


    // $ANTLR start "rule__CSVSpell__CmdAssignment_2"
    // InternalSpellDatabaseParser.g:9666:1: rule__CSVSpell__CmdAssignment_2 : ( ruleSpellCommand ) ;
    public final void rule__CSVSpell__CmdAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:9670:1: ( ( ruleSpellCommand ) )
            // InternalSpellDatabaseParser.g:9671:1: ( ruleSpellCommand )
            {
            // InternalSpellDatabaseParser.g:9671:1: ( ruleSpellCommand )
            // InternalSpellDatabaseParser.g:9672:1: ruleSpellCommand
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCSVSpellAccess().getCmdSpellCommandParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSpellCommand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCSVSpellAccess().getCmdSpellCommandParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CSVSpell__CmdAssignment_2"


    // $ANTLR start "rule__SpellCommand__ValueAssignment_0_3"
    // InternalSpellDatabaseParser.g:9681:1: rule__SpellCommand__ValueAssignment_0_3 : ( ruleIntOrFloat ) ;
    public final void rule__SpellCommand__ValueAssignment_0_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:9685:1: ( ( ruleIntOrFloat ) )
            // InternalSpellDatabaseParser.g:9686:1: ( ruleIntOrFloat )
            {
            // InternalSpellDatabaseParser.g:9686:1: ( ruleIntOrFloat )
            // InternalSpellDatabaseParser.g:9687:1: ruleIntOrFloat
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpellCommandAccess().getValueIntOrFloatParserRuleCall_0_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleIntOrFloat();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpellCommandAccess().getValueIntOrFloatParserRuleCall_0_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpellCommand__ValueAssignment_0_3"


    // $ANTLR start "rule__SpellCommand__UnitAssignment_0_5"
    // InternalSpellDatabaseParser.g:9696:1: rule__SpellCommand__UnitAssignment_0_5 : ( RULE_TIME_EXPR ) ;
    public final void rule__SpellCommand__UnitAssignment_0_5() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:9700:1: ( ( RULE_TIME_EXPR ) )
            // InternalSpellDatabaseParser.g:9701:1: ( RULE_TIME_EXPR )
            {
            // InternalSpellDatabaseParser.g:9701:1: ( RULE_TIME_EXPR )
            // InternalSpellDatabaseParser.g:9702:1: RULE_TIME_EXPR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpellCommandAccess().getUnitTIME_EXPRTerminalRuleCall_0_5_0()); 
            }
            match(input,RULE_TIME_EXPR,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpellCommandAccess().getUnitTIME_EXPRTerminalRuleCall_0_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpellCommand__UnitAssignment_0_5"


    // $ANTLR start "rule__DatabaseEntry__NameAssignment_0"
    // InternalSpellDatabaseParser.g:9711:1: rule__DatabaseEntry__NameAssignment_0 : ( ruleKeyValue ) ;
    public final void rule__DatabaseEntry__NameAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:9715:1: ( ( ruleKeyValue ) )
            // InternalSpellDatabaseParser.g:9716:1: ( ruleKeyValue )
            {
            // InternalSpellDatabaseParser.g:9716:1: ( ruleKeyValue )
            // InternalSpellDatabaseParser.g:9717:1: ruleKeyValue
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDatabaseEntryAccess().getNameKeyValueParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleKeyValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDatabaseEntryAccess().getNameKeyValueParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DatabaseEntry__NameAssignment_0"


    // $ANTLR start "rule__DatabaseEntry__ValueAssignment_4"
    // InternalSpellDatabaseParser.g:9726:1: rule__DatabaseEntry__ValueAssignment_4 : ( ruleDatabaseValue ) ;
    public final void rule__DatabaseEntry__ValueAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:9730:1: ( ( ruleDatabaseValue ) )
            // InternalSpellDatabaseParser.g:9731:1: ( ruleDatabaseValue )
            {
            // InternalSpellDatabaseParser.g:9731:1: ( ruleDatabaseValue )
            // InternalSpellDatabaseParser.g:9732:1: ruleDatabaseValue
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDatabaseEntryAccess().getValueDatabaseValueParserRuleCall_4_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDatabaseValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDatabaseEntryAccess().getValueDatabaseValueParserRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DatabaseEntry__ValueAssignment_4"


    // $ANTLR start "rule__Lambda_Stmt__VariablesAssignment_2"
    // InternalSpellDatabaseParser.g:9741:1: rule__Lambda_Stmt__VariablesAssignment_2 : ( ruleLambda_Vars ) ;
    public final void rule__Lambda_Stmt__VariablesAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:9745:1: ( ( ruleLambda_Vars ) )
            // InternalSpellDatabaseParser.g:9746:1: ( ruleLambda_Vars )
            {
            // InternalSpellDatabaseParser.g:9746:1: ( ruleLambda_Vars )
            // InternalSpellDatabaseParser.g:9747:1: ruleLambda_Vars
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLambda_StmtAccess().getVariablesLambda_VarsParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleLambda_Vars();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLambda_StmtAccess().getVariablesLambda_VarsParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Lambda_Stmt__VariablesAssignment_2"


    // $ANTLR start "rule__Lambda_Stmt__ValAssignment_4"
    // InternalSpellDatabaseParser.g:9756:1: rule__Lambda_Stmt__ValAssignment_4 : ( ruleLambda_Function ) ;
    public final void rule__Lambda_Stmt__ValAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:9760:1: ( ( ruleLambda_Function ) )
            // InternalSpellDatabaseParser.g:9761:1: ( ruleLambda_Function )
            {
            // InternalSpellDatabaseParser.g:9761:1: ( ruleLambda_Function )
            // InternalSpellDatabaseParser.g:9762:1: ruleLambda_Function
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLambda_StmtAccess().getValLambda_FunctionParserRuleCall_4_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleLambda_Function();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLambda_StmtAccess().getValLambda_FunctionParserRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Lambda_Stmt__ValAssignment_4"


    // $ANTLR start "rule__Tuple__ValuesAssignment_2_1"
    // InternalSpellDatabaseParser.g:9771:1: rule__Tuple__ValuesAssignment_2_1 : ( ( rule__Tuple__ValuesAlternatives_2_1_0 ) ) ;
    public final void rule__Tuple__ValuesAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:9775:1: ( ( ( rule__Tuple__ValuesAlternatives_2_1_0 ) ) )
            // InternalSpellDatabaseParser.g:9776:1: ( ( rule__Tuple__ValuesAlternatives_2_1_0 ) )
            {
            // InternalSpellDatabaseParser.g:9776:1: ( ( rule__Tuple__ValuesAlternatives_2_1_0 ) )
            // InternalSpellDatabaseParser.g:9777:1: ( rule__Tuple__ValuesAlternatives_2_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTupleAccess().getValuesAlternatives_2_1_0()); 
            }
            // InternalSpellDatabaseParser.g:9778:1: ( rule__Tuple__ValuesAlternatives_2_1_0 )
            // InternalSpellDatabaseParser.g:9778:2: rule__Tuple__ValuesAlternatives_2_1_0
            {
            pushFollow(FOLLOW_2);
            rule__Tuple__ValuesAlternatives_2_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTupleAccess().getValuesAlternatives_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tuple__ValuesAssignment_2_1"


    // $ANTLR start "rule__Tuple__ValuesAssignment_2_3_2"
    // InternalSpellDatabaseParser.g:9787:1: rule__Tuple__ValuesAssignment_2_3_2 : ( ( rule__Tuple__ValuesAlternatives_2_3_2_0 ) ) ;
    public final void rule__Tuple__ValuesAssignment_2_3_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:9791:1: ( ( ( rule__Tuple__ValuesAlternatives_2_3_2_0 ) ) )
            // InternalSpellDatabaseParser.g:9792:1: ( ( rule__Tuple__ValuesAlternatives_2_3_2_0 ) )
            {
            // InternalSpellDatabaseParser.g:9792:1: ( ( rule__Tuple__ValuesAlternatives_2_3_2_0 ) )
            // InternalSpellDatabaseParser.g:9793:1: ( rule__Tuple__ValuesAlternatives_2_3_2_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTupleAccess().getValuesAlternatives_2_3_2_0()); 
            }
            // InternalSpellDatabaseParser.g:9794:1: ( rule__Tuple__ValuesAlternatives_2_3_2_0 )
            // InternalSpellDatabaseParser.g:9794:2: rule__Tuple__ValuesAlternatives_2_3_2_0
            {
            pushFollow(FOLLOW_2);
            rule__Tuple__ValuesAlternatives_2_3_2_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTupleAccess().getValuesAlternatives_2_3_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tuple__ValuesAssignment_2_3_2"


    // $ANTLR start "rule__List__ValuesAssignment_2_1"
    // InternalSpellDatabaseParser.g:9803:1: rule__List__ValuesAssignment_2_1 : ( ( rule__List__ValuesAlternatives_2_1_0 ) ) ;
    public final void rule__List__ValuesAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:9807:1: ( ( ( rule__List__ValuesAlternatives_2_1_0 ) ) )
            // InternalSpellDatabaseParser.g:9808:1: ( ( rule__List__ValuesAlternatives_2_1_0 ) )
            {
            // InternalSpellDatabaseParser.g:9808:1: ( ( rule__List__ValuesAlternatives_2_1_0 ) )
            // InternalSpellDatabaseParser.g:9809:1: ( rule__List__ValuesAlternatives_2_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getListAccess().getValuesAlternatives_2_1_0()); 
            }
            // InternalSpellDatabaseParser.g:9810:1: ( rule__List__ValuesAlternatives_2_1_0 )
            // InternalSpellDatabaseParser.g:9810:2: rule__List__ValuesAlternatives_2_1_0
            {
            pushFollow(FOLLOW_2);
            rule__List__ValuesAlternatives_2_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getListAccess().getValuesAlternatives_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__List__ValuesAssignment_2_1"


    // $ANTLR start "rule__List__ValuesAssignment_2_3_2"
    // InternalSpellDatabaseParser.g:9819:1: rule__List__ValuesAssignment_2_3_2 : ( ( rule__List__ValuesAlternatives_2_3_2_0 ) ) ;
    public final void rule__List__ValuesAssignment_2_3_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:9823:1: ( ( ( rule__List__ValuesAlternatives_2_3_2_0 ) ) )
            // InternalSpellDatabaseParser.g:9824:1: ( ( rule__List__ValuesAlternatives_2_3_2_0 ) )
            {
            // InternalSpellDatabaseParser.g:9824:1: ( ( rule__List__ValuesAlternatives_2_3_2_0 ) )
            // InternalSpellDatabaseParser.g:9825:1: ( rule__List__ValuesAlternatives_2_3_2_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getListAccess().getValuesAlternatives_2_3_2_0()); 
            }
            // InternalSpellDatabaseParser.g:9826:1: ( rule__List__ValuesAlternatives_2_3_2_0 )
            // InternalSpellDatabaseParser.g:9826:2: rule__List__ValuesAlternatives_2_3_2_0
            {
            pushFollow(FOLLOW_2);
            rule__List__ValuesAlternatives_2_3_2_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getListAccess().getValuesAlternatives_2_3_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__List__ValuesAssignment_2_3_2"


    // $ANTLR start "rule__Dictionary__EntriesAssignment_2_1"
    // InternalSpellDatabaseParser.g:9835:1: rule__Dictionary__EntriesAssignment_2_1 : ( ruleDictionaryEntry ) ;
    public final void rule__Dictionary__EntriesAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:9839:1: ( ( ruleDictionaryEntry ) )
            // InternalSpellDatabaseParser.g:9840:1: ( ruleDictionaryEntry )
            {
            // InternalSpellDatabaseParser.g:9840:1: ( ruleDictionaryEntry )
            // InternalSpellDatabaseParser.g:9841:1: ruleDictionaryEntry
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDictionaryAccess().getEntriesDictionaryEntryParserRuleCall_2_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDictionaryEntry();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDictionaryAccess().getEntriesDictionaryEntryParserRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dictionary__EntriesAssignment_2_1"


    // $ANTLR start "rule__Dictionary__EntriesAssignment_2_3_2"
    // InternalSpellDatabaseParser.g:9850:1: rule__Dictionary__EntriesAssignment_2_3_2 : ( ruleDictionaryEntry ) ;
    public final void rule__Dictionary__EntriesAssignment_2_3_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:9854:1: ( ( ruleDictionaryEntry ) )
            // InternalSpellDatabaseParser.g:9855:1: ( ruleDictionaryEntry )
            {
            // InternalSpellDatabaseParser.g:9855:1: ( ruleDictionaryEntry )
            // InternalSpellDatabaseParser.g:9856:1: ruleDictionaryEntry
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDictionaryAccess().getEntriesDictionaryEntryParserRuleCall_2_3_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDictionaryEntry();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDictionaryAccess().getEntriesDictionaryEntryParserRuleCall_2_3_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dictionary__EntriesAssignment_2_3_2"


    // $ANTLR start "rule__DictionaryEntry__KeyAssignment_0"
    // InternalSpellDatabaseParser.g:9865:1: rule__DictionaryEntry__KeyAssignment_0 : ( ( rule__DictionaryEntry__KeyAlternatives_0_0 ) ) ;
    public final void rule__DictionaryEntry__KeyAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:9869:1: ( ( ( rule__DictionaryEntry__KeyAlternatives_0_0 ) ) )
            // InternalSpellDatabaseParser.g:9870:1: ( ( rule__DictionaryEntry__KeyAlternatives_0_0 ) )
            {
            // InternalSpellDatabaseParser.g:9870:1: ( ( rule__DictionaryEntry__KeyAlternatives_0_0 ) )
            // InternalSpellDatabaseParser.g:9871:1: ( rule__DictionaryEntry__KeyAlternatives_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDictionaryEntryAccess().getKeyAlternatives_0_0()); 
            }
            // InternalSpellDatabaseParser.g:9872:1: ( rule__DictionaryEntry__KeyAlternatives_0_0 )
            // InternalSpellDatabaseParser.g:9872:2: rule__DictionaryEntry__KeyAlternatives_0_0
            {
            pushFollow(FOLLOW_2);
            rule__DictionaryEntry__KeyAlternatives_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDictionaryEntryAccess().getKeyAlternatives_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DictionaryEntry__KeyAssignment_0"


    // $ANTLR start "rule__DictionaryEntry__ValueAssignment_2_2"
    // InternalSpellDatabaseParser.g:9881:1: rule__DictionaryEntry__ValueAssignment_2_2 : ( ( rule__DictionaryEntry__ValueAlternatives_2_2_0 ) ) ;
    public final void rule__DictionaryEntry__ValueAssignment_2_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:9885:1: ( ( ( rule__DictionaryEntry__ValueAlternatives_2_2_0 ) ) )
            // InternalSpellDatabaseParser.g:9886:1: ( ( rule__DictionaryEntry__ValueAlternatives_2_2_0 ) )
            {
            // InternalSpellDatabaseParser.g:9886:1: ( ( rule__DictionaryEntry__ValueAlternatives_2_2_0 ) )
            // InternalSpellDatabaseParser.g:9887:1: ( rule__DictionaryEntry__ValueAlternatives_2_2_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDictionaryEntryAccess().getValueAlternatives_2_2_0()); 
            }
            // InternalSpellDatabaseParser.g:9888:1: ( rule__DictionaryEntry__ValueAlternatives_2_2_0 )
            // InternalSpellDatabaseParser.g:9888:2: rule__DictionaryEntry__ValueAlternatives_2_2_0
            {
            pushFollow(FOLLOW_2);
            rule__DictionaryEntry__ValueAlternatives_2_2_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDictionaryEntryAccess().getValueAlternatives_2_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DictionaryEntry__ValueAssignment_2_2"


    // $ANTLR start "rule__RelDate__ValAssignment"
    // InternalSpellDatabaseParser.g:9897:1: rule__RelDate__ValAssignment : ( ruleRELTIME ) ;
    public final void rule__RelDate__ValAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:9901:1: ( ( ruleRELTIME ) )
            // InternalSpellDatabaseParser.g:9902:1: ( ruleRELTIME )
            {
            // InternalSpellDatabaseParser.g:9902:1: ( ruleRELTIME )
            // InternalSpellDatabaseParser.g:9903:1: ruleRELTIME
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRelDateAccess().getValRELTIMEParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleRELTIME();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRelDateAccess().getValRELTIMEParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RelDate__ValAssignment"


    // $ANTLR start "rule__Date__ValAssignment"
    // InternalSpellDatabaseParser.g:9912:1: rule__Date__ValAssignment : ( ruleABSTIME ) ;
    public final void rule__Date__ValAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:9916:1: ( ( ruleABSTIME ) )
            // InternalSpellDatabaseParser.g:9917:1: ( ruleABSTIME )
            {
            // InternalSpellDatabaseParser.g:9917:1: ( ruleABSTIME )
            // InternalSpellDatabaseParser.g:9918:1: ruleABSTIME
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDateAccess().getValABSTIMEParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleABSTIME();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDateAccess().getValABSTIMEParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Date__ValAssignment"


    // $ANTLR start "rule__Boolean__ValAssignment"
    // InternalSpellDatabaseParser.g:9927:1: rule__Boolean__ValAssignment : ( RULE_BOOL_EXPR ) ;
    public final void rule__Boolean__ValAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:9931:1: ( ( RULE_BOOL_EXPR ) )
            // InternalSpellDatabaseParser.g:9932:1: ( RULE_BOOL_EXPR )
            {
            // InternalSpellDatabaseParser.g:9932:1: ( RULE_BOOL_EXPR )
            // InternalSpellDatabaseParser.g:9933:1: RULE_BOOL_EXPR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBooleanAccess().getValBOOL_EXPRTerminalRuleCall_0()); 
            }
            match(input,RULE_BOOL_EXPR,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBooleanAccess().getValBOOL_EXPRTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Boolean__ValAssignment"


    // $ANTLR start "rule__StringValue__ValAssignment"
    // InternalSpellDatabaseParser.g:9942:1: rule__StringValue__ValAssignment : ( RULE_STRING ) ;
    public final void rule__StringValue__ValAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:9946:1: ( ( RULE_STRING ) )
            // InternalSpellDatabaseParser.g:9947:1: ( RULE_STRING )
            {
            // InternalSpellDatabaseParser.g:9947:1: ( RULE_STRING )
            // InternalSpellDatabaseParser.g:9948:1: RULE_STRING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringValueAccess().getValSTRINGTerminalRuleCall_0()); 
            }
            match(input,RULE_STRING,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringValueAccess().getValSTRINGTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringValue__ValAssignment"


    // $ANTLR start "rule__Number__ValAssignment_0"
    // InternalSpellDatabaseParser.g:9957:1: rule__Number__ValAssignment_0 : ( RULE_BIN_HEX_OCT ) ;
    public final void rule__Number__ValAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:9961:1: ( ( RULE_BIN_HEX_OCT ) )
            // InternalSpellDatabaseParser.g:9962:1: ( RULE_BIN_HEX_OCT )
            {
            // InternalSpellDatabaseParser.g:9962:1: ( RULE_BIN_HEX_OCT )
            // InternalSpellDatabaseParser.g:9963:1: RULE_BIN_HEX_OCT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNumberAccess().getValBIN_HEX_OCTTerminalRuleCall_0_0()); 
            }
            match(input,RULE_BIN_HEX_OCT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNumberAccess().getValBIN_HEX_OCTTerminalRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Number__ValAssignment_0"


    // $ANTLR start "rule__Number__ValIntAssignment_1"
    // InternalSpellDatabaseParser.g:9972:1: rule__Number__ValIntAssignment_1 : ( ruleINTEGER ) ;
    public final void rule__Number__ValIntAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:9976:1: ( ( ruleINTEGER ) )
            // InternalSpellDatabaseParser.g:9977:1: ( ruleINTEGER )
            {
            // InternalSpellDatabaseParser.g:9977:1: ( ruleINTEGER )
            // InternalSpellDatabaseParser.g:9978:1: ruleINTEGER
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNumberAccess().getValIntINTEGERParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleINTEGER();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNumberAccess().getValIntINTEGERParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Number__ValIntAssignment_1"


    // $ANTLR start "rule__Number__ValStrAssignment_2"
    // InternalSpellDatabaseParser.g:9987:1: rule__Number__ValStrAssignment_2 : ( ruleFLOAT_Val ) ;
    public final void rule__Number__ValStrAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSpellDatabaseParser.g:9991:1: ( ( ruleFLOAT_Val ) )
            // InternalSpellDatabaseParser.g:9992:1: ( ruleFLOAT_Val )
            {
            // InternalSpellDatabaseParser.g:9992:1: ( ruleFLOAT_Val )
            // InternalSpellDatabaseParser.g:9993:1: ruleFLOAT_Val
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNumberAccess().getValStrFLOAT_ValParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleFLOAT_Val();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNumberAccess().getValStrFLOAT_ValParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Number__ValStrAssignment_2"

    // $ANTLR start synpred1_InternalSpellDatabaseParser
    public final void synpred1_InternalSpellDatabaseParser_fragment() throws RecognitionException {   
        // InternalSpellDatabaseParser.g:283:2: ( rule__SkipNLAndComments__Alternatives )
        // InternalSpellDatabaseParser.g:283:2: rule__SkipNLAndComments__Alternatives
        {
        pushFollow(FOLLOW_2);
        rule__SkipNLAndComments__Alternatives();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred1_InternalSpellDatabaseParser

    // $ANTLR start synpred3_InternalSpellDatabaseParser
    public final void synpred3_InternalSpellDatabaseParser_fragment() throws RecognitionException {   
        // InternalSpellDatabaseParser.g:468:2: ( rule__KeyValue__Alternatives )
        // InternalSpellDatabaseParser.g:468:2: rule__KeyValue__Alternatives
        {
        pushFollow(FOLLOW_2);
        rule__KeyValue__Alternatives();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred3_InternalSpellDatabaseParser

    // $ANTLR start synpred4_InternalSpellDatabaseParser
    public final void synpred4_InternalSpellDatabaseParser_fragment() throws RecognitionException {   
        // InternalSpellDatabaseParser.g:767:3: ( ruleLambda_Partial_Func )
        // InternalSpellDatabaseParser.g:767:3: ruleLambda_Partial_Func
        {
        pushFollow(FOLLOW_2);
        ruleLambda_Partial_Func();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred4_InternalSpellDatabaseParser

    // $ANTLR start synpred5_InternalSpellDatabaseParser
    public final void synpred5_InternalSpellDatabaseParser_fragment() throws RecognitionException {   
        // InternalSpellDatabaseParser.g:1252:2: ( rule__Skipped_NL__Group__0 )
        // InternalSpellDatabaseParser.g:1252:2: rule__Skipped_NL__Group__0
        {
        pushFollow(FOLLOW_2);
        rule__Skipped_NL__Group__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred5_InternalSpellDatabaseParser

    // $ANTLR start synpred6_InternalSpellDatabaseParser
    public final void synpred6_InternalSpellDatabaseParser_fragment() throws RecognitionException {   
        // InternalSpellDatabaseParser.g:1366:2: ( rule__SINGLE_VALUE__Alternatives )
        // InternalSpellDatabaseParser.g:1366:2: rule__SINGLE_VALUE__Alternatives
        {
        pushFollow(FOLLOW_2);
        rule__SINGLE_VALUE__Alternatives();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred6_InternalSpellDatabaseParser

    // $ANTLR start synpred10_InternalSpellDatabaseParser
    public final void synpred10_InternalSpellDatabaseParser_fragment() throws RecognitionException {   
        // InternalSpellDatabaseParser.g:1579:1: ( ( ( rule__AstriumVariableEntry__AstriumTimeAssignment_1_5_0 ) ) )
        // InternalSpellDatabaseParser.g:1579:1: ( ( rule__AstriumVariableEntry__AstriumTimeAssignment_1_5_0 ) )
        {
        // InternalSpellDatabaseParser.g:1579:1: ( ( rule__AstriumVariableEntry__AstriumTimeAssignment_1_5_0 ) )
        // InternalSpellDatabaseParser.g:1580:1: ( rule__AstriumVariableEntry__AstriumTimeAssignment_1_5_0 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getAstriumVariableEntryAccess().getAstriumTimeAssignment_1_5_0()); 
        }
        // InternalSpellDatabaseParser.g:1581:1: ( rule__AstriumVariableEntry__AstriumTimeAssignment_1_5_0 )
        // InternalSpellDatabaseParser.g:1581:2: rule__AstriumVariableEntry__AstriumTimeAssignment_1_5_0
        {
        pushFollow(FOLLOW_2);
        rule__AstriumVariableEntry__AstriumTimeAssignment_1_5_0();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred10_InternalSpellDatabaseParser

    // $ANTLR start synpred11_InternalSpellDatabaseParser
    public final void synpred11_InternalSpellDatabaseParser_fragment() throws RecognitionException {   
        // InternalSpellDatabaseParser.g:1585:6: ( ( ( rule__AstriumVariableEntry__ValueAssignment_1_5_1 ) ) )
        // InternalSpellDatabaseParser.g:1585:6: ( ( rule__AstriumVariableEntry__ValueAssignment_1_5_1 ) )
        {
        // InternalSpellDatabaseParser.g:1585:6: ( ( rule__AstriumVariableEntry__ValueAssignment_1_5_1 ) )
        // InternalSpellDatabaseParser.g:1586:1: ( rule__AstriumVariableEntry__ValueAssignment_1_5_1 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getAstriumVariableEntryAccess().getValueAssignment_1_5_1()); 
        }
        // InternalSpellDatabaseParser.g:1587:1: ( rule__AstriumVariableEntry__ValueAssignment_1_5_1 )
        // InternalSpellDatabaseParser.g:1587:2: rule__AstriumVariableEntry__ValueAssignment_1_5_1
        {
        pushFollow(FOLLOW_2);
        rule__AstriumVariableEntry__ValueAssignment_1_5_1();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred11_InternalSpellDatabaseParser

    // $ANTLR start synpred13_InternalSpellDatabaseParser
    public final void synpred13_InternalSpellDatabaseParser_fragment() throws RecognitionException {   
        // InternalSpellDatabaseParser.g:1629:1: ( ( ( rule__AstriumHeaderEntry__AstriumTimeAssignment_1_4_0 ) ) )
        // InternalSpellDatabaseParser.g:1629:1: ( ( rule__AstriumHeaderEntry__AstriumTimeAssignment_1_4_0 ) )
        {
        // InternalSpellDatabaseParser.g:1629:1: ( ( rule__AstriumHeaderEntry__AstriumTimeAssignment_1_4_0 ) )
        // InternalSpellDatabaseParser.g:1630:1: ( rule__AstriumHeaderEntry__AstriumTimeAssignment_1_4_0 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getAstriumHeaderEntryAccess().getAstriumTimeAssignment_1_4_0()); 
        }
        // InternalSpellDatabaseParser.g:1631:1: ( rule__AstriumHeaderEntry__AstriumTimeAssignment_1_4_0 )
        // InternalSpellDatabaseParser.g:1631:2: rule__AstriumHeaderEntry__AstriumTimeAssignment_1_4_0
        {
        pushFollow(FOLLOW_2);
        rule__AstriumHeaderEntry__AstriumTimeAssignment_1_4_0();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred13_InternalSpellDatabaseParser

    // $ANTLR start synpred14_InternalSpellDatabaseParser
    public final void synpred14_InternalSpellDatabaseParser_fragment() throws RecognitionException {   
        // InternalSpellDatabaseParser.g:1635:6: ( ( ( rule__AstriumHeaderEntry__ValueAssignment_1_4_1 ) ) )
        // InternalSpellDatabaseParser.g:1635:6: ( ( rule__AstriumHeaderEntry__ValueAssignment_1_4_1 ) )
        {
        // InternalSpellDatabaseParser.g:1635:6: ( ( rule__AstriumHeaderEntry__ValueAssignment_1_4_1 ) )
        // InternalSpellDatabaseParser.g:1636:1: ( rule__AstriumHeaderEntry__ValueAssignment_1_4_1 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getAstriumHeaderEntryAccess().getValueAssignment_1_4_1()); 
        }
        // InternalSpellDatabaseParser.g:1637:1: ( rule__AstriumHeaderEntry__ValueAssignment_1_4_1 )
        // InternalSpellDatabaseParser.g:1637:2: rule__AstriumHeaderEntry__ValueAssignment_1_4_1
        {
        pushFollow(FOLLOW_2);
        rule__AstriumHeaderEntry__ValueAssignment_1_4_1();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred14_InternalSpellDatabaseParser

    // $ANTLR start synpred22_InternalSpellDatabaseParser
    public final void synpred22_InternalSpellDatabaseParser_fragment() throws RecognitionException {   
        // InternalSpellDatabaseParser.g:1731:6: ( ( RULE_PLUS ) )
        // InternalSpellDatabaseParser.g:1731:6: ( RULE_PLUS )
        {
        // InternalSpellDatabaseParser.g:1731:6: ( RULE_PLUS )
        // InternalSpellDatabaseParser.g:1732:1: RULE_PLUS
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getTCValueAccess().getPLUSTerminalRuleCall_2()); 
        }
        match(input,RULE_PLUS,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred22_InternalSpellDatabaseParser

    // $ANTLR start synpred23_InternalSpellDatabaseParser
    public final void synpred23_InternalSpellDatabaseParser_fragment() throws RecognitionException {   
        // InternalSpellDatabaseParser.g:1737:6: ( ( RULE_MINUS ) )
        // InternalSpellDatabaseParser.g:1737:6: ( RULE_MINUS )
        {
        // InternalSpellDatabaseParser.g:1737:6: ( RULE_MINUS )
        // InternalSpellDatabaseParser.g:1738:1: RULE_MINUS
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getTCValueAccess().getMINUSTerminalRuleCall_3()); 
        }
        match(input,RULE_MINUS,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred23_InternalSpellDatabaseParser

    // $ANTLR start synpred24_InternalSpellDatabaseParser
    public final void synpred24_InternalSpellDatabaseParser_fragment() throws RecognitionException {   
        // InternalSpellDatabaseParser.g:1743:6: ( ( ( ruleINTEGER ) ) )
        // InternalSpellDatabaseParser.g:1743:6: ( ( ruleINTEGER ) )
        {
        // InternalSpellDatabaseParser.g:1743:6: ( ( ruleINTEGER ) )
        // InternalSpellDatabaseParser.g:1744:1: ( ruleINTEGER )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getTCValueAccess().getINTEGERParserRuleCall_4()); 
        }
        // InternalSpellDatabaseParser.g:1745:1: ( ruleINTEGER )
        // InternalSpellDatabaseParser.g:1745:3: ruleINTEGER
        {
        pushFollow(FOLLOW_2);
        ruleINTEGER();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred24_InternalSpellDatabaseParser

    // $ANTLR start synpred29_InternalSpellDatabaseParser
    public final void synpred29_InternalSpellDatabaseParser_fragment() throws RecognitionException {   
        // InternalSpellDatabaseParser.g:1791:6: ( ( RULE_PLUS ) )
        // InternalSpellDatabaseParser.g:1791:6: ( RULE_PLUS )
        {
        // InternalSpellDatabaseParser.g:1791:6: ( RULE_PLUS )
        // InternalSpellDatabaseParser.g:1792:1: RULE_PLUS
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getKeyValueAccess().getPLUSTerminalRuleCall_2()); 
        }
        match(input,RULE_PLUS,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred29_InternalSpellDatabaseParser

    // $ANTLR start synpred30_InternalSpellDatabaseParser
    public final void synpred30_InternalSpellDatabaseParser_fragment() throws RecognitionException {   
        // InternalSpellDatabaseParser.g:1797:6: ( ( RULE_MINUS ) )
        // InternalSpellDatabaseParser.g:1797:6: ( RULE_MINUS )
        {
        // InternalSpellDatabaseParser.g:1797:6: ( RULE_MINUS )
        // InternalSpellDatabaseParser.g:1798:1: RULE_MINUS
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getKeyValueAccess().getMINUSTerminalRuleCall_3()); 
        }
        match(input,RULE_MINUS,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred30_InternalSpellDatabaseParser

    // $ANTLR start synpred31_InternalSpellDatabaseParser
    public final void synpred31_InternalSpellDatabaseParser_fragment() throws RecognitionException {   
        // InternalSpellDatabaseParser.g:1803:6: ( ( ( ruleINTEGER ) ) )
        // InternalSpellDatabaseParser.g:1803:6: ( ( ruleINTEGER ) )
        {
        // InternalSpellDatabaseParser.g:1803:6: ( ( ruleINTEGER ) )
        // InternalSpellDatabaseParser.g:1804:1: ( ruleINTEGER )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getKeyValueAccess().getINTEGERParserRuleCall_4()); 
        }
        // InternalSpellDatabaseParser.g:1805:1: ( ruleINTEGER )
        // InternalSpellDatabaseParser.g:1805:3: ruleINTEGER
        {
        pushFollow(FOLLOW_2);
        ruleINTEGER();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred31_InternalSpellDatabaseParser

    // $ANTLR start synpred84_InternalSpellDatabaseParser
    public final void synpred84_InternalSpellDatabaseParser_fragment() throws RecognitionException {   
        // InternalSpellDatabaseParser.g:2841:2: ( rule__SpellDatabase__Group_1_1_1_1__0 )
        // InternalSpellDatabaseParser.g:2841:2: rule__SpellDatabase__Group_1_1_1_1__0
        {
        pushFollow(FOLLOW_2);
        rule__SpellDatabase__Group_1_1_1_1__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred84_InternalSpellDatabaseParser

    // $ANTLR start synpred86_InternalSpellDatabaseParser
    public final void synpred86_InternalSpellDatabaseParser_fragment() throws RecognitionException {   
        // InternalSpellDatabaseParser.g:3025:3: ( ruleSkipNLAndComments2 )
        // InternalSpellDatabaseParser.g:3025:3: ruleSkipNLAndComments2
        {
        pushFollow(FOLLOW_2);
        ruleSkipNLAndComments2();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred86_InternalSpellDatabaseParser

    // $ANTLR start synpred87_InternalSpellDatabaseParser
    public final void synpred87_InternalSpellDatabaseParser_fragment() throws RecognitionException {   
        // InternalSpellDatabaseParser.g:3054:2: ( rule__SpellDatabase__Group_1_2_3__0 )
        // InternalSpellDatabaseParser.g:3054:2: rule__SpellDatabase__Group_1_2_3__0
        {
        pushFollow(FOLLOW_2);
        rule__SpellDatabase__Group_1_2_3__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred87_InternalSpellDatabaseParser

    // $ANTLR start synpred91_InternalSpellDatabaseParser
    public final void synpred91_InternalSpellDatabaseParser_fragment() throws RecognitionException {   
        // InternalSpellDatabaseParser.g:3673:2: ( rule__AstriumVariableEntry__Alternatives_1_5 )
        // InternalSpellDatabaseParser.g:3673:2: rule__AstriumVariableEntry__Alternatives_1_5
        {
        pushFollow(FOLLOW_2);
        rule__AstriumVariableEntry__Alternatives_1_5();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred91_InternalSpellDatabaseParser

    // $ANTLR start synpred92_InternalSpellDatabaseParser
    public final void synpred92_InternalSpellDatabaseParser_fragment() throws RecognitionException {   
        // InternalSpellDatabaseParser.g:3896:2: ( rule__AstriumHeaderEntry__Alternatives_1_4 )
        // InternalSpellDatabaseParser.g:3896:2: rule__AstriumHeaderEntry__Alternatives_1_4
        {
        pushFollow(FOLLOW_2);
        rule__AstriumHeaderEntry__Alternatives_1_4();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred92_InternalSpellDatabaseParser

    // $ANTLR start synpred93_InternalSpellDatabaseParser
    public final void synpred93_InternalSpellDatabaseParser_fragment() throws RecognitionException {   
        // InternalSpellDatabaseParser.g:3941:3: ( RULE_NL )
        // InternalSpellDatabaseParser.g:3941:3: RULE_NL
        {
        match(input,RULE_NL,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred93_InternalSpellDatabaseParser

    // $ANTLR start synpred96_InternalSpellDatabaseParser
    public final void synpred96_InternalSpellDatabaseParser_fragment() throws RecognitionException {   
        // InternalSpellDatabaseParser.g:4220:2: ( rule__CSVCommand__Group_3_2__0 )
        // InternalSpellDatabaseParser.g:4220:2: rule__CSVCommand__Group_3_2__0
        {
        pushFollow(FOLLOW_2);
        rule__CSVCommand__Group_3_2__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred96_InternalSpellDatabaseParser

    // $ANTLR start synpred97_InternalSpellDatabaseParser
    public final void synpred97_InternalSpellDatabaseParser_fragment() throws RecognitionException {   
        // InternalSpellDatabaseParser.g:4405:2: ( Comma )
        // InternalSpellDatabaseParser.g:4405:2: Comma
        {
        match(input,Comma,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred97_InternalSpellDatabaseParser

    // $ANTLR start synpred98_InternalSpellDatabaseParser
    public final void synpred98_InternalSpellDatabaseParser_fragment() throws RecognitionException {   
        // InternalSpellDatabaseParser.g:4594:2: ( rule__TCArgs__Group_5__0 )
        // InternalSpellDatabaseParser.g:4594:2: rule__TCArgs__Group_5__0
        {
        pushFollow(FOLLOW_2);
        rule__TCArgs__Group_5__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred98_InternalSpellDatabaseParser

    // $ANTLR start synpred99_InternalSpellDatabaseParser
    public final void synpred99_InternalSpellDatabaseParser_fragment() throws RecognitionException {   
        // InternalSpellDatabaseParser.g:4623:2: ( Comma )
        // InternalSpellDatabaseParser.g:4623:2: Comma
        {
        match(input,Comma,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred99_InternalSpellDatabaseParser

    // $ANTLR start synpred103_InternalSpellDatabaseParser
    public final void synpred103_InternalSpellDatabaseParser_fragment() throws RecognitionException {   
        // InternalSpellDatabaseParser.g:5298:2: ( Comma )
        // InternalSpellDatabaseParser.g:5298:2: Comma
        {
        match(input,Comma,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred103_InternalSpellDatabaseParser

    // $ANTLR start synpred104_InternalSpellDatabaseParser
    public final void synpred104_InternalSpellDatabaseParser_fragment() throws RecognitionException {   
        // InternalSpellDatabaseParser.g:5363:3: ( RULE_WS )
        // InternalSpellDatabaseParser.g:5363:3: RULE_WS
        {
        match(input,RULE_WS,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred104_InternalSpellDatabaseParser

    // $ANTLR start synpred105_InternalSpellDatabaseParser
    public final void synpred105_InternalSpellDatabaseParser_fragment() throws RecognitionException {   
        // InternalSpellDatabaseParser.g:5421:3: ( RULE_WS )
        // InternalSpellDatabaseParser.g:5421:3: RULE_WS
        {
        match(input,RULE_WS,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred105_InternalSpellDatabaseParser

    // $ANTLR start synpred108_InternalSpellDatabaseParser
    public final void synpred108_InternalSpellDatabaseParser_fragment() throws RecognitionException {   
        // InternalSpellDatabaseParser.g:5605:2: ( rule__Lambda_Stmt__ValAssignment_4 )
        // InternalSpellDatabaseParser.g:5605:2: rule__Lambda_Stmt__ValAssignment_4
        {
        pushFollow(FOLLOW_2);
        rule__Lambda_Stmt__ValAssignment_4();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred108_InternalSpellDatabaseParser

    // $ANTLR start synpred110_InternalSpellDatabaseParser
    public final void synpred110_InternalSpellDatabaseParser_fragment() throws RecognitionException {   
        // InternalSpellDatabaseParser.g:5730:3: ( ruleLambda_Function )
        // InternalSpellDatabaseParser.g:5730:3: ruleLambda_Function
        {
        pushFollow(FOLLOW_2);
        ruleLambda_Function();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred110_InternalSpellDatabaseParser

    // $ANTLR start synpred112_InternalSpellDatabaseParser
    public final void synpred112_InternalSpellDatabaseParser_fragment() throws RecognitionException {   
        // InternalSpellDatabaseParser.g:5953:2: ( rule__Tuple__Group_2__0 )
        // InternalSpellDatabaseParser.g:5953:2: rule__Tuple__Group_2__0
        {
        pushFollow(FOLLOW_2);
        rule__Tuple__Group_2__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred112_InternalSpellDatabaseParser

    // $ANTLR start synpred114_InternalSpellDatabaseParser
    public final void synpred114_InternalSpellDatabaseParser_fragment() throws RecognitionException {   
        // InternalSpellDatabaseParser.g:6201:2: ( rule__Tuple__Group_2_3__0 )
        // InternalSpellDatabaseParser.g:6201:2: rule__Tuple__Group_2_3__0
        {
        pushFollow(FOLLOW_2);
        rule__Tuple__Group_2_3__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred114_InternalSpellDatabaseParser

    // $ANTLR start synpred115_InternalSpellDatabaseParser
    public final void synpred115_InternalSpellDatabaseParser_fragment() throws RecognitionException {   
        // InternalSpellDatabaseParser.g:6394:2: ( rule__List__Group_2__0 )
        // InternalSpellDatabaseParser.g:6394:2: rule__List__Group_2__0
        {
        pushFollow(FOLLOW_2);
        rule__List__Group_2__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred115_InternalSpellDatabaseParser

    // $ANTLR start synpred117_InternalSpellDatabaseParser
    public final void synpred117_InternalSpellDatabaseParser_fragment() throws RecognitionException {   
        // InternalSpellDatabaseParser.g:6642:2: ( rule__List__Group_2_3__0 )
        // InternalSpellDatabaseParser.g:6642:2: rule__List__Group_2_3__0
        {
        pushFollow(FOLLOW_2);
        rule__List__Group_2_3__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred117_InternalSpellDatabaseParser

    // $ANTLR start synpred118_InternalSpellDatabaseParser
    public final void synpred118_InternalSpellDatabaseParser_fragment() throws RecognitionException {   
        // InternalSpellDatabaseParser.g:6835:2: ( rule__Dictionary__Group_2__0 )
        // InternalSpellDatabaseParser.g:6835:2: rule__Dictionary__Group_2__0
        {
        pushFollow(FOLLOW_2);
        rule__Dictionary__Group_2__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred118_InternalSpellDatabaseParser

    // $ANTLR start synpred120_InternalSpellDatabaseParser
    public final void synpred120_InternalSpellDatabaseParser_fragment() throws RecognitionException {   
        // InternalSpellDatabaseParser.g:7083:2: ( rule__Dictionary__Group_2_3__0 )
        // InternalSpellDatabaseParser.g:7083:2: rule__Dictionary__Group_2_3__0
        {
        pushFollow(FOLLOW_2);
        rule__Dictionary__Group_2_3__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred120_InternalSpellDatabaseParser

    // $ANTLR start synpred127_InternalSpellDatabaseParser
    public final void synpred127_InternalSpellDatabaseParser_fragment() throws RecognitionException {   
        // InternalSpellDatabaseParser.g:8783:2: ( rule__ID_STMT__Alternatives_1 )
        // InternalSpellDatabaseParser.g:8783:2: rule__ID_STMT__Alternatives_1
        {
        pushFollow(FOLLOW_2);
        rule__ID_STMT__Alternatives_1();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred127_InternalSpellDatabaseParser

    // Delegated rules

    public final boolean synpred86_InternalSpellDatabaseParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred86_InternalSpellDatabaseParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred23_InternalSpellDatabaseParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred23_InternalSpellDatabaseParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred118_InternalSpellDatabaseParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred118_InternalSpellDatabaseParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred127_InternalSpellDatabaseParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred127_InternalSpellDatabaseParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred114_InternalSpellDatabaseParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred114_InternalSpellDatabaseParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred99_InternalSpellDatabaseParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred99_InternalSpellDatabaseParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred1_InternalSpellDatabaseParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred1_InternalSpellDatabaseParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred14_InternalSpellDatabaseParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred14_InternalSpellDatabaseParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred6_InternalSpellDatabaseParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred6_InternalSpellDatabaseParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred105_InternalSpellDatabaseParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred105_InternalSpellDatabaseParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred91_InternalSpellDatabaseParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred91_InternalSpellDatabaseParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred22_InternalSpellDatabaseParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred22_InternalSpellDatabaseParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred117_InternalSpellDatabaseParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred117_InternalSpellDatabaseParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred92_InternalSpellDatabaseParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred92_InternalSpellDatabaseParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred87_InternalSpellDatabaseParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred87_InternalSpellDatabaseParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred13_InternalSpellDatabaseParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred13_InternalSpellDatabaseParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred96_InternalSpellDatabaseParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred96_InternalSpellDatabaseParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred110_InternalSpellDatabaseParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred110_InternalSpellDatabaseParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred104_InternalSpellDatabaseParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred104_InternalSpellDatabaseParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred5_InternalSpellDatabaseParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred5_InternalSpellDatabaseParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred10_InternalSpellDatabaseParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred10_InternalSpellDatabaseParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred108_InternalSpellDatabaseParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred108_InternalSpellDatabaseParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred30_InternalSpellDatabaseParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred30_InternalSpellDatabaseParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred93_InternalSpellDatabaseParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred93_InternalSpellDatabaseParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred84_InternalSpellDatabaseParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred84_InternalSpellDatabaseParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred29_InternalSpellDatabaseParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred29_InternalSpellDatabaseParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred97_InternalSpellDatabaseParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred97_InternalSpellDatabaseParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred4_InternalSpellDatabaseParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred4_InternalSpellDatabaseParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred103_InternalSpellDatabaseParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred103_InternalSpellDatabaseParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred11_InternalSpellDatabaseParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred11_InternalSpellDatabaseParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred120_InternalSpellDatabaseParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred120_InternalSpellDatabaseParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred24_InternalSpellDatabaseParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred24_InternalSpellDatabaseParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred31_InternalSpellDatabaseParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred31_InternalSpellDatabaseParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred98_InternalSpellDatabaseParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred98_InternalSpellDatabaseParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred115_InternalSpellDatabaseParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred115_InternalSpellDatabaseParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred3_InternalSpellDatabaseParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred3_InternalSpellDatabaseParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred112_InternalSpellDatabaseParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred112_InternalSpellDatabaseParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA1 dfa1 = new DFA1(this);
    protected DFA2 dfa2 = new DFA2(this);
    protected DFA3 dfa3 = new DFA3(this);
    protected DFA4 dfa4 = new DFA4(this);
    protected DFA5 dfa5 = new DFA5(this);
    protected DFA6 dfa6 = new DFA6(this);
    protected DFA7 dfa7 = new DFA7(this);
    protected DFA9 dfa9 = new DFA9(this);
    protected DFA11 dfa11 = new DFA11(this);
    protected DFA14 dfa14 = new DFA14(this);
    protected DFA15 dfa15 = new DFA15(this);
    protected DFA19 dfa19 = new DFA19(this);
    protected DFA20 dfa20 = new DFA20(this);
    protected DFA21 dfa21 = new DFA21(this);
    protected DFA23 dfa23 = new DFA23(this);
    protected DFA24 dfa24 = new DFA24(this);
    protected DFA25 dfa25 = new DFA25(this);
    protected DFA26 dfa26 = new DFA26(this);
    protected DFA27 dfa27 = new DFA27(this);
    protected DFA28 dfa28 = new DFA28(this);
    protected DFA30 dfa30 = new DFA30(this);
    protected DFA38 dfa38 = new DFA38(this);
    protected DFA41 dfa41 = new DFA41(this);
    protected DFA42 dfa42 = new DFA42(this);
    protected DFA43 dfa43 = new DFA43(this);
    protected DFA44 dfa44 = new DFA44(this);
    protected DFA48 dfa48 = new DFA48(this);
    protected DFA49 dfa49 = new DFA49(this);
    protected DFA50 dfa50 = new DFA50(this);
    protected DFA51 dfa51 = new DFA51(this);
    protected DFA52 dfa52 = new DFA52(this);
    protected DFA53 dfa53 = new DFA53(this);
    protected DFA54 dfa54 = new DFA54(this);
    protected DFA55 dfa55 = new DFA55(this);
    protected DFA56 dfa56 = new DFA56(this);
    protected DFA57 dfa57 = new DFA57(this);
    protected DFA58 dfa58 = new DFA58(this);
    protected DFA59 dfa59 = new DFA59(this);
    protected DFA60 dfa60 = new DFA60(this);
    protected DFA61 dfa61 = new DFA61(this);
    protected DFA62 dfa62 = new DFA62(this);
    protected DFA63 dfa63 = new DFA63(this);
    protected DFA65 dfa65 = new DFA65(this);
    protected DFA67 dfa67 = new DFA67(this);
    protected DFA69 dfa69 = new DFA69(this);
    protected DFA71 dfa71 = new DFA71(this);
    protected DFA72 dfa72 = new DFA72(this);
    protected DFA74 dfa74 = new DFA74(this);
    protected DFA75 dfa75 = new DFA75(this);
    protected DFA77 dfa77 = new DFA77(this);
    protected DFA84 dfa84 = new DFA84(this);
    static final String dfa_1s = "\160\uffff";
    static final String dfa_2s = "\1\1\157\uffff";
    static final String dfa_3s = "\1\4\21\uffff\4\0\132\uffff";
    static final String dfa_4s = "\1\50\21\uffff\4\0\132\uffff";
    static final String dfa_5s = "\1\uffff\1\2\53\uffff\1\1\102\uffff";
    static final String dfa_6s = "\22\uffff\1\0\1\1\1\2\1\3\132\uffff}>";
    static final String[] dfa_7s = {
            "\2\1\2\uffff\2\1\10\uffff\3\1\1\22\2\uffff\2\1\1\uffff\1\1\2\uffff\1\1\1\uffff\6\1\1\23\1\24\1\25",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final short[] dfa_2 = DFA.unpackEncodedString(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final char[] dfa_4 = DFA.unpackEncodedStringToUnsignedChars(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[] dfa_6 = DFA.unpackEncodedString(dfa_6s);
    static final short[][] dfa_7 = unpackEncodedStringArray(dfa_7s);

    class DFA1 extends DFA {

        public DFA1(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 1;
            this.eot = dfa_1;
            this.eof = dfa_2;
            this.min = dfa_3;
            this.max = dfa_4;
            this.accept = dfa_5;
            this.special = dfa_6;
            this.transition = dfa_7;
        }
        public String getDescription() {
            return "()* loopback of 283:1: ( rule__SkipNLAndComments__Alternatives )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA1_18 = input.LA(1);

                         
                        int index1_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalSpellDatabaseParser()) ) {s = 45;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index1_18);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA1_19 = input.LA(1);

                         
                        int index1_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalSpellDatabaseParser()) ) {s = 45;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index1_19);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA1_20 = input.LA(1);

                         
                        int index1_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalSpellDatabaseParser()) ) {s = 45;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index1_20);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA1_21 = input.LA(1);

                         
                        int index1_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalSpellDatabaseParser()) ) {s = 45;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index1_21);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 1, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_8s = "\13\uffff";
    static final String dfa_9s = "\1\1\12\uffff";
    static final String dfa_10s = "\1\10\12\uffff";
    static final String dfa_11s = "\1\44\12\uffff";
    static final String dfa_12s = "\1\uffff\1\2\1\uffff\1\1\7\uffff";
    static final String dfa_13s = "\13\uffff}>";
    static final String[] dfa_14s = {
            "\1\3\1\1\11\uffff\2\3\4\uffff\1\3\6\uffff\3\3\1\uffff\1\3",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_8 = DFA.unpackEncodedString(dfa_8s);
    static final short[] dfa_9 = DFA.unpackEncodedString(dfa_9s);
    static final char[] dfa_10 = DFA.unpackEncodedStringToUnsignedChars(dfa_10s);
    static final char[] dfa_11 = DFA.unpackEncodedStringToUnsignedChars(dfa_11s);
    static final short[] dfa_12 = DFA.unpackEncodedString(dfa_12s);
    static final short[] dfa_13 = DFA.unpackEncodedString(dfa_13s);
    static final short[][] dfa_14 = unpackEncodedStringArray(dfa_14s);

    class DFA2 extends DFA {

        public DFA2(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 2;
            this.eot = dfa_8;
            this.eof = dfa_9;
            this.min = dfa_10;
            this.max = dfa_11;
            this.accept = dfa_12;
            this.special = dfa_13;
            this.transition = dfa_14;
        }
        public String getDescription() {
            return "()* loopback of 425:1: ( rule__TCValue__Alternatives )*";
        }
    }
    static final String dfa_15s = "\u009b\uffff";
    static final String dfa_16s = "\1\1\u009a\uffff";
    static final String dfa_17s = "\1\6\6\uffff\7\0\u008d\uffff";
    static final String dfa_18s = "\1\50\6\uffff\7\0\u008d\uffff";
    static final String dfa_19s = "\1\uffff\1\2\20\uffff\1\1\u0088\uffff";
    static final String dfa_20s = "\7\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\u008d\uffff}>";
    static final String[] dfa_21s = {
            "\1\1\1\uffff\1\22\4\uffff\2\1\1\uffff\1\1\2\uffff\1\7\1\10\1\1\1\uffff\1\1\1\uffff\1\15\6\uffff\1\11\1\13\1\22\1\uffff\1\12\1\14\3\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_15 = DFA.unpackEncodedString(dfa_15s);
    static final short[] dfa_16 = DFA.unpackEncodedString(dfa_16s);
    static final char[] dfa_17 = DFA.unpackEncodedStringToUnsignedChars(dfa_17s);
    static final char[] dfa_18 = DFA.unpackEncodedStringToUnsignedChars(dfa_18s);
    static final short[] dfa_19 = DFA.unpackEncodedString(dfa_19s);
    static final short[] dfa_20 = DFA.unpackEncodedString(dfa_20s);
    static final short[][] dfa_21 = unpackEncodedStringArray(dfa_21s);

    class DFA3 extends DFA {

        public DFA3(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 3;
            this.eot = dfa_15;
            this.eof = dfa_16;
            this.min = dfa_17;
            this.max = dfa_18;
            this.accept = dfa_19;
            this.special = dfa_20;
            this.transition = dfa_21;
        }
        public String getDescription() {
            return "()* loopback of 468:1: ( rule__KeyValue__Alternatives )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA3_7 = input.LA(1);

                         
                        int index3_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalSpellDatabaseParser()) ) {s = 18;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index3_7);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA3_8 = input.LA(1);

                         
                        int index3_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalSpellDatabaseParser()) ) {s = 18;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index3_8);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA3_9 = input.LA(1);

                         
                        int index3_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalSpellDatabaseParser()) ) {s = 18;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index3_9);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA3_10 = input.LA(1);

                         
                        int index3_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalSpellDatabaseParser()) ) {s = 18;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index3_10);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA3_11 = input.LA(1);

                         
                        int index3_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalSpellDatabaseParser()) ) {s = 18;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index3_11);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA3_12 = input.LA(1);

                         
                        int index3_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalSpellDatabaseParser()) ) {s = 18;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index3_12);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA3_13 = input.LA(1);

                         
                        int index3_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalSpellDatabaseParser()) ) {s = 18;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index3_13);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 3, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_22s = "\u010c\uffff";
    static final String dfa_23s = "\1\1\u010b\uffff";
    static final String dfa_24s = "\1\4\1\uffff\13\0\u00ff\uffff";
    static final String dfa_25s = "\1\51\1\uffff\13\0\u00ff\uffff";
    static final String dfa_26s = "\1\uffff\1\2\57\uffff\1\1\u00da\uffff";
    static final String dfa_27s = "\2\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\u00ff\uffff}>";
    static final String[] dfa_28s = {
            "\1\1\2\uffff\1\1\1\uffff\1\1\4\uffff\2\1\1\uffff\2\1\1\5\1\6\2\1\1\14\1\uffff\1\11\6\uffff\1\4\1\3\1\2\1\1\1\10\1\12\1\7\2\1\1\13",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_22 = DFA.unpackEncodedString(dfa_22s);
    static final short[] dfa_23 = DFA.unpackEncodedString(dfa_23s);
    static final char[] dfa_24 = DFA.unpackEncodedStringToUnsignedChars(dfa_24s);
    static final char[] dfa_25 = DFA.unpackEncodedStringToUnsignedChars(dfa_25s);
    static final short[] dfa_26 = DFA.unpackEncodedString(dfa_26s);
    static final short[] dfa_27 = DFA.unpackEncodedString(dfa_27s);
    static final short[][] dfa_28 = unpackEncodedStringArray(dfa_28s);

    class DFA4 extends DFA {

        public DFA4(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 4;
            this.eot = dfa_22;
            this.eof = dfa_23;
            this.min = dfa_24;
            this.max = dfa_25;
            this.accept = dfa_26;
            this.special = dfa_27;
            this.transition = dfa_28;
        }
        public String getDescription() {
            return "()* loopback of 767:1: ( ruleLambda_Partial_Func )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA4_2 = input.LA(1);

                         
                        int index4_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalSpellDatabaseParser()) ) {s = 49;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index4_2);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA4_3 = input.LA(1);

                         
                        int index4_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalSpellDatabaseParser()) ) {s = 49;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index4_3);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA4_4 = input.LA(1);

                         
                        int index4_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalSpellDatabaseParser()) ) {s = 49;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index4_4);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA4_5 = input.LA(1);

                         
                        int index4_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalSpellDatabaseParser()) ) {s = 49;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index4_5);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA4_6 = input.LA(1);

                         
                        int index4_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalSpellDatabaseParser()) ) {s = 49;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index4_6);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA4_7 = input.LA(1);

                         
                        int index4_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalSpellDatabaseParser()) ) {s = 49;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index4_7);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA4_8 = input.LA(1);

                         
                        int index4_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalSpellDatabaseParser()) ) {s = 49;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index4_8);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA4_9 = input.LA(1);

                         
                        int index4_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalSpellDatabaseParser()) ) {s = 49;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index4_9);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA4_10 = input.LA(1);

                         
                        int index4_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalSpellDatabaseParser()) ) {s = 49;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index4_10);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA4_11 = input.LA(1);

                         
                        int index4_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalSpellDatabaseParser()) ) {s = 49;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index4_11);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA4_12 = input.LA(1);

                         
                        int index4_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalSpellDatabaseParser()) ) {s = 49;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index4_12);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 4, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_29s = "\31\uffff";
    static final String dfa_30s = "\1\1\30\uffff";
    static final String dfa_31s = "\1\6\21\uffff\1\0\6\uffff";
    static final String dfa_32s = "\1\50\21\uffff\1\0\6\uffff";
    static final String dfa_33s = "\1\uffff\1\2\26\uffff\1\1";
    static final String dfa_34s = "\22\uffff\1\0\6\uffff}>";
    static final String[] dfa_35s = {
            "\2\1\1\uffff\1\1\3\uffff\1\1\1\22\3\1\1\uffff\5\1\1\uffff\1\1\6\uffff\2\1\2\uffff\5\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_29 = DFA.unpackEncodedString(dfa_29s);
    static final short[] dfa_30 = DFA.unpackEncodedString(dfa_30s);
    static final char[] dfa_31 = DFA.unpackEncodedStringToUnsignedChars(dfa_31s);
    static final char[] dfa_32 = DFA.unpackEncodedStringToUnsignedChars(dfa_32s);
    static final short[] dfa_33 = DFA.unpackEncodedString(dfa_33s);
    static final short[] dfa_34 = DFA.unpackEncodedString(dfa_34s);
    static final short[][] dfa_35 = unpackEncodedStringArray(dfa_35s);

    class DFA5 extends DFA {

        public DFA5(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 5;
            this.eot = dfa_29;
            this.eof = dfa_30;
            this.min = dfa_31;
            this.max = dfa_32;
            this.accept = dfa_33;
            this.special = dfa_34;
            this.transition = dfa_35;
        }
        public String getDescription() {
            return "()* loopback of 1252:1: ( rule__Skipped_NL__Group__0 )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA5_18 = input.LA(1);

                         
                        int index5_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred5_InternalSpellDatabaseParser()) ) {s = 24;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index5_18);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 5, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_36s = "\113\uffff";
    static final String dfa_37s = "\1\1\10\uffff\1\12\101\uffff";
    static final String dfa_38s = "\1\4\2\uffff\1\0\5\uffff\1\4\33\uffff\1\0\45\uffff";
    static final String dfa_39s = "\1\51\2\uffff\1\0\5\uffff\1\51\33\uffff\1\0\45\uffff";
    static final String dfa_40s = "\1\uffff\1\2\10\uffff\1\1\100\uffff";
    static final String dfa_41s = "\3\uffff\1\0\41\uffff\1\1\45\uffff}>";
    static final String[] dfa_42s = {
            "\1\1\5\uffff\1\12\7\uffff\1\1\2\12\1\1\3\uffff\1\12\6\uffff\2\12\1\11\1\1\2\12\1\3\2\1\1\12",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "\1\12\5\uffff\1\12\7\uffff\4\12\1\1\2\uffff\1\12\6\uffff\2\12\1\45\7\12",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_36 = DFA.unpackEncodedString(dfa_36s);
    static final short[] dfa_37 = DFA.unpackEncodedString(dfa_37s);
    static final char[] dfa_38 = DFA.unpackEncodedStringToUnsignedChars(dfa_38s);
    static final char[] dfa_39 = DFA.unpackEncodedStringToUnsignedChars(dfa_39s);
    static final short[] dfa_40 = DFA.unpackEncodedString(dfa_40s);
    static final short[] dfa_41 = DFA.unpackEncodedString(dfa_41s);
    static final short[][] dfa_42 = unpackEncodedStringArray(dfa_42s);

    class DFA6 extends DFA {

        public DFA6(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 6;
            this.eot = dfa_36;
            this.eof = dfa_37;
            this.min = dfa_38;
            this.max = dfa_39;
            this.accept = dfa_40;
            this.special = dfa_41;
            this.transition = dfa_42;
        }
        public String getDescription() {
            return "()* loopback of 1366:1: ( rule__SINGLE_VALUE__Alternatives )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA6_3 = input.LA(1);

                         
                        int index6_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_InternalSpellDatabaseParser()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index6_3);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA6_37 = input.LA(1);

                         
                        int index6_37 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_InternalSpellDatabaseParser()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index6_37);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 6, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_43s = "\16\uffff";
    static final String dfa_44s = "\1\5\15\uffff";
    static final String dfa_45s = "\1\45\15\uffff";
    static final String dfa_46s = "\1\uffff\1\1\1\2\10\uffff\1\3\2\uffff";
    static final String dfa_47s = "\16\uffff}>";
    static final String[] dfa_48s = {
            "\1\1\2\uffff\1\2\12\uffff\2\2\3\uffff\1\13\1\2\1\uffff\1\13\2\uffff\1\13\1\uffff\3\2\1\uffff\2\2",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_43 = DFA.unpackEncodedString(dfa_43s);
    static final char[] dfa_44 = DFA.unpackEncodedStringToUnsignedChars(dfa_44s);
    static final char[] dfa_45 = DFA.unpackEncodedStringToUnsignedChars(dfa_45s);
    static final short[] dfa_46 = DFA.unpackEncodedString(dfa_46s);
    static final short[] dfa_47 = DFA.unpackEncodedString(dfa_47s);
    static final short[][] dfa_48 = unpackEncodedStringArray(dfa_48s);

    class DFA7 extends DFA {

        public DFA7(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 7;
            this.eot = dfa_43;
            this.eof = dfa_43;
            this.min = dfa_44;
            this.max = dfa_45;
            this.accept = dfa_46;
            this.special = dfa_47;
            this.transition = dfa_48;
        }
        public String getDescription() {
            return "1524:1: rule__SpellDatabase__Alternatives_1 : ( ( ( rule__SpellDatabase__Group_1_0__0 ) ) | ( ( rule__SpellDatabase__Group_1_1__0 ) ) | ( ( rule__SpellDatabase__Group_1_2__0 ) ) );";
        }
    }
    static final String dfa_49s = "\u00eb\uffff";
    static final String dfa_50s = "\1\uffff\1\12\2\uffff\2\12\7\uffff\1\12\u00dd\uffff";
    static final String dfa_51s = "\2\12\1\26\1\0\2\12\3\0\4\uffff\1\12\63\uffff\1\0\1\uffff\1\0\16\uffff\1\0\1\uffff\1\0\112\uffff\1\0\113\uffff";
    static final String dfa_52s = "\2\51\1\42\1\0\2\51\3\0\4\uffff\1\51\63\uffff\1\0\1\uffff\1\0\16\uffff\1\0\1\uffff\1\0\112\uffff\1\0\113\uffff";
    static final String dfa_53s = "\11\uffff\1\2\1\3\32\uffff\1\1\u00c5\uffff";
    static final String dfa_54s = "\2\uffff\1\0\1\1\2\uffff\1\2\1\3\1\4\70\uffff\1\5\1\uffff\1\6\16\uffff\1\7\1\uffff\1\10\112\uffff\1\11\113\uffff}>";
    static final String[] dfa_55s = {
            "\1\12\10\uffff\1\4\1\5\2\uffff\1\11\1\uffff\1\10\6\uffff\1\2\1\6\1\1\1\uffff\1\3\1\7\1\12\2\uffff\1\12",
            "\1\15\7\uffff\4\12\3\uffff\1\12\6\uffff\12\12",
            "\1\45\13\uffff\1\45",
            "\1\uffff",
            "\1\12\7\uffff\4\12\3\uffff\1\12\6\uffff\1\101\1\103\10\12",
            "\1\12\7\uffff\4\12\3\uffff\1\12\6\uffff\1\122\1\124\10\12",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "\1\12\7\uffff\4\12\3\uffff\1\12\6\uffff\1\u009f\11\12",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_49 = DFA.unpackEncodedString(dfa_49s);
    static final short[] dfa_50 = DFA.unpackEncodedString(dfa_50s);
    static final char[] dfa_51 = DFA.unpackEncodedStringToUnsignedChars(dfa_51s);
    static final char[] dfa_52 = DFA.unpackEncodedStringToUnsignedChars(dfa_52s);
    static final short[] dfa_53 = DFA.unpackEncodedString(dfa_53s);
    static final short[] dfa_54 = DFA.unpackEncodedString(dfa_54s);
    static final short[][] dfa_55 = unpackEncodedStringArray(dfa_55s);

    class DFA9 extends DFA {

        public DFA9(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 9;
            this.eot = dfa_49;
            this.eof = dfa_50;
            this.min = dfa_51;
            this.max = dfa_52;
            this.accept = dfa_53;
            this.special = dfa_54;
            this.transition = dfa_55;
        }
        public String getDescription() {
            return "1574:1: rule__AstriumVariableEntry__Alternatives_1_5 : ( ( ( rule__AstriumVariableEntry__AstriumTimeAssignment_1_5_0 ) ) | ( ( rule__AstriumVariableEntry__ValueAssignment_1_5_1 ) ) | ( ( rule__AstriumVariableEntry__SimpleValueAssignment_1_5_2 ) ) );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA9_2 = input.LA(1);

                         
                        int index9_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA9_2==RULE_COLON||LA9_2==RULE_ID) ) {s = 37;}

                        else if ( (synpred11_InternalSpellDatabaseParser()) ) {s = 9;}

                        else if ( (true) ) {s = 10;}

                         
                        input.seek(index9_2);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA9_3 = input.LA(1);

                         
                        int index9_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred11_InternalSpellDatabaseParser()) ) {s = 9;}

                        else if ( (true) ) {s = 10;}

                         
                        input.seek(index9_3);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA9_6 = input.LA(1);

                         
                        int index9_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred11_InternalSpellDatabaseParser()) ) {s = 9;}

                        else if ( (true) ) {s = 10;}

                         
                        input.seek(index9_6);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA9_7 = input.LA(1);

                         
                        int index9_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred11_InternalSpellDatabaseParser()) ) {s = 9;}

                        else if ( (true) ) {s = 10;}

                         
                        input.seek(index9_7);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA9_8 = input.LA(1);

                         
                        int index9_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred11_InternalSpellDatabaseParser()) ) {s = 9;}

                        else if ( (true) ) {s = 10;}

                         
                        input.seek(index9_8);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA9_65 = input.LA(1);

                         
                        int index9_65 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred11_InternalSpellDatabaseParser()) ) {s = 9;}

                        else if ( (true) ) {s = 10;}

                         
                        input.seek(index9_65);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA9_67 = input.LA(1);

                         
                        int index9_67 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred11_InternalSpellDatabaseParser()) ) {s = 9;}

                        else if ( (true) ) {s = 10;}

                         
                        input.seek(index9_67);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA9_82 = input.LA(1);

                         
                        int index9_82 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred11_InternalSpellDatabaseParser()) ) {s = 9;}

                        else if ( (true) ) {s = 10;}

                         
                        input.seek(index9_82);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA9_84 = input.LA(1);

                         
                        int index9_84 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred11_InternalSpellDatabaseParser()) ) {s = 9;}

                        else if ( (true) ) {s = 10;}

                         
                        input.seek(index9_84);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA9_159 = input.LA(1);

                         
                        int index9_159 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred10_InternalSpellDatabaseParser()) ) {s = 37;}

                        else if ( (true) ) {s = 10;}

                         
                        input.seek(index9_159);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 9, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_56s = "\1\12\1\4\1\26\1\0\2\4\3\0\4\uffff\1\4\63\uffff\2\0\17\uffff\1\0\1\uffff\1\0\112\uffff\1\0\113\uffff";
    static final String dfa_57s = "\2\51\1\42\1\0\2\51\3\0\4\uffff\1\51\63\uffff\2\0\17\uffff\1\0\1\uffff\1\0\112\uffff\1\0\113\uffff";
    static final String dfa_58s = "\2\uffff\1\0\1\1\2\uffff\1\2\1\3\1\4\70\uffff\1\5\1\6\17\uffff\1\7\1\uffff\1\10\112\uffff\1\11\113\uffff}>";
    static final String[] dfa_59s = {
            "\1\12\10\uffff\1\4\1\5\2\uffff\1\11\1\uffff\1\10\6\uffff\1\2\1\6\1\1\1\uffff\1\3\1\7\1\12\2\uffff\1\12",
            "\1\12\5\uffff\1\15\7\uffff\4\12\3\uffff\1\12\6\uffff\3\12\1\uffff\6\12",
            "\1\45\13\uffff\1\45",
            "\1\uffff",
            "\1\12\5\uffff\1\12\7\uffff\4\12\3\uffff\1\12\6\uffff\1\102\1\101\1\12\1\uffff\6\12",
            "\1\12\5\uffff\1\12\7\uffff\4\12\3\uffff\1\12\6\uffff\1\122\1\124\1\12\1\uffff\6\12",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "\1\12\5\uffff\1\12\7\uffff\4\12\3\uffff\1\12\6\uffff\1\u009f\2\12\1\uffff\6\12",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_56 = DFA.unpackEncodedStringToUnsignedChars(dfa_56s);
    static final char[] dfa_57 = DFA.unpackEncodedStringToUnsignedChars(dfa_57s);
    static final short[] dfa_58 = DFA.unpackEncodedString(dfa_58s);
    static final short[][] dfa_59 = unpackEncodedStringArray(dfa_59s);

    class DFA11 extends DFA {

        public DFA11(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 11;
            this.eot = dfa_49;
            this.eof = dfa_50;
            this.min = dfa_56;
            this.max = dfa_57;
            this.accept = dfa_53;
            this.special = dfa_58;
            this.transition = dfa_59;
        }
        public String getDescription() {
            return "1624:1: rule__AstriumHeaderEntry__Alternatives_1_4 : ( ( ( rule__AstriumHeaderEntry__AstriumTimeAssignment_1_4_0 ) ) | ( ( rule__AstriumHeaderEntry__ValueAssignment_1_4_1 ) ) | ( ( rule__AstriumHeaderEntry__SimpleValueAssignment_1_4_2 ) ) );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA11_2 = input.LA(1);

                         
                        int index11_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA11_2==RULE_COLON||LA11_2==RULE_ID) ) {s = 37;}

                        else if ( (synpred14_InternalSpellDatabaseParser()) ) {s = 9;}

                        else if ( (true) ) {s = 10;}

                         
                        input.seek(index11_2);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA11_3 = input.LA(1);

                         
                        int index11_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalSpellDatabaseParser()) ) {s = 9;}

                        else if ( (true) ) {s = 10;}

                         
                        input.seek(index11_3);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA11_6 = input.LA(1);

                         
                        int index11_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalSpellDatabaseParser()) ) {s = 9;}

                        else if ( (true) ) {s = 10;}

                         
                        input.seek(index11_6);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA11_7 = input.LA(1);

                         
                        int index11_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalSpellDatabaseParser()) ) {s = 9;}

                        else if ( (true) ) {s = 10;}

                         
                        input.seek(index11_7);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA11_8 = input.LA(1);

                         
                        int index11_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalSpellDatabaseParser()) ) {s = 9;}

                        else if ( (true) ) {s = 10;}

                         
                        input.seek(index11_8);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA11_65 = input.LA(1);

                         
                        int index11_65 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalSpellDatabaseParser()) ) {s = 9;}

                        else if ( (true) ) {s = 10;}

                         
                        input.seek(index11_65);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA11_66 = input.LA(1);

                         
                        int index11_66 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalSpellDatabaseParser()) ) {s = 9;}

                        else if ( (true) ) {s = 10;}

                         
                        input.seek(index11_66);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA11_82 = input.LA(1);

                         
                        int index11_82 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalSpellDatabaseParser()) ) {s = 9;}

                        else if ( (true) ) {s = 10;}

                         
                        input.seek(index11_82);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA11_84 = input.LA(1);

                         
                        int index11_84 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalSpellDatabaseParser()) ) {s = 9;}

                        else if ( (true) ) {s = 10;}

                         
                        input.seek(index11_84);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA11_159 = input.LA(1);

                         
                        int index11_159 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred13_InternalSpellDatabaseParser()) ) {s = 37;}

                        else if ( (true) ) {s = 10;}

                         
                        input.seek(index11_159);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 11, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_60s = "\37\uffff";
    static final String dfa_61s = "\1\10\2\uffff\2\0\32\uffff";
    static final String dfa_62s = "\1\44\2\uffff\2\0\32\uffff";
    static final String dfa_63s = "\1\uffff\1\1\1\2\2\uffff\1\5\1\6\1\7\1\10\12\uffff\1\3\12\uffff\1\4";
    static final String dfa_64s = "\3\uffff\1\0\1\1\32\uffff}>";
    static final String[] dfa_65s = {
            "\1\7\12\uffff\1\3\1\4\4\uffff\1\10\6\uffff\1\5\1\6\1\1\1\uffff\1\2",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_60 = DFA.unpackEncodedString(dfa_60s);
    static final char[] dfa_61 = DFA.unpackEncodedStringToUnsignedChars(dfa_61s);
    static final char[] dfa_62 = DFA.unpackEncodedStringToUnsignedChars(dfa_62s);
    static final short[] dfa_63 = DFA.unpackEncodedString(dfa_63s);
    static final short[] dfa_64 = DFA.unpackEncodedString(dfa_64s);
    static final short[][] dfa_65 = unpackEncodedStringArray(dfa_65s);

    class DFA14 extends DFA {

        public DFA14(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 14;
            this.eot = dfa_60;
            this.eof = dfa_60;
            this.min = dfa_61;
            this.max = dfa_62;
            this.accept = dfa_63;
            this.special = dfa_64;
            this.transition = dfa_65;
        }
        public String getDescription() {
            return "1714:1: rule__TCValue__Alternatives : ( ( ruleID_STMT ) | ( RULE_BIN_HEX_OCT ) | ( RULE_PLUS ) | ( RULE_MINUS ) | ( ( ruleINTEGER ) ) | ( ( RULE_FLOAT ) ) | ( Asterisk ) | ( RULE_BOOL_EXPR ) );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA14_3 = input.LA(1);

                         
                        int index14_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred22_InternalSpellDatabaseParser()) ) {s = 19;}

                        else if ( (synpred24_InternalSpellDatabaseParser()) ) {s = 5;}

                         
                        input.seek(index14_3);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA14_4 = input.LA(1);

                         
                        int index14_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred23_InternalSpellDatabaseParser()) ) {s = 30;}

                        else if ( (synpred24_InternalSpellDatabaseParser()) ) {s = 5;}

                         
                        input.seek(index14_4);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 14, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_66s = "\62\uffff";
    static final String dfa_67s = "\1\10\2\uffff\2\0\55\uffff";
    static final String dfa_68s = "\1\45\2\uffff\2\0\55\uffff";
    static final String dfa_69s = "\1\uffff\1\1\1\2\2\uffff\1\5\1\6\1\7\1\10\1\11\23\uffff\1\3\23\uffff\1\4";
    static final String dfa_70s = "\3\uffff\1\0\1\1\55\uffff}>";
    static final String[] dfa_71s = {
            "\1\7\12\uffff\1\3\1\4\4\uffff\1\11\6\uffff\1\5\1\6\1\1\1\uffff\1\2\1\10",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_66 = DFA.unpackEncodedString(dfa_66s);
    static final char[] dfa_67 = DFA.unpackEncodedStringToUnsignedChars(dfa_67s);
    static final char[] dfa_68 = DFA.unpackEncodedStringToUnsignedChars(dfa_68s);
    static final short[] dfa_69 = DFA.unpackEncodedString(dfa_69s);
    static final short[] dfa_70 = DFA.unpackEncodedString(dfa_70s);
    static final short[][] dfa_71 = unpackEncodedStringArray(dfa_71s);

    class DFA15 extends DFA {

        public DFA15(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 15;
            this.eot = dfa_66;
            this.eof = dfa_66;
            this.min = dfa_67;
            this.max = dfa_68;
            this.accept = dfa_69;
            this.special = dfa_70;
            this.transition = dfa_71;
        }
        public String getDescription() {
            return "1774:1: rule__KeyValue__Alternatives : ( ( ruleID_STMT ) | ( RULE_BIN_HEX_OCT ) | ( RULE_PLUS ) | ( RULE_MINUS ) | ( ( ruleINTEGER ) ) | ( ( RULE_FLOAT ) ) | ( Asterisk ) | ( ( RULE_STRING ) ) | ( RULE_BOOL_EXPR ) );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA15_3 = input.LA(1);

                         
                        int index15_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred29_InternalSpellDatabaseParser()) ) {s = 29;}

                        else if ( (synpred31_InternalSpellDatabaseParser()) ) {s = 5;}

                         
                        input.seek(index15_3);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA15_4 = input.LA(1);

                         
                        int index15_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred30_InternalSpellDatabaseParser()) ) {s = 49;}

                        else if ( (synpred31_InternalSpellDatabaseParser()) ) {s = 5;}

                         
                        input.seek(index15_4);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 15, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_72s = "\47\uffff";
    static final String dfa_73s = "\6\uffff\1\7\6\uffff\2\7\30\uffff";
    static final String dfa_74s = "\1\6\3\uffff\2\40\1\13\6\uffff\2\25\30\uffff";
    static final String dfa_75s = "\1\45\3\uffff\2\41\1\50\6\uffff\2\50\30\uffff";
    static final String dfa_76s = "\1\uffff\1\1\5\uffff\1\4\10\uffff\1\2\1\uffff\1\3\24\uffff";
    static final String dfa_77s = "\47\uffff}>";
    static final String[] dfa_78s = {
            "\1\1\6\uffff\1\1\2\uffff\1\1\2\uffff\1\4\1\5\2\uffff\1\7\1\uffff\1\7\6\uffff\1\6\1\7\2\uffff\2\7",
            "",
            "",
            "",
            "\1\15\1\7",
            "\1\16\1\7",
            "\1\22\10\uffff\1\22\1\7\1\20\11\uffff\1\20\5\uffff\3\7",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\7\1\20\11\uffff\1\20\5\uffff\3\7",
            "\1\7\1\20\11\uffff\1\20\5\uffff\3\7",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_72 = DFA.unpackEncodedString(dfa_72s);
    static final short[] dfa_73 = DFA.unpackEncodedString(dfa_73s);
    static final char[] dfa_74 = DFA.unpackEncodedStringToUnsignedChars(dfa_74s);
    static final char[] dfa_75 = DFA.unpackEncodedStringToUnsignedChars(dfa_75s);
    static final short[] dfa_76 = DFA.unpackEncodedString(dfa_76s);
    static final short[] dfa_77 = DFA.unpackEncodedString(dfa_77s);
    static final short[][] dfa_78 = unpackEncodedStringArray(dfa_78s);

    class DFA19 extends DFA {

        public DFA19(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 19;
            this.eot = dfa_72;
            this.eof = dfa_73;
            this.min = dfa_74;
            this.max = dfa_75;
            this.accept = dfa_76;
            this.special = dfa_77;
            this.transition = dfa_78;
        }
        public String getDescription() {
            return "1906:1: rule__DatabaseValue__Alternatives : ( ( ruleComplexValue ) | ( ( ruleRelDate ) ) | ( ( ruleDate ) ) | ( ( ruleAtom ) ) );";
        }
    }
    static final String dfa_79s = "\14\uffff";
    static final String dfa_80s = "\1\23\13\uffff";
    static final String dfa_81s = "\1\51\13\uffff";
    static final String dfa_82s = "\1\uffff\1\1\11\uffff\1\2";
    static final String dfa_83s = "\14\uffff}>";
    static final String[] dfa_84s = {
            "\2\1\2\uffff\1\13\1\uffff\1\1\6\uffff\3\1\1\uffff\3\1\2\uffff\1\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_79 = DFA.unpackEncodedString(dfa_79s);
    static final char[] dfa_80 = DFA.unpackEncodedStringToUnsignedChars(dfa_80s);
    static final char[] dfa_81 = DFA.unpackEncodedStringToUnsignedChars(dfa_81s);
    static final short[] dfa_82 = DFA.unpackEncodedString(dfa_82s);
    static final short[] dfa_83 = DFA.unpackEncodedString(dfa_83s);
    static final short[][] dfa_84 = unpackEncodedStringArray(dfa_84s);

    class DFA20 extends DFA {

        public DFA20(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 20;
            this.eot = dfa_79;
            this.eof = dfa_79;
            this.min = dfa_80;
            this.max = dfa_81;
            this.accept = dfa_82;
            this.special = dfa_83;
            this.transition = dfa_84;
        }
        public String getDescription() {
            return "1940:1: rule__Lambda_Partial_Func__Alternatives : ( ( ( rule__Lambda_Partial_Func__Alternatives_0 ) ) | ( ( rule__Lambda_Partial_Func__Group_1__0 ) ) );";
        }
    }
    static final String dfa_85s = "\1\23\12\uffff";
    static final String dfa_86s = "\1\51\12\uffff";
    static final String dfa_87s = "\1\uffff\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12";
    static final String[] dfa_88s = {
            "\1\4\1\5\4\uffff\1\10\6\uffff\1\3\1\2\1\1\1\uffff\1\7\1\11\1\6\2\uffff\1\12",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_85 = DFA.unpackEncodedStringToUnsignedChars(dfa_85s);
    static final char[] dfa_86 = DFA.unpackEncodedStringToUnsignedChars(dfa_86s);
    static final short[] dfa_87 = DFA.unpackEncodedString(dfa_87s);
    static final short[][] dfa_88 = unpackEncodedStringArray(dfa_88s);

    class DFA21 extends DFA {

        public DFA21(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 21;
            this.eot = dfa_8;
            this.eof = dfa_8;
            this.min = dfa_85;
            this.max = dfa_86;
            this.accept = dfa_87;
            this.special = dfa_13;
            this.transition = dfa_88;
        }
        public String getDescription() {
            return "1962:1: rule__Lambda_Partial_Func__Alternatives_0 : ( ( RULE_ID ) | ( RULE_FLOAT ) | ( RULE_INT ) | ( RULE_PLUS ) | ( RULE_MINUS ) | ( RULE_ML_COMMENT ) | ( RULE_BIN_HEX_OCT ) | ( RULE_BOOL_EXPR ) | ( RULE_STRING ) | ( RULE_ANY_OTHER ) );";
        }
    }
    static final String dfa_89s = "\1\6\13\uffff";
    static final String dfa_90s = "\1\45\13\uffff";
    static final String dfa_91s = "\1\uffff\1\1\7\uffff\1\2\2\uffff";
    static final String[] dfa_92s = {
            "\1\11\6\uffff\1\11\2\uffff\1\11\2\uffff\2\1\2\uffff\1\1\1\uffff\1\1\6\uffff\2\1\2\uffff\2\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_89 = DFA.unpackEncodedStringToUnsignedChars(dfa_89s);
    static final char[] dfa_90 = DFA.unpackEncodedStringToUnsignedChars(dfa_90s);
    static final short[] dfa_91 = DFA.unpackEncodedString(dfa_91s);
    static final short[][] dfa_92 = unpackEncodedStringArray(dfa_92s);

    class DFA23 extends DFA {

        public DFA23(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 23;
            this.eot = dfa_79;
            this.eof = dfa_79;
            this.min = dfa_89;
            this.max = dfa_90;
            this.accept = dfa_91;
            this.special = dfa_83;
            this.transition = dfa_92;
        }
        public String getDescription() {
            return "2060:1: rule__Tuple__ValuesAlternatives_2_1_0 : ( ( ruleAtom ) | ( ruleComplexValue ) );";
        }
    }

    class DFA24 extends DFA {

        public DFA24(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 24;
            this.eot = dfa_79;
            this.eof = dfa_79;
            this.min = dfa_89;
            this.max = dfa_90;
            this.accept = dfa_91;
            this.special = dfa_83;
            this.transition = dfa_92;
        }
        public String getDescription() {
            return "2082:1: rule__Tuple__ValuesAlternatives_2_3_2_0 : ( ( ruleAtom ) | ( ruleComplexValue ) );";
        }
    }

    class DFA25 extends DFA {

        public DFA25(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 25;
            this.eot = dfa_79;
            this.eof = dfa_79;
            this.min = dfa_89;
            this.max = dfa_90;
            this.accept = dfa_91;
            this.special = dfa_83;
            this.transition = dfa_92;
        }
        public String getDescription() {
            return "2104:1: rule__List__ValuesAlternatives_2_1_0 : ( ( ruleAtom ) | ( ruleComplexValue ) );";
        }
    }

    class DFA26 extends DFA {

        public DFA26(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 26;
            this.eot = dfa_79;
            this.eof = dfa_79;
            this.min = dfa_89;
            this.max = dfa_90;
            this.accept = dfa_91;
            this.special = dfa_83;
            this.transition = dfa_92;
        }
        public String getDescription() {
            return "2126:1: rule__List__ValuesAlternatives_2_3_2_0 : ( ( ruleAtom ) | ( ruleComplexValue ) );";
        }
    }

    class DFA27 extends DFA {

        public DFA27(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 27;
            this.eot = dfa_79;
            this.eof = dfa_79;
            this.min = dfa_89;
            this.max = dfa_90;
            this.accept = dfa_91;
            this.special = dfa_83;
            this.transition = dfa_92;
        }
        public String getDescription() {
            return "2148:1: rule__DictionaryEntry__KeyAlternatives_0_0 : ( ( ruleAtom ) | ( ruleComplexValue ) );";
        }
    }

    class DFA28 extends DFA {

        public DFA28(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 28;
            this.eot = dfa_79;
            this.eof = dfa_79;
            this.min = dfa_89;
            this.max = dfa_90;
            this.accept = dfa_91;
            this.special = dfa_83;
            this.transition = dfa_92;
        }
        public String getDescription() {
            return "2170:1: rule__DictionaryEntry__ValueAlternatives_2_2_0 : ( ( ruleAtom ) | ( ruleComplexValue ) );";
        }
    }
    static final String dfa_93s = "\12\uffff";
    static final String dfa_94s = "\1\23\1\uffff\2\40\6\uffff";
    static final String dfa_95s = "\1\44\1\uffff\2\41\6\uffff";
    static final String dfa_96s = "\1\uffff\1\1\2\uffff\1\2\1\3\4\uffff";
    static final String dfa_97s = "\12\uffff}>";
    static final String[] dfa_98s = {
            "\1\2\1\3\13\uffff\1\4\1\5\2\uffff\1\1",
            "",
            "\1\4\1\5",
            "\1\4\1\5",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_93 = DFA.unpackEncodedString(dfa_93s);
    static final char[] dfa_94 = DFA.unpackEncodedStringToUnsignedChars(dfa_94s);
    static final char[] dfa_95 = DFA.unpackEncodedStringToUnsignedChars(dfa_95s);
    static final short[] dfa_96 = DFA.unpackEncodedString(dfa_96s);
    static final short[] dfa_97 = DFA.unpackEncodedString(dfa_97s);
    static final short[][] dfa_98 = unpackEncodedStringArray(dfa_98s);

    class DFA30 extends DFA {

        public DFA30(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 30;
            this.eot = dfa_93;
            this.eof = dfa_93;
            this.min = dfa_94;
            this.max = dfa_95;
            this.accept = dfa_96;
            this.special = dfa_97;
            this.transition = dfa_98;
        }
        public String getDescription() {
            return "2226:1: rule__Number__Alternatives : ( ( ( rule__Number__ValAssignment_0 ) ) | ( ( rule__Number__ValIntAssignment_1 ) ) | ( ( rule__Number__ValStrAssignment_2 ) ) );";
        }
    }
    static final String dfa_99s = "\1\12\13\uffff";
    static final String dfa_100s = "\1\uffff\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13";
    static final String[] dfa_101s = {
            "\1\13\10\uffff\1\4\1\5\4\uffff\1\10\6\uffff\1\3\1\2\1\1\1\uffff\1\7\1\11\1\6\2\uffff\1\12",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_99 = DFA.unpackEncodedStringToUnsignedChars(dfa_99s);
    static final short[] dfa_100 = DFA.unpackEncodedString(dfa_100s);
    static final short[][] dfa_101 = unpackEncodedStringArray(dfa_101s);

    class DFA38 extends DFA {

        public DFA38(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 38;
            this.eot = dfa_79;
            this.eof = dfa_79;
            this.min = dfa_99;
            this.max = dfa_81;
            this.accept = dfa_100;
            this.special = dfa_83;
            this.transition = dfa_101;
        }
        public String getDescription() {
            return "2408:1: rule__SINGLE_VALUE__Alternatives : ( ( RULE_ID ) | ( RULE_FLOAT ) | ( RULE_INT ) | ( RULE_PLUS ) | ( RULE_MINUS ) | ( RULE_ML_COMMENT ) | ( RULE_BIN_HEX_OCT ) | ( RULE_BOOL_EXPR ) | ( RULE_STRING ) | ( RULE_ANY_OTHER ) | ( FullStop ) );";
        }
    }
    static final String dfa_102s = "\25\uffff";
    static final String dfa_103s = "\1\1\24\uffff";
    static final String dfa_104s = "\1\25\3\uffff\1\0\20\uffff";
    static final String dfa_105s = "\1\50\3\uffff\1\0\20\uffff";
    static final String dfa_106s = "\1\uffff\1\2\22\uffff\1\1";
    static final String dfa_107s = "\4\uffff\1\0\20\uffff}>";
    static final String[] dfa_108s = {
            "\1\1\20\uffff\2\1\1\4",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_102 = DFA.unpackEncodedString(dfa_102s);
    static final short[] dfa_103 = DFA.unpackEncodedString(dfa_103s);
    static final char[] dfa_104 = DFA.unpackEncodedStringToUnsignedChars(dfa_104s);
    static final char[] dfa_105 = DFA.unpackEncodedStringToUnsignedChars(dfa_105s);
    static final short[] dfa_106 = DFA.unpackEncodedString(dfa_106s);
    static final short[] dfa_107 = DFA.unpackEncodedString(dfa_107s);
    static final short[][] dfa_108 = unpackEncodedStringArray(dfa_108s);

    class DFA41 extends DFA {

        public DFA41(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 41;
            this.eot = dfa_102;
            this.eof = dfa_103;
            this.min = dfa_104;
            this.max = dfa_105;
            this.accept = dfa_106;
            this.special = dfa_107;
            this.transition = dfa_108;
        }
        public String getDescription() {
            return "()* loopback of 2841:1: ( rule__SpellDatabase__Group_1_1_1_1__0 )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA41_4 = input.LA(1);

                         
                        int index41_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred84_InternalSpellDatabaseParser()) ) {s = 20;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index41_4);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 41, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_109s = "\17\uffff";
    static final String dfa_110s = "\1\12\16\uffff";
    static final String dfa_111s = "\1\10\16\uffff";
    static final String dfa_112s = "\1\50\16\uffff";
    static final String dfa_113s = "\1\uffff\1\1\10\uffff\1\2\4\uffff";
    static final String dfa_114s = "\17\uffff}>";
    static final String[] dfa_115s = {
            "\1\1\12\uffff\2\1\1\12\3\uffff\1\1\6\uffff\3\1\1\uffff\2\1\3\12",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_109 = DFA.unpackEncodedString(dfa_109s);
    static final short[] dfa_110 = DFA.unpackEncodedString(dfa_110s);
    static final char[] dfa_111 = DFA.unpackEncodedStringToUnsignedChars(dfa_111s);
    static final char[] dfa_112 = DFA.unpackEncodedStringToUnsignedChars(dfa_112s);
    static final short[] dfa_113 = DFA.unpackEncodedString(dfa_113s);
    static final short[] dfa_114 = DFA.unpackEncodedString(dfa_114s);
    static final short[][] dfa_115 = unpackEncodedStringArray(dfa_115s);

    class DFA42 extends DFA {

        public DFA42(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 42;
            this.eot = dfa_109;
            this.eof = dfa_110;
            this.min = dfa_111;
            this.max = dfa_112;
            this.accept = dfa_113;
            this.special = dfa_114;
            this.transition = dfa_115;
        }
        public String getDescription() {
            return "2932:1: ( rule__SpellDatabase__DatabaseEntryAssignment_1_1_1_1_1 )?";
        }
    }
    static final String dfa_116s = "\22\uffff";
    static final String dfa_117s = "\1\2\21\uffff";
    static final String dfa_118s = "\1\25\1\0\20\uffff";
    static final String dfa_119s = "\1\50\1\0\20\uffff";
    static final String dfa_120s = "\2\uffff\1\2\16\uffff\1\1";
    static final String dfa_121s = "\1\uffff\1\0\20\uffff}>";
    static final String[] dfa_122s = {
            "\1\2\2\uffff\1\2\2\uffff\1\2\2\uffff\1\2\7\uffff\2\2\1\1",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_116 = DFA.unpackEncodedString(dfa_116s);
    static final short[] dfa_117 = DFA.unpackEncodedString(dfa_117s);
    static final char[] dfa_118 = DFA.unpackEncodedStringToUnsignedChars(dfa_118s);
    static final char[] dfa_119 = DFA.unpackEncodedStringToUnsignedChars(dfa_119s);
    static final short[] dfa_120 = DFA.unpackEncodedString(dfa_120s);
    static final short[] dfa_121 = DFA.unpackEncodedString(dfa_121s);
    static final short[][] dfa_122 = unpackEncodedStringArray(dfa_122s);

    class DFA43 extends DFA {

        public DFA43(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 43;
            this.eot = dfa_116;
            this.eof = dfa_117;
            this.min = dfa_118;
            this.max = dfa_119;
            this.accept = dfa_120;
            this.special = dfa_121;
            this.transition = dfa_122;
        }
        public String getDescription() {
            return "3025:1: ( ruleSkipNLAndComments2 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA43_1 = input.LA(1);

                         
                        int index43_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred86_InternalSpellDatabaseParser()) ) {s = 17;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index43_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 43, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_123s = "\61\uffff";
    static final String dfa_124s = "\1\1\3\uffff\1\1\4\uffff\4\1\44\uffff";
    static final String dfa_125s = "\1\25\3\uffff\1\25\4\uffff\4\25\4\uffff\4\0\7\uffff\4\0\4\uffff\4\0\4\uffff\4\0\1\uffff";
    static final String dfa_126s = "\1\50\3\uffff\1\50\4\uffff\4\50\4\uffff\4\0\7\uffff\4\0\4\uffff\4\0\4\uffff\4\0\1\uffff";
    static final String dfa_127s = "\1\uffff\1\2\4\uffff\1\1\52\uffff";
    static final String dfa_128s = "\21\uffff\1\0\1\1\1\2\1\3\7\uffff\1\4\1\5\1\6\1\7\4\uffff\1\10\1\11\1\12\1\13\4\uffff\1\14\1\15\1\16\1\17\1\uffff}>";
    static final String[] dfa_129s = {
            "\1\1\2\uffff\1\6\2\uffff\1\6\2\uffff\1\6\7\uffff\2\1\1\4",
            "",
            "",
            "",
            "\1\12\2\uffff\1\6\2\uffff\1\6\2\uffff\1\6\7\uffff\1\13\1\14\1\11",
            "",
            "",
            "",
            "",
            "\1\21\2\uffff\1\6\2\uffff\1\6\2\uffff\1\6\7\uffff\1\22\1\23\1\24",
            "\1\34\2\uffff\1\6\2\uffff\1\6\2\uffff\1\6\7\uffff\1\35\1\36\1\37",
            "\1\44\2\uffff\1\6\2\uffff\1\6\2\uffff\1\6\7\uffff\1\45\1\46\1\47",
            "\1\54\2\uffff\1\6\2\uffff\1\6\2\uffff\1\6\7\uffff\1\55\1\56\1\57",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            ""
    };

    static final short[] dfa_123 = DFA.unpackEncodedString(dfa_123s);
    static final short[] dfa_124 = DFA.unpackEncodedString(dfa_124s);
    static final char[] dfa_125 = DFA.unpackEncodedStringToUnsignedChars(dfa_125s);
    static final char[] dfa_126 = DFA.unpackEncodedStringToUnsignedChars(dfa_126s);
    static final short[] dfa_127 = DFA.unpackEncodedString(dfa_127s);
    static final short[] dfa_128 = DFA.unpackEncodedString(dfa_128s);
    static final short[][] dfa_129 = unpackEncodedStringArray(dfa_129s);

    class DFA44 extends DFA {

        public DFA44(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 44;
            this.eot = dfa_123;
            this.eof = dfa_124;
            this.min = dfa_125;
            this.max = dfa_126;
            this.accept = dfa_127;
            this.special = dfa_128;
            this.transition = dfa_129;
        }
        public String getDescription() {
            return "()* loopback of 3054:1: ( rule__SpellDatabase__Group_1_2_3__0 )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA44_17 = input.LA(1);

                         
                        int index44_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred87_InternalSpellDatabaseParser()) ) {s = 6;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index44_17);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA44_18 = input.LA(1);

                         
                        int index44_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred87_InternalSpellDatabaseParser()) ) {s = 6;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index44_18);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA44_19 = input.LA(1);

                         
                        int index44_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred87_InternalSpellDatabaseParser()) ) {s = 6;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index44_19);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA44_20 = input.LA(1);

                         
                        int index44_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred87_InternalSpellDatabaseParser()) ) {s = 6;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index44_20);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA44_28 = input.LA(1);

                         
                        int index44_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred87_InternalSpellDatabaseParser()) ) {s = 6;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index44_28);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA44_29 = input.LA(1);

                         
                        int index44_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred87_InternalSpellDatabaseParser()) ) {s = 6;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index44_29);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA44_30 = input.LA(1);

                         
                        int index44_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred87_InternalSpellDatabaseParser()) ) {s = 6;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index44_30);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA44_31 = input.LA(1);

                         
                        int index44_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred87_InternalSpellDatabaseParser()) ) {s = 6;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index44_31);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA44_36 = input.LA(1);

                         
                        int index44_36 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred87_InternalSpellDatabaseParser()) ) {s = 6;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index44_36);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA44_37 = input.LA(1);

                         
                        int index44_37 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred87_InternalSpellDatabaseParser()) ) {s = 6;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index44_37);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA44_38 = input.LA(1);

                         
                        int index44_38 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred87_InternalSpellDatabaseParser()) ) {s = 6;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index44_38);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA44_39 = input.LA(1);

                         
                        int index44_39 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred87_InternalSpellDatabaseParser()) ) {s = 6;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index44_39);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA44_44 = input.LA(1);

                         
                        int index44_44 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred87_InternalSpellDatabaseParser()) ) {s = 6;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index44_44);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA44_45 = input.LA(1);

                         
                        int index44_45 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred87_InternalSpellDatabaseParser()) ) {s = 6;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index44_45);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA44_46 = input.LA(1);

                         
                        int index44_46 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred87_InternalSpellDatabaseParser()) ) {s = 6;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index44_46);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA44_47 = input.LA(1);

                         
                        int index44_47 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred87_InternalSpellDatabaseParser()) ) {s = 6;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index44_47);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 44, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_130s = "\44\uffff";
    static final String dfa_131s = "\1\15\43\uffff";
    static final String dfa_132s = "\1\12\11\uffff\1\0\31\uffff";
    static final String dfa_133s = "\1\51\11\uffff\1\0\31\uffff";
    static final String dfa_134s = "\1\uffff\1\1\13\uffff\1\2\26\uffff";
    static final String dfa_135s = "\12\uffff\1\0\31\uffff}>";
    static final String[] dfa_136s = {
            "\1\1\7\uffff\1\15\2\1\1\15\1\uffff\1\1\1\uffff\1\1\6\uffff\3\1\1\15\2\1\1\12\2\15\1\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_130 = DFA.unpackEncodedString(dfa_130s);
    static final short[] dfa_131 = DFA.unpackEncodedString(dfa_131s);
    static final char[] dfa_132 = DFA.unpackEncodedStringToUnsignedChars(dfa_132s);
    static final char[] dfa_133 = DFA.unpackEncodedStringToUnsignedChars(dfa_133s);
    static final short[] dfa_134 = DFA.unpackEncodedString(dfa_134s);
    static final short[] dfa_135 = DFA.unpackEncodedString(dfa_135s);
    static final short[][] dfa_136 = unpackEncodedStringArray(dfa_136s);

    class DFA48 extends DFA {

        public DFA48(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 48;
            this.eot = dfa_130;
            this.eof = dfa_131;
            this.min = dfa_132;
            this.max = dfa_133;
            this.accept = dfa_134;
            this.special = dfa_135;
            this.transition = dfa_136;
        }
        public String getDescription() {
            return "3673:1: ( rule__AstriumVariableEntry__Alternatives_1_5 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA48_10 = input.LA(1);

                         
                        int index48_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred91_InternalSpellDatabaseParser()) ) {s = 1;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index48_10);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 48, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_137s = "\110\uffff";
    static final String dfa_138s = "\1\15\1\2\106\uffff";
    static final String dfa_139s = "\2\4\10\uffff\1\0\10\uffff\1\0\64\uffff";
    static final String dfa_140s = "\2\51\10\uffff\1\0\10\uffff\1\0\64\uffff";
    static final String dfa_141s = "\2\uffff\1\1\12\uffff\1\2\72\uffff";
    static final String dfa_142s = "\12\uffff\1\0\10\uffff\1\1\64\uffff}>";
    static final String[] dfa_143s = {
            "\1\15\5\uffff\1\2\7\uffff\1\15\2\2\1\15\1\uffff\1\2\1\uffff\1\2\6\uffff\2\2\1\1\1\uffff\2\2\1\12\2\15\1\2",
            "\1\2\5\uffff\1\2\7\uffff\4\2\1\15\2\uffff\1\2\6\uffff\2\2\1\23\1\uffff\6\2",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_137 = DFA.unpackEncodedString(dfa_137s);
    static final short[] dfa_138 = DFA.unpackEncodedString(dfa_138s);
    static final char[] dfa_139 = DFA.unpackEncodedStringToUnsignedChars(dfa_139s);
    static final char[] dfa_140 = DFA.unpackEncodedStringToUnsignedChars(dfa_140s);
    static final short[] dfa_141 = DFA.unpackEncodedString(dfa_141s);
    static final short[] dfa_142 = DFA.unpackEncodedString(dfa_142s);
    static final short[][] dfa_143 = unpackEncodedStringArray(dfa_143s);

    class DFA49 extends DFA {

        public DFA49(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 49;
            this.eot = dfa_137;
            this.eof = dfa_138;
            this.min = dfa_139;
            this.max = dfa_140;
            this.accept = dfa_141;
            this.special = dfa_142;
            this.transition = dfa_143;
        }
        public String getDescription() {
            return "3896:1: ( rule__AstriumHeaderEntry__Alternatives_1_4 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA49_10 = input.LA(1);

                         
                        int index49_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred92_InternalSpellDatabaseParser()) ) {s = 2;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index49_10);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA49_19 = input.LA(1);

                         
                        int index49_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred92_InternalSpellDatabaseParser()) ) {s = 2;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index49_19);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 49, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_144s = "\46\uffff";
    static final String dfa_145s = "\1\1\45\uffff";
    static final String dfa_146s = "\1\10\3\uffff\1\0\41\uffff";
    static final String dfa_147s = "\1\50\3\uffff\1\0\41\uffff";
    static final String dfa_148s = "\1\uffff\1\2\43\uffff\1\1";
    static final String dfa_149s = "\4\uffff\1\0\41\uffff}>";
    static final String[] dfa_150s = {
            "\2\1\11\uffff\3\1\2\uffff\2\1\1\uffff\1\1\2\uffff\1\1\1\uffff\3\1\1\uffff\4\1\1\4",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_144 = DFA.unpackEncodedString(dfa_144s);
    static final short[] dfa_145 = DFA.unpackEncodedString(dfa_145s);
    static final char[] dfa_146 = DFA.unpackEncodedStringToUnsignedChars(dfa_146s);
    static final char[] dfa_147 = DFA.unpackEncodedStringToUnsignedChars(dfa_147s);
    static final short[] dfa_148 = DFA.unpackEncodedString(dfa_148s);
    static final short[] dfa_149 = DFA.unpackEncodedString(dfa_149s);
    static final short[][] dfa_150 = unpackEncodedStringArray(dfa_150s);

    class DFA50 extends DFA {

        public DFA50(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 50;
            this.eot = dfa_144;
            this.eof = dfa_145;
            this.min = dfa_146;
            this.max = dfa_147;
            this.accept = dfa_148;
            this.special = dfa_149;
            this.transition = dfa_150;
        }
        public String getDescription() {
            return "()* loopback of 3941:1: ( RULE_NL )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA50_4 = input.LA(1);

                         
                        int index50_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred93_InternalSpellDatabaseParser()) ) {s = 37;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index50_4);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 50, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_151s = "\33\uffff";
    static final String dfa_152s = "\2\2\31\uffff";
    static final String dfa_153s = "\1\11\1\10\31\uffff";
    static final String dfa_154s = "\2\50\31\uffff";
    static final String dfa_155s = "\2\uffff\1\2\7\uffff\1\1\20\uffff";
    static final String dfa_156s = "\33\uffff}>";
    static final String[] dfa_157s = {
            "\1\1\13\uffff\1\2\2\uffff\1\2\2\uffff\1\2\2\uffff\1\2\7\uffff\3\2",
            "\1\12\1\2\11\uffff\2\12\1\2\2\uffff\1\2\1\12\1\uffff\1\2\2\uffff\1\2\1\uffff\3\12\1\uffff\1\12\1\uffff\3\2",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_151 = DFA.unpackEncodedString(dfa_151s);
    static final short[] dfa_152 = DFA.unpackEncodedString(dfa_152s);
    static final char[] dfa_153 = DFA.unpackEncodedStringToUnsignedChars(dfa_153s);
    static final char[] dfa_154 = DFA.unpackEncodedStringToUnsignedChars(dfa_154s);
    static final short[] dfa_155 = DFA.unpackEncodedString(dfa_155s);
    static final short[] dfa_156 = DFA.unpackEncodedString(dfa_156s);
    static final short[][] dfa_157 = unpackEncodedStringArray(dfa_157s);

    class DFA51 extends DFA {

        public DFA51(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 51;
            this.eot = dfa_151;
            this.eof = dfa_152;
            this.min = dfa_153;
            this.max = dfa_154;
            this.accept = dfa_155;
            this.special = dfa_156;
            this.transition = dfa_157;
        }
        public String getDescription() {
            return "4092:1: ( rule__CSVCommand__Group_3__0 )?";
        }
    }
    static final String dfa_158s = "\1\1\11\uffff";
    static final String dfa_159s = "\1\11\11\uffff";
    static final String dfa_160s = "\1\50\11\uffff";
    static final String dfa_161s = "\1\uffff\1\2\7\uffff\1\1";
    static final String[] dfa_162s = {
            "\1\11\13\uffff\1\1\2\uffff\1\1\2\uffff\1\1\2\uffff\1\1\7\uffff\3\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[] dfa_158 = DFA.unpackEncodedString(dfa_158s);
    static final char[] dfa_159 = DFA.unpackEncodedStringToUnsignedChars(dfa_159s);
    static final char[] dfa_160 = DFA.unpackEncodedStringToUnsignedChars(dfa_160s);
    static final short[] dfa_161 = DFA.unpackEncodedString(dfa_161s);
    static final short[][] dfa_162 = unpackEncodedStringArray(dfa_162s);

    class DFA52 extends DFA {

        public DFA52(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 52;
            this.eot = dfa_93;
            this.eof = dfa_158;
            this.min = dfa_159;
            this.max = dfa_160;
            this.accept = dfa_161;
            this.special = dfa_97;
            this.transition = dfa_162;
        }
        public String getDescription() {
            return "()* loopback of 4120:1: ( Comma )*";
        }
    }
    static final String dfa_163s = "\67\uffff";
    static final String dfa_164s = "\1\1\2\uffff\1\1\6\uffff\4\1\51\uffff";
    static final String dfa_165s = "\1\11\2\uffff\1\11\6\uffff\4\11\5\uffff\1\0\3\uffff\3\0\5\uffff\4\0\2\uffff\1\0\3\uffff\3\0\3\uffff\4\0\4\uffff";
    static final String dfa_166s = "\1\50\2\uffff\1\50\6\uffff\4\50\5\uffff\1\0\3\uffff\3\0\5\uffff\4\0\2\uffff\1\0\3\uffff\3\0\3\uffff\4\0\4\uffff";
    static final String dfa_167s = "\1\uffff\1\2\20\uffff\1\1\44\uffff";
    static final String dfa_168s = "\23\uffff\1\0\3\uffff\1\1\1\2\1\3\5\uffff\1\4\1\5\1\6\1\7\2\uffff\1\10\3\uffff\1\11\1\12\1\13\3\uffff\1\14\1\15\1\16\1\17\4\uffff}>";
    static final String[] dfa_169s = {
            "\1\1\13\uffff\1\1\2\uffff\1\1\2\uffff\1\1\2\uffff\1\1\7\uffff\2\1\1\3",
            "",
            "",
            "\1\22\13\uffff\1\13\2\uffff\1\1\2\uffff\1\1\2\uffff\1\1\7\uffff\1\14\1\15\1\12",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\22\13\uffff\1\27\2\uffff\1\1\2\uffff\1\1\2\uffff\1\1\7\uffff\1\30\1\31\1\23",
            "\1\22\13\uffff\1\37\2\uffff\1\1\2\uffff\1\1\2\uffff\1\1\7\uffff\1\40\1\41\1\42",
            "\1\22\13\uffff\1\51\2\uffff\1\1\2\uffff\1\1\2\uffff\1\1\7\uffff\1\52\1\53\1\45",
            "\1\22\13\uffff\1\57\2\uffff\1\1\2\uffff\1\1\2\uffff\1\1\7\uffff\1\60\1\61\1\62",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_163 = DFA.unpackEncodedString(dfa_163s);
    static final short[] dfa_164 = DFA.unpackEncodedString(dfa_164s);
    static final char[] dfa_165 = DFA.unpackEncodedStringToUnsignedChars(dfa_165s);
    static final char[] dfa_166 = DFA.unpackEncodedStringToUnsignedChars(dfa_166s);
    static final short[] dfa_167 = DFA.unpackEncodedString(dfa_167s);
    static final short[] dfa_168 = DFA.unpackEncodedString(dfa_168s);
    static final short[][] dfa_169 = unpackEncodedStringArray(dfa_169s);

    class DFA53 extends DFA {

        public DFA53(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 53;
            this.eot = dfa_163;
            this.eof = dfa_164;
            this.min = dfa_165;
            this.max = dfa_166;
            this.accept = dfa_167;
            this.special = dfa_168;
            this.transition = dfa_169;
        }
        public String getDescription() {
            return "()* loopback of 4220:1: ( rule__CSVCommand__Group_3_2__0 )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA53_19 = input.LA(1);

                         
                        int index53_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred96_InternalSpellDatabaseParser()) ) {s = 18;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index53_19);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA53_23 = input.LA(1);

                         
                        int index53_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred96_InternalSpellDatabaseParser()) ) {s = 18;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index53_23);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA53_24 = input.LA(1);

                         
                        int index53_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred96_InternalSpellDatabaseParser()) ) {s = 18;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index53_24);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA53_25 = input.LA(1);

                         
                        int index53_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred96_InternalSpellDatabaseParser()) ) {s = 18;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index53_25);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA53_31 = input.LA(1);

                         
                        int index53_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred96_InternalSpellDatabaseParser()) ) {s = 18;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index53_31);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA53_32 = input.LA(1);

                         
                        int index53_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred96_InternalSpellDatabaseParser()) ) {s = 18;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index53_32);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA53_33 = input.LA(1);

                         
                        int index53_33 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred96_InternalSpellDatabaseParser()) ) {s = 18;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index53_33);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA53_34 = input.LA(1);

                         
                        int index53_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred96_InternalSpellDatabaseParser()) ) {s = 18;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index53_34);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA53_37 = input.LA(1);

                         
                        int index53_37 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred96_InternalSpellDatabaseParser()) ) {s = 18;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index53_37);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA53_41 = input.LA(1);

                         
                        int index53_41 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred96_InternalSpellDatabaseParser()) ) {s = 18;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index53_41);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA53_42 = input.LA(1);

                         
                        int index53_42 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred96_InternalSpellDatabaseParser()) ) {s = 18;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index53_42);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA53_43 = input.LA(1);

                         
                        int index53_43 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred96_InternalSpellDatabaseParser()) ) {s = 18;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index53_43);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA53_47 = input.LA(1);

                         
                        int index53_47 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred96_InternalSpellDatabaseParser()) ) {s = 18;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index53_47);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA53_48 = input.LA(1);

                         
                        int index53_48 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred96_InternalSpellDatabaseParser()) ) {s = 18;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index53_48);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA53_49 = input.LA(1);

                         
                        int index53_49 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred96_InternalSpellDatabaseParser()) ) {s = 18;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index53_49);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA53_50 = input.LA(1);

                         
                        int index53_50 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred96_InternalSpellDatabaseParser()) ) {s = 18;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index53_50);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 53, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_170s = "\24\uffff";
    static final String dfa_171s = "\1\2\23\uffff";
    static final String dfa_172s = "\1\11\1\0\22\uffff";
    static final String dfa_173s = "\1\50\1\0\22\uffff";
    static final String dfa_174s = "\2\uffff\1\2\20\uffff\1\1";
    static final String dfa_175s = "\1\uffff\1\0\22\uffff}>";
    static final String[] dfa_176s = {
            "\1\1\13\uffff\1\2\2\uffff\1\2\2\uffff\1\2\2\uffff\1\2\7\uffff\3\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_170 = DFA.unpackEncodedString(dfa_170s);
    static final short[] dfa_171 = DFA.unpackEncodedString(dfa_171s);
    static final char[] dfa_172 = DFA.unpackEncodedStringToUnsignedChars(dfa_172s);
    static final char[] dfa_173 = DFA.unpackEncodedStringToUnsignedChars(dfa_173s);
    static final short[] dfa_174 = DFA.unpackEncodedString(dfa_174s);
    static final short[] dfa_175 = DFA.unpackEncodedString(dfa_175s);
    static final short[][] dfa_176 = unpackEncodedStringArray(dfa_176s);

    class DFA54 extends DFA {

        public DFA54(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 54;
            this.eot = dfa_170;
            this.eof = dfa_171;
            this.min = dfa_172;
            this.max = dfa_173;
            this.accept = dfa_174;
            this.special = dfa_175;
            this.transition = dfa_176;
        }
        public String getDescription() {
            return "()* loopback of 4404:1: ( Comma )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA54_1 = input.LA(1);

                         
                        int index54_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred97_InternalSpellDatabaseParser()) ) {s = 19;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index54_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 54, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_177s = "\26\uffff";
    static final String dfa_178s = "\1\2\25\uffff";
    static final String dfa_179s = "\1\11\1\0\24\uffff";
    static final String dfa_180s = "\1\50\1\0\24\uffff";
    static final String dfa_181s = "\2\uffff\1\2\22\uffff\1\1";
    static final String dfa_182s = "\1\uffff\1\0\24\uffff}>";
    static final String[] dfa_183s = {
            "\1\1\13\uffff\1\2\2\uffff\1\2\2\uffff\1\2\2\uffff\1\2\7\uffff\3\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_177 = DFA.unpackEncodedString(dfa_177s);
    static final short[] dfa_178 = DFA.unpackEncodedString(dfa_178s);
    static final char[] dfa_179 = DFA.unpackEncodedStringToUnsignedChars(dfa_179s);
    static final char[] dfa_180 = DFA.unpackEncodedStringToUnsignedChars(dfa_180s);
    static final short[] dfa_181 = DFA.unpackEncodedString(dfa_181s);
    static final short[] dfa_182 = DFA.unpackEncodedString(dfa_182s);
    static final short[][] dfa_183 = unpackEncodedStringArray(dfa_183s);

    class DFA55 extends DFA {

        public DFA55(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 55;
            this.eot = dfa_177;
            this.eof = dfa_178;
            this.min = dfa_179;
            this.max = dfa_180;
            this.accept = dfa_181;
            this.special = dfa_182;
            this.transition = dfa_183;
        }
        public String getDescription() {
            return "4594:1: ( rule__TCArgs__Group_5__0 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA55_1 = input.LA(1);

                         
                        int index55_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred98_InternalSpellDatabaseParser()) ) {s = 21;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index55_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 55, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_184s = "\1\1\23\uffff";
    static final String dfa_185s = "\1\11\2\uffff\1\0\20\uffff";
    static final String dfa_186s = "\1\50\2\uffff\1\0\20\uffff";
    static final String dfa_187s = "\1\uffff\1\2\21\uffff\1\1";
    static final String dfa_188s = "\3\uffff\1\0\20\uffff}>";
    static final String[] dfa_189s = {
            "\1\3\13\uffff\1\1\2\uffff\1\1\2\uffff\1\1\2\uffff\1\1\7\uffff\3\1",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[] dfa_184 = DFA.unpackEncodedString(dfa_184s);
    static final char[] dfa_185 = DFA.unpackEncodedStringToUnsignedChars(dfa_185s);
    static final char[] dfa_186 = DFA.unpackEncodedStringToUnsignedChars(dfa_186s);
    static final short[] dfa_187 = DFA.unpackEncodedString(dfa_187s);
    static final short[] dfa_188 = DFA.unpackEncodedString(dfa_188s);
    static final short[][] dfa_189 = unpackEncodedStringArray(dfa_189s);

    class DFA56 extends DFA {

        public DFA56(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 56;
            this.eot = dfa_170;
            this.eof = dfa_184;
            this.min = dfa_185;
            this.max = dfa_186;
            this.accept = dfa_187;
            this.special = dfa_188;
            this.transition = dfa_189;
        }
        public String getDescription() {
            return "()* loopback of 4622:1: ( Comma )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA56_3 = input.LA(1);

                         
                        int index56_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred99_InternalSpellDatabaseParser()) ) {s = 19;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index56_3);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 56, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_190s = "\1\3\13\uffff";
    static final String dfa_191s = "\1\11\13\uffff";
    static final String dfa_192s = "\1\50\13\uffff";
    static final String dfa_193s = "\1\uffff\1\1\1\uffff\1\2\10\uffff";
    static final String[] dfa_194s = {
            "\1\3\13\uffff\1\3\2\uffff\1\3\2\uffff\1\3\2\uffff\1\3\1\uffff\2\1\4\uffff\3\3",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[] dfa_190 = DFA.unpackEncodedString(dfa_190s);
    static final char[] dfa_191 = DFA.unpackEncodedStringToUnsignedChars(dfa_191s);
    static final char[] dfa_192 = DFA.unpackEncodedStringToUnsignedChars(dfa_192s);
    static final short[] dfa_193 = DFA.unpackEncodedString(dfa_193s);
    static final short[][] dfa_194 = unpackEncodedStringArray(dfa_194s);

    class DFA57 extends DFA {

        public DFA57(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 57;
            this.eot = dfa_79;
            this.eof = dfa_190;
            this.min = dfa_191;
            this.max = dfa_192;
            this.accept = dfa_193;
            this.special = dfa_83;
            this.transition = dfa_194;
        }
        public String getDescription() {
            return "4727:1: ( rule__TCArgs__ToleranceAssignment_5_0_1 )?";
        }
    }

    class DFA58 extends DFA {

        public DFA58(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 58;
            this.eot = dfa_93;
            this.eof = dfa_158;
            this.min = dfa_159;
            this.max = dfa_160;
            this.accept = dfa_161;
            this.special = dfa_97;
            this.transition = dfa_162;
        }
        public String getDescription() {
            return "()* loopback of 4879:1: ( Comma )*";
        }
    }

    class DFA59 extends DFA {

        public DFA59(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 59;
            this.eot = dfa_93;
            this.eof = dfa_158;
            this.min = dfa_159;
            this.max = dfa_160;
            this.accept = dfa_161;
            this.special = dfa_97;
            this.transition = dfa_162;
        }
        public String getDescription() {
            return "()* loopback of 5008:1: ( Comma )*";
        }
    }
    static final String dfa_195s = "\1\11\1\uffff\1\0\21\uffff";
    static final String dfa_196s = "\1\50\1\uffff\1\0\21\uffff";
    static final String dfa_197s = "\2\uffff\1\0\21\uffff}>";
    static final String[] dfa_198s = {
            "\1\2\13\uffff\1\1\2\uffff\1\1\2\uffff\1\1\2\uffff\1\1\7\uffff\3\1",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_195 = DFA.unpackEncodedStringToUnsignedChars(dfa_195s);
    static final char[] dfa_196 = DFA.unpackEncodedStringToUnsignedChars(dfa_196s);
    static final short[] dfa_197 = DFA.unpackEncodedString(dfa_197s);
    static final short[][] dfa_198 = unpackEncodedStringArray(dfa_198s);

    class DFA60 extends DFA {

        public DFA60(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 60;
            this.eot = dfa_170;
            this.eof = dfa_184;
            this.min = dfa_195;
            this.max = dfa_196;
            this.accept = dfa_187;
            this.special = dfa_197;
            this.transition = dfa_198;
        }
        public String getDescription() {
            return "()* loopback of 5297:1: ( Comma )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA60_2 = input.LA(1);

                         
                        int index60_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred103_InternalSpellDatabaseParser()) ) {s = 19;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index60_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 60, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_199s = "\1\2\43\uffff";
    static final String dfa_200s = "\1\6\1\0\42\uffff";
    static final String dfa_201s = "\1\50\1\0\42\uffff";
    static final String dfa_202s = "\2\uffff\1\2\40\uffff\1\1";
    static final String dfa_203s = "\1\uffff\1\0\42\uffff}>";
    static final String[] dfa_204s = {
            "\1\2\6\uffff\2\2\1\uffff\1\2\2\uffff\2\2\1\1\1\uffff\1\2\1\uffff\1\2\6\uffff\2\2\2\uffff\5\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[] dfa_199 = DFA.unpackEncodedString(dfa_199s);
    static final char[] dfa_200 = DFA.unpackEncodedStringToUnsignedChars(dfa_200s);
    static final char[] dfa_201 = DFA.unpackEncodedStringToUnsignedChars(dfa_201s);
    static final short[] dfa_202 = DFA.unpackEncodedString(dfa_202s);
    static final short[] dfa_203 = DFA.unpackEncodedString(dfa_203s);
    static final short[][] dfa_204 = unpackEncodedStringArray(dfa_204s);

    class DFA61 extends DFA {

        public DFA61(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 61;
            this.eot = dfa_130;
            this.eof = dfa_199;
            this.min = dfa_200;
            this.max = dfa_201;
            this.accept = dfa_202;
            this.special = dfa_203;
            this.transition = dfa_204;
        }
        public String getDescription() {
            return "5363:1: ( RULE_WS )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA61_1 = input.LA(1);

                         
                        int index61_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred104_InternalSpellDatabaseParser()) ) {s = 35;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index61_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 61, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_205s = "\42\uffff";
    static final String dfa_206s = "\1\2\41\uffff";
    static final String dfa_207s = "\1\6\1\0\40\uffff";
    static final String dfa_208s = "\1\50\1\0\40\uffff";
    static final String dfa_209s = "\2\uffff\1\2\36\uffff\1\1";
    static final String dfa_210s = "\1\uffff\1\0\40\uffff}>";
    static final String[] dfa_211s = {
            "\1\2\6\uffff\1\2\2\uffff\1\2\2\uffff\2\2\1\1\1\uffff\1\2\1\uffff\1\2\6\uffff\2\2\2\uffff\5\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_205 = DFA.unpackEncodedString(dfa_205s);
    static final short[] dfa_206 = DFA.unpackEncodedString(dfa_206s);
    static final char[] dfa_207 = DFA.unpackEncodedStringToUnsignedChars(dfa_207s);
    static final char[] dfa_208 = DFA.unpackEncodedStringToUnsignedChars(dfa_208s);
    static final short[] dfa_209 = DFA.unpackEncodedString(dfa_209s);
    static final short[] dfa_210 = DFA.unpackEncodedString(dfa_210s);
    static final short[][] dfa_211 = unpackEncodedStringArray(dfa_211s);

    class DFA62 extends DFA {

        public DFA62(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 62;
            this.eot = dfa_205;
            this.eof = dfa_206;
            this.min = dfa_207;
            this.max = dfa_208;
            this.accept = dfa_209;
            this.special = dfa_210;
            this.transition = dfa_211;
        }
        public String getDescription() {
            return "5421:1: ( RULE_WS )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA62_1 = input.LA(1);

                         
                        int index62_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred105_InternalSpellDatabaseParser()) ) {s = 33;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index62_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 62, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_212s = "\21\uffff";
    static final String dfa_213s = "\1\14\20\uffff";
    static final String dfa_214s = "\1\6\20\uffff";
    static final String dfa_215s = "\1\50\20\uffff";
    static final String dfa_216s = "\1\uffff\1\1\12\uffff\1\2\4\uffff";
    static final String dfa_217s = "\21\uffff}>";
    static final String[] dfa_218s = {
            "\1\1\6\uffff\1\1\2\uffff\1\1\2\uffff\2\1\1\14\1\uffff\1\1\1\uffff\1\1\6\uffff\2\1\2\uffff\2\1\3\14",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_212 = DFA.unpackEncodedString(dfa_212s);
    static final short[] dfa_213 = DFA.unpackEncodedString(dfa_213s);
    static final char[] dfa_214 = DFA.unpackEncodedStringToUnsignedChars(dfa_214s);
    static final char[] dfa_215 = DFA.unpackEncodedStringToUnsignedChars(dfa_215s);
    static final short[] dfa_216 = DFA.unpackEncodedString(dfa_216s);
    static final short[] dfa_217 = DFA.unpackEncodedString(dfa_217s);
    static final short[][] dfa_218 = unpackEncodedStringArray(dfa_218s);

    class DFA63 extends DFA {

        public DFA63(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 63;
            this.eot = dfa_212;
            this.eof = dfa_213;
            this.min = dfa_214;
            this.max = dfa_215;
            this.accept = dfa_216;
            this.special = dfa_217;
            this.transition = dfa_218;
        }
        public String getDescription() {
            return "5449:1: ( rule__DatabaseEntry__ValueAssignment_4 )?";
        }
    }
    static final String dfa_219s = "\156\uffff";
    static final String dfa_220s = "\1\14\1\2\154\uffff";
    static final String dfa_221s = "\2\4\4\uffff\1\0\22\uffff\1\0\22\uffff\1\6\101\uffff";
    static final String dfa_222s = "\2\51\4\uffff\1\0\22\uffff\1\0\22\uffff\1\45\101\uffff";
    static final String dfa_223s = "\2\uffff\1\1\11\uffff\1\2\141\uffff";
    static final String dfa_224s = "\6\uffff\1\0\22\uffff\1\1\124\uffff}>";
    static final String[] dfa_225s = {
            "\1\14\2\uffff\1\14\1\uffff\1\14\4\uffff\2\14\1\uffff\2\14\2\2\2\14\1\2\1\uffff\1\2\6\uffff\2\2\1\1\1\14\2\2\1\6\2\14\1\2",
            "\1\2\2\uffff\1\2\1\uffff\1\2\4\uffff\2\2\1\uffff\5\2\1\54\1\2\1\uffff\1\2\6\uffff\2\2\1\31\7\2",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\2\5\uffff\1\14\2\2\1\uffff\1\2\2\uffff\2\2\2\uffff\1\2\1\uffff\1\2\6\uffff\2\2\2\uffff\2\2",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_219 = DFA.unpackEncodedString(dfa_219s);
    static final short[] dfa_220 = DFA.unpackEncodedString(dfa_220s);
    static final char[] dfa_221 = DFA.unpackEncodedStringToUnsignedChars(dfa_221s);
    static final char[] dfa_222 = DFA.unpackEncodedStringToUnsignedChars(dfa_222s);
    static final short[] dfa_223 = DFA.unpackEncodedString(dfa_223s);
    static final short[] dfa_224 = DFA.unpackEncodedString(dfa_224s);
    static final short[][] dfa_225 = unpackEncodedStringArray(dfa_225s);

    class DFA65 extends DFA {

        public DFA65(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 65;
            this.eot = dfa_219;
            this.eof = dfa_220;
            this.min = dfa_221;
            this.max = dfa_222;
            this.accept = dfa_223;
            this.special = dfa_224;
            this.transition = dfa_225;
        }
        public String getDescription() {
            return "5605:1: ( rule__Lambda_Stmt__ValAssignment_4 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA65_6 = input.LA(1);

                         
                        int index65_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred108_InternalSpellDatabaseParser()) ) {s = 2;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index65_6);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA65_25 = input.LA(1);

                         
                        int index65_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred108_InternalSpellDatabaseParser()) ) {s = 2;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index65_25);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 65, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_226s = "\u0126\uffff";
    static final String dfa_227s = "\1\14\u0125\uffff";
    static final String dfa_228s = "\1\4\12\0\1\26\u00fe\uffff\1\11\3\0\30\uffff";
    static final String dfa_229s = "\1\51\12\0\1\42\u00fe\uffff\1\26\3\0\30\uffff";
    static final String dfa_230s = "\14\uffff\1\2\44\uffff\1\1\u00f4\uffff";
    static final String dfa_231s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\u0100\uffff\1\12\1\13\1\14\30\uffff}>";
    static final String[] dfa_232s = {
            "\1\14\2\uffff\1\14\1\uffff\1\14\4\uffff\2\14\1\uffff\2\14\1\4\1\5\2\14\1\13\1\uffff\1\10\6\uffff\1\3\1\2\1\1\1\14\1\7\1\11\1\6\2\14\1\12",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\u010b\13\uffff\1\u010a",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\u010c\14\uffff\1\u010d",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_226 = DFA.unpackEncodedString(dfa_226s);
    static final short[] dfa_227 = DFA.unpackEncodedString(dfa_227s);
    static final char[] dfa_228 = DFA.unpackEncodedStringToUnsignedChars(dfa_228s);
    static final char[] dfa_229 = DFA.unpackEncodedStringToUnsignedChars(dfa_229s);
    static final short[] dfa_230 = DFA.unpackEncodedString(dfa_230s);
    static final short[] dfa_231 = DFA.unpackEncodedString(dfa_231s);
    static final short[][] dfa_232 = unpackEncodedStringArray(dfa_232s);

    class DFA67 extends DFA {

        public DFA67(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 67;
            this.eot = dfa_226;
            this.eof = dfa_227;
            this.min = dfa_228;
            this.max = dfa_229;
            this.accept = dfa_230;
            this.special = dfa_231;
            this.transition = dfa_232;
        }
        public String getDescription() {
            return "5730:1: ( ruleLambda_Function )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA67_1 = input.LA(1);

                         
                        int index67_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred110_InternalSpellDatabaseParser()) ) {s = 49;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index67_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA67_2 = input.LA(1);

                         
                        int index67_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred110_InternalSpellDatabaseParser()) ) {s = 49;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index67_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA67_3 = input.LA(1);

                         
                        int index67_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred110_InternalSpellDatabaseParser()) ) {s = 49;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index67_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA67_4 = input.LA(1);

                         
                        int index67_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred110_InternalSpellDatabaseParser()) ) {s = 49;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index67_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA67_5 = input.LA(1);

                         
                        int index67_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred110_InternalSpellDatabaseParser()) ) {s = 49;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index67_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA67_6 = input.LA(1);

                         
                        int index67_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred110_InternalSpellDatabaseParser()) ) {s = 49;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index67_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA67_7 = input.LA(1);

                         
                        int index67_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred110_InternalSpellDatabaseParser()) ) {s = 49;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index67_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA67_8 = input.LA(1);

                         
                        int index67_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred110_InternalSpellDatabaseParser()) ) {s = 49;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index67_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA67_9 = input.LA(1);

                         
                        int index67_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred110_InternalSpellDatabaseParser()) ) {s = 49;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index67_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA67_10 = input.LA(1);

                         
                        int index67_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred110_InternalSpellDatabaseParser()) ) {s = 49;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index67_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA67_267 = input.LA(1);

                         
                        int index67_267 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred110_InternalSpellDatabaseParser()) ) {s = 49;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index67_267);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA67_268 = input.LA(1);

                         
                        int index67_268 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred110_InternalSpellDatabaseParser()) ) {s = 49;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index67_268);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA67_269 = input.LA(1);

                         
                        int index67_269 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred110_InternalSpellDatabaseParser()) ) {s = 49;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index67_269);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 67, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_233s = "\36\uffff";
    static final String dfa_234s = "\1\6\1\50\15\uffff\1\6\1\uffff\1\0\14\uffff";
    static final String dfa_235s = "\1\45\1\50\15\uffff\1\45\1\uffff\1\0\14\uffff";
    static final String dfa_236s = "\2\uffff\1\1\12\uffff\1\2\20\uffff";
    static final String dfa_237s = "\21\uffff\1\0\14\uffff}>";
    static final String[] dfa_238s = {
            "\1\2\1\15\1\uffff\1\15\3\uffff\1\2\1\1\1\uffff\1\2\2\uffff\2\2\2\uffff\1\2\1\uffff\1\2\6\uffff\2\2\2\uffff\2\2",
            "\1\17",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\2\1\15\1\uffff\1\15\3\uffff\1\2\1\21\1\uffff\1\2\2\uffff\2\2\2\uffff\1\2\1\uffff\1\2\6\uffff\2\2\2\uffff\2\2",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_233 = DFA.unpackEncodedString(dfa_233s);
    static final char[] dfa_234 = DFA.unpackEncodedStringToUnsignedChars(dfa_234s);
    static final char[] dfa_235 = DFA.unpackEncodedStringToUnsignedChars(dfa_235s);
    static final short[] dfa_236 = DFA.unpackEncodedString(dfa_236s);
    static final short[] dfa_237 = DFA.unpackEncodedString(dfa_237s);
    static final short[][] dfa_238 = unpackEncodedStringArray(dfa_238s);

    class DFA69 extends DFA {

        public DFA69(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 69;
            this.eot = dfa_233;
            this.eof = dfa_233;
            this.min = dfa_234;
            this.max = dfa_235;
            this.accept = dfa_236;
            this.special = dfa_237;
            this.transition = dfa_238;
        }
        public String getDescription() {
            return "5953:1: ( rule__Tuple__Group_2__0 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA69_17 = input.LA(1);

                         
                        int index69_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred112_InternalSpellDatabaseParser()) ) {s = 2;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index69_17);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 69, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_239s = "\23\uffff";
    static final String dfa_240s = "\1\1\22\uffff";
    static final String dfa_241s = "\1\7\1\uffff\1\6\2\uffff\1\50\14\uffff\1\0";
    static final String dfa_242s = "\1\16\1\uffff\1\45\2\uffff\1\50\14\uffff\1\0";
    static final String dfa_243s = "\1\uffff\1\2\5\uffff\1\1\13\uffff";
    static final String dfa_244s = "\22\uffff\1\0}>";
    static final String[] dfa_245s = {
            "\1\1\1\uffff\1\2\4\uffff\1\1",
            "",
            "\1\7\1\1\5\uffff\1\7\1\5\1\uffff\1\7\2\uffff\2\7\2\uffff\1\7\1\uffff\1\7\6\uffff\2\7\2\uffff\2\7",
            "",
            "",
            "\1\22",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff"
    };

    static final short[] dfa_239 = DFA.unpackEncodedString(dfa_239s);
    static final short[] dfa_240 = DFA.unpackEncodedString(dfa_240s);
    static final char[] dfa_241 = DFA.unpackEncodedStringToUnsignedChars(dfa_241s);
    static final char[] dfa_242 = DFA.unpackEncodedStringToUnsignedChars(dfa_242s);
    static final short[] dfa_243 = DFA.unpackEncodedString(dfa_243s);
    static final short[] dfa_244 = DFA.unpackEncodedString(dfa_244s);
    static final short[][] dfa_245 = unpackEncodedStringArray(dfa_245s);

    class DFA71 extends DFA {

        public DFA71(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 71;
            this.eot = dfa_239;
            this.eof = dfa_240;
            this.min = dfa_241;
            this.max = dfa_242;
            this.accept = dfa_243;
            this.special = dfa_244;
            this.transition = dfa_245;
        }
        public String getDescription() {
            return "()* loopback of 6201:1: ( rule__Tuple__Group_2_3__0 )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA71_18 = input.LA(1);

                         
                        int index71_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred114_InternalSpellDatabaseParser()) ) {s = 7;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index71_18);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 71, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_246s = "\1\6\1\50\15\uffff\1\6\13\uffff\1\0\2\uffff";
    static final String dfa_247s = "\1\45\1\50\15\uffff\1\45\13\uffff\1\0\2\uffff";
    static final String dfa_248s = "\33\uffff\1\0\2\uffff}>";
    static final String[] dfa_249s = {
            "\1\2\2\uffff\1\15\3\uffff\1\2\1\1\1\15\1\2\2\uffff\2\2\2\uffff\1\2\1\uffff\1\2\6\uffff\2\2\2\uffff\2\2",
            "\1\17",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\2\2\uffff\1\15\3\uffff\1\2\1\33\1\15\1\2\2\uffff\2\2\2\uffff\1\2\1\uffff\1\2\6\uffff\2\2\2\uffff\2\2",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            ""
    };
    static final char[] dfa_246 = DFA.unpackEncodedStringToUnsignedChars(dfa_246s);
    static final char[] dfa_247 = DFA.unpackEncodedStringToUnsignedChars(dfa_247s);
    static final short[] dfa_248 = DFA.unpackEncodedString(dfa_248s);
    static final short[][] dfa_249 = unpackEncodedStringArray(dfa_249s);

    class DFA72 extends DFA {

        public DFA72(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 72;
            this.eot = dfa_233;
            this.eof = dfa_233;
            this.min = dfa_246;
            this.max = dfa_247;
            this.accept = dfa_236;
            this.special = dfa_248;
            this.transition = dfa_249;
        }
        public String getDescription() {
            return "6394:1: ( rule__List__Group_2__0 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA72_27 = input.LA(1);

                         
                        int index72_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred115_InternalSpellDatabaseParser()) ) {s = 2;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index72_27);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 72, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_250s = "\1\11\1\uffff\1\6\2\uffff\1\50\14\uffff\1\0";
    static final String dfa_251s = "\1\17\1\uffff\1\45\2\uffff\1\50\14\uffff\1\0";
    static final String[] dfa_252s = {
            "\1\2\4\uffff\2\1",
            "",
            "\1\7\6\uffff\1\7\1\5\1\1\1\7\2\uffff\2\7\2\uffff\1\7\1\uffff\1\7\6\uffff\2\7\2\uffff\2\7",
            "",
            "",
            "\1\22",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff"
    };
    static final char[] dfa_250 = DFA.unpackEncodedStringToUnsignedChars(dfa_250s);
    static final char[] dfa_251 = DFA.unpackEncodedStringToUnsignedChars(dfa_251s);
    static final short[][] dfa_252 = unpackEncodedStringArray(dfa_252s);

    class DFA74 extends DFA {

        public DFA74(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 74;
            this.eot = dfa_239;
            this.eof = dfa_240;
            this.min = dfa_250;
            this.max = dfa_251;
            this.accept = dfa_243;
            this.special = dfa_244;
            this.transition = dfa_252;
        }
        public String getDescription() {
            return "()* loopback of 6642:1: ( rule__List__Group_2_3__0 )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA74_18 = input.LA(1);

                         
                        int index74_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred117_InternalSpellDatabaseParser()) ) {s = 7;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index74_18);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 74, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String[] dfa_253s = {
            "\1\2\2\uffff\1\15\3\uffff\1\2\1\1\1\uffff\1\2\1\15\1\uffff\2\2\2\uffff\1\2\1\uffff\1\2\6\uffff\2\2\2\uffff\2\2",
            "\1\17",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\2\2\uffff\1\15\3\uffff\1\2\1\21\1\uffff\1\2\1\15\1\uffff\2\2\2\uffff\1\2\1\uffff\1\2\6\uffff\2\2\2\uffff\2\2",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[][] dfa_253 = unpackEncodedStringArray(dfa_253s);

    class DFA75 extends DFA {

        public DFA75(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 75;
            this.eot = dfa_233;
            this.eof = dfa_233;
            this.min = dfa_234;
            this.max = dfa_235;
            this.accept = dfa_236;
            this.special = dfa_237;
            this.transition = dfa_253;
        }
        public String getDescription() {
            return "6835:1: ( rule__Dictionary__Group_2__0 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA75_17 = input.LA(1);

                         
                        int index75_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred118_InternalSpellDatabaseParser()) ) {s = 2;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index75_17);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 75, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_254s = "\1\21\1\uffff\1\45\2\uffff\1\50\14\uffff\1\0";
    static final String[] dfa_255s = {
            "\1\2\4\uffff\1\1\2\uffff\1\1",
            "",
            "\1\7\6\uffff\1\7\1\5\1\uffff\1\7\1\1\1\uffff\2\7\2\uffff\1\7\1\uffff\1\7\6\uffff\2\7\2\uffff\2\7",
            "",
            "",
            "\1\22",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff"
    };
    static final char[] dfa_254 = DFA.unpackEncodedStringToUnsignedChars(dfa_254s);
    static final short[][] dfa_255 = unpackEncodedStringArray(dfa_255s);

    class DFA77 extends DFA {

        public DFA77(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 77;
            this.eot = dfa_239;
            this.eof = dfa_240;
            this.min = dfa_250;
            this.max = dfa_254;
            this.accept = dfa_243;
            this.special = dfa_244;
            this.transition = dfa_255;
        }
        public String getDescription() {
            return "()* loopback of 7083:1: ( rule__Dictionary__Group_2_3__0 )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA77_18 = input.LA(1);

                         
                        int index77_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred120_InternalSpellDatabaseParser()) ) {s = 7;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index77_18);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 77, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_256s = "\137\uffff";
    static final String dfa_257s = "\1\1\14\uffff\1\30\121\uffff";
    static final String dfa_258s = "\1\6\1\uffff\1\0\12\uffff\1\6\43\uffff\1\0\55\uffff";
    static final String dfa_259s = "\1\50\1\uffff\1\0\12\uffff\1\50\43\uffff\1\0\55\uffff";
    static final String dfa_260s = "\1\uffff\1\2\26\uffff\1\1\106\uffff";
    static final String dfa_261s = "\2\uffff\1\0\56\uffff\1\1\55\uffff}>";
    static final String[] dfa_262s = {
            "\1\1\1\uffff\2\1\1\uffff\1\30\1\uffff\1\1\1\15\1\uffff\1\1\2\uffff\3\1\1\uffff\3\1\1\uffff\1\1\2\uffff\1\1\1\uffff\2\1\1\2\1\uffff\5\1",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\30\1\uffff\2\30\1\uffff\1\30\1\uffff\2\30\1\uffff\1\30\2\uffff\3\30\1\uffff\3\30\1\uffff\1\30\2\uffff\1\30\1\uffff\3\30\1\uffff\4\30\1\61",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_256 = DFA.unpackEncodedString(dfa_256s);
    static final short[] dfa_257 = DFA.unpackEncodedString(dfa_257s);
    static final char[] dfa_258 = DFA.unpackEncodedStringToUnsignedChars(dfa_258s);
    static final char[] dfa_259 = DFA.unpackEncodedStringToUnsignedChars(dfa_259s);
    static final short[] dfa_260 = DFA.unpackEncodedString(dfa_260s);
    static final short[] dfa_261 = DFA.unpackEncodedString(dfa_261s);
    static final short[][] dfa_262 = unpackEncodedStringArray(dfa_262s);

    class DFA84 extends DFA {

        public DFA84(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 84;
            this.eot = dfa_256;
            this.eof = dfa_257;
            this.min = dfa_258;
            this.max = dfa_259;
            this.accept = dfa_260;
            this.special = dfa_261;
            this.transition = dfa_262;
        }
        public String getDescription() {
            return "()* loopback of 8783:1: ( rule__ID_STMT__Alternatives_1 )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA84_2 = input.LA(1);

                         
                        int index84_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalSpellDatabaseParser()) ) {s = 24;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index84_2);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA84_49 = input.LA(1);

                         
                        int index84_49 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalSpellDatabaseParser()) ) {s = 24;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index84_49);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 84, _s, input);
            error(nvae);
            throw nvae;
        }
    }
 

    public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x000001C000200002L});
    public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x0000001702180102L});
    public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x0000003702180102L});
    public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x0000027702980002L});
    public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0000000000004002L});
    public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x0000027702180402L});
    public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x000000374B180120L});
    public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x000001C000200000L});
    public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x0000000400040010L});
    public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x0000003702180100L});
    public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x000001F74B380120L});
    public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x000001374B180122L});
    public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x000001374B180120L});
    public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x0000000400040002L});
    public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x0000000800040000L});
    public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x0000000800040002L});
    public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x0000000400040000L});
    public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x0000000000400000L});
    public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x0000000000001000L});
    public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x0000027702980400L});
    public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x0000000000000200L});
    public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x0000000000000202L});
    public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x0000001702180100L});
    public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x0000000080000000L});
    public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x0000000300000000L});
    public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x0000000030000000L});
    public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x0000000010000000L});
    public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x0000001300180000L});
    public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x0000000000204000L});
    public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x0000003302B92040L});
    public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x0000003302980000L});
    public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x0000000400400000L});
    public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x0000027702980000L});
    public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x0000000000012040L});
    public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x0000000000204200L});
    public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x0000003302992040L});
    public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x0000000000002000L});
    public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x0000000100400000L});
    public static final BitSet FOLLOW_51 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_52 = new BitSet(new long[]{0x0000000000600000L});
    public static final BitSet FOLLOW_53 = new BitSet(new long[]{0x0000000000100000L});
    public static final BitSet FOLLOW_54 = new BitSet(new long[]{0x0000000500000000L});
    public static final BitSet FOLLOW_55 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_56 = new BitSet(new long[]{0x0000000400004800L});
    public static final BitSet FOLLOW_57 = new BitSet(new long[]{0x0000000400004802L});
    public static final BitSet FOLLOW_58 = new BitSet(new long[]{0x0000000400000002L});
    public static final BitSet FOLLOW_59 = new BitSet(new long[]{0x0000000000000400L});
    public static final BitSet FOLLOW_60 = new BitSet(new long[]{0x0000000100180000L});

}